{
  "permissions": {
    "allow": [
      "Bash(rg:*)",
      "Bash(mkdir:*)",
      "Bash(rm:*)",
      "Bash(npm run lint:*)",
      "Bash(npx tsc:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(node:*)",
      "Bash(npm run build:*)",
      "Bash(npm run type-check:*)",
      "Bash(timeout 30s npm run lint)",
      "Bash(grep:*)",
      "Bash(timeout 60s npm run build)",
      "Bash(mv:*)",
      "Bash(timeout 30s npm run build)",
      "Bash(timeout 30s npm run dev)",
      "Bash(npm install:*)",
      "Bash(git checkout:*)",
      "Bash(cat:*)",
      "Bash(pkill:*)",
      "Bash(timeout 15s npm run dev)",
      "Bash(npx supabase:*)",
      "Bash(supabase migration:*)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ohkueislstxomdjavyhs.supabase.co node apply-schema-direct.js)",
      "Bash(npm test:*)",
      "Bash(npm run typecheck:*)",
      "Bash(true)",
      "Bash(git add:*)",
      "Bash(curl:*)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=1024\" npm run build)",
      "Bash(kill:*)",
      "Bash(npx next lint:*)",
      "Bash(NODE_ENV=development npx next build --no-lint)",
      "Bash(chmod:*)",
      "Bash(npm run:*)",
      "Bash(printenv)",
      "mcp__puppeteer__puppeteer_navigate",
      "mcp__puppeteer__puppeteer_screenshot",
      "mcp__puppeteer__puppeteer_click",
      "mcp__puppeteer__puppeteer_evaluate",
      "mcp__puppeteer__puppeteer_fill",
      "Bash(timeout 10s npx supabase status)",
      "Bash(git rm:*)",
      "Bash(git push:*)",
      "Bash(gh repo view:*)",
      "Bash(gh run list:*)",
      "Bash(gh run watch:*)",
      "Bash(gh run view:*)",
      "Bash(vercel ls:*)",
      "Bash(vercel domains ls:*)",
      "Bash(vercel alias:*)",
      "Bash(vercel env add:*)",
      "Bash(vercel env:*)",
      "Bash(git commit:*)",
      "Bash(test:*)",
      "mcp__context7__resolve-library-id",
      "mcp__puppeteer-enhanced__puppeteer_connect_active_tab",
      "Bash(git describe:*)",
      "Bash(git tag:*)",
      "Bash(vercel inspect:*)",
      "Bash(npx shadcn@latest init:*)",
      "Bash(npm search:*)",
      "WebSearch",
      "Read(//home/g/.config/**)",
      "Bash(shadcn-mcp:*)",
      "Bash(npm bin:*)",
      "Read(//home/g/.npm-global/bin/**)",
      "Bash(npm prefix:*)",
      "Read(//home/g/.npm-global/lib/node_modules/shadcn-mcp/**)",
      "Bash(shadcn-mcp-server:*)",
      "Bash(npx shadcn@latest add:*)",
      "Bash(timeout 30s npx tsc:*)",
      "Read(//tmp/**)",
      "Bash(lsof:*)",
      "Bash('https://ohkueislstxomdjavyhs.supabase.co/rest/v1/profiles?select=count&limit=1' )",
      "mcp__xcode__screenshot",
      "Bash(npx playwright install:*)",
      "Bash(python3:*)",
      "Bash(export SUPABASE_ACCESS_TOKEN:*)",
      "Bash(set -a)",
      "Bash(source .env.local)",
      "Bash(set +a)",
      "Bash(env)",
      "Bash(unset:*)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=\"https://ohkueislstxomdjavyhs.supabase.co\":*)",
      "Bash(SUPABASE_SERVICE_ROLE_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9oa3VlaXNsc3R4b21kamF2eWhzIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NDU0Nzk1MCwiZXhwIjoyMDYwMTIzOTUwfQ.2a3ACqjfx_ja_ShHySmh8NuVHlF7gD5k3VXNml9CNbM\":*)",
      "Bash(PGPASSWORD=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9oa3VlaXNsc3R4b21kamF2eWhzIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NDU0Nzk1MCwiZXhwIjoyMDYwMTIzOTUwfQ.2a3ACqjfx_ja_ShHySmh8NuVHlF7gD5k3VXNml9CNbM\" psql:*)",
      "Bash(vercel:*)",
      "Bash(gh api:*)",
      "Bash(git -C /home/g/dev/orangecat status)",
      "Bash(while read file)",
      "Bash(done)",
      "Bash(xargs:*)",
      "Bash(timeout 30s npx next lint:*)",
      "Bash(awk:*)",
      "mcp__memory__create_entities",
      "mcp__memory__delete_observations",
      "mcp__memory__add_observations",
      "Bash(timeout 90s npm run build:*)",
      "Bash(PGPASSWORD=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9oa3VlaXNsc3R4b21kamF2eWhzIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NDU0Nzk1MCwiZXhwIjoyMDYwMTIzOTUwfQ.2a3ACqjfx_ja_ShHySmh8NuVHlF7gD5k3VXNml9CNbM\" psql -h aws-0-us-west-1.pooler.supabase.com -p 6543 -U postgres.ohkueislstxomdjavyhs -d postgres -c \"\\d projects\")",
      "Bash(PGPASSWORD=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9oa3VlaXNsc3R4b21kamF2eWhzIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NDU0Nzk1MCwiZXhwIjoyMDYwMTIzOTUwfQ.2a3ACqjfx_ja_ShHySmh8NuVHlF7gD5k3VXNml9CNbM\" psql -h aws-0-us-west-1.pooler.supabase.com -p 6543 -U postgres.ohkueislstxomdjavyhs -d postgres -c \"SELECT column_name, data_type, is_nullable FROM information_schema.columns WHERE table_name = ''projects'' ORDER BY ordinal_position;\")",
      "Bash('https://ohkueislstxomdjavyhs.supabase.co/rest/v1/projects?select=id,title,user_id,creator_id&limit=3')",
      "Bash('https://ohkueislstxomdjavyhs.supabase.co/rest/v1/projects?select=id,title,user_id&limit=5')",
      "Bash('https://ohkueislstxomdjavyhs.supabase.co/rest/v1/profiles?select=id,email&limit=5')",
      "Bash('https://ohkueislstxomdjavyhs.supabase.co/rest/v1/projects?select=id,title,user_id&order=created_at.desc&limit=1')",
      "Bash('https://ohkueislstxomdjavyhs.supabase.co/rest/v1/profiles?select=id,email,username&id=eq.cec88bc9-557f-452b-92f1-e093092fecd6')",
      "Bash('https://ohkueislstxomdjavyhs.supabase.co/rest/v1/profiles?select=id,email,username&id=eq.d26e6c11-f832-49b0-b0b6-b05a7879ff23')",
      "Bash(timeout 60s npx tsc:*)",
      "Bash(for component in \"dashboard/AnalyticsDashboard\" \"ui/QRGenerator\" \"ui/RichTextEditor\" \"charts/AdvancedCharts\" \"ui/ImageUpload\" \"ui/DatePicker\" \"search/AdvancedSearch\")",
      "Bash(do)",
      "Bash(if [ -f \"src/components/$component.tsx\" ])",
      "Bash([ -f \"src/components/$component.ts\" ])",
      "Bash([ -f \"src/components/$component/index.tsx\" ])",
      "Bash(then)",
      "Bash(echo:*)",
      "Bash(else)",
      "Bash(fi)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=2048\" timeout 120s npx tsc:*)"
    ],
    "deny": [
      "Bash(rm **/.env.local)",
      "Bash(rm **/.env)",
      "Bash(rm .env.local)",
      "Bash(rm .env)",
      "Bash(git rm **/.env.local)",
      "Bash(git rm **/.env)"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": ["shadcn"]
}
