name: Deploy to Vercel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

      - name: Run tests
        run: npm test
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        id: vercel_deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: ${{ github.event_name == 'push' && '--prod' || '' }}
  
      # ----- Automated Preview Quality Checks -----
      - name: ⏱️ Wait for Deployment to be Ready
        if: github.event_name == 'pull_request'
        run: |
          echo "Waiting for deployment URL to be reachable..."
          URL=${{ steps.vercel_deploy.outputs.preview-url }}
          for i in {1..30}; do
            if curl -sf "$URL" > /dev/null; then
              echo "Deployment is live: $URL" && exit 0
            fi
            sleep 10
          done
          echo "Timed out waiting for deployment to become available" && exit 1

      - name: 🌐 Lighthouse Audit
        if: github.event_name == 'pull_request'
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: ${{ steps.vercel_deploy.outputs.preview-url }}
          uploadArtifacts: true
          artifactName: lighthouse-${{ github.run_number }}
          temporaryPublicStorage: true
        id: lighthouse
  
      - name: 💬 Comment PR with Lighthouse Scores
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          header: lighthouse-report
          message: |
            ### 🔍 Lighthouse Report
            **Preview URL:** ${{ steps.vercel_deploy.outputs.preview-url }}
            
            Lighthouse HTML report & JSON results have been uploaded as workflow artifacts. Click **Actions → run → Artifacts → lighthouse-${{ github.run_number }}** to download and review full scores. 