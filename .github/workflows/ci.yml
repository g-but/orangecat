name: CI/CD

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint
      - run: npm run type-check
      - run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      
      # Create .env.production file for deployment
      - name: Create environment file
        run: |
          echo "NEXT_PUBLIC_BITCOIN_ADDRESS=${{ secrets.NEXT_PUBLIC_BITCOIN_ADDRESS }}" > .env.production
          echo "NEXT_PUBLIC_LIGHTNING_ADDRESS=${{ secrets.NEXT_PUBLIC_LIGHTNING_ADDRESS }}" >> .env.production
          echo "NEXT_PUBLIC_SITE_URL=${{ secrets.NEXT_PUBLIC_SITE_URL }}" >> .env.production
          echo "NEXT_PUBLIC_SITE_NAME=${{ secrets.NEXT_PUBLIC_SITE_NAME }}" >> .env.production
          echo "NODE_ENV=production" >> .env.production
      
      - run: npm run build
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      # Authenticate with Vercel
      - name: Set up Vercel credentials
        run: |
          mkdir -p ~/.vercel
          echo '{"token":"${{ secrets.VERCEL_TOKEN }}"}' > ~/.vercel/config.json
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
      # Deploy with environment variables
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} 