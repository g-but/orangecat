{"version":3,"names":["cov_1qi73csu0h","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","isAuthError","isSupabaseError","isValidProfile","isValidFundingPage","error","message","data","id","created_at","updated_at","user_id","title"],"sources":["/home/g/dev/orangecat/src/services/supabase/types/index.ts"],"sourcesContent":["/**\n * SUPABASE TYPES - COMPREHENSIVE TYPE DEFINITIONS\n * \n * This file provides type safety for all Supabase operations,\n * replacing dangerous 'any' types with proper interfaces.\n * \n * Created: 2025-06-08\n * Last Modified: 2025-06-08\n * Last Modified Summary: Initial creation with auth, profile, and campaign types\n */\n\nimport { Session, User } from '@supabase/supabase-js'\n\n// ==================== AUTH TYPES ====================\n\nexport interface AuthResponse {\n  data: {\n    user: User | null\n    session: Session | null\n  }\n  error: Error | null\n}\n\nexport interface SignInRequest {\n  email: string\n  password: string\n}\n\nexport interface SignUpRequest {\n  email: string\n  password: string\n  emailRedirectTo?: string\n}\n\nexport interface AuthError extends Error {\n  message: string\n  status?: number\n}\n\nexport interface PasswordResetRequest {\n  email: string\n}\n\nexport interface PasswordUpdateRequest {\n  newPassword: string\n}\n\n// ==================== PROFILE TYPES ====================\n\nexport interface Profile {\n  id: string\n  username?: string | null\n  display_name?: string | null\n  bio?: string | null\n  avatar_url?: string | null\n  banner_url?: string | null\n  bitcoin_address?: string | null\n  lightning_address?: string | null\n  created_at: string\n  updated_at: string\n}\n\nexport interface ProfileUpdateData {\n  username?: string | null\n  display_name?: string | null\n  bio?: string | null\n  avatar_url?: string | null\n  banner_url?: string | null\n  bitcoin_address?: string | null\n  lightning_address?: string | null\n  updated_at?: string\n}\n\nexport interface ProfileResponse {\n  data: Profile | null\n  error: Error | null\n}\n\nexport interface ProfileUpdateResponse {\n  data: Profile | null\n  error: Error | null\n  status?: string | number\n}\n\n// ==================== CAMPAIGN/FUNDING PAGE TYPES ====================\n\nexport interface FundingPage {\n  id: string\n  user_id: string\n  title: string\n  description?: string | null\n  goal_amount?: number | null\n  current_amount: number\n  bitcoin_address?: string | null\n  lightning_address?: string | null\n  website_url?: string | null\n  category?: string | null\n  tags?: string[] | null\n  currency: string\n  status: 'draft' | 'active' | 'paused' | 'completed'\n  is_active: boolean\n  is_public: boolean\n  total_funding: number\n  contributor_count: number\n  created_at: string\n  updated_at: string\n}\n\nexport interface FundingPageCreateData {\n  title: string\n  description?: string | null\n  goal_amount?: number | string | null\n  bitcoin_address?: string | null\n  lightning_address?: string | null\n  website_url?: string | null\n  categories?: string[]\n  currency?: string\n}\n\nexport interface FundingPageUpdateData extends Partial<FundingPageCreateData> {\n  status?: 'draft' | 'active' | 'paused' | 'completed'\n  is_active?: boolean\n  is_public?: boolean\n  updated_at?: string\n}\n\nexport interface FundingPageResponse {\n  data: FundingPage | null\n  error: Error | null\n}\n\nexport interface FundingPageListResponse {\n  data: FundingPage[]\n  error: Error | null\n}\n\nexport interface CreateUpdateOptions {\n  isDraft?: boolean\n  pageId?: string\n  userId: string\n}\n\n// ==================== STORAGE TYPES ====================\n\nexport interface StorageItem {\n  key: string\n  value: any\n}\n\nexport interface AuthStorage {\n  getItem: (key: string) => any\n  setItem: (key: string, value: any) => void\n  removeItem: (key: string) => void\n}\n\n// ==================== UTILITY TYPES ====================\n\nexport interface DatabaseResponse<T = any> {\n  data: T | null\n  error: Error | null\n}\n\nexport interface DatabaseListResponse<T = any> {\n  data: T[]\n  error: Error | null\n}\n\nexport interface EnvironmentConfig {\n  supabaseUrl: string\n  supabaseAnonKey: string\n  siteUrl: string\n  nodeEnv: string\n}\n\nexport interface ConnectionTestResult {\n  success: boolean\n  responseTime: number\n  error?: string\n}\n\n// ==================== ERROR TYPES ====================\n\nexport interface SupabaseError extends Error {\n  message: string\n  code?: string\n  details?: string\n  hint?: string\n  status?: number\n}\n\nexport interface ValidationError extends Error {\n  field?: string\n  value?: any\n}\n\n// ==================== TYPE GUARDS ====================\n\nexport function isAuthError(error: any): error is AuthError {\n  return error && typeof error.message === 'string'\n}\n\nexport function isSupabaseError(error: any): error is SupabaseError {\n  return error && typeof error.message === 'string' && 'code' in error\n}\n\nexport function isValidProfile(data: any): data is Profile {\n  return data && \n         typeof data.id === 'string' &&\n         typeof data.created_at === 'string' &&\n         typeof data.updated_at === 'string'\n}\n\nexport function isValidFundingPage(data: any): data is FundingPage {\n  return data &&\n         typeof data.id === 'string' &&\n         typeof data.user_id === 'string' &&\n         typeof data.title === 'string' &&\n         typeof data.created_at === 'string'\n}\n\n// ==================== EXPORT ALL TYPES ====================\n\nexport type {\n  Session,\n  User\n} from '@supabase/supabase-js' "],"mappings":";;AAAA;;;;;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;MAAA;QAAAD,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAU,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,cAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA3B,IAAA;EAAA;EAAA,IAAA4B,QAAA,GAAA3B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAyB,QAAA,CAAA7B,IAAA,KAAA6B,QAAA,CAAA7B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA4B,QAAA,CAAA7B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAyB,cAAA,GAAAD,QAAA,CAAA7B,IAAA;EAAA;IAoNA;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAA+B,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAA/B,cAAA;AAAAA,cAAA,GAAAmB,CAAA;;;;;;AAfAa,OAAA,CAAAC,WAAA,GAAAA,WAAA;AAEC;AAAAjC,cAAA,GAAAmB,CAAA;AAEDa,OAAA,CAAAE,eAAA,GAAAA,eAAA;AAEC;AAAAlC,cAAA,GAAAmB,CAAA;AAEDa,OAAA,CAAAG,cAAA,GAAAA,cAAA;AAKC;AAAAnC,cAAA,GAAAmB,CAAA;AAEDa,OAAA,CAAAI,kBAAA,GAAAA,kBAAA;AAjBA;AAEA,SAAgBH,WAAWA,CAACI,KAAU;EAAA;EAAArC,cAAA,GAAAoB,CAAA;EAAApB,cAAA,GAAAmB,CAAA;EACpC,OAAO,2BAAAnB,cAAA,GAAAqB,CAAA,UAAAgB,KAAK;EAAA;EAAA,CAAArC,cAAA,GAAAqB,CAAA,UAAI,OAAOgB,KAAK,CAACC,OAAO,KAAK,QAAQ;AACnD;AAEA,SAAgBJ,eAAeA,CAACG,KAAU;EAAA;EAAArC,cAAA,GAAAoB,CAAA;EAAApB,cAAA,GAAAmB,CAAA;EACxC,OAAO,2BAAAnB,cAAA,GAAAqB,CAAA,UAAAgB,KAAK;EAAA;EAAA,CAAArC,cAAA,GAAAqB,CAAA,UAAI,OAAOgB,KAAK,CAACC,OAAO,KAAK,QAAQ;EAAA;EAAA,CAAAtC,cAAA,GAAAqB,CAAA,UAAI,MAAM,IAAIgB,KAAK;AACtE;AAEA,SAAgBF,cAAcA,CAACI,IAAS;EAAA;EAAAvC,cAAA,GAAAoB,CAAA;EAAApB,cAAA,GAAAmB,CAAA;EACtC,OAAO,2BAAAnB,cAAA,GAAAqB,CAAA,UAAAkB,IAAI;EAAA;EAAA,CAAAvC,cAAA,GAAAqB,CAAA,UACJ,OAAOkB,IAAI,CAACC,EAAE,KAAK,QAAQ;EAAA;EAAA,CAAAxC,cAAA,GAAAqB,CAAA,UAC3B,OAAOkB,IAAI,CAACE,UAAU,KAAK,QAAQ;EAAA;EAAA,CAAAzC,cAAA,GAAAqB,CAAA,UACnC,OAAOkB,IAAI,CAACG,UAAU,KAAK,QAAQ;AAC5C;AAEA,SAAgBN,kBAAkBA,CAACG,IAAS;EAAA;EAAAvC,cAAA,GAAAoB,CAAA;EAAApB,cAAA,GAAAmB,CAAA;EAC1C,OAAO,2BAAAnB,cAAA,GAAAqB,CAAA,UAAAkB,IAAI;EAAA;EAAA,CAAAvC,cAAA,GAAAqB,CAAA,UACJ,OAAOkB,IAAI,CAACC,EAAE,KAAK,QAAQ;EAAA;EAAA,CAAAxC,cAAA,GAAAqB,CAAA,UAC3B,OAAOkB,IAAI,CAACI,OAAO,KAAK,QAAQ;EAAA;EAAA,CAAA3C,cAAA,GAAAqB,CAAA,UAChC,OAAOkB,IAAI,CAACK,KAAK,KAAK,QAAQ;EAAA;EAAA,CAAA5C,cAAA,GAAAqB,CAAA,UAC9B,OAAOkB,IAAI,CAACE,UAAU,KAAK,QAAQ;AAC5C","ignoreList":[]}