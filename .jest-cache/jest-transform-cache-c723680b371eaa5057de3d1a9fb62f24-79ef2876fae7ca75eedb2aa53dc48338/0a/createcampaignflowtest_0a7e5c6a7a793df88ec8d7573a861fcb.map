{"file":"/home/g/dev/orangecat/src/app/create/__tests__/create-campaign-flow.test.tsx","mappings":"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","names":[],"sources":["/home/g/dev/orangecat/src/app/create/__tests__/create-campaign-flow.test.tsx"],"sourcesContent":["import { render, screen, fireEvent, waitFor } from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\nimport { useRouter } from 'next/navigation'\nimport { toast } from 'sonner'\nimport CreatePage from '../page'\nimport { useAuth } from '@/hooks/useAuth'\n\n// Mock dependencies\njest.mock('next/navigation', () => ({\n  useRouter: jest.fn()\n}))\n\njest.mock('@/hooks/useAuth', () => ({\n  useAuth: jest.fn()\n}))\n\njest.mock('sonner', () => ({\n  toast: {\n    success: jest.fn(),\n    error: jest.fn()\n  }\n}))\n\n// Mock UI components\njest.mock('@/components/ui/Card', () => ({\n  __esModule: true,\n  default: ({ children, className }: any) => <div data-testid=\"card\" className={className}>{children}</div>,\n  CardContent: ({ children, className }: any) => <div data-testid=\"card-content\" className={className}>{children}</div>\n}))\n\njest.mock('@/components/ui/Input', () => ({\n  __esModule: true,\n  default: ({ label, ...props }: any) => (\n    <div>\n      {label && <label>{label}</label>}\n      <input data-testid={`input-${props.name || props.id}`} {...props} />\n    </div>\n  )\n}))\n\njest.mock('@/components/ui/Button', () => ({\n  __esModule: true,\n  default: ({ children, onClick, disabled, type, variant, className }: any) => (\n    <button \n      data-testid={`button-${children?.props?.children || children}`}\n      onClick={onClick}\n      disabled={disabled}\n      type={type}\n      className={className}\n    >\n      {children}\n    </button>\n  )\n}))\n\n// Mock categories\njest.mock('@/config/categories', () => ({\n  simpleCategories: [\n    { value: 'health', label: 'Health', icon: '🏥', description: 'Medical expenses' },\n    { value: 'creative', label: 'Creative', icon: '🎨', description: 'Art, music, writing' },\n    { value: 'technology', label: 'Technology', icon: '💻', description: 'Apps, websites' },\n    { value: 'community', label: 'Community', icon: '🏘️', description: 'Local initiatives' }\n  ]\n}))\n\ndescribe('Create Campaign Flow - Comprehensive Test Suite', () => {\n  const mockPush = jest.fn()\n  const mockUser = {\n    id: 'test-user-id',\n    email: 'test@example.com',\n    user_metadata: { full_name: 'Test User' }\n  }\n\n  beforeEach(() => {\n    jest.clearAllMocks()\n    ;(useRouter as jest.Mock).mockReturnValue({\n      push: mockPush\n    })\n    ;(useAuth as jest.Mock).mockReturnValue({\n      user: mockUser\n    })\n  })\n\n  describe('🔐 Authentication Requirements', () => {\n    it('redirects to auth page when user is not authenticated', () => {\n      ;(useAuth as jest.Mock).mockReturnValue({\n        user: null\n      })\n\n      render(<CreatePage />)\n\n      expect(mockPush).toHaveBeenCalledWith('/auth?mode=login')\n    })\n\n    it('renders create form when user is authenticated', () => {\n      render(<CreatePage />)\n\n      expect(screen.getByText('Create Campaign')).toBeInTheDocument()\n      expect(screen.getByText('Step 1 of 3')).toBeInTheDocument()\n      expect(screen.getByText('Project Details')).toBeInTheDocument()\n    })\n  })\n\n  describe('📝 Step 1: Project Details', () => {\n    it('renders all required form fields', () => {\n      render(<CreatePage />)\n\n      expect(screen.getByTestId('input-title')).toBeInTheDocument()\n      expect(screen.getByTestId('input-description')).toBeInTheDocument()\n      expect(screen.getByText('Categories')).toBeInTheDocument()\n      \n      // Check category buttons\n      expect(screen.getByText('Health')).toBeInTheDocument()\n      expect(screen.getByText('Creative')).toBeInTheDocument()\n      expect(screen.getByText('Technology')).toBeInTheDocument()\n      expect(screen.getByText('Community')).toBeInTheDocument()\n    })\n\n    it('validates required title field for Continue button', async () => {\n      render(<CreatePage />)\n\n      const continueButton = screen.getByTestId('button-Continue')\n      expect(continueButton).toBeDisabled()\n\n      // Add title\n      const titleInput = screen.getByTestId('input-title')\n      await userEvent.type(titleInput, 'Test Campaign')\n\n      expect(continueButton).not.toBeDisabled()\n    })\n\n    it('allows category selection and deselection', async () => {\n      render(<CreatePage />)\n\n      const healthCategory = screen.getByText('Health').closest('button')!\n      \n      // Select category\n      await userEvent.click(healthCategory)\n      expect(healthCategory).toHaveClass('border-teal-500')\n\n      // Deselect category\n      await userEvent.click(healthCategory)\n      expect(healthCategory).not.toHaveClass('border-teal-500')\n    })\n\n    it('proceeds to step 2 when continue button is clicked', async () => {\n      render(<CreatePage />)\n\n      // Fill required fields\n      const titleInput = screen.getByTestId('input-title')\n      await userEvent.type(titleInput, 'Test Campaign')\n\n      const continueButton = screen.getByTestId('button-Continue')\n      await userEvent.click(continueButton)\n\n      expect(screen.getByText('Step 2 of 3')).toBeInTheDocument()\n      expect(screen.getByText('Payment Setup')).toBeInTheDocument()\n    })\n  })\n\n  describe('₿ Step 2: Payment Setup', () => {\n    beforeEach(async () => {\n      render(<CreatePage />)\n      \n      // Navigate to step 2\n      const titleInput = screen.getByTestId('input-title')\n      await userEvent.type(titleInput, 'Test Campaign')\n      \n      const continueButton = screen.getByTestId('button-Continue')\n      await userEvent.click(continueButton)\n    })\n\n    it('renders Bitcoin payment fields', () => {\n      expect(screen.getByText('Bitcoin Address')).toBeInTheDocument()\n      expect(screen.getByText('Lightning Address (Optional)')).toBeInTheDocument()\n      expect(screen.getByTestId('input-bitcoin_address')).toBeInTheDocument()\n      expect(screen.getByTestId('input-lightning_address')).toBeInTheDocument()\n    })\n\n    it('allows navigation back to step 1', async () => {\n      const backButton = screen.getByTestId('button-Back')\n      await userEvent.click(backButton)\n\n      expect(screen.getByText('Step 1 of 3')).toBeInTheDocument()\n      expect(screen.getByText('Project Details')).toBeInTheDocument()\n    })\n\n    it('proceeds to step 3 when continue button is clicked', async () => {\n      const continueButton = screen.getByTestId('button-Continue')\n      await userEvent.click(continueButton)\n\n      expect(screen.getByText('Step 3 of 3')).toBeInTheDocument()\n      expect(screen.getByText('Final Details')).toBeInTheDocument()\n    })\n  })\n\n  describe('🎯 Step 3: Final Details', () => {\n    beforeEach(async () => {\n      render(<CreatePage />)\n      \n      // Navigate to step 3\n      const titleInput = screen.getByTestId('input-title')\n      await userEvent.type(titleInput, 'Test Campaign')\n      \n      // Step 1 -> 2\n      let continueButton = screen.getByTestId('button-Continue')\n      await userEvent.click(continueButton)\n      \n      // Step 2 -> 3\n      continueButton = screen.getByTestId('button-Continue')\n      await userEvent.click(continueButton)\n    })\n\n    it('renders final detail fields', () => {\n      expect(screen.getByText('Website or Social Media')).toBeInTheDocument()\n      expect(screen.getByText('Funding Goal (Optional)')).toBeInTheDocument()\n      expect(screen.getByTestId('input-website_url')).toBeInTheDocument()\n      expect(screen.getByTestId('input-goal_amount')).toBeInTheDocument()\n    })\n\n    it('shows Launch Campaign button instead of Continue', () => {\n      expect(screen.getByTestId('button-Launch Campaign')).toBeInTheDocument()\n      expect(screen.queryByTestId('button-Continue')).not.toBeInTheDocument()\n    })\n\n    it('allows navigation back to step 2', async () => {\n      const backButton = screen.getByTestId('button-Back')\n      await userEvent.click(backButton)\n\n      expect(screen.getByText('Step 2 of 3')).toBeInTheDocument()\n      expect(screen.getByText('Payment Setup')).toBeInTheDocument()\n    })\n  })\n\n  describe('🚀 Form Submission', () => {\n    it('successfully submits campaign and redirects to dashboard', async () => {\n      render(<CreatePage />)\n      \n      // Fill out complete form\n      const titleInput = screen.getByTestId('input-title')\n      await userEvent.type(titleInput, 'Test Campaign')\n      \n      const descriptionInput = screen.getByTestId('input-description')\n      await userEvent.type(descriptionInput, 'This is a test campaign description')\n      \n      // Navigate through steps\n      let continueButton = screen.getByTestId('button-Continue')\n      await userEvent.click(continueButton)\n      \n      // Step 2: Add Bitcoin address\n      const bitcoinInput = screen.getByTestId('input-bitcoin_address')\n      await userEvent.type(bitcoinInput, 'bc1qtest123address')\n      \n      continueButton = screen.getByTestId('button-Continue')\n      await userEvent.click(continueButton)\n      \n      // Step 3: Submit\n      const launchButton = screen.getByTestId('button-Launch Campaign')\n      await userEvent.click(launchButton)\n\n      await waitFor(() => {\n        expect(toast.success).toHaveBeenCalledWith('🎉 Campaign created successfully!')\n        expect(mockPush).toHaveBeenCalledWith('/dashboard')\n      })\n    })\n\n    it('validates title requirement on submission', async () => {\n      render(<CreatePage />)\n      \n      // Try to proceed without title\n      const continueButton = screen.getByTestId('button-Continue')\n      expect(continueButton).toBeDisabled()\n    })\n  })\n\n  describe('💾 Draft Functionality', () => {\n    it('saves draft when Save Draft button is clicked', async () => {\n      const localStorageMock = {\n        setItem: jest.fn()\n      }\n      Object.defineProperty(window, 'localStorage', {\n        value: localStorageMock\n      })\n\n      render(<CreatePage />)\n      \n      // Add title to enable save draft\n      const titleInput = screen.getByTestId('input-title')\n      await userEvent.type(titleInput, 'Test Campaign')\n      \n      const saveDraftButton = screen.getByTestId('button-Save Draft')\n      expect(saveDraftButton).not.toBeDisabled()\n      \n      await userEvent.click(saveDraftButton)\n      \n      expect(localStorageMock.setItem).toHaveBeenCalledWith(\n        `campaign-draft-${mockUser.id}`,\n        expect.stringContaining('Test Campaign')\n      )\n      expect(toast.success).toHaveBeenCalledWith('Draft saved')\n    })\n\n    it('disables save draft when no title is provided', () => {\n      render(<CreatePage />)\n      \n      const saveDraftButton = screen.getByTestId('button-Save Draft')\n      expect(saveDraftButton).toBeDisabled()\n    })\n  })\n\n  describe('🧭 Navigation', () => {\n    it('allows canceling and returning to dashboard', async () => {\n      render(<CreatePage />)\n      \n      const cancelButton = screen.getByTestId('button-Cancel')\n      await userEvent.click(cancelButton)\n      \n      expect(mockPush).toHaveBeenCalledWith('/dashboard')\n    })\n  })\n\n  describe('📊 Progress Tracking', () => {\n    it('shows correct progress percentage for each step', async () => {\n      render(<CreatePage />)\n      \n      // Step 1: 33%\n      expect(screen.getByText('33% complete')).toBeInTheDocument()\n      \n      // Navigate to step 2\n      const titleInput = screen.getByTestId('input-title')\n      await userEvent.type(titleInput, 'Test Campaign')\n      \n      let continueButton = screen.getByTestId('button-Continue')\n      await userEvent.click(continueButton)\n      \n      // Step 2: 67%\n      expect(screen.getByText('67% complete')).toBeInTheDocument()\n      \n      // Navigate to step 3\n      continueButton = screen.getByTestId('button-Continue')\n      await userEvent.click(continueButton)\n      \n      // Step 3: 100%\n      expect(screen.getByText('100% complete')).toBeInTheDocument()\n    })\n  })\n}) "],"version":3}