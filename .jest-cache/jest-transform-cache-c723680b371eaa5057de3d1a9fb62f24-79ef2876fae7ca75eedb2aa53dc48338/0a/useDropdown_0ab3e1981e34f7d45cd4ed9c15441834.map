{"version":3,"names":["cov_sv9rly1zf","actualCoverage","s","exports","useDropdown","react_1","require","navigation_1","options","b","f","closeOnRouteChange","keyboardNavigation","itemCount","isOpen","setIsOpen","useState","focusedIndex","setFocusedIndex","dropdownRef","useRef","buttonRef","itemRefs","pathname","usePathname","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleKeyDown","key","_a","focus","preventDefault","prev","nextIndex","shiftKey","toggle","useCallback","close","handleTriggerKeyDown","setTimeout"],"sources":["/home/g/dev/orangecat/src/hooks/useDropdown.ts"],"sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react'\nimport { usePathname } from 'next/navigation'\n\ninterface UseDropdownOptions {\n  closeOnRouteChange?: boolean\n  keyboardNavigation?: boolean\n  itemCount?: number\n}\n\nexport function useDropdown(options: UseDropdownOptions = {}) {\n  const {\n    closeOnRouteChange = true,\n    keyboardNavigation = false,\n    itemCount = 0\n  } = options\n\n  const [isOpen, setIsOpen] = useState(false)\n  const [focusedIndex, setFocusedIndex] = useState(-1)\n  const dropdownRef = useRef<HTMLDivElement>(null)\n  const buttonRef = useRef<HTMLButtonElement>(null)\n  const itemRefs = useRef<(HTMLButtonElement | HTMLAnchorElement | null)[]>([])\n  const pathname = usePathname()\n\n  // Close dropdown on outside click\n  useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (\n        dropdownRef.current &&\n        buttonRef.current &&\n        !dropdownRef.current.contains(event.target as Node) &&\n        !buttonRef.current.contains(event.target as Node)\n      ) {\n        setIsOpen(false)\n        setFocusedIndex(-1)\n      }\n    }\n\n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [isOpen])\n\n  // Close dropdown when route changes\n  useEffect(() => {\n    if (closeOnRouteChange) {\n      setIsOpen(false)\n      setFocusedIndex(-1)\n    }\n  }, [pathname, closeOnRouteChange])\n\n  // Keyboard navigation\n  useEffect(() => {\n    if (!keyboardNavigation || !isOpen) return\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      switch (event.key) {\n        case 'Escape':\n          setIsOpen(false)\n          setFocusedIndex(-1)\n          buttonRef.current?.focus()\n          break\n        case 'ArrowDown':\n          event.preventDefault()\n          setFocusedIndex(prev => {\n            const nextIndex = prev < itemCount ? prev + 1 : 0\n            itemRefs.current[nextIndex]?.focus()\n            return nextIndex\n          })\n          break\n        case 'ArrowUp':\n          event.preventDefault()\n          setFocusedIndex(prev => {\n            const nextIndex = prev > 0 ? prev - 1 : itemCount\n            itemRefs.current[nextIndex]?.focus()\n            return nextIndex\n          })\n          break\n        case 'Tab':\n          if (event.shiftKey && focusedIndex === 0) {\n            setIsOpen(false)\n            setFocusedIndex(-1)\n          } else if (!event.shiftKey && focusedIndex === itemCount) {\n            setIsOpen(false)\n            setFocusedIndex(-1)\n          }\n          break\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown)\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [isOpen, focusedIndex, itemCount, keyboardNavigation])\n\n  const toggle = useCallback(() => {\n    setIsOpen(!isOpen)\n    if (!isOpen) {\n      setFocusedIndex(-1)\n    }\n  }, [isOpen])\n\n  const close = useCallback(() => {\n    setIsOpen(false)\n    setFocusedIndex(-1)\n  }, [])\n\n  const handleTriggerKeyDown = useCallback((event: React.KeyboardEvent) => {\n    if (keyboardNavigation && (event.key === 'ArrowDown' || event.key === 'Enter' || event.key === ' ')) {\n      event.preventDefault()\n      setIsOpen(true)\n      setFocusedIndex(0)\n      setTimeout(() => {\n        itemRefs.current[0]?.focus()\n      }, 50)\n    }\n  }, [keyboardNavigation])\n\n  return {\n    isOpen,\n    focusedIndex,\n    dropdownRef,\n    buttonRef,\n    itemRefs,\n    toggle,\n    close,\n    setFocusedIndex,\n    handleTriggerKeyDown\n  }\n} "],"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","ignoreList":[]}