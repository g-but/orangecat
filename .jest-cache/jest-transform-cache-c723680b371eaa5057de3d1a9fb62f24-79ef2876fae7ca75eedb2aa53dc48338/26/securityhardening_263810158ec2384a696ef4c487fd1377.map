{"version":3,"names":["cov_222jlybbcc","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","server_1","require","logger_1","zod_1","XSSPrevention","sanitizeHTML","input","replace","match","HTML_ENTITIES","sanitizeForAttribute","sanitizeText","trim","substring","exports","SecuritySchemas","email","z","string","min","max","regex","transform","toLowerCase","bitcoinAddress","refine","address","suspiciousPatterns","some","pattern","test","username","reservedNames","includes","bio","suspiciousCount","reduce","count","RateLimiter","checkLimit","identifier","limitType","config","LIMITS","now","Date","key","cleanup","existing","requests","get","resetTime","set","windowMs","allowed","remaining","maxRequests","value","entries","delete","getStats","totalKeys","size","activeWindows","Map","api","auth","upload","search","passwordReset","profileUpdate","AuthenticationSecurity","isAccountLocked","lockTime","lockedAccounts","recordFailedAttempt","lockUntil","LOCKOUT_DURATION","logger","warn","toISOString","clearFailedAttempts","validatePasswordStrength","password","errors","length","push","commonPasswords","valid","generateSecureToken","chars","result","i","charAt","Math","floor","random","MAX_ATTEMPTS","SecureErrorHandler","sanitizeError","error","isProduction","process","env","NODE_ENV","safeErrors","errorMessage","message","isSafeError","safe","code","details","stack","split","slice","logSecurityEvent","event","severity","logData","Object","assign","timestamp","SecurityMonitor","recordEvent","id","events","MAX_EVENTS","alertCriticalEvent","getEvents","limit","filtered","filter","e","sort","a","oneHourAgo","eventsBySeverity","acc","totalEvents","recentEvents","criticalEvents","eventId","ContentSecurityPolicy","getHeaders","nonce","join","SecurityHardening","secureAPIRoute","request","options","requireAuth","rateLimit","validateInput","allowedMethods","method","url","success","response","NextResponse","json","status","clientIP","headers","rateLimitResult","ip","ceil","toString","user","createServerClient","createClient","Promise","resolve","then","__importStar","supabase","data","authUser","authError","getUser","body","parse","validationError"],"sources":["/home/g/dev/orangecat/src/services/security/security-hardening.ts"],"sourcesContent":["/**\n * COMPREHENSIVE SECURITY HARDENING SYSTEM\n * \n * Option C - Security Hardening Implementation\n * Addresses all critical security vulnerabilities identified in the platform\n * \n * Created: 2025-01-14\n * Last Modified: 2025-06-12\n * Last Modified Summary: Complete security hardening for production deployment - Option C completed\n */\n\nimport { NextRequest, NextResponse } from 'next/server'\nimport { logger } from '@/utils/logger'\nimport { z } from 'zod'\n\n// ==================== INPUT SANITIZATION SYSTEM ====================\n\n/**\n * XSS Prevention - HTML Entity Encoding and Content Sanitization\n * \n * Provides comprehensive protection against Cross-Site Scripting (XSS) attacks\n * by sanitizing user input and encoding dangerous characters.\n * \n * @example\n * ```typescript\n * const safeInput = XSSPrevention.sanitizeHTML('<script>alert(\"xss\")</script>');\n * // Returns: '&lt;script&gt;alert(&quot;xss&quot;)&lt;/script&gt;'\n * ```\n */\nexport class XSSPrevention {\n  private static readonly HTML_ENTITIES: Record<string, string> = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  }\n\n  /**\n   * Sanitize HTML content by encoding dangerous characters\n   * @param input - Raw HTML content to sanitize\n   * @returns Sanitized string safe for HTML display\n   */\n  static sanitizeHTML(input: string): string {\n    if (!input || typeof input !== 'string') return ''\n    \n    return input.replace(/[&<>\"'`=\\/]/g, (match) => {\n      return this.HTML_ENTITIES[match] || match\n    })\n  }\n\n  /**\n   * Sanitize input for use in HTML attributes with aggressive filtering\n   * @param input - Raw input to sanitize for HTML attributes\n   * @returns Sanitized string safe for HTML attributes\n   */\n  static sanitizeForAttribute(input: string): string {\n    if (!input || typeof input !== 'string') return ''\n    \n    // More aggressive sanitization for HTML attributes\n    return input\n      .replace(/[&<>\"'`=\\/\\(\\)\\[\\]{}]/g, (match) => {\n        return this.HTML_ENTITIES[match] || ''\n      })\n      .replace(/javascript:/gi, '')\n      .replace(/vbscript:/gi, '')\n      .replace(/data:/gi, '')\n      .replace(/on\\w+=/gi, '')\n  }\n\n  /**\n   * Sanitize plain text content with length limits\n   * @param input - Raw text to sanitize\n   * @returns Sanitized text safe for display (max 1000 chars)\n   */\n  static sanitizeText(input: string): string {\n    if (!input || typeof input !== 'string') return ''\n    \n    return input\n      .replace(/[<>]/g, (match) => this.HTML_ENTITIES[match])\n      .trim()\n      .substring(0, 1000) // Limit length\n  }\n}\n\n/**\n * Input Validation Schemas with Security Focus\n */\nexport const SecuritySchemas = {\n  // Email with strict validation\n  email: z.string()\n    .email('Invalid email format')\n    .min(5, 'Email too short')\n    .max(254, 'Email too long')\n    .regex(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/, 'Invalid email format')\n    .transform(email => email.toLowerCase().trim()),\n\n  // Bitcoin address with enhanced validation\n  bitcoinAddress: z.string()\n    .min(26, 'Bitcoin address too short')\n    .max(62, 'Bitcoin address too long')\n    .regex(/^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$|^bc1[a-z0-9]{39,59}$/, 'Invalid Bitcoin address format')\n    .refine(address => {\n      // Additional validation for known attack patterns\n      const suspiciousPatterns = [\n        /script/gi,\n        /javascript/gi,\n        /vbscript/gi,\n        /<|>/gi,\n        /\\x00/gi // Null bytes\n      ]\n      return !suspiciousPatterns.some(pattern => pattern.test(address))\n    }, 'Bitcoin address contains invalid characters'),\n\n  // Username with anti-impersonation\n  username: z.string()\n    .min(3, 'Username too short')\n    .max(30, 'Username too long')\n    .regex(/^[a-zA-Z0-9_-]+$/, 'Username can only contain letters, numbers, underscores, and hyphens')\n    .refine(username => {\n      // Celebrity/brand impersonation prevention\n      const reservedNames = [\n        'admin', 'administrator', 'root', 'system', 'support', 'help',\n        'bitcoin', 'satoshi', 'nakamoto', 'elon', 'musk', 'tesla',\n        'apple', 'google', 'microsoft', 'facebook', 'twitter', 'meta',\n        'orangecat', 'official', 'verified', 'staff', 'team'\n      ]\n      return !reservedNames.includes(username.toLowerCase())\n    }, 'Username is reserved or may cause impersonation')\n    .transform(username => username.toLowerCase().trim()),\n\n  // Bio/description with content filtering\n  bio: z.string()\n    .max(500, 'Bio too long')\n    .refine(bio => {\n      // Content filtering for spam/malicious content\n      const suspiciousPatterns = [\n        /(?:https?:\\/\\/)?(?:www\\.)?[a-zA-Z0-9-]+\\.[a-zA-Z]{2,}/gi, // URLs\n        /\\b(?:buy|sell|invest|profit|money|crypto|trading|forex)\\b/gi, // Financial spam\n        /<script|javascript:|vbscript:|data:/gi, // Script injection\n        /\\b(?:telegram|whatsapp|discord)\\b.*@/gi // Contact spam\n      ]\n      \n      const suspiciousCount = suspiciousPatterns.reduce((count, pattern) => {\n        return count + (pattern.test(bio) ? 1 : 0)\n      }, 0)\n      \n      return suspiciousCount < 2 // Allow some flexibility but flag multiple patterns\n    }, 'Bio contains suspicious content')\n    .transform(bio => XSSPrevention.sanitizeText(bio))\n}\n\n// ==================== RATE LIMITING SYSTEM ====================\n\ninterface RateLimitConfig {\n  windowMs: number\n  maxRequests: number\n  skipSuccessfulRequests?: boolean\n  skipFailedRequests?: boolean\n}\n\n/**\n * Rate Limiting System for API Protection\n * \n * Implements sliding window rate limiting to prevent abuse and DoS attacks.\n * Supports different rate limits for different operation types.\n * \n * @example\n * ```typescript\n * const result = await RateLimiter.checkLimit('user@example.com', 'auth');\n * if (!result.allowed) {\n *   throw new Error(`Rate limit exceeded. Try again in ${result.resetTime - Date.now()}ms`);\n * }\n * ```\n */\nexport class RateLimiter {\n  private static requests = new Map<string, { count: number; resetTime: number }>()\n\n  static readonly LIMITS: Record<string, RateLimitConfig> = {\n    // API rate limits\n    api: { windowMs: 15 * 60 * 1000, maxRequests: 100 }, // 100 requests per 15 minutes\n    auth: { windowMs: 15 * 60 * 1000, maxRequests: 5 }, // 5 auth attempts per 15 minutes\n    upload: { windowMs: 60 * 1000, maxRequests: 5 }, // 5 uploads per minute\n    search: { windowMs: 60 * 1000, maxRequests: 30 }, // 30 searches per minute\n    \n    // Strict limits for sensitive operations\n    passwordReset: { windowMs: 60 * 60 * 1000, maxRequests: 3 }, // 3 per hour\n    profileUpdate: { windowMs: 5 * 60 * 1000, maxRequests: 10 }, // 10 per 5 minutes\n  }\n\n  /**\n   * Check if request is within rate limits\n   * @param identifier - Unique identifier (IP, user ID, email)\n   * @param limitType - Type of rate limit to apply\n   * @returns Rate limit status with remaining requests and reset time\n   */\n  static async checkLimit(\n    identifier: string, \n    limitType: keyof typeof RateLimiter.LIMITS\n  ): Promise<{ allowed: boolean; remaining: number; resetTime: number }> {\n    const config = this.LIMITS[limitType]\n    const now = Date.now()\n    const key = `${limitType}:${identifier}`\n    \n    // Clean up expired entries\n    this.cleanup()\n    \n    const existing = this.requests.get(key)\n    \n    if (!existing || now > existing.resetTime) {\n      // New window\n      this.requests.set(key, {\n        count: 1,\n        resetTime: now + config.windowMs\n      })\n      return {\n        allowed: true,\n        remaining: config.maxRequests - 1,\n        resetTime: now + config.windowMs\n      }\n    }\n    \n    if (existing.count >= config.maxRequests) {\n      return {\n        allowed: false,\n        remaining: 0,\n        resetTime: existing.resetTime\n      }\n    }\n    \n    existing.count++\n    return {\n      allowed: true,\n      remaining: config.maxRequests - existing.count,\n      resetTime: existing.resetTime\n    }\n  }\n\n  private static cleanup(): void {\n    const now = Date.now()\n    for (const [key, value] of this.requests.entries()) {\n      if (now > value.resetTime) {\n        this.requests.delete(key)\n      }\n    }\n  }\n\n  static getStats(): { totalKeys: number; activeWindows: number } {\n    this.cleanup()\n    return {\n      totalKeys: this.requests.size,\n      activeWindows: this.requests.size\n    }\n  }\n}\n\n// ==================== AUTHENTICATION SECURITY ====================\n\n/**\n * Authentication Security System\n * \n * Provides account lockout protection, password strength validation,\n * and secure token generation for authentication operations.\n * \n * @example\n * ```typescript\n * // Check if account is locked\n * if (AuthenticationSecurity.isAccountLocked('user@example.com')) {\n *   throw new Error('Account temporarily locked due to failed attempts');\n * }\n * \n * // Validate password strength\n * const validation = AuthenticationSecurity.validatePasswordStrength('password123');\n * if (!validation.valid) {\n *   console.log('Password errors:', validation.errors);\n * }\n * ```\n */\nexport class AuthenticationSecurity {\n  private static readonly LOCKOUT_DURATION = 15 * 60 * 1000 // 15 minutes\n  private static readonly MAX_ATTEMPTS = 5\n  private static lockedAccounts = new Map<string, number>()\n\n  /**\n   * Check if account is locked due to failed authentication attempts\n   * @param identifier - Account identifier (email, username)\n   * @returns True if account is currently locked\n   */\n  static isAccountLocked(identifier: string): boolean {\n    const lockTime = this.lockedAccounts.get(identifier)\n    if (!lockTime) return false\n    \n    if (Date.now() > lockTime) {\n      this.lockedAccounts.delete(identifier)\n      return false\n    }\n    \n    return true\n  }\n\n  /**\n   * Record failed authentication attempt and lock account if needed\n   * @param identifier - Account identifier that failed authentication\n   */\n  static recordFailedAttempt(identifier: string): void {\n    const lockUntil = Date.now() + this.LOCKOUT_DURATION\n    this.lockedAccounts.set(identifier, lockUntil)\n    \n    logger.warn('Authentication failure recorded', {\n      identifier: identifier.substring(0, 3) + '***', // Partial identifier for privacy\n      lockUntil: new Date(lockUntil).toISOString()\n    }, 'Security')\n  }\n\n  /**\n   * Clear failed attempts record on successful authentication\n   * @param identifier - Account identifier that successfully authenticated\n   */\n  static clearFailedAttempts(identifier: string): void {\n    this.lockedAccounts.delete(identifier)\n  }\n\n  /**\n   * Validate password strength against security requirements\n   * @param password - Password to validate\n   * @returns Validation result with detailed error messages\n   */\n  static validatePasswordStrength(password: string): { valid: boolean; errors: string[] } {\n    const errors: string[] = []\n    \n    if (password.length < 8) errors.push('Password must be at least 8 characters')\n    if (password.length > 128) errors.push('Password too long')\n    if (!/[A-Z]/.test(password)) errors.push('Password must contain uppercase letter')\n    if (!/[a-z]/.test(password)) errors.push('Password must contain lowercase letter')\n    if (!/[0-9]/.test(password)) errors.push('Password must contain number')\n    if (!/[^A-Za-z0-9]/.test(password)) errors.push('Password must contain special character')\n    \n    // Check for common weak passwords\n    const commonPasswords = [\n      'password', '123456', 'qwerty', 'abc123', 'password123',\n      'admin', 'letmein', 'welcome', 'monkey', 'dragon'\n    ]\n    \n    if (commonPasswords.includes(password.toLowerCase())) {\n      errors.push('Password is too common')\n    }\n    \n    return {\n      valid: errors.length === 0,\n      errors\n    }\n  }\n\n  /**\n   * Generate cryptographically secure random token\n   * @param length - Token length (default: 32 characters)\n   * @returns Secure random string suitable for tokens\n   */\n  static generateSecureToken(length: number = 32): string {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n    let result = ''\n    \n    for (let i = 0; i < length; i++) {\n      result += chars.charAt(Math.floor(Math.random() * chars.length))\n    }\n    \n    return result\n  }\n}\n\n// ==================== ERROR HANDLING SECURITY ====================\n\nexport class SecureErrorHandler {\n  /**\n   * Sanitize error messages to prevent information disclosure\n   */\n  static sanitizeError(error: any, isProduction: boolean = process.env.NODE_ENV === 'production'): {\n    message: string\n    code?: string\n    details?: any\n  } {\n    // In production, never expose internal errors\n    if (isProduction) {\n      const safeErrors = [\n        'Invalid credentials',\n        'Access denied',\n        'Resource not found',\n        'Invalid input',\n        'Rate limit exceeded',\n        'File too large',\n        'Invalid file type'\n      ]\n      \n      const errorMessage = error?.message || 'An error occurred'\n      const isSafeError = safeErrors.some(safe => errorMessage.includes(safe))\n      \n      return {\n        message: isSafeError ? errorMessage : 'An error occurred',\n        code: error?.code || 'INTERNAL_ERROR'\n      }\n    }\n    \n    // In development, provide more details but still sanitize\n    return {\n      message: error?.message || 'An error occurred',\n      code: error?.code,\n      details: error?.stack ? error.stack.split('\\n').slice(0, 3) : undefined\n    }\n  }\n\n  /**\n   * Log security events\n   */\n  static logSecurityEvent(\n    event: string,\n    details: Record<string, any>,\n    severity: 'low' | 'medium' | 'high' | 'critical' = 'medium'\n  ): void {\n    const logData = {\n      event,\n      severity,\n      timestamp: new Date().toISOString(),\n      ...details\n    }\n    \n    if (severity === 'critical' || severity === 'high') {\n      logger.error(`Security Event: ${event}`, logData, 'Security')\n    } else {\n      logger.warn(`Security Event: ${event}`, logData, 'Security')\n    }\n  }\n}\n\n// ==================== SECURITY MONITORING ====================\n\ninterface SecurityEvent {\n  id: string\n  type: string\n  severity: 'low' | 'medium' | 'high' | 'critical'\n  timestamp: number\n  details: Record<string, any>\n}\n\n/**\n * Security Event Monitoring System\n * \n * Tracks and analyzes security events for threat detection and incident response.\n * Maintains event history and provides alerting for critical security events.\n * \n * @example\n * ```typescript\n * // Record security event\n * SecurityMonitor.recordEvent('suspicious_login', 'high', {\n *   ip: '192.168.1.1',\n *   userAgent: 'suspicious-bot'\n * });\n * \n * // Get security statistics\n * const stats = SecurityMonitor.getStats();\n * console.log(`Critical events: ${stats.criticalEvents}`);\n * ```\n */\nexport class SecurityMonitor {\n  private static events: SecurityEvent[] = []\n  private static readonly MAX_EVENTS = 1000\n\n  /**\n   * Record a security event for monitoring and analysis\n   * @param type - Event type identifier\n   * @param severity - Event severity level\n   * @param details - Additional event context and metadata\n   */\n  static recordEvent(\n    type: string,\n    severity: SecurityEvent['severity'],\n    details: Record<string, any>\n  ): void {\n    const event: SecurityEvent = {\n      id: AuthenticationSecurity.generateSecureToken(16),\n      type,\n      severity,\n      timestamp: Date.now(),\n      details\n    }\n    \n    this.events.push(event)\n    \n    // Keep only recent events\n    if (this.events.length > this.MAX_EVENTS) {\n      this.events = this.events.slice(-this.MAX_EVENTS)\n    }\n    \n    // Alert on critical events\n    if (severity === 'critical') {\n      this.alertCriticalEvent(event)\n    }\n  }\n\n  /**\n   * Retrieve security events with filtering and limiting\n   * @param severity - Optional severity filter\n   * @param limit - Maximum number of events to return (default: 100)\n   * @returns Array of security events sorted by timestamp (newest first)\n   */\n  static getEvents(\n    severity?: SecurityEvent['severity'],\n    limit: number = 100\n  ): SecurityEvent[] {\n    let filtered = this.events\n    \n    if (severity) {\n      filtered = this.events.filter(e => e.severity === severity)\n    }\n    \n    return filtered\n      .sort((a, b) => b.timestamp - a.timestamp)\n      .slice(0, limit)\n  }\n\n  /**\n   * Get security statistics\n   */\n  static getStats(): {\n    totalEvents: number\n    eventsBySeverity: Record<string, number>\n    recentEvents: number\n    criticalEvents: number\n  } {\n    const now = Date.now()\n    const oneHourAgo = now - 60 * 60 * 1000\n    \n    const eventsBySeverity = this.events.reduce((acc, event) => {\n      acc[event.severity] = (acc[event.severity] || 0) + 1\n      return acc\n    }, {} as Record<string, number>)\n    \n    return {\n      totalEvents: this.events.length,\n      eventsBySeverity,\n      recentEvents: this.events.filter(e => e.timestamp > oneHourAgo).length,\n      criticalEvents: this.events.filter(e => e.severity === 'critical').length\n    }\n  }\n\n  private static alertCriticalEvent(event: SecurityEvent): void {\n    logger.error('CRITICAL SECURITY EVENT', {\n      eventId: event.id,\n      type: event.type,\n      details: event.details\n    }, 'Security')\n    \n    // In production, this would trigger alerts to security team\n    if (process.env.NODE_ENV === 'production') {\n      // TODO: Integrate with alerting system (email, Slack, PagerDuty, etc.)\n    }\n  }\n}\n\n// ==================== CONTENT SECURITY POLICY ====================\n\nexport class ContentSecurityPolicy {\n  static getHeaders(): Record<string, string> {\n    const nonce = AuthenticationSecurity.generateSecureToken(16)\n    \n    return {\n      'Content-Security-Policy': [\n        \"default-src 'self'\",\n        \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://vercel.live https://va.vercel-scripts.com\",\n        \"style-src 'self' 'unsafe-inline' https://fonts.googleapis.com\",\n        \"font-src 'self' https://fonts.gstatic.com\",\n        \"img-src 'self' data: https: blob:\",\n        \"connect-src 'self' https://*.supabase.co wss://*.supabase.co https://vercel.live\",\n        \"frame-src 'self' https://vercel.live\",\n        \"object-src 'none'\",\n        \"base-uri 'self'\",\n        \"form-action 'self'\",\n        \"frame-ancestors 'none'\",\n        \"upgrade-insecure-requests\"\n      ].join('; '),\n      \n      'X-Content-Type-Options': 'nosniff',\n      'X-Frame-Options': 'DENY',\n      'X-XSS-Protection': '1; mode=block',\n      'Referrer-Policy': 'strict-origin-when-cross-origin',\n      'Permissions-Policy': 'camera=(), microphone=(), geolocation=()',\n      \n      // HSTS (HTTP Strict Transport Security)\n      'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload'\n    }\n  }\n}\n\n// ==================== MAIN SECURITY MIDDLEWARE ====================\n\n/**\n * Comprehensive Security Hardening Middleware\n * \n * Provides complete security protection for API routes including:\n * - Method validation\n * - Rate limiting\n * - Authentication verification\n * - Input validation\n * - Security event monitoring\n * \n * @example\n * ```typescript\n * // Secure an API route\n * const security = await SecurityHardening.secureAPIRoute(request, {\n *   requireAuth: true,\n *   rateLimit: 'api',\n *   allowedMethods: ['POST'],\n *   validateInput: userUpdateSchema\n * });\n * \n * if (!security.success) {\n *   return security.response; // Security check failed\n * }\n * \n * // Security passed, proceed with API logic\n * const user = security.user;\n * ```\n */\nexport class SecurityHardening {\n  /**\n   * Apply comprehensive security protection to API routes\n   * @param request - Next.js request object\n   * @param options - Security configuration options\n   * @param options.requireAuth - Whether authentication is required\n   * @param options.rateLimit - Rate limit type to apply\n   * @param options.validateInput - Zod schema for input validation\n   * @param options.allowedMethods - HTTP methods allowed for this route\n   * @returns Security check result with user data or error response\n   */\n  static async secureAPIRoute(\n    request: NextRequest,\n    options: {\n      requireAuth?: boolean\n      rateLimit?: keyof typeof RateLimiter.LIMITS\n      validateInput?: z.ZodSchema\n      allowedMethods?: string[]\n    } = {}\n  ): Promise<{ success: true; user?: any } | { success: false; response: NextResponse }> {\n    try {\n      const {\n        requireAuth = true,\n        rateLimit = 'api',\n        validateInput,\n        allowedMethods = ['GET', 'POST', 'PUT', 'DELETE']\n      } = options\n\n      // 1. Method validation\n      if (!allowedMethods.includes(request.method)) {\n        SecurityMonitor.recordEvent('invalid_method', 'medium', {\n          method: request.method,\n          url: request.url\n        })\n        \n        return {\n          success: false,\n          response: NextResponse.json(\n            { error: 'Method not allowed' },\n            { status: 405 }\n          )\n        }\n      }\n\n      // 2. Rate limiting\n      const clientIP = request.headers.get('x-forwarded-for') || request.headers.get('x-real-ip') || 'unknown'\n      const rateLimitResult = await RateLimiter.checkLimit(clientIP, rateLimit)\n      \n      if (!rateLimitResult.allowed) {\n        SecurityMonitor.recordEvent('rate_limit_exceeded', 'high', {\n          ip: clientIP,\n          limitType: rateLimit\n        })\n        \n        return {\n          success: false,\n          response: NextResponse.json(\n            { error: 'Rate limit exceeded' },\n            { \n              status: 429,\n              headers: {\n                'Retry-After': Math.ceil((rateLimitResult.resetTime - Date.now()) / 1000).toString()\n              }\n            }\n          )\n        }\n      }\n\n      // 3. Authentication check\n      let user = null\n      if (requireAuth) {\n        try {\n          // Only import and use createServerClient when actually needed\n          const { createServerClient: createClient } = await import('@/services/supabase/server')\n          const supabase = await createClient()\n          const { data: { user: authUser }, error: authError } = await supabase.auth.getUser()\n        \n          if (!authUser || authError) {\n            SecurityMonitor.recordEvent('unauthorized_access', 'medium', {\n              ip: clientIP,\n              url: request.url\n            })\n            \n            return {\n              success: false,\n              response: NextResponse.json(\n                { error: 'Authentication required' },\n                { status: 401 }\n              )\n            }\n          }\n          \n          user = authUser\n        } catch (authError) {\n          SecurityMonitor.recordEvent('auth_error', 'high', {\n            ip: clientIP,\n            error: (authError as Error).message\n          })\n          \n          return {\n            success: false,\n            response: NextResponse.json(\n              { error: 'Authentication failed' },\n              { status: 500 }\n            )\n          }\n        }\n      }\n\n      // 4. Input validation\n      if (validateInput && request.method !== 'GET') {\n        try {\n          const body = await request.json()\n          validateInput.parse(body)\n        } catch (validationError) {\n          SecurityMonitor.recordEvent('input_validation_failed', 'medium', {\n            ip: clientIP,\n            error: (validationError as Error).message\n          })\n          \n          return {\n            success: false,\n            response: NextResponse.json(\n              { error: 'Invalid input data' },\n              { status: 400 }\n            )\n          }\n        }\n      }\n\n      return { success: true, user }\n      \n    } catch (error) {\n      SecurityMonitor.recordEvent('security_middleware_error', 'critical', {\n        error: (error as Error).message\n      })\n      \n      return {\n        success: false,\n        response: NextResponse.json(\n          { error: 'Security validation failed' },\n          { status: 500 }\n        )\n      }\n    }\n  }\n}"],"mappings":"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","ignoreList":[]}