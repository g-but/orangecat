ed7ddf10c473a773a9841c5ec7ecb620
"use strict";

/**
 * COMPREHENSIVE SECURITY HARDENING SYSTEM
 *
 * Option C - Security Hardening Implementation
 * Addresses all critical security vulnerabilities identified in the platform
 *
 * Created: 2025-01-14
 * Last Modified: 2025-06-12
 * Last Modified Summary: Complete security hardening for production deployment - Option C completed
 */
/* istanbul ignore next */
function cov_222jlybbcc() {
  var path = "/home/g/dev/orangecat/src/services/security/security-hardening.ts";
  var hash = "0f53c1cd2f5d472d80a06b42e64d4437215be7f1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/services/security/security-hardening.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 22
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "1": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 33
        }
      },
      "2": {
        start: {
          line: 13,
          column: 26
        },
        end: {
          line: 13,
          column: 33
        }
      },
      "3": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 52
        }
      },
      "4": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 5
        }
      },
      "5": {
        start: {
          line: 16,
          column: 6
        },
        end: {
          line: 16,
          column: 68
        }
      },
      "6": {
        start: {
          line: 16,
          column: 51
        },
        end: {
          line: 16,
          column: 63
        }
      },
      "7": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 39
        }
      },
      "8": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "9": {
        start: {
          line: 20,
          column: 26
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "10": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 17
        }
      },
      "11": {
        start: {
          line: 23,
          column: 25
        },
        end: {
          line: 27,
          column: 2
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 72
        }
      },
      "13": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 21
        }
      },
      "14": {
        start: {
          line: 28,
          column: 19
        },
        end: {
          line: 44,
          column: 4
        }
      },
      "15": {
        start: {
          line: 29,
          column: 18
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "16": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "17": {
        start: {
          line: 31,
          column: 21
        },
        end: {
          line: 31,
          column: 23
        }
      },
      "18": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 95
        }
      },
      "19": {
        start: {
          line: 32,
          column: 29
        },
        end: {
          line: 32,
          column: 95
        }
      },
      "20": {
        start: {
          line: 32,
          column: 77
        },
        end: {
          line: 32,
          column: 95
        }
      },
      "21": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 22
        }
      },
      "22": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 26
        }
      },
      "23": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 43,
          column: 6
        }
      },
      "24": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 46
        }
      },
      "25": {
        start: {
          line: 38,
          column: 35
        },
        end: {
          line: 38,
          column: 46
        }
      },
      "26": {
        start: {
          line: 39,
          column: 21
        },
        end: {
          line: 39,
          column: 23
        }
      },
      "27": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 137
        }
      },
      "28": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 137
        }
      },
      "29": {
        start: {
          line: 40,
          column: 38
        },
        end: {
          line: 40,
          column: 50
        }
      },
      "30": {
        start: {
          line: 40,
          column: 56
        },
        end: {
          line: 40,
          column: 57
        }
      },
      "31": {
        start: {
          line: 40,
          column: 78
        },
        end: {
          line: 40,
          column: 137
        }
      },
      "32": {
        start: {
          line: 40,
          column: 102
        },
        end: {
          line: 40,
          column: 137
        }
      },
      "33": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 40
        }
      },
      "34": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 22
        }
      },
      "35": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 62
        }
      },
      "36": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 46,
          column: 227
        }
      },
      "37": {
        start: {
          line: 47,
          column: 17
        },
        end: {
          line: 47,
          column: 39
        }
      },
      "38": {
        start: {
          line: 48,
          column: 17
        },
        end: {
          line: 48,
          column: 42
        }
      },
      "39": {
        start: {
          line: 49,
          column: 14
        },
        end: {
          line: 49,
          column: 28
        }
      },
      "40": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 71,
          column: 22
        }
      },
      "41": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 22
        }
      },
      "42": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "43": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 54
        }
      },
      "44": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 83,
          column: 22
        }
      },
      "45": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 22
        }
      },
      "46": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 92,
          column: 37
        }
      },
      "47": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 51
        }
      },
      "48": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 101,
          column: 22
        }
      },
      "49": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 22
        }
      },
      "50": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 105,
          column: 32
        }
      },
      "51": {
        start: {
          line: 103,
          column: 41
        },
        end: {
          line: 103,
          column: 66
        }
      },
      "52": {
        start: {
          line: 108,
          column: 0
        },
        end: {
          line: 108,
          column: 38
        }
      },
      "53": {
        start: {
          line: 109,
          column: 0
        },
        end: {
          line: 118,
          column: 2
        }
      },
      "54": {
        start: {
          line: 122,
          column: 0
        },
        end: {
          line: 179,
          column: 2
        }
      },
      "55": {
        start: {
          line: 129,
          column: 28
        },
        end: {
          line: 129,
          column: 54
        }
      },
      "56": {
        start: {
          line: 137,
          column: 35
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "57": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 74
        }
      },
      "58": {
        start: {
          line: 144,
          column: 51
        },
        end: {
          line: 144,
          column: 72
        }
      },
      "59": {
        start: {
          line: 153,
          column: 30
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "60": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 63
        }
      },
      "61": {
        start: {
          line: 161,
          column: 31
        },
        end: {
          line: 161,
          column: 60
        }
      },
      "62": {
        start: {
          line: 167,
          column: 35
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "63": {
        start: {
          line: 173,
          column: 32
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "64": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 55
        }
      },
      "65": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 35
        }
      },
      "66": {
        start: {
          line: 178,
          column: 26
        },
        end: {
          line: 178,
          column: 57
        }
      },
      "67": {
        start: {
          line: 202,
          column: 23
        },
        end: {
          line: 202,
          column: 45
        }
      },
      "68": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 203,
          column: 30
        }
      },
      "69": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 204,
          column: 48
        }
      },
      "70": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 23
        }
      },
      "71": {
        start: {
          line: 207,
          column: 25
        },
        end: {
          line: 207,
          column: 47
        }
      },
      "72": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "73": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 213,
          column: 15
        }
      },
      "74": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 218,
          column: 14
        }
      },
      "75": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 226,
          column: 9
        }
      },
      "76": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 225,
          column: 14
        }
      },
      "77": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 25
        }
      },
      "78": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 232,
          column: 10
        }
      },
      "79": {
        start: {
          line: 235,
          column: 20
        },
        end: {
          line: 235,
          column: 30
        }
      },
      "80": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "81": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 239,
          column: 13
        }
      },
      "82": {
        start: {
          line: 238,
          column: 16
        },
        end: {
          line: 238,
          column: 42
        }
      },
      "83": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 23
        }
      },
      "84": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 247,
          column: 10
        }
      },
      "85": {
        start: {
          line: 250,
          column: 0
        },
        end: {
          line: 250,
          column: 34
        }
      },
      "86": {
        start: {
          line: 251,
          column: 0
        },
        end: {
          line: 251,
          column: 33
        }
      },
      "87": {
        start: {
          line: 252,
          column: 0
        },
        end: {
          line: 261,
          column: 2
        }
      },
      "88": {
        start: {
          line: 290,
          column: 25
        },
        end: {
          line: 290,
          column: 60
        }
      },
      "89": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 292,
          column: 25
        }
      },
      "90": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 25
        }
      },
      "91": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 296,
          column: 9
        }
      },
      "92": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 51
        }
      },
      "93": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 25
        }
      },
      "94": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 20
        }
      },
      "95": {
        start: {
          line: 304,
          column: 26
        },
        end: {
          line: 304,
          column: 60
        }
      },
      "96": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 55
        }
      },
      "97": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 309,
          column: 23
        }
      },
      "98": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 47
        }
      },
      "99": {
        start: {
          line: 324,
          column: 23
        },
        end: {
          line: 324,
          column: 25
        }
      },
      "100": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 326,
          column: 66
        }
      },
      "101": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 66
        }
      },
      "102": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 328,
          column: 45
        }
      },
      "103": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 45
        }
      },
      "104": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 330,
          column: 66
        }
      },
      "105": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 66
        }
      },
      "106": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 332,
          column: 66
        }
      },
      "107": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 332,
          column: 66
        }
      },
      "108": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 334,
          column: 56
        }
      },
      "109": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 334,
          column: 56
        }
      },
      "110": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 336,
          column: 67
        }
      },
      "111": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 336,
          column: 67
        }
      },
      "112": {
        start: {
          line: 338,
          column: 32
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "113": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 344,
          column: 9
        }
      },
      "114": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 50
        }
      },
      "115": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 348,
          column: 10
        }
      },
      "116": {
        start: {
          line: 356,
          column: 22
        },
        end: {
          line: 356,
          column: 86
        }
      },
      "117": {
        start: {
          line: 357,
          column: 21
        },
        end: {
          line: 357,
          column: 23
        }
      },
      "118": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 360,
          column: 9
        }
      },
      "119": {
        start: {
          line: 358,
          column: 21
        },
        end: {
          line: 358,
          column: 22
        }
      },
      "120": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 77
        }
      },
      "121": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 22
        }
      },
      "122": {
        start: {
          line: 364,
          column: 0
        },
        end: {
          line: 364,
          column: 56
        }
      },
      "123": {
        start: {
          line: 365,
          column: 0
        },
        end: {
          line: 365,
          column: 57
        }
      },
      "124": {
        start: {
          line: 366,
          column: 0
        },
        end: {
          line: 366,
          column: 40
        }
      },
      "125": {
        start: {
          line: 367,
          column: 0
        },
        end: {
          line: 367,
          column: 50
        }
      },
      "126": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 391,
          column: 9
        }
      },
      "127": {
        start: {
          line: 376,
          column: 31
        },
        end: {
          line: 384,
          column: 13
        }
      },
      "128": {
        start: {
          line: 385,
          column: 33
        },
        end: {
          line: 385,
          column: 117
        }
      },
      "129": {
        start: {
          line: 386,
          column: 32
        },
        end: {
          line: 386,
          column: 84
        }
      },
      "130": {
        start: {
          line: 386,
          column: 56
        },
        end: {
          line: 386,
          column: 83
        }
      },
      "131": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 390,
          column: 14
        }
      },
      "132": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 397,
          column: 10
        }
      },
      "133": {
        start: {
          line: 403,
          column: 24
        },
        end: {
          line: 404,
          column: 69
        }
      },
      "134": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 410,
          column: 9
        }
      },
      "135": {
        start: {
          line: 406,
          column: 12
        },
        end: {
          line: 406,
          column: 83
        }
      },
      "136": {
        start: {
          line: 409,
          column: 12
        },
        end: {
          line: 409,
          column: 82
        }
      },
      "137": {
        start: {
          line: 413,
          column: 0
        },
        end: {
          line: 413,
          column: 48
        }
      },
      "138": {
        start: {
          line: 441,
          column: 22
        },
        end: {
          line: 447,
          column: 9
        }
      },
      "139": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 448,
          column: 32
        }
      },
      "140": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 452,
          column: 9
        }
      },
      "141": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 451,
          column: 62
        }
      },
      "142": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 456,
          column: 9
        }
      },
      "143": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 455,
          column: 43
        }
      },
      "144": {
        start: {
          line: 465,
          column: 23
        },
        end: {
          line: 465,
          column: 34
        }
      },
      "145": {
        start: {
          line: 466,
          column: 8
        },
        end: {
          line: 468,
          column: 9
        }
      },
      "146": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 467,
          column: 72
        }
      },
      "147": {
        start: {
          line: 467,
          column: 47
        },
        end: {
          line: 467,
          column: 70
        }
      },
      "148": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 471,
          column: 29
        }
      },
      "149": {
        start: {
          line: 470,
          column: 28
        },
        end: {
          line: 470,
          column: 53
        }
      },
      "150": {
        start: {
          line: 477,
          column: 20
        },
        end: {
          line: 477,
          column: 30
        }
      },
      "151": {
        start: {
          line: 478,
          column: 27
        },
        end: {
          line: 478,
          column: 47
        }
      },
      "152": {
        start: {
          line: 479,
          column: 33
        },
        end: {
          line: 482,
          column: 14
        }
      },
      "153": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 65
        }
      },
      "154": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 481,
          column: 23
        }
      },
      "155": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 488,
          column: 10
        }
      },
      "156": {
        start: {
          line: 486,
          column: 50
        },
        end: {
          line: 486,
          column: 74
        }
      },
      "157": {
        start: {
          line: 487,
          column: 52
        },
        end: {
          line: 487,
          column: 77
        }
      },
      "158": {
        start: {
          line: 491,
          column: 8
        },
        end: {
          line: 495,
          column: 23
        }
      },
      "159": {
        start: {
          line: 497,
          column: 8
        },
        end: {
          line: 499,
          column: 9
        }
      },
      "160": {
        start: {
          line: 502,
          column: 0
        },
        end: {
          line: 502,
          column: 42
        }
      },
      "161": {
        start: {
          line: 503,
          column: 0
        },
        end: {
          line: 503,
          column: 28
        }
      },
      "162": {
        start: {
          line: 504,
          column: 0
        },
        end: {
          line: 504,
          column: 34
        }
      },
      "163": {
        start: {
          line: 508,
          column: 22
        },
        end: {
          line: 508,
          column: 68
        }
      },
      "164": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 531,
          column: 10
        }
      },
      "165": {
        start: {
          line: 534,
          column: 0
        },
        end: {
          line: 534,
          column: 54
        }
      },
      "166": {
        start: {
          line: 576,
          column: 8
        },
        end: {
          line: 665,
          column: 9
        }
      },
      "167": {
        start: {
          line: 577,
          column: 128
        },
        end: {
          line: 577,
          column: 135
        }
      },
      "168": {
        start: {
          line: 579,
          column: 12
        },
        end: {
          line: 588,
          column: 13
        }
      },
      "169": {
        start: {
          line: 580,
          column: 16
        },
        end: {
          line: 583,
          column: 19
        }
      },
      "170": {
        start: {
          line: 584,
          column: 16
        },
        end: {
          line: 587,
          column: 18
        }
      },
      "171": {
        start: {
          line: 590,
          column: 29
        },
        end: {
          line: 590,
          column: 116
        }
      },
      "172": {
        start: {
          line: 591,
          column: 36
        },
        end: {
          line: 591,
          column: 85
        }
      },
      "173": {
        start: {
          line: 592,
          column: 12
        },
        end: {
          line: 606,
          column: 13
        }
      },
      "174": {
        start: {
          line: 593,
          column: 16
        },
        end: {
          line: 596,
          column: 19
        }
      },
      "175": {
        start: {
          line: 597,
          column: 16
        },
        end: {
          line: 605,
          column: 18
        }
      },
      "176": {
        start: {
          line: 608,
          column: 23
        },
        end: {
          line: 608,
          column: 27
        }
      },
      "177": {
        start: {
          line: 609,
          column: 12
        },
        end: {
          line: 637,
          column: 13
        }
      },
      "178": {
        start: {
          line: 610,
          column: 16
        },
        end: {
          line: 636,
          column: 17
        }
      },
      "179": {
        start: {
          line: 612,
          column: 65
        },
        end: {
          line: 612,
          column: 152
        }
      },
      "180": {
        start: {
          line: 612,
          column: 100
        },
        end: {
          line: 612,
          column: 151
        }
      },
      "181": {
        start: {
          line: 613,
          column: 37
        },
        end: {
          line: 613,
          column: 57
        }
      },
      "182": {
        start: {
          line: 614,
          column: 75
        },
        end: {
          line: 614,
          column: 104
        }
      },
      "183": {
        start: {
          line: 615,
          column: 20
        },
        end: {
          line: 624,
          column: 21
        }
      },
      "184": {
        start: {
          line: 616,
          column: 24
        },
        end: {
          line: 619,
          column: 27
        }
      },
      "185": {
        start: {
          line: 620,
          column: 24
        },
        end: {
          line: 623,
          column: 26
        }
      },
      "186": {
        start: {
          line: 625,
          column: 20
        },
        end: {
          line: 625,
          column: 36
        }
      },
      "187": {
        start: {
          line: 628,
          column: 20
        },
        end: {
          line: 631,
          column: 23
        }
      },
      "188": {
        start: {
          line: 632,
          column: 20
        },
        end: {
          line: 635,
          column: 22
        }
      },
      "189": {
        start: {
          line: 639,
          column: 12
        },
        end: {
          line: 654,
          column: 13
        }
      },
      "190": {
        start: {
          line: 640,
          column: 16
        },
        end: {
          line: 653,
          column: 17
        }
      },
      "191": {
        start: {
          line: 641,
          column: 33
        },
        end: {
          line: 641,
          column: 53
        }
      },
      "192": {
        start: {
          line: 642,
          column: 20
        },
        end: {
          line: 642,
          column: 46
        }
      },
      "193": {
        start: {
          line: 645,
          column: 20
        },
        end: {
          line: 648,
          column: 23
        }
      },
      "194": {
        start: {
          line: 649,
          column: 20
        },
        end: {
          line: 652,
          column: 22
        }
      },
      "195": {
        start: {
          line: 655,
          column: 12
        },
        end: {
          line: 655,
          column: 43
        }
      },
      "196": {
        start: {
          line: 658,
          column: 12
        },
        end: {
          line: 660,
          column: 15
        }
      },
      "197": {
        start: {
          line: 661,
          column: 12
        },
        end: {
          line: 664,
          column: 14
        }
      },
      "198": {
        start: {
          line: 668,
          column: 0
        },
        end: {
          line: 668,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 74
          },
          end: {
            line: 12,
            column: 75
          }
        },
        loc: {
          start: {
            line: 12,
            column: 96
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 38
          },
          end: {
            line: 16,
            column: 39
          }
        },
        loc: {
          start: {
            line: 16,
            column: 49
          },
          end: {
            line: 16,
            column: 65
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 6
          },
          end: {
            line: 19,
            column: 7
          }
        },
        loc: {
          start: {
            line: 19,
            column: 28
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 80
          },
          end: {
            line: 23,
            column: 81
          }
        },
        loc: {
          start: {
            line: 23,
            column: 95
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 5
          },
          end: {
            line: 25,
            column: 6
          }
        },
        loc: {
          start: {
            line: 25,
            column: 20
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 28,
            column: 51
          },
          end: {
            line: 28,
            column: 52
          }
        },
        loc: {
          start: {
            line: 28,
            column: 63
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 28
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 29,
            column: 18
          },
          end: {
            line: 29,
            column: 19
          }
        },
        loc: {
          start: {
            line: 29,
            column: 30
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 29
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 48
          },
          end: {
            line: 30,
            column: 49
          }
        },
        loc: {
          start: {
            line: 30,
            column: 61
          },
          end: {
            line: 34,
            column: 9
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 37,
            column: 11
          },
          end: {
            line: 37,
            column: 12
          }
        },
        loc: {
          start: {
            line: 37,
            column: 26
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 37
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 31
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 69
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 72,
            column: 45
          },
          end: {
            line: 72,
            column: 46
          }
        },
        loc: {
          start: {
            line: 72,
            column: 56
          },
          end: {
            line: 74,
            column: 9
          }
        },
        line: 72
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 39
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 81
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 86,
            column: 47
          },
          end: {
            line: 86,
            column: 48
          }
        },
        loc: {
          start: {
            line: 86,
            column: 58
          },
          end: {
            line: 88,
            column: 9
          }
        },
        line: 86
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 31
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 99
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 103,
            column: 30
          },
          end: {
            line: 103,
            column: 31
          }
        },
        loc: {
          start: {
            line: 103,
            column: 41
          },
          end: {
            line: 103,
            column: 66
          }
        },
        line: 103
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 129,
            column: 19
          },
          end: {
            line: 129,
            column: 20
          }
        },
        loc: {
          start: {
            line: 129,
            column: 28
          },
          end: {
            line: 129,
            column: 54
          }
        },
        line: 129
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 135,
            column: 16
          },
          end: {
            line: 135,
            column: 17
          }
        },
        loc: {
          start: {
            line: 135,
            column: 27
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 135
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 144,
            column: 40
          },
          end: {
            line: 144,
            column: 41
          }
        },
        loc: {
          start: {
            line: 144,
            column: 51
          },
          end: {
            line: 144,
            column: 72
          }
        },
        line: 144
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 151,
            column: 17
          }
        },
        loc: {
          start: {
            line: 151,
            column: 28
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 151
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 161,
            column: 19
          },
          end: {
            line: 161,
            column: 20
          }
        },
        loc: {
          start: {
            line: 161,
            column: 31
          },
          end: {
            line: 161,
            column: 60
          }
        },
        line: 161
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 165,
            column: 16
          },
          end: {
            line: 165,
            column: 17
          }
        },
        loc: {
          start: {
            line: 165,
            column: 23
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 165
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 173,
            column: 58
          },
          end: {
            line: 173,
            column: 59
          }
        },
        loc: {
          start: {
            line: 173,
            column: 78
          },
          end: {
            line: 175,
            column: 9
          }
        },
        line: 173
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 178,
            column: 19
          },
          end: {
            line: 178,
            column: 20
          }
        },
        loc: {
          start: {
            line: 178,
            column: 26
          },
          end: {
            line: 178,
            column: 57
          }
        },
        line: 178
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        },
        loc: {
          start: {
            line: 201,
            column: 51
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 201
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        loc: {
          start: {
            line: 234,
            column: 21
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 234
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 22
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 242
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 289,
            column: 5
          }
        },
        loc: {
          start: {
            line: 289,
            column: 39
          },
          end: {
            line: 298,
            column: 5
          }
        },
        line: 289
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        },
        loc: {
          start: {
            line: 303,
            column: 43
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 303
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        },
        loc: {
          start: {
            line: 315,
            column: 43
          },
          end: {
            line: 317,
            column: 5
          }
        },
        line: 315
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        loc: {
          start: {
            line: 323,
            column: 46
          },
          end: {
            line: 349,
            column: 5
          }
        },
        line: 323
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 355,
            column: 4
          },
          end: {
            line: 355,
            column: 5
          }
        },
        loc: {
          start: {
            line: 355,
            column: 44
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 355
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 373,
            column: 5
          }
        },
        loc: {
          start: {
            line: 373,
            column: 86
          },
          end: {
            line: 398,
            column: 5
          }
        },
        line: 373
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 386,
            column: 48
          },
          end: {
            line: 386,
            column: 49
          }
        },
        loc: {
          start: {
            line: 386,
            column: 56
          },
          end: {
            line: 386,
            column: 83
          }
        },
        line: 386
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 402,
            column: 4
          },
          end: {
            line: 402,
            column: 5
          }
        },
        loc: {
          start: {
            line: 402,
            column: 65
          },
          end: {
            line: 411,
            column: 5
          }
        },
        line: 402
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 440,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        },
        loc: {
          start: {
            line: 440,
            column: 48
          },
          end: {
            line: 457,
            column: 5
          }
        },
        line: 440
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 464,
            column: 4
          },
          end: {
            line: 464,
            column: 5
          }
        },
        loc: {
          start: {
            line: 464,
            column: 44
          },
          end: {
            line: 472,
            column: 5
          }
        },
        line: 464
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 467,
            column: 42
          },
          end: {
            line: 467,
            column: 43
          }
        },
        loc: {
          start: {
            line: 467,
            column: 47
          },
          end: {
            line: 467,
            column: 70
          }
        },
        line: 467
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 470,
            column: 18
          },
          end: {
            line: 470,
            column: 19
          }
        },
        loc: {
          start: {
            line: 470,
            column: 28
          },
          end: {
            line: 470,
            column: 53
          }
        },
        line: 470
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 476,
            column: 4
          },
          end: {
            line: 476,
            column: 5
          }
        },
        loc: {
          start: {
            line: 476,
            column: 22
          },
          end: {
            line: 489,
            column: 5
          }
        },
        line: 476
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 479,
            column: 52
          },
          end: {
            line: 479,
            column: 53
          }
        },
        loc: {
          start: {
            line: 479,
            column: 68
          },
          end: {
            line: 482,
            column: 9
          }
        },
        line: 479
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 486,
            column: 45
          },
          end: {
            line: 486,
            column: 46
          }
        },
        loc: {
          start: {
            line: 486,
            column: 50
          },
          end: {
            line: 486,
            column: 74
          }
        },
        line: 486
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 487,
            column: 47
          },
          end: {
            line: 487,
            column: 48
          }
        },
        loc: {
          start: {
            line: 487,
            column: 52
          },
          end: {
            line: 487,
            column: 77
          }
        },
        line: 487
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 490,
            column: 4
          },
          end: {
            line: 490,
            column: 5
          }
        },
        loc: {
          start: {
            line: 490,
            column: 37
          },
          end: {
            line: 500,
            column: 5
          }
        },
        line: 490
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 507,
            column: 4
          },
          end: {
            line: 507,
            column: 5
          }
        },
        loc: {
          start: {
            line: 507,
            column: 24
          },
          end: {
            line: 532,
            column: 5
          }
        },
        line: 507
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 575,
            column: 4
          },
          end: {
            line: 575,
            column: 5
          }
        },
        loc: {
          start: {
            line: 575,
            column: 55
          },
          end: {
            line: 666,
            column: 5
          }
        },
        line: 575
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 612,
            column: 94
          },
          end: {
            line: 612,
            column: 95
          }
        },
        loc: {
          start: {
            line: 612,
            column: 100
          },
          end: {
            line: 612,
            column: 151
          }
        },
        line: 612
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 22
          },
          end: {
            line: 22,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 12,
            column: 27
          }
        }, {
          start: {
            line: 12,
            column: 31
          },
          end: {
            line: 12,
            column: 51
          }
        }, {
          start: {
            line: 12,
            column: 57
          },
          end: {
            line: 22,
            column: 2
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 12,
            column: 57
          },
          end: {
            line: 22,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 74
          },
          end: {
            line: 19,
            column: 1
          }
        }, {
          start: {
            line: 19,
            column: 6
          },
          end: {
            line: 22,
            column: 1
          }
        }],
        line: 12
      },
      "2": {
        loc: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "3": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "4": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 13
          }
        }, {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 84
          }
        }],
        line: 15
      },
      "5": {
        loc: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 34
          },
          end: {
            line: 15,
            column: 47
          }
        }, {
          start: {
            line: 15,
            column: 50
          },
          end: {
            line: 15,
            column: 84
          }
        }],
        line: 15
      },
      "6": {
        loc: {
          start: {
            line: 15,
            column: 50
          },
          end: {
            line: 15,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 50
          },
          end: {
            line: 15,
            column: 63
          }
        }, {
          start: {
            line: 15,
            column: 67
          },
          end: {
            line: 15,
            column: 84
          }
        }],
        line: 15
      },
      "7": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "8": {
        loc: {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 27,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 26
          },
          end: {
            line: 23,
            column: 30
          }
        }, {
          start: {
            line: 23,
            column: 34
          },
          end: {
            line: 23,
            column: 57
          }
        }, {
          start: {
            line: 23,
            column: 63
          },
          end: {
            line: 27,
            column: 1
          }
        }],
        line: 23
      },
      "9": {
        loc: {
          start: {
            line: 23,
            column: 63
          },
          end: {
            line: 27,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 80
          },
          end: {
            line: 25,
            column: 1
          }
        }, {
          start: {
            line: 25,
            column: 5
          },
          end: {
            line: 27,
            column: 1
          }
        }],
        line: 23
      },
      "10": {
        loc: {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 44,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 20
          },
          end: {
            line: 28,
            column: 24
          }
        }, {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 28,
            column: 45
          }
        }, {
          start: {
            line: 28,
            column: 50
          },
          end: {
            line: 44,
            column: 4
          }
        }],
        line: 28
      },
      "11": {
        loc: {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 30,
            column: 44
          }
        }, {
          start: {
            line: 30,
            column: 48
          },
          end: {
            line: 34,
            column: 9
          }
        }],
        line: 30
      },
      "12": {
        loc: {
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 32,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 32,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "13": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "14": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 15
          }
        }, {
          start: {
            line: 38,
            column: 19
          },
          end: {
            line: 38,
            column: 33
          }
        }],
        line: 38
      },
      "15": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "16": {
        loc: {
          start: {
            line: 40,
            column: 78
          },
          end: {
            line: 40,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 78
          },
          end: {
            line: 40,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "17": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 71,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 71,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "18": {
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 18
          }
        }, {
          start: {
            line: 70,
            column: 22
          },
          end: {
            line: 70,
            column: 47
          }
        }],
        line: 70
      },
      "19": {
        loc: {
          start: {
            line: 73,
            column: 19
          },
          end: {
            line: 73,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 19
          },
          end: {
            line: 73,
            column: 44
          }
        }, {
          start: {
            line: 73,
            column: 48
          },
          end: {
            line: 73,
            column: 53
          }
        }],
        line: 73
      },
      "20": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 83,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 83,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "21": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 18
          }
        }, {
          start: {
            line: 82,
            column: 22
          },
          end: {
            line: 82,
            column: 47
          }
        }],
        line: 82
      },
      "22": {
        loc: {
          start: {
            line: 87,
            column: 19
          },
          end: {
            line: 87,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 19
          },
          end: {
            line: 87,
            column: 44
          }
        }, {
          start: {
            line: 87,
            column: 48
          },
          end: {
            line: 87,
            column: 50
          }
        }],
        line: 87
      },
      "23": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 101,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 101,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "24": {
        loc: {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 100,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 100,
            column: 18
          }
        }, {
          start: {
            line: 100,
            column: 22
          },
          end: {
            line: 100,
            column: 47
          }
        }],
        line: 100
      },
      "25": {
        loc: {
          start: {
            line: 174,
            column: 28
          },
          end: {
            line: 174,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 174,
            column: 48
          },
          end: {
            line: 174,
            column: 49
          }
        }, {
          start: {
            line: 174,
            column: 52
          },
          end: {
            line: 174,
            column: 53
          }
        }],
        line: 174
      },
      "26": {
        loc: {
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "27": {
        loc: {
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 208,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 208,
            column: 21
          }
        }, {
          start: {
            line: 208,
            column: 25
          },
          end: {
            line: 208,
            column: 49
          }
        }],
        line: 208
      },
      "28": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 226,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 226,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "29": {
        loc: {
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 239,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 239,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "30": {
        loc: {
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 292,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 292,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "31": {
        loc: {
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 296,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 296,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "32": {
        loc: {
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 326,
            column: 66
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 326,
            column: 66
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "33": {
        loc: {
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 328,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 328,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "34": {
        loc: {
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 330,
            column: 66
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 330,
            column: 66
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "35": {
        loc: {
          start: {
            line: 331,
            column: 8
          },
          end: {
            line: 332,
            column: 66
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 8
          },
          end: {
            line: 332,
            column: 66
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "36": {
        loc: {
          start: {
            line: 333,
            column: 8
          },
          end: {
            line: 334,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 8
          },
          end: {
            line: 334,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "37": {
        loc: {
          start: {
            line: 335,
            column: 8
          },
          end: {
            line: 336,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 8
          },
          end: {
            line: 336,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "38": {
        loc: {
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 342
      },
      "39": {
        loc: {
          start: {
            line: 355,
            column: 31
          },
          end: {
            line: 355,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 355,
            column: 40
          },
          end: {
            line: 355,
            column: 42
          }
        }],
        line: 355
      },
      "40": {
        loc: {
          start: {
            line: 373,
            column: 32
          },
          end: {
            line: 373,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 373,
            column: 47
          },
          end: {
            line: 373,
            column: 84
          }
        }],
        line: 373
      },
      "41": {
        loc: {
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 391,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 391,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 375
      },
      "42": {
        loc: {
          start: {
            line: 385,
            column: 33
          },
          end: {
            line: 385,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 385,
            column: 34
          },
          end: {
            line: 385,
            column: 93
          }
        }, {
          start: {
            line: 385,
            column: 98
          },
          end: {
            line: 385,
            column: 117
          }
        }],
        line: 385
      },
      "43": {
        loc: {
          start: {
            line: 385,
            column: 34
          },
          end: {
            line: 385,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 385,
            column: 71
          },
          end: {
            line: 385,
            column: 77
          }
        }, {
          start: {
            line: 385,
            column: 80
          },
          end: {
            line: 385,
            column: 93
          }
        }],
        line: 385
      },
      "44": {
        loc: {
          start: {
            line: 385,
            column: 34
          },
          end: {
            line: 385,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 385,
            column: 34
          },
          end: {
            line: 385,
            column: 48
          }
        }, {
          start: {
            line: 385,
            column: 52
          },
          end: {
            line: 385,
            column: 68
          }
        }],
        line: 385
      },
      "45": {
        loc: {
          start: {
            line: 388,
            column: 25
          },
          end: {
            line: 388,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 388,
            column: 39
          },
          end: {
            line: 388,
            column: 51
          }
        }, {
          start: {
            line: 388,
            column: 54
          },
          end: {
            line: 388,
            column: 73
          }
        }],
        line: 388
      },
      "46": {
        loc: {
          start: {
            line: 389,
            column: 22
          },
          end: {
            line: 389,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 389,
            column: 23
          },
          end: {
            line: 389,
            column: 79
          }
        }, {
          start: {
            line: 389,
            column: 84
          },
          end: {
            line: 389,
            column: 100
          }
        }],
        line: 389
      },
      "47": {
        loc: {
          start: {
            line: 389,
            column: 23
          },
          end: {
            line: 389,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 389,
            column: 60
          },
          end: {
            line: 389,
            column: 66
          }
        }, {
          start: {
            line: 389,
            column: 69
          },
          end: {
            line: 389,
            column: 79
          }
        }],
        line: 389
      },
      "48": {
        loc: {
          start: {
            line: 389,
            column: 23
          },
          end: {
            line: 389,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 389,
            column: 23
          },
          end: {
            line: 389,
            column: 37
          }
        }, {
          start: {
            line: 389,
            column: 41
          },
          end: {
            line: 389,
            column: 57
          }
        }],
        line: 389
      },
      "49": {
        loc: {
          start: {
            line: 394,
            column: 21
          },
          end: {
            line: 394,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 394,
            column: 22
          },
          end: {
            line: 394,
            column: 81
          }
        }, {
          start: {
            line: 394,
            column: 86
          },
          end: {
            line: 394,
            column: 105
          }
        }],
        line: 394
      },
      "50": {
        loc: {
          start: {
            line: 394,
            column: 22
          },
          end: {
            line: 394,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 394,
            column: 59
          },
          end: {
            line: 394,
            column: 65
          }
        }, {
          start: {
            line: 394,
            column: 68
          },
          end: {
            line: 394,
            column: 81
          }
        }],
        line: 394
      },
      "51": {
        loc: {
          start: {
            line: 394,
            column: 22
          },
          end: {
            line: 394,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 394,
            column: 22
          },
          end: {
            line: 394,
            column: 36
          }
        }, {
          start: {
            line: 394,
            column: 40
          },
          end: {
            line: 394,
            column: 56
          }
        }],
        line: 394
      },
      "52": {
        loc: {
          start: {
            line: 395,
            column: 18
          },
          end: {
            line: 395,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 395,
            column: 55
          },
          end: {
            line: 395,
            column: 61
          }
        }, {
          start: {
            line: 395,
            column: 64
          },
          end: {
            line: 395,
            column: 74
          }
        }],
        line: 395
      },
      "53": {
        loc: {
          start: {
            line: 395,
            column: 18
          },
          end: {
            line: 395,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 395,
            column: 18
          },
          end: {
            line: 395,
            column: 32
          }
        }, {
          start: {
            line: 395,
            column: 36
          },
          end: {
            line: 395,
            column: 52
          }
        }],
        line: 395
      },
      "54": {
        loc: {
          start: {
            line: 396,
            column: 21
          },
          end: {
            line: 396,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 396,
            column: 83
          },
          end: {
            line: 396,
            column: 118
          }
        }, {
          start: {
            line: 396,
            column: 121
          },
          end: {
            line: 396,
            column: 130
          }
        }],
        line: 396
      },
      "55": {
        loc: {
          start: {
            line: 396,
            column: 22
          },
          end: {
            line: 396,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 396,
            column: 59
          },
          end: {
            line: 396,
            column: 65
          }
        }, {
          start: {
            line: 396,
            column: 68
          },
          end: {
            line: 396,
            column: 79
          }
        }],
        line: 396
      },
      "56": {
        loc: {
          start: {
            line: 396,
            column: 22
          },
          end: {
            line: 396,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 396,
            column: 22
          },
          end: {
            line: 396,
            column: 36
          }
        }, {
          start: {
            line: 396,
            column: 40
          },
          end: {
            line: 396,
            column: 56
          }
        }],
        line: 396
      },
      "57": {
        loc: {
          start: {
            line: 402,
            column: 44
          },
          end: {
            line: 402,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 402,
            column: 55
          },
          end: {
            line: 402,
            column: 63
          }
        }],
        line: 402
      },
      "58": {
        loc: {
          start: {
            line: 405,
            column: 8
          },
          end: {
            line: 410,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 405,
            column: 8
          },
          end: {
            line: 410,
            column: 9
          }
        }, {
          start: {
            line: 408,
            column: 13
          },
          end: {
            line: 410,
            column: 9
          }
        }],
        line: 405
      },
      "59": {
        loc: {
          start: {
            line: 405,
            column: 12
          },
          end: {
            line: 405,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 405,
            column: 12
          },
          end: {
            line: 405,
            column: 35
          }
        }, {
          start: {
            line: 405,
            column: 39
          },
          end: {
            line: 405,
            column: 58
          }
        }],
        line: 405
      },
      "60": {
        loc: {
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 452,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 452,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      },
      "61": {
        loc: {
          start: {
            line: 454,
            column: 8
          },
          end: {
            line: 456,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 454,
            column: 8
          },
          end: {
            line: 456,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 454
      },
      "62": {
        loc: {
          start: {
            line: 464,
            column: 31
          },
          end: {
            line: 464,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 464,
            column: 39
          },
          end: {
            line: 464,
            column: 42
          }
        }],
        line: 464
      },
      "63": {
        loc: {
          start: {
            line: 466,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "64": {
        loc: {
          start: {
            line: 480,
            column: 35
          },
          end: {
            line: 480,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 480,
            column: 35
          },
          end: {
            line: 480,
            column: 54
          }
        }, {
          start: {
            line: 480,
            column: 58
          },
          end: {
            line: 480,
            column: 59
          }
        }],
        line: 480
      },
      "65": {
        loc: {
          start: {
            line: 497,
            column: 8
          },
          end: {
            line: 499,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 497,
            column: 8
          },
          end: {
            line: 499,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 497
      },
      "66": {
        loc: {
          start: {
            line: 575,
            column: 41
          },
          end: {
            line: 575,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 575,
            column: 51
          },
          end: {
            line: 575,
            column: 53
          }
        }],
        line: 575
      },
      "67": {
        loc: {
          start: {
            line: 577,
            column: 20
          },
          end: {
            line: 577,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 577,
            column: 34
          },
          end: {
            line: 577,
            column: 38
          }
        }],
        line: 577
      },
      "68": {
        loc: {
          start: {
            line: 577,
            column: 40
          },
          end: {
            line: 577,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 577,
            column: 52
          },
          end: {
            line: 577,
            column: 57
          }
        }],
        line: 577
      },
      "69": {
        loc: {
          start: {
            line: 577,
            column: 74
          },
          end: {
            line: 577,
            column: 123
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 577,
            column: 91
          },
          end: {
            line: 577,
            column: 123
          }
        }],
        line: 577
      },
      "70": {
        loc: {
          start: {
            line: 579,
            column: 12
          },
          end: {
            line: 588,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 579,
            column: 12
          },
          end: {
            line: 588,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 579
      },
      "71": {
        loc: {
          start: {
            line: 590,
            column: 29
          },
          end: {
            line: 590,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 590,
            column: 29
          },
          end: {
            line: 590,
            column: 67
          }
        }, {
          start: {
            line: 590,
            column: 71
          },
          end: {
            line: 590,
            column: 103
          }
        }, {
          start: {
            line: 590,
            column: 107
          },
          end: {
            line: 590,
            column: 116
          }
        }],
        line: 590
      },
      "72": {
        loc: {
          start: {
            line: 592,
            column: 12
          },
          end: {
            line: 606,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 592,
            column: 12
          },
          end: {
            line: 606,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 592
      },
      "73": {
        loc: {
          start: {
            line: 609,
            column: 12
          },
          end: {
            line: 637,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 609,
            column: 12
          },
          end: {
            line: 637,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 609
      },
      "74": {
        loc: {
          start: {
            line: 615,
            column: 20
          },
          end: {
            line: 624,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 615,
            column: 20
          },
          end: {
            line: 624,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 615
      },
      "75": {
        loc: {
          start: {
            line: 615,
            column: 24
          },
          end: {
            line: 615,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 615,
            column: 24
          },
          end: {
            line: 615,
            column: 33
          }
        }, {
          start: {
            line: 615,
            column: 37
          },
          end: {
            line: 615,
            column: 46
          }
        }],
        line: 615
      },
      "76": {
        loc: {
          start: {
            line: 639,
            column: 12
          },
          end: {
            line: 654,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 639,
            column: 12
          },
          end: {
            line: 654,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 639
      },
      "77": {
        loc: {
          start: {
            line: 639,
            column: 16
          },
          end: {
            line: 639,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 639,
            column: 16
          },
          end: {
            line: 639,
            column: 29
          }
        }, {
          start: {
            line: 639,
            column: 33
          },
          end: {
            line: 639,
            column: 57
          }
        }],
        line: 639
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0],
      "40": [0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0],
      "67": [0],
      "68": [0],
      "69": [0],
      "70": [0, 0],
      "71": [0, 0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/services/security/security-hardening.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/services/security/security-hardening.ts"],
      sourcesContent: ["/**\n * COMPREHENSIVE SECURITY HARDENING SYSTEM\n * \n * Option C - Security Hardening Implementation\n * Addresses all critical security vulnerabilities identified in the platform\n * \n * Created: 2025-01-14\n * Last Modified: 2025-06-12\n * Last Modified Summary: Complete security hardening for production deployment - Option C completed\n */\n\nimport { NextRequest, NextResponse } from 'next/server'\nimport { logger } from '@/utils/logger'\nimport { z } from 'zod'\n\n// ==================== INPUT SANITIZATION SYSTEM ====================\n\n/**\n * XSS Prevention - HTML Entity Encoding and Content Sanitization\n * \n * Provides comprehensive protection against Cross-Site Scripting (XSS) attacks\n * by sanitizing user input and encoding dangerous characters.\n * \n * @example\n * ```typescript\n * const safeInput = XSSPrevention.sanitizeHTML('<script>alert(\"xss\")</script>');\n * // Returns: '&lt;script&gt;alert(&quot;xss&quot;)&lt;/script&gt;'\n * ```\n */\nexport class XSSPrevention {\n  private static readonly HTML_ENTITIES: Record<string, string> = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  }\n\n  /**\n   * Sanitize HTML content by encoding dangerous characters\n   * @param input - Raw HTML content to sanitize\n   * @returns Sanitized string safe for HTML display\n   */\n  static sanitizeHTML(input: string): string {\n    if (!input || typeof input !== 'string') return ''\n    \n    return input.replace(/[&<>\"'`=\\/]/g, (match) => {\n      return this.HTML_ENTITIES[match] || match\n    })\n  }\n\n  /**\n   * Sanitize input for use in HTML attributes with aggressive filtering\n   * @param input - Raw input to sanitize for HTML attributes\n   * @returns Sanitized string safe for HTML attributes\n   */\n  static sanitizeForAttribute(input: string): string {\n    if (!input || typeof input !== 'string') return ''\n    \n    // More aggressive sanitization for HTML attributes\n    return input\n      .replace(/[&<>\"'`=\\/\\(\\)\\[\\]{}]/g, (match) => {\n        return this.HTML_ENTITIES[match] || ''\n      })\n      .replace(/javascript:/gi, '')\n      .replace(/vbscript:/gi, '')\n      .replace(/data:/gi, '')\n      .replace(/on\\w+=/gi, '')\n  }\n\n  /**\n   * Sanitize plain text content with length limits\n   * @param input - Raw text to sanitize\n   * @returns Sanitized text safe for display (max 1000 chars)\n   */\n  static sanitizeText(input: string): string {\n    if (!input || typeof input !== 'string') return ''\n    \n    return input\n      .replace(/[<>]/g, (match) => this.HTML_ENTITIES[match])\n      .trim()\n      .substring(0, 1000) // Limit length\n  }\n}\n\n/**\n * Input Validation Schemas with Security Focus\n */\nexport const SecuritySchemas = {\n  // Email with strict validation\n  email: z.string()\n    .email('Invalid email format')\n    .min(5, 'Email too short')\n    .max(254, 'Email too long')\n    .regex(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/, 'Invalid email format')\n    .transform(email => email.toLowerCase().trim()),\n\n  // Bitcoin address with enhanced validation\n  bitcoinAddress: z.string()\n    .min(26, 'Bitcoin address too short')\n    .max(62, 'Bitcoin address too long')\n    .regex(/^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$|^bc1[a-z0-9]{39,59}$/, 'Invalid Bitcoin address format')\n    .refine(address => {\n      // Additional validation for known attack patterns\n      const suspiciousPatterns = [\n        /script/gi,\n        /javascript/gi,\n        /vbscript/gi,\n        /<|>/gi,\n        /\\x00/gi // Null bytes\n      ]\n      return !suspiciousPatterns.some(pattern => pattern.test(address))\n    }, 'Bitcoin address contains invalid characters'),\n\n  // Username with anti-impersonation\n  username: z.string()\n    .min(3, 'Username too short')\n    .max(30, 'Username too long')\n    .regex(/^[a-zA-Z0-9_-]+$/, 'Username can only contain letters, numbers, underscores, and hyphens')\n    .refine(username => {\n      // Celebrity/brand impersonation prevention\n      const reservedNames = [\n        'admin', 'administrator', 'root', 'system', 'support', 'help',\n        'bitcoin', 'satoshi', 'nakamoto', 'elon', 'musk', 'tesla',\n        'apple', 'google', 'microsoft', 'facebook', 'twitter', 'meta',\n        'orangecat', 'official', 'verified', 'staff', 'team'\n      ]\n      return !reservedNames.includes(username.toLowerCase())\n    }, 'Username is reserved or may cause impersonation')\n    .transform(username => username.toLowerCase().trim()),\n\n  // Bio/description with content filtering\n  bio: z.string()\n    .max(500, 'Bio too long')\n    .refine(bio => {\n      // Content filtering for spam/malicious content\n      const suspiciousPatterns = [\n        /(?:https?:\\/\\/)?(?:www\\.)?[a-zA-Z0-9-]+\\.[a-zA-Z]{2,}/gi, // URLs\n        /\\b(?:buy|sell|invest|profit|money|crypto|trading|forex)\\b/gi, // Financial spam\n        /<script|javascript:|vbscript:|data:/gi, // Script injection\n        /\\b(?:telegram|whatsapp|discord)\\b.*@/gi // Contact spam\n      ]\n      \n      const suspiciousCount = suspiciousPatterns.reduce((count, pattern) => {\n        return count + (pattern.test(bio) ? 1 : 0)\n      }, 0)\n      \n      return suspiciousCount < 2 // Allow some flexibility but flag multiple patterns\n    }, 'Bio contains suspicious content')\n    .transform(bio => XSSPrevention.sanitizeText(bio))\n}\n\n// ==================== RATE LIMITING SYSTEM ====================\n\ninterface RateLimitConfig {\n  windowMs: number\n  maxRequests: number\n  skipSuccessfulRequests?: boolean\n  skipFailedRequests?: boolean\n}\n\n/**\n * Rate Limiting System for API Protection\n * \n * Implements sliding window rate limiting to prevent abuse and DoS attacks.\n * Supports different rate limits for different operation types.\n * \n * @example\n * ```typescript\n * const result = await RateLimiter.checkLimit('user@example.com', 'auth');\n * if (!result.allowed) {\n *   throw new Error(`Rate limit exceeded. Try again in ${result.resetTime - Date.now()}ms`);\n * }\n * ```\n */\nexport class RateLimiter {\n  private static requests = new Map<string, { count: number; resetTime: number }>()\n\n  static readonly LIMITS: Record<string, RateLimitConfig> = {\n    // API rate limits\n    api: { windowMs: 15 * 60 * 1000, maxRequests: 100 }, // 100 requests per 15 minutes\n    auth: { windowMs: 15 * 60 * 1000, maxRequests: 5 }, // 5 auth attempts per 15 minutes\n    upload: { windowMs: 60 * 1000, maxRequests: 5 }, // 5 uploads per minute\n    search: { windowMs: 60 * 1000, maxRequests: 30 }, // 30 searches per minute\n    \n    // Strict limits for sensitive operations\n    passwordReset: { windowMs: 60 * 60 * 1000, maxRequests: 3 }, // 3 per hour\n    profileUpdate: { windowMs: 5 * 60 * 1000, maxRequests: 10 }, // 10 per 5 minutes\n  }\n\n  /**\n   * Check if request is within rate limits\n   * @param identifier - Unique identifier (IP, user ID, email)\n   * @param limitType - Type of rate limit to apply\n   * @returns Rate limit status with remaining requests and reset time\n   */\n  static async checkLimit(\n    identifier: string, \n    limitType: keyof typeof RateLimiter.LIMITS\n  ): Promise<{ allowed: boolean; remaining: number; resetTime: number }> {\n    const config = this.LIMITS[limitType]\n    const now = Date.now()\n    const key = `${limitType}:${identifier}`\n    \n    // Clean up expired entries\n    this.cleanup()\n    \n    const existing = this.requests.get(key)\n    \n    if (!existing || now > existing.resetTime) {\n      // New window\n      this.requests.set(key, {\n        count: 1,\n        resetTime: now + config.windowMs\n      })\n      return {\n        allowed: true,\n        remaining: config.maxRequests - 1,\n        resetTime: now + config.windowMs\n      }\n    }\n    \n    if (existing.count >= config.maxRequests) {\n      return {\n        allowed: false,\n        remaining: 0,\n        resetTime: existing.resetTime\n      }\n    }\n    \n    existing.count++\n    return {\n      allowed: true,\n      remaining: config.maxRequests - existing.count,\n      resetTime: existing.resetTime\n    }\n  }\n\n  private static cleanup(): void {\n    const now = Date.now()\n    for (const [key, value] of this.requests.entries()) {\n      if (now > value.resetTime) {\n        this.requests.delete(key)\n      }\n    }\n  }\n\n  static getStats(): { totalKeys: number; activeWindows: number } {\n    this.cleanup()\n    return {\n      totalKeys: this.requests.size,\n      activeWindows: this.requests.size\n    }\n  }\n}\n\n// ==================== AUTHENTICATION SECURITY ====================\n\n/**\n * Authentication Security System\n * \n * Provides account lockout protection, password strength validation,\n * and secure token generation for authentication operations.\n * \n * @example\n * ```typescript\n * // Check if account is locked\n * if (AuthenticationSecurity.isAccountLocked('user@example.com')) {\n *   throw new Error('Account temporarily locked due to failed attempts');\n * }\n * \n * // Validate password strength\n * const validation = AuthenticationSecurity.validatePasswordStrength('password123');\n * if (!validation.valid) {\n *   console.log('Password errors:', validation.errors);\n * }\n * ```\n */\nexport class AuthenticationSecurity {\n  private static readonly LOCKOUT_DURATION = 15 * 60 * 1000 // 15 minutes\n  private static readonly MAX_ATTEMPTS = 5\n  private static lockedAccounts = new Map<string, number>()\n\n  /**\n   * Check if account is locked due to failed authentication attempts\n   * @param identifier - Account identifier (email, username)\n   * @returns True if account is currently locked\n   */\n  static isAccountLocked(identifier: string): boolean {\n    const lockTime = this.lockedAccounts.get(identifier)\n    if (!lockTime) return false\n    \n    if (Date.now() > lockTime) {\n      this.lockedAccounts.delete(identifier)\n      return false\n    }\n    \n    return true\n  }\n\n  /**\n   * Record failed authentication attempt and lock account if needed\n   * @param identifier - Account identifier that failed authentication\n   */\n  static recordFailedAttempt(identifier: string): void {\n    const lockUntil = Date.now() + this.LOCKOUT_DURATION\n    this.lockedAccounts.set(identifier, lockUntil)\n    \n    logger.warn('Authentication failure recorded', {\n      identifier: identifier.substring(0, 3) + '***', // Partial identifier for privacy\n      lockUntil: new Date(lockUntil).toISOString()\n    }, 'Security')\n  }\n\n  /**\n   * Clear failed attempts record on successful authentication\n   * @param identifier - Account identifier that successfully authenticated\n   */\n  static clearFailedAttempts(identifier: string): void {\n    this.lockedAccounts.delete(identifier)\n  }\n\n  /**\n   * Validate password strength against security requirements\n   * @param password - Password to validate\n   * @returns Validation result with detailed error messages\n   */\n  static validatePasswordStrength(password: string): { valid: boolean; errors: string[] } {\n    const errors: string[] = []\n    \n    if (password.length < 8) errors.push('Password must be at least 8 characters')\n    if (password.length > 128) errors.push('Password too long')\n    if (!/[A-Z]/.test(password)) errors.push('Password must contain uppercase letter')\n    if (!/[a-z]/.test(password)) errors.push('Password must contain lowercase letter')\n    if (!/[0-9]/.test(password)) errors.push('Password must contain number')\n    if (!/[^A-Za-z0-9]/.test(password)) errors.push('Password must contain special character')\n    \n    // Check for common weak passwords\n    const commonPasswords = [\n      'password', '123456', 'qwerty', 'abc123', 'password123',\n      'admin', 'letmein', 'welcome', 'monkey', 'dragon'\n    ]\n    \n    if (commonPasswords.includes(password.toLowerCase())) {\n      errors.push('Password is too common')\n    }\n    \n    return {\n      valid: errors.length === 0,\n      errors\n    }\n  }\n\n  /**\n   * Generate cryptographically secure random token\n   * @param length - Token length (default: 32 characters)\n   * @returns Secure random string suitable for tokens\n   */\n  static generateSecureToken(length: number = 32): string {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n    let result = ''\n    \n    for (let i = 0; i < length; i++) {\n      result += chars.charAt(Math.floor(Math.random() * chars.length))\n    }\n    \n    return result\n  }\n}\n\n// ==================== ERROR HANDLING SECURITY ====================\n\nexport class SecureErrorHandler {\n  /**\n   * Sanitize error messages to prevent information disclosure\n   */\n  static sanitizeError(error: any, isProduction: boolean = process.env.NODE_ENV === 'production'): {\n    message: string\n    code?: string\n    details?: any\n  } {\n    // In production, never expose internal errors\n    if (isProduction) {\n      const safeErrors = [\n        'Invalid credentials',\n        'Access denied',\n        'Resource not found',\n        'Invalid input',\n        'Rate limit exceeded',\n        'File too large',\n        'Invalid file type'\n      ]\n      \n      const errorMessage = error?.message || 'An error occurred'\n      const isSafeError = safeErrors.some(safe => errorMessage.includes(safe))\n      \n      return {\n        message: isSafeError ? errorMessage : 'An error occurred',\n        code: error?.code || 'INTERNAL_ERROR'\n      }\n    }\n    \n    // In development, provide more details but still sanitize\n    return {\n      message: error?.message || 'An error occurred',\n      code: error?.code,\n      details: error?.stack ? error.stack.split('\\n').slice(0, 3) : undefined\n    }\n  }\n\n  /**\n   * Log security events\n   */\n  static logSecurityEvent(\n    event: string,\n    details: Record<string, any>,\n    severity: 'low' | 'medium' | 'high' | 'critical' = 'medium'\n  ): void {\n    const logData = {\n      event,\n      severity,\n      timestamp: new Date().toISOString(),\n      ...details\n    }\n    \n    if (severity === 'critical' || severity === 'high') {\n      logger.error(`Security Event: ${event}`, logData, 'Security')\n    } else {\n      logger.warn(`Security Event: ${event}`, logData, 'Security')\n    }\n  }\n}\n\n// ==================== SECURITY MONITORING ====================\n\ninterface SecurityEvent {\n  id: string\n  type: string\n  severity: 'low' | 'medium' | 'high' | 'critical'\n  timestamp: number\n  details: Record<string, any>\n}\n\n/**\n * Security Event Monitoring System\n * \n * Tracks and analyzes security events for threat detection and incident response.\n * Maintains event history and provides alerting for critical security events.\n * \n * @example\n * ```typescript\n * // Record security event\n * SecurityMonitor.recordEvent('suspicious_login', 'high', {\n *   ip: '192.168.1.1',\n *   userAgent: 'suspicious-bot'\n * });\n * \n * // Get security statistics\n * const stats = SecurityMonitor.getStats();\n * console.log(`Critical events: ${stats.criticalEvents}`);\n * ```\n */\nexport class SecurityMonitor {\n  private static events: SecurityEvent[] = []\n  private static readonly MAX_EVENTS = 1000\n\n  /**\n   * Record a security event for monitoring and analysis\n   * @param type - Event type identifier\n   * @param severity - Event severity level\n   * @param details - Additional event context and metadata\n   */\n  static recordEvent(\n    type: string,\n    severity: SecurityEvent['severity'],\n    details: Record<string, any>\n  ): void {\n    const event: SecurityEvent = {\n      id: AuthenticationSecurity.generateSecureToken(16),\n      type,\n      severity,\n      timestamp: Date.now(),\n      details\n    }\n    \n    this.events.push(event)\n    \n    // Keep only recent events\n    if (this.events.length > this.MAX_EVENTS) {\n      this.events = this.events.slice(-this.MAX_EVENTS)\n    }\n    \n    // Alert on critical events\n    if (severity === 'critical') {\n      this.alertCriticalEvent(event)\n    }\n  }\n\n  /**\n   * Retrieve security events with filtering and limiting\n   * @param severity - Optional severity filter\n   * @param limit - Maximum number of events to return (default: 100)\n   * @returns Array of security events sorted by timestamp (newest first)\n   */\n  static getEvents(\n    severity?: SecurityEvent['severity'],\n    limit: number = 100\n  ): SecurityEvent[] {\n    let filtered = this.events\n    \n    if (severity) {\n      filtered = this.events.filter(e => e.severity === severity)\n    }\n    \n    return filtered\n      .sort((a, b) => b.timestamp - a.timestamp)\n      .slice(0, limit)\n  }\n\n  /**\n   * Get security statistics\n   */\n  static getStats(): {\n    totalEvents: number\n    eventsBySeverity: Record<string, number>\n    recentEvents: number\n    criticalEvents: number\n  } {\n    const now = Date.now()\n    const oneHourAgo = now - 60 * 60 * 1000\n    \n    const eventsBySeverity = this.events.reduce((acc, event) => {\n      acc[event.severity] = (acc[event.severity] || 0) + 1\n      return acc\n    }, {} as Record<string, number>)\n    \n    return {\n      totalEvents: this.events.length,\n      eventsBySeverity,\n      recentEvents: this.events.filter(e => e.timestamp > oneHourAgo).length,\n      criticalEvents: this.events.filter(e => e.severity === 'critical').length\n    }\n  }\n\n  private static alertCriticalEvent(event: SecurityEvent): void {\n    logger.error('CRITICAL SECURITY EVENT', {\n      eventId: event.id,\n      type: event.type,\n      details: event.details\n    }, 'Security')\n    \n    // In production, this would trigger alerts to security team\n    if (process.env.NODE_ENV === 'production') {\n      // TODO: Integrate with alerting system (email, Slack, PagerDuty, etc.)\n    }\n  }\n}\n\n// ==================== CONTENT SECURITY POLICY ====================\n\nexport class ContentSecurityPolicy {\n  static getHeaders(): Record<string, string> {\n    const nonce = AuthenticationSecurity.generateSecureToken(16)\n    \n    return {\n      'Content-Security-Policy': [\n        \"default-src 'self'\",\n        \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://vercel.live https://va.vercel-scripts.com\",\n        \"style-src 'self' 'unsafe-inline' https://fonts.googleapis.com\",\n        \"font-src 'self' https://fonts.gstatic.com\",\n        \"img-src 'self' data: https: blob:\",\n        \"connect-src 'self' https://*.supabase.co wss://*.supabase.co https://vercel.live\",\n        \"frame-src 'self' https://vercel.live\",\n        \"object-src 'none'\",\n        \"base-uri 'self'\",\n        \"form-action 'self'\",\n        \"frame-ancestors 'none'\",\n        \"upgrade-insecure-requests\"\n      ].join('; '),\n      \n      'X-Content-Type-Options': 'nosniff',\n      'X-Frame-Options': 'DENY',\n      'X-XSS-Protection': '1; mode=block',\n      'Referrer-Policy': 'strict-origin-when-cross-origin',\n      'Permissions-Policy': 'camera=(), microphone=(), geolocation=()',\n      \n      // HSTS (HTTP Strict Transport Security)\n      'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload'\n    }\n  }\n}\n\n// ==================== MAIN SECURITY MIDDLEWARE ====================\n\n/**\n * Comprehensive Security Hardening Middleware\n * \n * Provides complete security protection for API routes including:\n * - Method validation\n * - Rate limiting\n * - Authentication verification\n * - Input validation\n * - Security event monitoring\n * \n * @example\n * ```typescript\n * // Secure an API route\n * const security = await SecurityHardening.secureAPIRoute(request, {\n *   requireAuth: true,\n *   rateLimit: 'api',\n *   allowedMethods: ['POST'],\n *   validateInput: userUpdateSchema\n * });\n * \n * if (!security.success) {\n *   return security.response; // Security check failed\n * }\n * \n * // Security passed, proceed with API logic\n * const user = security.user;\n * ```\n */\nexport class SecurityHardening {\n  /**\n   * Apply comprehensive security protection to API routes\n   * @param request - Next.js request object\n   * @param options - Security configuration options\n   * @param options.requireAuth - Whether authentication is required\n   * @param options.rateLimit - Rate limit type to apply\n   * @param options.validateInput - Zod schema for input validation\n   * @param options.allowedMethods - HTTP methods allowed for this route\n   * @returns Security check result with user data or error response\n   */\n  static async secureAPIRoute(\n    request: NextRequest,\n    options: {\n      requireAuth?: boolean\n      rateLimit?: keyof typeof RateLimiter.LIMITS\n      validateInput?: z.ZodSchema\n      allowedMethods?: string[]\n    } = {}\n  ): Promise<{ success: true; user?: any } | { success: false; response: NextResponse }> {\n    try {\n      const {\n        requireAuth = true,\n        rateLimit = 'api',\n        validateInput,\n        allowedMethods = ['GET', 'POST', 'PUT', 'DELETE']\n      } = options\n\n      // 1. Method validation\n      if (!allowedMethods.includes(request.method)) {\n        SecurityMonitor.recordEvent('invalid_method', 'medium', {\n          method: request.method,\n          url: request.url\n        })\n        \n        return {\n          success: false,\n          response: NextResponse.json(\n            { error: 'Method not allowed' },\n            { status: 405 }\n          )\n        }\n      }\n\n      // 2. Rate limiting\n      const clientIP = request.headers.get('x-forwarded-for') || request.headers.get('x-real-ip') || 'unknown'\n      const rateLimitResult = await RateLimiter.checkLimit(clientIP, rateLimit)\n      \n      if (!rateLimitResult.allowed) {\n        SecurityMonitor.recordEvent('rate_limit_exceeded', 'high', {\n          ip: clientIP,\n          limitType: rateLimit\n        })\n        \n        return {\n          success: false,\n          response: NextResponse.json(\n            { error: 'Rate limit exceeded' },\n            { \n              status: 429,\n              headers: {\n                'Retry-After': Math.ceil((rateLimitResult.resetTime - Date.now()) / 1000).toString()\n              }\n            }\n          )\n        }\n      }\n\n      // 3. Authentication check\n      let user = null\n      if (requireAuth) {\n        try {\n          // Only import and use createServerClient when actually needed\n          const { createServerClient: createClient } = await import('@/services/supabase/server')\n          const supabase = await createClient()\n          const { data: { user: authUser }, error: authError } = await supabase.auth.getUser()\n        \n          if (!authUser || authError) {\n            SecurityMonitor.recordEvent('unauthorized_access', 'medium', {\n              ip: clientIP,\n              url: request.url\n            })\n            \n            return {\n              success: false,\n              response: NextResponse.json(\n                { error: 'Authentication required' },\n                { status: 401 }\n              )\n            }\n          }\n          \n          user = authUser\n        } catch (authError) {\n          SecurityMonitor.recordEvent('auth_error', 'high', {\n            ip: clientIP,\n            error: (authError as Error).message\n          })\n          \n          return {\n            success: false,\n            response: NextResponse.json(\n              { error: 'Authentication failed' },\n              { status: 500 }\n            )\n          }\n        }\n      }\n\n      // 4. Input validation\n      if (validateInput && request.method !== 'GET') {\n        try {\n          const body = await request.json()\n          validateInput.parse(body)\n        } catch (validationError) {\n          SecurityMonitor.recordEvent('input_validation_failed', 'medium', {\n            ip: clientIP,\n            error: (validationError as Error).message\n          })\n          \n          return {\n            success: false,\n            response: NextResponse.json(\n              { error: 'Invalid input data' },\n              { status: 400 }\n            )\n          }\n        }\n      }\n\n      return { success: true, user }\n      \n    } catch (error) {\n      SecurityMonitor.recordEvent('security_middleware_error', 'critical', {\n        error: (error as Error).message\n      })\n      \n      return {\n        success: false,\n        response: NextResponse.json(\n          { error: 'Security validation failed' },\n          { status: 500 }\n        )\n      }\n    }\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0f53c1cd2f5d472d80a06b42e64d4437215be7f1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_222jlybbcc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_222jlybbcc();
var __createBinding =
/* istanbul ignore next */
(cov_222jlybbcc().s[0]++,
/* istanbul ignore next */
(cov_222jlybbcc().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_222jlybbcc().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_222jlybbcc().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_222jlybbcc().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_222jlybbcc().f[0]++;
  cov_222jlybbcc().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_222jlybbcc().b[2][0]++;
    cov_222jlybbcc().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_222jlybbcc().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_222jlybbcc().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_222jlybbcc().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_222jlybbcc().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_222jlybbcc().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_222jlybbcc().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_222jlybbcc().b[5][1]++,
  /* istanbul ignore next */
  (cov_222jlybbcc().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_222jlybbcc().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_222jlybbcc().b[3][0]++;
    cov_222jlybbcc().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_222jlybbcc().f[1]++;
        cov_222jlybbcc().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_222jlybbcc().b[3][1]++;
  }
  cov_222jlybbcc().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_222jlybbcc().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_222jlybbcc().f[2]++;
  cov_222jlybbcc().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_222jlybbcc().b[7][0]++;
    cov_222jlybbcc().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_222jlybbcc().b[7][1]++;
  }
  cov_222jlybbcc().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_222jlybbcc().s[11]++,
/* istanbul ignore next */
(cov_222jlybbcc().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_222jlybbcc().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_222jlybbcc().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_222jlybbcc().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_222jlybbcc().f[3]++;
  cov_222jlybbcc().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_222jlybbcc().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_222jlybbcc().f[4]++;
  cov_222jlybbcc().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_222jlybbcc().s[14]++,
/* istanbul ignore next */
(cov_222jlybbcc().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_222jlybbcc().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_222jlybbcc().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_222jlybbcc().f[5]++;
  cov_222jlybbcc().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[6]++;
    cov_222jlybbcc().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_222jlybbcc().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_222jlybbcc().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_222jlybbcc().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_222jlybbcc().s[17]++, []);
      /* istanbul ignore next */
      cov_222jlybbcc().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_222jlybbcc().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_222jlybbcc().b[12][0]++;
          cov_222jlybbcc().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_222jlybbcc().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_222jlybbcc().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_222jlybbcc().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_222jlybbcc().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[8]++;
    cov_222jlybbcc().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_222jlybbcc().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_222jlybbcc().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[13][0]++;
      cov_222jlybbcc().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[26]++, {});
    /* istanbul ignore next */
    cov_222jlybbcc().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[15][0]++;
      cov_222jlybbcc().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_222jlybbcc().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_222jlybbcc().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_222jlybbcc().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_222jlybbcc().b[16][0]++;
          cov_222jlybbcc().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_222jlybbcc().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[15][1]++;
    }
    cov_222jlybbcc().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_222jlybbcc().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_222jlybbcc().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_222jlybbcc().s[36]++;
exports.SecurityHardening = exports.ContentSecurityPolicy = exports.SecurityMonitor = exports.SecureErrorHandler = exports.AuthenticationSecurity = exports.RateLimiter = exports.SecuritySchemas = exports.XSSPrevention = void 0;
const server_1 =
/* istanbul ignore next */
(cov_222jlybbcc().s[37]++, require("next/server"));
const logger_1 =
/* istanbul ignore next */
(cov_222jlybbcc().s[38]++, require("@/utils/logger"));
const zod_1 =
/* istanbul ignore next */
(cov_222jlybbcc().s[39]++, require("zod"));
// ==================== INPUT SANITIZATION SYSTEM ====================
/**
 * XSS Prevention - HTML Entity Encoding and Content Sanitization
 *
 * Provides comprehensive protection against Cross-Site Scripting (XSS) attacks
 * by sanitizing user input and encoding dangerous characters.
 *
 * @example
 * ```typescript
 * const safeInput = XSSPrevention.sanitizeHTML('<script>alert("xss")</script>');
 * // Returns: '&lt;script&gt;alert(&quot;xss&quot;)&lt;/script&gt;'
 * ```
 */
class XSSPrevention {
  /**
   * Sanitize HTML content by encoding dangerous characters
   * @param input - Raw HTML content to sanitize
   * @returns Sanitized string safe for HTML display
   */
  static sanitizeHTML(input) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[9]++;
    cov_222jlybbcc().s[40]++;
    if (
    /* istanbul ignore next */
    (cov_222jlybbcc().b[18][0]++, !input) ||
    /* istanbul ignore next */
    (cov_222jlybbcc().b[18][1]++, typeof input !== 'string')) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[17][0]++;
      cov_222jlybbcc().s[41]++;
      return '';
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[17][1]++;
    }
    cov_222jlybbcc().s[42]++;
    return input.replace(/[&<>"'`=\/]/g, match => {
      /* istanbul ignore next */
      cov_222jlybbcc().f[10]++;
      cov_222jlybbcc().s[43]++;
      return /* istanbul ignore next */(cov_222jlybbcc().b[19][0]++, this.HTML_ENTITIES[match]) ||
      /* istanbul ignore next */
      (cov_222jlybbcc().b[19][1]++, match);
    });
  }
  /**
   * Sanitize input for use in HTML attributes with aggressive filtering
   * @param input - Raw input to sanitize for HTML attributes
   * @returns Sanitized string safe for HTML attributes
   */
  static sanitizeForAttribute(input) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[11]++;
    cov_222jlybbcc().s[44]++;
    if (
    /* istanbul ignore next */
    (cov_222jlybbcc().b[21][0]++, !input) ||
    /* istanbul ignore next */
    (cov_222jlybbcc().b[21][1]++, typeof input !== 'string')) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[20][0]++;
      cov_222jlybbcc().s[45]++;
      return '';
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[20][1]++;
    }
    // More aggressive sanitization for HTML attributes
    cov_222jlybbcc().s[46]++;
    return input.replace(/[&<>"'`=\/\(\)\[\]{}]/g, match => {
      /* istanbul ignore next */
      cov_222jlybbcc().f[12]++;
      cov_222jlybbcc().s[47]++;
      return /* istanbul ignore next */(cov_222jlybbcc().b[22][0]++, this.HTML_ENTITIES[match]) ||
      /* istanbul ignore next */
      (cov_222jlybbcc().b[22][1]++, '');
    }).replace(/javascript:/gi, '').replace(/vbscript:/gi, '').replace(/data:/gi, '').replace(/on\w+=/gi, '');
  }
  /**
   * Sanitize plain text content with length limits
   * @param input - Raw text to sanitize
   * @returns Sanitized text safe for display (max 1000 chars)
   */
  static sanitizeText(input) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[13]++;
    cov_222jlybbcc().s[48]++;
    if (
    /* istanbul ignore next */
    (cov_222jlybbcc().b[24][0]++, !input) ||
    /* istanbul ignore next */
    (cov_222jlybbcc().b[24][1]++, typeof input !== 'string')) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[23][0]++;
      cov_222jlybbcc().s[49]++;
      return '';
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[23][1]++;
    }
    cov_222jlybbcc().s[50]++;
    return input.replace(/[<>]/g, match => {
      /* istanbul ignore next */
      cov_222jlybbcc().f[14]++;
      cov_222jlybbcc().s[51]++;
      return this.HTML_ENTITIES[match];
    }).trim().substring(0, 1000); // Limit length
  }
}
/* istanbul ignore next */
cov_222jlybbcc().s[52]++;
exports.XSSPrevention = XSSPrevention;
/* istanbul ignore next */
cov_222jlybbcc().s[53]++;
XSSPrevention.HTML_ENTITIES = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#x27;',
  '/': '&#x2F;',
  '`': '&#x60;',
  '=': '&#x3D;'
};
/**
 * Input Validation Schemas with Security Focus
 */
/* istanbul ignore next */
cov_222jlybbcc().s[54]++;
exports.SecuritySchemas = {
  // Email with strict validation
  email: zod_1.z.string().email('Invalid email format').min(5, 'Email too short').max(254, 'Email too long').regex(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/, 'Invalid email format').transform(email => {
    /* istanbul ignore next */
    cov_222jlybbcc().f[15]++;
    cov_222jlybbcc().s[55]++;
    return email.toLowerCase().trim();
  }),
  // Bitcoin address with enhanced validation
  bitcoinAddress: zod_1.z.string().min(26, 'Bitcoin address too short').max(62, 'Bitcoin address too long').regex(/^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$|^bc1[a-z0-9]{39,59}$/, 'Invalid Bitcoin address format').refine(address => {
    /* istanbul ignore next */
    cov_222jlybbcc().f[16]++;
    // Additional validation for known attack patterns
    const suspiciousPatterns =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[56]++, [/script/gi, /javascript/gi, /vbscript/gi, /<|>/gi, /\x00/gi // Null bytes
    ]);
    /* istanbul ignore next */
    cov_222jlybbcc().s[57]++;
    return !suspiciousPatterns.some(pattern => {
      /* istanbul ignore next */
      cov_222jlybbcc().f[17]++;
      cov_222jlybbcc().s[58]++;
      return pattern.test(address);
    });
  }, 'Bitcoin address contains invalid characters'),
  // Username with anti-impersonation
  username: zod_1.z.string().min(3, 'Username too short').max(30, 'Username too long').regex(/^[a-zA-Z0-9_-]+$/, 'Username can only contain letters, numbers, underscores, and hyphens').refine(username => {
    /* istanbul ignore next */
    cov_222jlybbcc().f[18]++;
    // Celebrity/brand impersonation prevention
    const reservedNames =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[59]++, ['admin', 'administrator', 'root', 'system', 'support', 'help', 'bitcoin', 'satoshi', 'nakamoto', 'elon', 'musk', 'tesla', 'apple', 'google', 'microsoft', 'facebook', 'twitter', 'meta', 'orangecat', 'official', 'verified', 'staff', 'team']);
    /* istanbul ignore next */
    cov_222jlybbcc().s[60]++;
    return !reservedNames.includes(username.toLowerCase());
  }, 'Username is reserved or may cause impersonation').transform(username => {
    /* istanbul ignore next */
    cov_222jlybbcc().f[19]++;
    cov_222jlybbcc().s[61]++;
    return username.toLowerCase().trim();
  }),
  // Bio/description with content filtering
  bio: zod_1.z.string().max(500, 'Bio too long').refine(bio => {
    /* istanbul ignore next */
    cov_222jlybbcc().f[20]++;
    // Content filtering for spam/malicious content
    const suspiciousPatterns =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[62]++, [/(?:https?:\/\/)?(?:www\.)?[a-zA-Z0-9-]+\.[a-zA-Z]{2,}/gi,
    // URLs
    /\b(?:buy|sell|invest|profit|money|crypto|trading|forex)\b/gi,
    // Financial spam
    /<script|javascript:|vbscript:|data:/gi,
    // Script injection
    /\b(?:telegram|whatsapp|discord)\b.*@/gi // Contact spam
    ]);
    const suspiciousCount =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[63]++, suspiciousPatterns.reduce((count, pattern) => {
      /* istanbul ignore next */
      cov_222jlybbcc().f[21]++;
      cov_222jlybbcc().s[64]++;
      return count + (pattern.test(bio) ?
      /* istanbul ignore next */
      (cov_222jlybbcc().b[25][0]++, 1) :
      /* istanbul ignore next */
      (cov_222jlybbcc().b[25][1]++, 0));
    }, 0));
    /* istanbul ignore next */
    cov_222jlybbcc().s[65]++;
    return suspiciousCount < 2; // Allow some flexibility but flag multiple patterns
  }, 'Bio contains suspicious content').transform(bio => {
    /* istanbul ignore next */
    cov_222jlybbcc().f[22]++;
    cov_222jlybbcc().s[66]++;
    return XSSPrevention.sanitizeText(bio);
  })
};
/**
 * Rate Limiting System for API Protection
 *
 * Implements sliding window rate limiting to prevent abuse and DoS attacks.
 * Supports different rate limits for different operation types.
 *
 * @example
 * ```typescript
 * const result = await RateLimiter.checkLimit('user@example.com', 'auth');
 * if (!result.allowed) {
 *   throw new Error(`Rate limit exceeded. Try again in ${result.resetTime - Date.now()}ms`);
 * }
 * ```
 */
class RateLimiter {
  /**
   * Check if request is within rate limits
   * @param identifier - Unique identifier (IP, user ID, email)
   * @param limitType - Type of rate limit to apply
   * @returns Rate limit status with remaining requests and reset time
   */
  static async checkLimit(identifier, limitType) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[23]++;
    const config =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[67]++, this.LIMITS[limitType]);
    const now =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[68]++, Date.now());
    const key =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[69]++, `${limitType}:${identifier}`);
    // Clean up expired entries
    /* istanbul ignore next */
    cov_222jlybbcc().s[70]++;
    this.cleanup();
    const existing =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[71]++, this.requests.get(key));
    /* istanbul ignore next */
    cov_222jlybbcc().s[72]++;
    if (
    /* istanbul ignore next */
    (cov_222jlybbcc().b[27][0]++, !existing) ||
    /* istanbul ignore next */
    (cov_222jlybbcc().b[27][1]++, now > existing.resetTime)) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[26][0]++;
      cov_222jlybbcc().s[73]++;
      // New window
      this.requests.set(key, {
        count: 1,
        resetTime: now + config.windowMs
      });
      /* istanbul ignore next */
      cov_222jlybbcc().s[74]++;
      return {
        allowed: true,
        remaining: config.maxRequests - 1,
        resetTime: now + config.windowMs
      };
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[26][1]++;
    }
    cov_222jlybbcc().s[75]++;
    if (existing.count >= config.maxRequests) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[28][0]++;
      cov_222jlybbcc().s[76]++;
      return {
        allowed: false,
        remaining: 0,
        resetTime: existing.resetTime
      };
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[28][1]++;
    }
    cov_222jlybbcc().s[77]++;
    existing.count++;
    /* istanbul ignore next */
    cov_222jlybbcc().s[78]++;
    return {
      allowed: true,
      remaining: config.maxRequests - existing.count,
      resetTime: existing.resetTime
    };
  }
  static cleanup() {
    /* istanbul ignore next */
    cov_222jlybbcc().f[24]++;
    const now =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[79]++, Date.now());
    /* istanbul ignore next */
    cov_222jlybbcc().s[80]++;
    for (const [key, value] of this.requests.entries()) {
      /* istanbul ignore next */
      cov_222jlybbcc().s[81]++;
      if (now > value.resetTime) {
        /* istanbul ignore next */
        cov_222jlybbcc().b[29][0]++;
        cov_222jlybbcc().s[82]++;
        this.requests.delete(key);
      } else
      /* istanbul ignore next */
      {
        cov_222jlybbcc().b[29][1]++;
      }
    }
  }
  static getStats() {
    /* istanbul ignore next */
    cov_222jlybbcc().f[25]++;
    cov_222jlybbcc().s[83]++;
    this.cleanup();
    /* istanbul ignore next */
    cov_222jlybbcc().s[84]++;
    return {
      totalKeys: this.requests.size,
      activeWindows: this.requests.size
    };
  }
}
/* istanbul ignore next */
cov_222jlybbcc().s[85]++;
exports.RateLimiter = RateLimiter;
/* istanbul ignore next */
cov_222jlybbcc().s[86]++;
RateLimiter.requests = new Map();
/* istanbul ignore next */
cov_222jlybbcc().s[87]++;
RateLimiter.LIMITS = {
  // API rate limits
  api: {
    windowMs: 15 * 60 * 1000,
    maxRequests: 100
  },
  // 100 requests per 15 minutes
  auth: {
    windowMs: 15 * 60 * 1000,
    maxRequests: 5
  },
  // 5 auth attempts per 15 minutes
  upload: {
    windowMs: 60 * 1000,
    maxRequests: 5
  },
  // 5 uploads per minute
  search: {
    windowMs: 60 * 1000,
    maxRequests: 30
  },
  // 30 searches per minute
  // Strict limits for sensitive operations
  passwordReset: {
    windowMs: 60 * 60 * 1000,
    maxRequests: 3
  },
  // 3 per hour
  profileUpdate: {
    windowMs: 5 * 60 * 1000,
    maxRequests: 10
  } // 10 per 5 minutes
};
// ==================== AUTHENTICATION SECURITY ====================
/**
 * Authentication Security System
 *
 * Provides account lockout protection, password strength validation,
 * and secure token generation for authentication operations.
 *
 * @example
 * ```typescript
 * // Check if account is locked
 * if (AuthenticationSecurity.isAccountLocked('user@example.com')) {
 *   throw new Error('Account temporarily locked due to failed attempts');
 * }
 *
 * // Validate password strength
 * const validation = AuthenticationSecurity.validatePasswordStrength('password123');
 * if (!validation.valid) {
 *   console.log('Password errors:', validation.errors);
 * }
 * ```
 */
class AuthenticationSecurity {
  /**
   * Check if account is locked due to failed authentication attempts
   * @param identifier - Account identifier (email, username)
   * @returns True if account is currently locked
   */
  static isAccountLocked(identifier) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[26]++;
    const lockTime =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[88]++, this.lockedAccounts.get(identifier));
    /* istanbul ignore next */
    cov_222jlybbcc().s[89]++;
    if (!lockTime) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[30][0]++;
      cov_222jlybbcc().s[90]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[30][1]++;
    }
    cov_222jlybbcc().s[91]++;
    if (Date.now() > lockTime) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[31][0]++;
      cov_222jlybbcc().s[92]++;
      this.lockedAccounts.delete(identifier);
      /* istanbul ignore next */
      cov_222jlybbcc().s[93]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[31][1]++;
    }
    cov_222jlybbcc().s[94]++;
    return true;
  }
  /**
   * Record failed authentication attempt and lock account if needed
   * @param identifier - Account identifier that failed authentication
   */
  static recordFailedAttempt(identifier) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[27]++;
    const lockUntil =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[95]++, Date.now() + this.LOCKOUT_DURATION);
    /* istanbul ignore next */
    cov_222jlybbcc().s[96]++;
    this.lockedAccounts.set(identifier, lockUntil);
    /* istanbul ignore next */
    cov_222jlybbcc().s[97]++;
    logger_1.logger.warn('Authentication failure recorded', {
      identifier: identifier.substring(0, 3) + '***',
      // Partial identifier for privacy
      lockUntil: new Date(lockUntil).toISOString()
    }, 'Security');
  }
  /**
   * Clear failed attempts record on successful authentication
   * @param identifier - Account identifier that successfully authenticated
   */
  static clearFailedAttempts(identifier) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[28]++;
    cov_222jlybbcc().s[98]++;
    this.lockedAccounts.delete(identifier);
  }
  /**
   * Validate password strength against security requirements
   * @param password - Password to validate
   * @returns Validation result with detailed error messages
   */
  static validatePasswordStrength(password) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[29]++;
    const errors =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[99]++, []);
    /* istanbul ignore next */
    cov_222jlybbcc().s[100]++;
    if (password.length < 8) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[32][0]++;
      cov_222jlybbcc().s[101]++;
      errors.push('Password must be at least 8 characters');
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[32][1]++;
    }
    cov_222jlybbcc().s[102]++;
    if (password.length > 128) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[33][0]++;
      cov_222jlybbcc().s[103]++;
      errors.push('Password too long');
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[33][1]++;
    }
    cov_222jlybbcc().s[104]++;
    if (!/[A-Z]/.test(password)) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[34][0]++;
      cov_222jlybbcc().s[105]++;
      errors.push('Password must contain uppercase letter');
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[34][1]++;
    }
    cov_222jlybbcc().s[106]++;
    if (!/[a-z]/.test(password)) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[35][0]++;
      cov_222jlybbcc().s[107]++;
      errors.push('Password must contain lowercase letter');
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[35][1]++;
    }
    cov_222jlybbcc().s[108]++;
    if (!/[0-9]/.test(password)) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[36][0]++;
      cov_222jlybbcc().s[109]++;
      errors.push('Password must contain number');
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[36][1]++;
    }
    cov_222jlybbcc().s[110]++;
    if (!/[^A-Za-z0-9]/.test(password)) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[37][0]++;
      cov_222jlybbcc().s[111]++;
      errors.push('Password must contain special character');
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[37][1]++;
    }
    // Check for common weak passwords
    const commonPasswords =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[112]++, ['password', '123456', 'qwerty', 'abc123', 'password123', 'admin', 'letmein', 'welcome', 'monkey', 'dragon']);
    /* istanbul ignore next */
    cov_222jlybbcc().s[113]++;
    if (commonPasswords.includes(password.toLowerCase())) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[38][0]++;
      cov_222jlybbcc().s[114]++;
      errors.push('Password is too common');
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[38][1]++;
    }
    cov_222jlybbcc().s[115]++;
    return {
      valid: errors.length === 0,
      errors
    };
  }
  /**
   * Generate cryptographically secure random token
   * @param length - Token length (default: 32 characters)
   * @returns Secure random string suitable for tokens
   */
  static generateSecureToken(length =
  /* istanbul ignore next */
  (cov_222jlybbcc().b[39][0]++, 32)) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[30]++;
    const chars =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[116]++, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789');
    let result =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[117]++, '');
    /* istanbul ignore next */
    cov_222jlybbcc().s[118]++;
    for (let i =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[119]++, 0); i < length; i++) {
      /* istanbul ignore next */
      cov_222jlybbcc().s[120]++;
      result += chars.charAt(Math.floor(Math.random() * chars.length));
    }
    /* istanbul ignore next */
    cov_222jlybbcc().s[121]++;
    return result;
  }
}
/* istanbul ignore next */
cov_222jlybbcc().s[122]++;
exports.AuthenticationSecurity = AuthenticationSecurity;
/* istanbul ignore next */
cov_222jlybbcc().s[123]++;
AuthenticationSecurity.LOCKOUT_DURATION = 15 * 60 * 1000; // 15 minutes
/* istanbul ignore next */
cov_222jlybbcc().s[124]++;
AuthenticationSecurity.MAX_ATTEMPTS = 5;
/* istanbul ignore next */
cov_222jlybbcc().s[125]++;
AuthenticationSecurity.lockedAccounts = new Map();
// ==================== ERROR HANDLING SECURITY ====================
class SecureErrorHandler {
  /**
   * Sanitize error messages to prevent information disclosure
   */
  static sanitizeError(error, isProduction =
  /* istanbul ignore next */
  (cov_222jlybbcc().b[40][0]++, process.env.NODE_ENV === 'production')) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[31]++;
    cov_222jlybbcc().s[126]++;
    // In production, never expose internal errors
    if (isProduction) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[41][0]++;
      const safeErrors =
      /* istanbul ignore next */
      (cov_222jlybbcc().s[127]++, ['Invalid credentials', 'Access denied', 'Resource not found', 'Invalid input', 'Rate limit exceeded', 'File too large', 'Invalid file type']);
      const errorMessage =
      /* istanbul ignore next */
      (cov_222jlybbcc().s[128]++,
      /* istanbul ignore next */
      (cov_222jlybbcc().b[42][0]++,
      /* istanbul ignore next */
      (cov_222jlybbcc().b[44][0]++, error === null) ||
      /* istanbul ignore next */
      (cov_222jlybbcc().b[44][1]++, error === void 0) ?
      /* istanbul ignore next */
      (cov_222jlybbcc().b[43][0]++, void 0) :
      /* istanbul ignore next */
      (cov_222jlybbcc().b[43][1]++, error.message)) ||
      /* istanbul ignore next */
      (cov_222jlybbcc().b[42][1]++, 'An error occurred'));
      const isSafeError =
      /* istanbul ignore next */
      (cov_222jlybbcc().s[129]++, safeErrors.some(safe => {
        /* istanbul ignore next */
        cov_222jlybbcc().f[32]++;
        cov_222jlybbcc().s[130]++;
        return errorMessage.includes(safe);
      }));
      /* istanbul ignore next */
      cov_222jlybbcc().s[131]++;
      return {
        message: isSafeError ?
        /* istanbul ignore next */
        (cov_222jlybbcc().b[45][0]++, errorMessage) :
        /* istanbul ignore next */
        (cov_222jlybbcc().b[45][1]++, 'An error occurred'),
        code:
        /* istanbul ignore next */
        (cov_222jlybbcc().b[46][0]++,
        /* istanbul ignore next */
        (cov_222jlybbcc().b[48][0]++, error === null) ||
        /* istanbul ignore next */
        (cov_222jlybbcc().b[48][1]++, error === void 0) ?
        /* istanbul ignore next */
        (cov_222jlybbcc().b[47][0]++, void 0) :
        /* istanbul ignore next */
        (cov_222jlybbcc().b[47][1]++, error.code)) ||
        /* istanbul ignore next */
        (cov_222jlybbcc().b[46][1]++, 'INTERNAL_ERROR')
      };
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[41][1]++;
    }
    // In development, provide more details but still sanitize
    cov_222jlybbcc().s[132]++;
    return {
      message:
      /* istanbul ignore next */
      (cov_222jlybbcc().b[49][0]++,
      /* istanbul ignore next */
      (cov_222jlybbcc().b[51][0]++, error === null) ||
      /* istanbul ignore next */
      (cov_222jlybbcc().b[51][1]++, error === void 0) ?
      /* istanbul ignore next */
      (cov_222jlybbcc().b[50][0]++, void 0) :
      /* istanbul ignore next */
      (cov_222jlybbcc().b[50][1]++, error.message)) ||
      /* istanbul ignore next */
      (cov_222jlybbcc().b[49][1]++, 'An error occurred'),
      code:
      /* istanbul ignore next */
      (cov_222jlybbcc().b[53][0]++, error === null) ||
      /* istanbul ignore next */
      (cov_222jlybbcc().b[53][1]++, error === void 0) ?
      /* istanbul ignore next */
      (cov_222jlybbcc().b[52][0]++, void 0) :
      /* istanbul ignore next */
      (cov_222jlybbcc().b[52][1]++, error.code),
      details: (
      /* istanbul ignore next */
      (cov_222jlybbcc().b[56][0]++, error === null) ||
      /* istanbul ignore next */
      (cov_222jlybbcc().b[56][1]++, error === void 0) ?
      /* istanbul ignore next */
      (cov_222jlybbcc().b[55][0]++, void 0) :
      /* istanbul ignore next */
      (cov_222jlybbcc().b[55][1]++, error.stack)) ?
      /* istanbul ignore next */
      (cov_222jlybbcc().b[54][0]++, error.stack.split('\n').slice(0, 3)) :
      /* istanbul ignore next */
      (cov_222jlybbcc().b[54][1]++, undefined)
    };
  }
  /**
   * Log security events
   */
  static logSecurityEvent(event, details, severity =
  /* istanbul ignore next */
  (cov_222jlybbcc().b[57][0]++, 'medium')) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[33]++;
    const logData =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[133]++, Object.assign({
      event,
      severity,
      timestamp: new Date().toISOString()
    }, details));
    /* istanbul ignore next */
    cov_222jlybbcc().s[134]++;
    if (
    /* istanbul ignore next */
    (cov_222jlybbcc().b[59][0]++, severity === 'critical') ||
    /* istanbul ignore next */
    (cov_222jlybbcc().b[59][1]++, severity === 'high')) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[58][0]++;
      cov_222jlybbcc().s[135]++;
      logger_1.logger.error(`Security Event: ${event}`, logData, 'Security');
    } else {
      /* istanbul ignore next */
      cov_222jlybbcc().b[58][1]++;
      cov_222jlybbcc().s[136]++;
      logger_1.logger.warn(`Security Event: ${event}`, logData, 'Security');
    }
  }
}
/* istanbul ignore next */
cov_222jlybbcc().s[137]++;
exports.SecureErrorHandler = SecureErrorHandler;
/**
 * Security Event Monitoring System
 *
 * Tracks and analyzes security events for threat detection and incident response.
 * Maintains event history and provides alerting for critical security events.
 *
 * @example
 * ```typescript
 * // Record security event
 * SecurityMonitor.recordEvent('suspicious_login', 'high', {
 *   ip: '192.168.1.1',
 *   userAgent: 'suspicious-bot'
 * });
 *
 * // Get security statistics
 * const stats = SecurityMonitor.getStats();
 * console.log(`Critical events: ${stats.criticalEvents}`);
 * ```
 */
class SecurityMonitor {
  /**
   * Record a security event for monitoring and analysis
   * @param type - Event type identifier
   * @param severity - Event severity level
   * @param details - Additional event context and metadata
   */
  static recordEvent(type, severity, details) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[34]++;
    const event =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[138]++, {
      id: AuthenticationSecurity.generateSecureToken(16),
      type,
      severity,
      timestamp: Date.now(),
      details
    });
    /* istanbul ignore next */
    cov_222jlybbcc().s[139]++;
    this.events.push(event);
    // Keep only recent events
    /* istanbul ignore next */
    cov_222jlybbcc().s[140]++;
    if (this.events.length > this.MAX_EVENTS) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[60][0]++;
      cov_222jlybbcc().s[141]++;
      this.events = this.events.slice(-this.MAX_EVENTS);
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[60][1]++;
    }
    // Alert on critical events
    cov_222jlybbcc().s[142]++;
    if (severity === 'critical') {
      /* istanbul ignore next */
      cov_222jlybbcc().b[61][0]++;
      cov_222jlybbcc().s[143]++;
      this.alertCriticalEvent(event);
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[61][1]++;
    }
  }
  /**
   * Retrieve security events with filtering and limiting
   * @param severity - Optional severity filter
   * @param limit - Maximum number of events to return (default: 100)
   * @returns Array of security events sorted by timestamp (newest first)
   */
  static getEvents(severity, limit =
  /* istanbul ignore next */
  (cov_222jlybbcc().b[62][0]++, 100)) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[35]++;
    let filtered =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[144]++, this.events);
    /* istanbul ignore next */
    cov_222jlybbcc().s[145]++;
    if (severity) {
      /* istanbul ignore next */
      cov_222jlybbcc().b[63][0]++;
      cov_222jlybbcc().s[146]++;
      filtered = this.events.filter(e => {
        /* istanbul ignore next */
        cov_222jlybbcc().f[36]++;
        cov_222jlybbcc().s[147]++;
        return e.severity === severity;
      });
    } else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[63][1]++;
    }
    cov_222jlybbcc().s[148]++;
    return filtered.sort((a, b) => {
      /* istanbul ignore next */
      cov_222jlybbcc().f[37]++;
      cov_222jlybbcc().s[149]++;
      return b.timestamp - a.timestamp;
    }).slice(0, limit);
  }
  /**
   * Get security statistics
   */
  static getStats() {
    /* istanbul ignore next */
    cov_222jlybbcc().f[38]++;
    const now =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[150]++, Date.now());
    const oneHourAgo =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[151]++, now - 60 * 60 * 1000);
    const eventsBySeverity =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[152]++, this.events.reduce((acc, event) => {
      /* istanbul ignore next */
      cov_222jlybbcc().f[39]++;
      cov_222jlybbcc().s[153]++;
      acc[event.severity] = (
      /* istanbul ignore next */
      (cov_222jlybbcc().b[64][0]++, acc[event.severity]) ||
      /* istanbul ignore next */
      (cov_222jlybbcc().b[64][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_222jlybbcc().s[154]++;
      return acc;
    }, {}));
    /* istanbul ignore next */
    cov_222jlybbcc().s[155]++;
    return {
      totalEvents: this.events.length,
      eventsBySeverity,
      recentEvents: this.events.filter(e => {
        /* istanbul ignore next */
        cov_222jlybbcc().f[40]++;
        cov_222jlybbcc().s[156]++;
        return e.timestamp > oneHourAgo;
      }).length,
      criticalEvents: this.events.filter(e => {
        /* istanbul ignore next */
        cov_222jlybbcc().f[41]++;
        cov_222jlybbcc().s[157]++;
        return e.severity === 'critical';
      }).length
    };
  }
  static alertCriticalEvent(event) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[42]++;
    cov_222jlybbcc().s[158]++;
    logger_1.logger.error('CRITICAL SECURITY EVENT', {
      eventId: event.id,
      type: event.type,
      details: event.details
    }, 'Security');
    // In production, this would trigger alerts to security team
    /* istanbul ignore next */
    cov_222jlybbcc().s[159]++;
    if (process.env.NODE_ENV === 'production') {
      /* istanbul ignore next */
      cov_222jlybbcc().b[65][0]++;
    } // TODO: Integrate with alerting system (email, Slack, PagerDuty, etc.)
    else
    /* istanbul ignore next */
    {
      cov_222jlybbcc().b[65][1]++;
    }
  }
}
/* istanbul ignore next */
cov_222jlybbcc().s[160]++;
exports.SecurityMonitor = SecurityMonitor;
/* istanbul ignore next */
cov_222jlybbcc().s[161]++;
SecurityMonitor.events = [];
/* istanbul ignore next */
cov_222jlybbcc().s[162]++;
SecurityMonitor.MAX_EVENTS = 1000;
// ==================== CONTENT SECURITY POLICY ====================
class ContentSecurityPolicy {
  static getHeaders() {
    /* istanbul ignore next */
    cov_222jlybbcc().f[43]++;
    const nonce =
    /* istanbul ignore next */
    (cov_222jlybbcc().s[163]++, AuthenticationSecurity.generateSecureToken(16));
    /* istanbul ignore next */
    cov_222jlybbcc().s[164]++;
    return {
      'Content-Security-Policy': ["default-src 'self'", "script-src 'self' 'unsafe-inline' 'unsafe-eval' https://vercel.live https://va.vercel-scripts.com", "style-src 'self' 'unsafe-inline' https://fonts.googleapis.com", "font-src 'self' https://fonts.gstatic.com", "img-src 'self' data: https: blob:", "connect-src 'self' https://*.supabase.co wss://*.supabase.co https://vercel.live", "frame-src 'self' https://vercel.live", "object-src 'none'", "base-uri 'self'", "form-action 'self'", "frame-ancestors 'none'", "upgrade-insecure-requests"].join('; '),
      'X-Content-Type-Options': 'nosniff',
      'X-Frame-Options': 'DENY',
      'X-XSS-Protection': '1; mode=block',
      'Referrer-Policy': 'strict-origin-when-cross-origin',
      'Permissions-Policy': 'camera=(), microphone=(), geolocation=()',
      // HSTS (HTTP Strict Transport Security)
      'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload'
    };
  }
}
/* istanbul ignore next */
cov_222jlybbcc().s[165]++;
exports.ContentSecurityPolicy = ContentSecurityPolicy;
// ==================== MAIN SECURITY MIDDLEWARE ====================
/**
 * Comprehensive Security Hardening Middleware
 *
 * Provides complete security protection for API routes including:
 * - Method validation
 * - Rate limiting
 * - Authentication verification
 * - Input validation
 * - Security event monitoring
 *
 * @example
 * ```typescript
 * // Secure an API route
 * const security = await SecurityHardening.secureAPIRoute(request, {
 *   requireAuth: true,
 *   rateLimit: 'api',
 *   allowedMethods: ['POST'],
 *   validateInput: userUpdateSchema
 * });
 *
 * if (!security.success) {
 *   return security.response; // Security check failed
 * }
 *
 * // Security passed, proceed with API logic
 * const user = security.user;
 * ```
 */
class SecurityHardening {
  /**
   * Apply comprehensive security protection to API routes
   * @param request - Next.js request object
   * @param options - Security configuration options
   * @param options.requireAuth - Whether authentication is required
   * @param options.rateLimit - Rate limit type to apply
   * @param options.validateInput - Zod schema for input validation
   * @param options.allowedMethods - HTTP methods allowed for this route
   * @returns Security check result with user data or error response
   */
  static async secureAPIRoute(request, options =
  /* istanbul ignore next */
  (cov_222jlybbcc().b[66][0]++, {})) {
    /* istanbul ignore next */
    cov_222jlybbcc().f[44]++;
    cov_222jlybbcc().s[166]++;
    try {
      const {
        requireAuth =
        /* istanbul ignore next */
        (cov_222jlybbcc().b[67][0]++, true),
        rateLimit =
        /* istanbul ignore next */
        (cov_222jlybbcc().b[68][0]++, 'api'),
        validateInput,
        allowedMethods =
        /* istanbul ignore next */
        (cov_222jlybbcc().b[69][0]++, ['GET', 'POST', 'PUT', 'DELETE'])
      } =
      /* istanbul ignore next */
      (cov_222jlybbcc().s[167]++, options);
      // 1. Method validation
      /* istanbul ignore next */
      cov_222jlybbcc().s[168]++;
      if (!allowedMethods.includes(request.method)) {
        /* istanbul ignore next */
        cov_222jlybbcc().b[70][0]++;
        cov_222jlybbcc().s[169]++;
        SecurityMonitor.recordEvent('invalid_method', 'medium', {
          method: request.method,
          url: request.url
        });
        /* istanbul ignore next */
        cov_222jlybbcc().s[170]++;
        return {
          success: false,
          response: server_1.NextResponse.json({
            error: 'Method not allowed'
          }, {
            status: 405
          })
        };
      } else
      /* istanbul ignore next */
      {
        cov_222jlybbcc().b[70][1]++;
      }
      // 2. Rate limiting
      const clientIP =
      /* istanbul ignore next */
      (cov_222jlybbcc().s[171]++,
      /* istanbul ignore next */
      (cov_222jlybbcc().b[71][0]++, request.headers.get('x-forwarded-for')) ||
      /* istanbul ignore next */
      (cov_222jlybbcc().b[71][1]++, request.headers.get('x-real-ip')) ||
      /* istanbul ignore next */
      (cov_222jlybbcc().b[71][2]++, 'unknown'));
      const rateLimitResult =
      /* istanbul ignore next */
      (cov_222jlybbcc().s[172]++, await RateLimiter.checkLimit(clientIP, rateLimit));
      /* istanbul ignore next */
      cov_222jlybbcc().s[173]++;
      if (!rateLimitResult.allowed) {
        /* istanbul ignore next */
        cov_222jlybbcc().b[72][0]++;
        cov_222jlybbcc().s[174]++;
        SecurityMonitor.recordEvent('rate_limit_exceeded', 'high', {
          ip: clientIP,
          limitType: rateLimit
        });
        /* istanbul ignore next */
        cov_222jlybbcc().s[175]++;
        return {
          success: false,
          response: server_1.NextResponse.json({
            error: 'Rate limit exceeded'
          }, {
            status: 429,
            headers: {
              'Retry-After': Math.ceil((rateLimitResult.resetTime - Date.now()) / 1000).toString()
            }
          })
        };
      } else
      /* istanbul ignore next */
      {
        cov_222jlybbcc().b[72][1]++;
      }
      // 3. Authentication check
      let user =
      /* istanbul ignore next */
      (cov_222jlybbcc().s[176]++, null);
      /* istanbul ignore next */
      cov_222jlybbcc().s[177]++;
      if (requireAuth) {
        /* istanbul ignore next */
        cov_222jlybbcc().b[73][0]++;
        cov_222jlybbcc().s[178]++;
        try {
          // Only import and use createServerClient when actually needed
          const {
            createServerClient: createClient
          } =
          /* istanbul ignore next */
          (cov_222jlybbcc().s[179]++, await Promise.resolve().then(() => {
            /* istanbul ignore next */
            cov_222jlybbcc().f[45]++;
            cov_222jlybbcc().s[180]++;
            return __importStar(require('@/services/supabase/server'));
          }));
          const supabase =
          /* istanbul ignore next */
          (cov_222jlybbcc().s[181]++, await createClient());
          const {
            data: {
              user: authUser
            },
            error: authError
          } =
          /* istanbul ignore next */
          (cov_222jlybbcc().s[182]++, await supabase.auth.getUser());
          /* istanbul ignore next */
          cov_222jlybbcc().s[183]++;
          if (
          /* istanbul ignore next */
          (cov_222jlybbcc().b[75][0]++, !authUser) ||
          /* istanbul ignore next */
          (cov_222jlybbcc().b[75][1]++, authError)) {
            /* istanbul ignore next */
            cov_222jlybbcc().b[74][0]++;
            cov_222jlybbcc().s[184]++;
            SecurityMonitor.recordEvent('unauthorized_access', 'medium', {
              ip: clientIP,
              url: request.url
            });
            /* istanbul ignore next */
            cov_222jlybbcc().s[185]++;
            return {
              success: false,
              response: server_1.NextResponse.json({
                error: 'Authentication required'
              }, {
                status: 401
              })
            };
          } else
          /* istanbul ignore next */
          {
            cov_222jlybbcc().b[74][1]++;
          }
          cov_222jlybbcc().s[186]++;
          user = authUser;
        } catch (authError) {
          /* istanbul ignore next */
          cov_222jlybbcc().s[187]++;
          SecurityMonitor.recordEvent('auth_error', 'high', {
            ip: clientIP,
            error: authError.message
          });
          /* istanbul ignore next */
          cov_222jlybbcc().s[188]++;
          return {
            success: false,
            response: server_1.NextResponse.json({
              error: 'Authentication failed'
            }, {
              status: 500
            })
          };
        }
      } else
      /* istanbul ignore next */
      {
        cov_222jlybbcc().b[73][1]++;
      }
      // 4. Input validation
      cov_222jlybbcc().s[189]++;
      if (
      /* istanbul ignore next */
      (cov_222jlybbcc().b[77][0]++, validateInput) &&
      /* istanbul ignore next */
      (cov_222jlybbcc().b[77][1]++, request.method !== 'GET')) {
        /* istanbul ignore next */
        cov_222jlybbcc().b[76][0]++;
        cov_222jlybbcc().s[190]++;
        try {
          const body =
          /* istanbul ignore next */
          (cov_222jlybbcc().s[191]++, await request.json());
          /* istanbul ignore next */
          cov_222jlybbcc().s[192]++;
          validateInput.parse(body);
        } catch (validationError) {
          /* istanbul ignore next */
          cov_222jlybbcc().s[193]++;
          SecurityMonitor.recordEvent('input_validation_failed', 'medium', {
            ip: clientIP,
            error: validationError.message
          });
          /* istanbul ignore next */
          cov_222jlybbcc().s[194]++;
          return {
            success: false,
            response: server_1.NextResponse.json({
              error: 'Invalid input data'
            }, {
              status: 400
            })
          };
        }
      } else
      /* istanbul ignore next */
      {
        cov_222jlybbcc().b[76][1]++;
      }
      cov_222jlybbcc().s[195]++;
      return {
        success: true,
        user
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_222jlybbcc().s[196]++;
      SecurityMonitor.recordEvent('security_middleware_error', 'critical', {
        error: error.message
      });
      /* istanbul ignore next */
      cov_222jlybbcc().s[197]++;
      return {
        success: false,
        response: server_1.NextResponse.json({
          error: 'Security validation failed'
        }, {
          status: 500
        })
      };
    }
  }
}
/* istanbul ignore next */
cov_222jlybbcc().s[198]++;
exports.SecurityHardening = SecurityHardening;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,