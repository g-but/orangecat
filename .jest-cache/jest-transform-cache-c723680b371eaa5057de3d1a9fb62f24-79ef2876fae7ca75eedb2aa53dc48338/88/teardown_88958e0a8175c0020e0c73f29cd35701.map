{"file":"/home/g/dev/orangecat/tests/teardown.ts","mappings":";AAAA;;;;;;;GAOG;;AAMH,iCA4CC;AAhDD;;;GAGG;AACY,KAAK,UAAU,cAAc;IAC1C,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;IAEnD,IAAI,CAAC;QACH,0BAA0B;QAC1B,IAAI,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;YAC5C,kCAAkC;QACpC,CAAC;QAED,sBAAsB;QACtB,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;QAE7B,gCAAgC;QAChC,MAAM,QAAQ,GAAG,CAAC,cAAc,EAAE,UAAU,EAAE,mBAAmB,CAAC,CAAC;QACnE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACrB,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC;YAC9C,IAAI,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC;gBAC3B,sDAAsD;gBACtD,OAAO,CAAC,GAAG,CAAC,4BAA4B,GAAG,EAAE,CAAC,CAAC;YACjD,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,iCAAiC;QACjC,MAAM,WAAW,GAAG;YAClB,mBAAmB;YACnB,mBAAmB;YACnB,mBAAmB;YACnB,kBAAkB;SACnB,CAAC;QAEF,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC3B,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,qCAAqC,MAAM,EAAE,CAAC,CAAC;gBAC3D,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;IAC/D,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,MAAM,KAAK,CAAC;IACd,CAAC;AACH,CAAC","names":[],"sources":["/home/g/dev/orangecat/tests/teardown.ts"],"sourcesContent":["/**\n * Global Test Teardown for OrangeCat\n * Cleanup after all tests have completed\n *\n * Created: 2025-09-24\n * Last Modified: 2025-09-24\n * Last Modified Summary: Global test teardown for comprehensive testing\n */\n\n/**\n * Global teardown function\n * This runs after all tests have completed\n */\nexport default async function globalTeardown() {\n  console.log('üßπ Global test teardown starting...');\n\n  try {\n    // Clean up test databases\n    if (process.env.TEST_DATABASE_URL) {\n      console.log('Cleaning up test database...');\n      // Add database cleanup logic here\n    }\n\n    // Clean up test files\n    const fs = require('fs');\n    const path = require('path');\n\n    // Clean up temporary test files\n    const testDirs = ['test-results', 'coverage', 'playwright-report'];\n    testDirs.forEach(dir => {\n      const dirPath = path.join(process.cwd(), dir);\n      if (fs.existsSync(dirPath)) {\n        // Keep reports for CI/CD but clean up temporary files\n        console.log(`Keeping test results in: ${dir}`);\n      }\n    });\n\n    // Clean up environment variables\n    const testEnvVars = [\n      'TEST_DATABASE_URL',\n      'TEST_SUPABASE_URL',\n      'TEST_SUPABASE_KEY',\n      'MOCK_SERVER_PORT'\n    ];\n\n    testEnvVars.forEach(envVar => {\n      if (process.env[envVar]) {\n        console.log(`Cleaning up environment variable: ${envVar}`);\n        delete process.env[envVar];\n      }\n    });\n\n    console.log('‚úÖ Global test teardown completed successfully');\n  } catch (error) {\n    console.error('‚ùå Global test teardown failed:', error);\n    throw error;\n  }\n}\n"],"version":3}