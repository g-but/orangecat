{"version":3,"names":["cov_vl9yren8p","actualCoverage","s","fundraising_1","require","bitcoin_1","dashboardConfigs_1","logger_1","FEATURE_FLAGS","fundraising","enabled","timeline","organizations","events","projects","assets","people","wallet","AnalyticsService","constructor","f","cache","Map","CACHE_TTL","getCachedData","key","cached","get","b","Date","now","timestamp","data","delete","setCachedData","set","createMetricValue","value","source","confidence","lastUpdated","isDemo","safeCalculation","calculation","fallback","context","result","isNaN","isFinite","logger","warn","error","getFundraisingMetrics","userId","cacheKey","statsData","pagesData","recentDonations","Promise","all","getUserFundraisingStats","getUserFundingPages","getRecentDonationsCount","avgDonationSize","totalSupporters","totalRaised","successRate","length","successful","filter","page","goal_amount","total_funding","Math","round","metrics","isEnabled","stats","totalCampaigns","activeCampaigns","getFallbackFundraisingMetrics","getWalletMetrics","walletAddress","trim","totalBalance","confirmedBalance","unconfirmedBalance","totalTransactions","walletData","fetchBitcoinWalletData","balance","transactionCount","transactions","toLocaleTimeString","getOrganizationsMetrics","totalOrganizations","demoOrganizations","totalMembers","reduce","sum","org","members","combinedTreasury","treasury","toFixed","activeProposals","proposals","getEventsMetrics","totalEvents","demoEvents","totalAttendees","event","attendees","totalRevenue","revenue","upcomingEvents","e","status","getProjectsMetrics","totalProjects","demoProjects","totalContributors","project","contributors","totalFunding","funding","avgProgress","progress","getAssetsMetrics","totalAssets","demoAssets","totalEarnings","asset","totalRentals","rentals","availableAssets","a","getPeopleMetrics","totalConnections","demoPeople","friends","p","relationship","colleagues","mutualConnections","person","getAllMetrics","formatCurrency","amount","currency","toLocaleString","clearCache","clear","getCacheStats","size","keys","Array","from","exports","analyticsService","default"],"sources":["/home/g/dev/orangecat/src/services/analytics/index.ts"],"sourcesContent":["import { \n  getUserFundraisingStats, \n  getUserFundingPages, \n  getRecentDonationsCount,\n  FundraisingStats \n} from '@/services/supabase/fundraising'\nimport { fetchBitcoinWalletData } from '@/services/bitcoin'\nimport { \n  demoOrganizations, \n  demoEvents, \n  demoProjects, \n  demoAssets, \n  demoPeople, \n  demoCampaigns \n} from '@/data/dashboardConfigs'\nimport { logger } from '@/utils/logger'\n\n// Types for our analytics system\nexport interface MetricValue {\n  value: number | string\n  confidence: 'high' | 'medium' | 'low'\n  lastUpdated: Date\n  source: 'database' | 'api' | 'demo'\n  isDemo: boolean\n}\n\nexport interface FeatureMetrics {\n  isEnabled: boolean\n  isDemo: boolean\n  timeline?: string\n  stats: Record<string, MetricValue>\n}\n\nexport interface DashboardMetrics {\n  fundraising: FeatureMetrics\n  organizations: FeatureMetrics\n  events: FeatureMetrics\n  projects: FeatureMetrics\n  assets: FeatureMetrics\n  people: FeatureMetrics\n  wallet: FeatureMetrics\n}\n\n// Feature flags - easily configurable\nconst FEATURE_FLAGS = {\n  fundraising: { enabled: true, timeline: 'Available Now' },\n  organizations: { enabled: false, timeline: 'Q1 2026' },\n  events: { enabled: false, timeline: 'Q2 2026' },\n  projects: { enabled: false, timeline: 'Q1 2026' },\n  assets: { enabled: false, timeline: 'Q2 2026' },\n  people: { enabled: false, timeline: 'Q2 2026' },\n  wallet: { enabled: true, timeline: 'Available Now' }\n}\n\nclass AnalyticsService {\n  private cache = new Map<string, { data: any; timestamp: number }>()\n  private readonly CACHE_TTL = 5 * 60 * 1000 // 5 minutes\n\n  private getCachedData<T>(key: string): T | null {\n    const cached = this.cache.get(key)\n    if (cached && Date.now() - cached.timestamp < this.CACHE_TTL) {\n      return cached.data\n    }\n    this.cache.delete(key)\n    return null\n  }\n\n  private setCachedData<T>(key: string, data: T): void {\n    this.cache.set(key, { data, timestamp: Date.now() })\n  }\n\n  private createMetricValue(\n    value: number | string,\n    source: 'database' | 'api' | 'demo',\n    confidence: 'high' | 'medium' | 'low' = 'high'\n  ): MetricValue {\n    return {\n      value,\n      confidence,\n      lastUpdated: new Date(),\n      source,\n      isDemo: source === 'demo'\n    }\n  }\n\n  private safeCalculation<T>(\n    calculation: () => T,\n    fallback: T,\n    context: string\n  ): T {\n    try {\n      const result = calculation()\n      if (typeof result === 'number' && (isNaN(result) || !isFinite(result))) {\n        logger.warn(`Invalid calculation result for ${context}`, { result }, 'Analytics')\n        return fallback\n      }\n      return result\n    } catch (error) {\n      logger.error(`Calculation failed for ${context}`, error, 'Analytics')\n      return fallback\n    }\n  }\n\n  async getFundraisingMetrics(userId: string): Promise<FeatureMetrics> {\n    const cacheKey = `fundraising-${userId}`\n    const cached = this.getCachedData<FeatureMetrics>(cacheKey)\n    if (cached) return cached\n\n    try {\n      const [statsData, pagesData, recentDonations] = await Promise.all([\n        getUserFundraisingStats(userId),\n        getUserFundingPages(userId),\n        getRecentDonationsCount(userId)\n      ])\n\n      const avgDonationSize = this.safeCalculation(\n        () => statsData.totalSupporters > 0 ? statsData.totalRaised / statsData.totalSupporters : 0,\n        0,\n        'avgDonationSize'\n      )\n\n      const successRate = this.safeCalculation(\n        () => {\n          if (pagesData.length === 0) return 0\n          const successful = pagesData.filter(page => \n            page.goal_amount && page.total_funding >= page.goal_amount\n          ).length\n          return Math.round((successful / pagesData.length) * 100)\n        },\n        0,\n        'successRate'\n      )\n\n      const metrics: FeatureMetrics = {\n        isEnabled: true,\n        isDemo: false,\n        timeline: FEATURE_FLAGS.fundraising.timeline,\n        stats: {\n          totalCampaigns: this.createMetricValue(statsData.totalCampaigns, 'database'),\n          totalRaised: this.createMetricValue(statsData.totalRaised, 'database'),\n          totalSupporters: this.createMetricValue(statsData.totalSupporters, 'database'),\n          activeCampaigns: this.createMetricValue(statsData.activeCampaigns, 'database'),\n          recentDonations: this.createMetricValue(recentDonations, 'database'),\n          avgDonationSize: this.createMetricValue(avgDonationSize, 'database'),\n          successRate: this.createMetricValue(successRate, 'database')\n        }\n      }\n\n      this.setCachedData(cacheKey, metrics)\n      return metrics\n    } catch (error) {\n      logger.error('Error fetching fundraising metrics', error, 'Analytics')\n      return this.getFallbackFundraisingMetrics()\n    }\n  }\n\n  private getFallbackFundraisingMetrics(): FeatureMetrics {\n    return {\n      isEnabled: true,\n      isDemo: false,\n      timeline: FEATURE_FLAGS.fundraising.timeline,\n      stats: {\n        totalCampaigns: this.createMetricValue(0, 'database', 'low'),\n        totalRaised: this.createMetricValue(0, 'database', 'low'),\n        totalSupporters: this.createMetricValue(0, 'database', 'low'),\n        activeCampaigns: this.createMetricValue(0, 'database', 'low'),\n        recentDonations: this.createMetricValue(0, 'database', 'low'),\n        avgDonationSize: this.createMetricValue(0, 'database', 'low'),\n        successRate: this.createMetricValue(0, 'database', 'low')\n      }\n    }\n  }\n\n  async getWalletMetrics(walletAddress?: string): Promise<FeatureMetrics> {\n    if (!walletAddress || walletAddress.trim() === '') {\n      return {\n        isEnabled: false,\n        isDemo: true,\n        timeline: FEATURE_FLAGS.wallet.timeline,\n        stats: {\n          totalBalance: this.createMetricValue('0.000 BTC', 'demo', 'high'),\n          confirmedBalance: this.createMetricValue('0.000 BTC', 'demo', 'high'),\n          unconfirmedBalance: this.createMetricValue('0.000 BTC', 'demo', 'high'),\n          totalTransactions: this.createMetricValue(0, 'demo', 'high'),\n          lastUpdated: this.createMetricValue('Demo Data', 'demo', 'high')\n        }\n      }\n    }\n\n    const cacheKey = `wallet-${walletAddress}`\n    const cached = this.getCachedData<FeatureMetrics>(cacheKey)\n    if (cached) return cached\n\n    try {\n      const walletData = await fetchBitcoinWalletData(walletAddress)\n      \n      const metrics: FeatureMetrics = {\n        isEnabled: true,\n        isDemo: false,\n        timeline: FEATURE_FLAGS.wallet.timeline,\n        stats: {\n                    balance: this.createMetricValue(walletData.balance, 'api'),\n          transactionCount: this.createMetricValue(walletData.transactions.length, 'api'),\n          lastUpdated: this.createMetricValue(\n            walletData.lastUpdated ? new Date(walletData.lastUpdated).toLocaleTimeString() : 'Unknown',\n            'api'\n          )\n        }\n      }\n\n      this.setCachedData(cacheKey, metrics)\n      return metrics\n    } catch (error) {\n      logger.error('Error fetching wallet metrics', error, 'Analytics')\n      return {\n        isEnabled: true,\n        isDemo: false,\n        timeline: FEATURE_FLAGS.wallet.timeline,\n        stats: {\n          balance: this.createMetricValue(0, 'api', 'low'),\n          transactionCount: this.createMetricValue(0, 'api', 'low'),\n          lastUpdated: this.createMetricValue('Error', 'api', 'low')\n        }\n      }\n    }\n  }\n\n  getOrganizationsMetrics(): FeatureMetrics {\n    return {\n      isEnabled: false,\n      isDemo: true,\n      timeline: FEATURE_FLAGS.organizations.timeline,\n      stats: {\n        totalOrganizations: this.createMetricValue(demoOrganizations.length, 'demo'),\n        totalMembers: this.createMetricValue(\n          this.safeCalculation(\n            () => demoOrganizations.reduce((sum, org) => sum + org.members, 0),\n            0,\n            'totalMembers'\n          ),\n          'demo'\n        ),\n        combinedTreasury: this.createMetricValue(\n          `${this.safeCalculation(\n            () => (demoOrganizations.reduce((sum, org) => sum + org.treasury, 0) / 100000000).toFixed(3),\n            '0.000',\n            'combinedTreasury'\n          )} BTC`,\n          'demo'\n        ),\n        activeProposals: this.createMetricValue(\n          this.safeCalculation(\n            () => demoOrganizations.reduce((sum, org) => sum + org.proposals, 0),\n            0,\n            'activeProposals'\n          ),\n          'demo'\n        )\n      }\n    }\n  }\n\n  getEventsMetrics(): FeatureMetrics {\n    return {\n      isEnabled: false,\n      isDemo: true,\n      timeline: FEATURE_FLAGS.events.timeline,\n      stats: {\n        totalEvents: this.createMetricValue(demoEvents.length, 'demo'),\n        totalAttendees: this.createMetricValue(\n          this.safeCalculation(\n            () => demoEvents.reduce((sum, event) => sum + event.attendees, 0),\n            0,\n            'totalAttendees'\n          ),\n          'demo'\n        ),\n        totalRevenue: this.createMetricValue(\n          `${this.safeCalculation(\n            () => (demoEvents.reduce((sum, event) => sum + event.revenue, 0) / 100000000).toFixed(3),\n            '0.000',\n            'totalRevenue'\n          )} BTC`,\n          'demo'\n        ),\n        upcomingEvents: this.createMetricValue(\n          demoEvents.filter(e => e.status === \"Upcoming\").length,\n          'demo'\n        )\n      }\n    }\n  }\n\n  getProjectsMetrics(): FeatureMetrics {\n    return {\n      isEnabled: false,\n      isDemo: true,\n      timeline: FEATURE_FLAGS.projects.timeline,\n      stats: {\n        totalProjects: this.createMetricValue(demoProjects.length, 'demo'),\n        totalContributors: this.createMetricValue(\n          this.safeCalculation(\n            () => demoProjects.reduce((sum, project) => sum + project.contributors, 0),\n            0,\n            'totalContributors'\n          ),\n          'demo'\n        ),\n        totalFunding: this.createMetricValue(\n          `${this.safeCalculation(\n            () => (demoProjects.reduce((sum, project) => sum + project.funding, 0) / 100000000).toFixed(3),\n            '0.000',\n            'totalFunding'\n          )} BTC`,\n          'demo'\n        ),\n        avgProgress: this.createMetricValue(\n          `${this.safeCalculation(\n            () => Math.round(demoProjects.reduce((sum, project) => sum + project.progress, 0) / demoProjects.length),\n            0,\n            'avgProgress'\n          )}%`,\n          'demo'\n        )\n      }\n    }\n  }\n\n  getAssetsMetrics(): FeatureMetrics {\n    return {\n      isEnabled: false,\n      isDemo: true,\n      timeline: FEATURE_FLAGS.assets.timeline,\n      stats: {\n        totalAssets: this.createMetricValue(demoAssets.length, 'demo'),\n        totalEarnings: this.createMetricValue(\n          `${this.safeCalculation(\n            () => (demoAssets.reduce((sum, asset) => sum + asset.totalEarnings, 0) / 100000000).toFixed(3),\n            '0.000',\n            'totalEarnings'\n          )} BTC`,\n          'demo'\n        ),\n        totalRentals: this.createMetricValue(\n          this.safeCalculation(\n            () => demoAssets.reduce((sum, asset) => sum + asset.rentals, 0),\n            0,\n            'totalRentals'\n          ),\n          'demo'\n        ),\n        availableAssets: this.createMetricValue(\n          demoAssets.filter(a => a.status === \"Available\").length,\n          'demo'\n        )\n      }\n    }\n  }\n\n  getPeopleMetrics(): FeatureMetrics {\n    return {\n      isEnabled: false,\n      isDemo: true,\n      timeline: FEATURE_FLAGS.people.timeline,\n      stats: {\n        totalConnections: this.createMetricValue(demoPeople.length, 'demo'),\n        friends: this.createMetricValue(\n          demoPeople.filter(p => p.relationship === \"Friend\").length,\n          'demo'\n        ),\n        colleagues: this.createMetricValue(\n          demoPeople.filter(p => p.relationship === \"Colleague\").length,\n          'demo'\n        ),\n        mutualConnections: this.createMetricValue(\n          this.safeCalculation(\n            () => demoPeople.reduce((sum, person) => sum + person.mutualConnections, 0),\n            0,\n            'mutualConnections'\n          ),\n          'demo'\n        )\n      }\n    }\n  }\n\n  async getAllMetrics(userId: string, walletAddress?: string): Promise<DashboardMetrics> {\n    try {\n      const [fundraising, wallet] = await Promise.all([\n        this.getFundraisingMetrics(userId),\n        this.getWalletMetrics(walletAddress)\n      ])\n\n      return {\n        fundraising,\n        wallet,\n        organizations: this.getOrganizationsMetrics(),\n        events: this.getEventsMetrics(),\n        projects: this.getProjectsMetrics(),\n        assets: this.getAssetsMetrics(),\n        people: this.getPeopleMetrics()\n      }\n    } catch (error) {\n      logger.error('Error fetching all metrics', error, 'Analytics')\n      throw error\n    }\n  }\n\n  // Utility methods\n  formatCurrency(amount: number, currency: string = 'SATS'): string {\n    if (currency === 'BTC') {\n      return `₿${(amount / 100000000).toFixed(6)}`\n    }\n    return `${amount.toLocaleString('en-US')} sats`\n  }\n\n  clearCache(): void {\n    this.cache.clear()\n  }\n\n  getCacheStats(): { size: number; keys: string[] } {\n    return {\n      size: this.cache.size,\n      keys: Array.from(this.cache.keys())\n    }\n  }\n}\n\n// Export singleton instance\nexport const analyticsService = new AnalyticsService()\nexport default analyticsService "],"mappingsmDU;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;;AAnDV,MAAAC,aAAA;AAAA;AAAA,CAAAH,aAAA,GAAAE,CAAA,OAAAE,OAAA;AAMA,MAAAC,SAAA;AAAA;AAAA,CAAAL,aAAA,GAAAE,CAAA,OAAAE,OAAA;AACA,MAAAE,kBAAA;AAAA;AAAA,CAAAN,aAAA,GAAAE,CAAA,OAAAE,OAAA;AAQA,MAAAG,QAAA;AAAA;AAAA,CAAAP,aAAA,GAAAE,CAAA,OAAAE,OAAA;AA4BA;AACA,MAAMI,aAAa;AAAA;AAAA,CAAAR,aAAA,GAAAE,CAAA,OAAG;EACpBO,WAAW,EAAE;IAAEC,OAAO,EAAE,IAAI;IAAEC,QAAQ,EAAE;EAAe,CAAE;EACzDC,aAAa,EAAE;IAAEF,OAAO,EAAE,KAAK;IAAEC,QAAQ,EAAE;EAAS,CAAE;EACtDE,MAAM,EAAE;IAAEH,OAAO,EAAE,KAAK;IAAEC,QAAQ,EAAE;EAAS,CAAE;EAC/CG,QAAQ,EAAE;IAAEJ,OAAO,EAAE,KAAK;IAAEC,QAAQ,EAAE;EAAS,CAAE;EACjDI,MAAM,EAAE;IAAEL,OAAO,EAAE,KAAK;IAAEC,QAAQ,EAAE;EAAS,CAAE;EAC/CK,MAAM,EAAE;IAAEN,OAAO,EAAE,KAAK;IAAEC,QAAQ,EAAE;EAAS,CAAE;EAC/CM,MAAM,EAAE;IAAEP,OAAO,EAAE,IAAI;IAAEC,QAAQ,EAAE;EAAe;CACnD;AAED,MAAMO,gBAAgB;EAAtBC,YAAA;IAAA;IAAAnB,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAE,CAAA;IACU,KAAAmB,KAAK,GAAG,IAAIC,GAAG,EAA4C;IAAA;IAAAtB,aAAA,GAAAE,CAAA;IAClD,KAAAqB,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,EAAC;EAkX7C;EAhXUC,aAAaA,CAAIC,GAAW;IAAA;IAAAzB,aAAA,GAAAoB,CAAA;IAClC,MAAMM,MAAM;IAAA;IAAA,CAAA1B,aAAA,GAAAE,CAAA,OAAG,IAAI,CAACmB,KAAK,CAACM,GAAG,CAACF,GAAG,CAAC;IAAA;IAAAzB,aAAA,GAAAE,CAAA;IAClC;IAAI;IAAA,CAAAF,aAAA,GAAA4B,CAAA,UAAAF,MAAM;IAAA;IAAA,CAAA1B,aAAA,GAAA4B,CAAA,UAAIC,IAAI,CAACC,GAAG,EAAE,GAAGJ,MAAM,CAACK,SAAS,GAAG,IAAI,CAACR,SAAS,GAAE;MAAA;MAAAvB,aAAA,GAAA4B,CAAA;MAAA5B,aAAA,GAAAE,CAAA;MAC5D,OAAOwB,MAAM,CAACM,IAAI;IACpB,CAAC;IAAA;IAAA;MAAAhC,aAAA,GAAA4B,CAAA;IAAA;IAAA5B,aAAA,GAAAE,CAAA;IACD,IAAI,CAACmB,KAAK,CAACY,MAAM,CAACR,GAAG,CAAC;IAAA;IAAAzB,aAAA,GAAAE,CAAA;IACtB,OAAO,IAAI;EACb;EAEQgC,aAAaA,CAAIT,GAAW,EAAEO,IAAO;IAAA;IAAAhC,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAE,CAAA;IAC3C,IAAI,CAACmB,KAAK,CAACc,GAAG,CAACV,GAAG,EAAE;MAAEO,IAAI;MAAED,SAAS,EAAEF,IAAI,CAACC,GAAG;IAAE,CAAE,CAAC;EACtD;EAEQM,iBAAiBA,CACvBC,KAAsB,EACtBC,MAAmC,EACnCC,UAAA;EAAA;EAAA,CAAAvC,aAAA,GAAA4B,CAAA,UAAwC,MAAM;IAAA;IAAA5B,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAE,CAAA;IAE9C,OAAO;MACLmC,KAAK;MACLE,UAAU;MACVC,WAAW,EAAE,IAAIX,IAAI,EAAE;MACvBS,MAAM;MACNG,MAAM,EAAEH,MAAM,KAAK;KACpB;EACH;EAEQI,eAAeA,CACrBC,WAAoB,EACpBC,QAAW,EACXC,OAAe;IAAA;IAAA7C,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAE,CAAA;IAEf,IAAI;MACF,MAAM4C,MAAM;MAAA;MAAA,CAAA9C,aAAA,GAAAE,CAAA,QAAGyC,WAAW,EAAE;MAAA;MAAA3C,aAAA,GAAAE,CAAA;MAC5B;MAAI;MAAA,CAAAF,aAAA,GAAA4B,CAAA,iBAAOkB,MAAM,KAAK,QAAQ;MAAK;MAAA,CAAA9C,aAAA,GAAA4B,CAAA,UAAAmB,KAAK,CAACD,MAAM,CAAC;MAAA;MAAA,CAAA9C,aAAA,GAAA4B,CAAA,UAAI,CAACoB,QAAQ,CAACF,MAAM,CAAC,EAAC,EAAE;QAAA;QAAA9C,aAAA,GAAA4B,CAAA;QAAA5B,aAAA,GAAAE,CAAA;QACtEK,QAAA,CAAA0C,MAAM,CAACC,IAAI,CAAC,kCAAkCL,OAAO,EAAE,EAAE;UAAEC;QAAM,CAAE,EAAE,WAAW,CAAC;QAAA;QAAA9C,aAAA,GAAAE,CAAA;QACjF,OAAO0C,QAAQ;MACjB,CAAC;MAAA;MAAA;QAAA5C,aAAA,GAAA4B,CAAA;MAAA;MAAA5B,aAAA,GAAAE,CAAA;MACD,OAAO4C,MAAM;IACf,CAAC,CAAC,OAAOK,KAAK,EAAE;MAAA;MAAAnD,aAAA,GAAAE,CAAA;MACdK,QAAA,CAAA0C,MAAM,CAACE,KAAK,CAAC,0BAA0BN,OAAO,EAAE,EAAEM,KAAK,EAAE,WAAW,CAAC;MAAA;MAAAnD,aAAA,GAAAE,CAAA;MACrE,OAAO0C,QAAQ;IACjB;EACF;EAEA,MAAMQ,qBAAqBA,CAACC,MAAc;IAAA;IAAArD,aAAA,GAAAoB,CAAA;IACxC,MAAMkC,QAAQ;IAAA;IAAA,CAAAtD,aAAA,GAAAE,CAAA,QAAG,eAAemD,MAAM,EAAE;IACxC,MAAM3B,MAAM;IAAA;IAAA,CAAA1B,aAAA,GAAAE,CAAA,QAAG,IAAI,CAACsB,aAAa,CAAiB8B,QAAQ,CAAC;IAAA;IAAAtD,aAAA,GAAAE,CAAA;IAC3D,IAAIwB,MAAM,EAAE;MAAA;MAAA1B,aAAA,GAAA4B,CAAA;MAAA5B,aAAA,GAAAE,CAAA;MAAA,OAAOwB,MAAM;IAAA;IAAA;IAAA;MAAA1B,aAAA,GAAA4B,CAAA;IAAA;IAAA5B,aAAA,GAAAE,CAAA;IAEzB,IAAI;MACF,MAAM,CAACqD,SAAS,EAAEC,SAAS,EAAEC,eAAe,CAAC;MAAA;MAAA,CAAAzD,aAAA,GAAAE,CAAA,QAAG,MAAMwD,OAAO,CAACC,GAAG,CAAC,CAChE,IAAAxD,aAAA,CAAAyD,uBAAuB,EAACP,MAAM,CAAC,EAC/B,IAAAlD,aAAA,CAAA0D,mBAAmB,EAACR,MAAM,CAAC,EAC3B,IAAAlD,aAAA,CAAA2D,uBAAuB,EAACT,MAAM,CAAC,CAChC,CAAC;MAEF,MAAMU,eAAe;MAAA;MAAA,CAAA/D,aAAA,GAAAE,CAAA,QAAG,IAAI,CAACwC,eAAe,CAC1C,MAAM;QAAA;QAAA1C,aAAA,GAAAoB,CAAA;QAAApB,aAAA,GAAAE,CAAA;QAAA,OAAAqD,SAAS,CAACS,eAAe,GAAG,CAAC;QAAA;QAAA,CAAAhE,aAAA,GAAA4B,CAAA,UAAG2B,SAAS,CAACU,WAAW,GAAGV,SAAS,CAACS,eAAe;QAAA;QAAA,CAAAhE,aAAA,GAAA4B,CAAA,UAAG,CAAC;MAAD,CAAC,EAC3F,CAAC,EACD,iBAAiB,CAClB;MAED,MAAMsC,WAAW;MAAA;MAAA,CAAAlE,aAAA,GAAAE,CAAA,QAAG,IAAI,CAACwC,eAAe,CACtC,MAAK;QAAA;QAAA1C,aAAA,GAAAoB,CAAA;QAAApB,aAAA,GAAAE,CAAA;QACH,IAAIsD,SAAS,CAACW,MAAM,KAAK,CAAC,EAAE;UAAA;UAAAnE,aAAA,GAAA4B,CAAA;UAAA5B,aAAA,GAAAE,CAAA;UAAA,OAAO,CAAC;QAAA;QAAA;QAAA;UAAAF,aAAA,GAAA4B,CAAA;QAAA;QACpC,MAAMwC,UAAU;QAAA;QAAA,CAAApE,aAAA,GAAAE,CAAA,QAAGsD,SAAS,CAACa,MAAM,CAACC,IAAI,IACtC;UAAA;UAAAtE,aAAA,GAAAoB,CAAA;UAAApB,aAAA,GAAAE,CAAA;UAAA,kCAAAF,aAAA,GAAA4B,CAAA,UAAA0C,IAAI,CAACC,WAAW;UAAA;UAAA,CAAAvE,aAAA,GAAA4B,CAAA,UAAI0C,IAAI,CAACE,aAAa,IAAIF,IAAI,CAACC,WAAW;QAAX,CAAW,CAC3D,CAACJ,MAAM;QAAA;QAAAnE,aAAA,GAAAE,CAAA;QACR,OAAOuE,IAAI,CAACC,KAAK,CAAEN,UAAU,GAAGZ,SAAS,CAACW,MAAM,GAAI,GAAG,CAAC;MAC1D,CAAC,EACD,CAAC,EACD,aAAa,CACd;MAED,MAAMQ,OAAO;MAAA;MAAA,CAAA3E,aAAA,GAAAE,CAAA,QAAmB;QAC9B0E,SAAS,EAAE,IAAI;QACfnC,MAAM,EAAE,KAAK;QACb9B,QAAQ,EAAEH,aAAa,CAACC,WAAW,CAACE,QAAQ;QAC5CkE,KAAK,EAAE;UACLC,cAAc,EAAE,IAAI,CAAC1C,iBAAiB,CAACmB,SAAS,CAACuB,cAAc,EAAE,UAAU,CAAC;UAC5Eb,WAAW,EAAE,IAAI,CAAC7B,iBAAiB,CAACmB,SAAS,CAACU,WAAW,EAAE,UAAU,CAAC;UACtED,eAAe,EAAE,IAAI,CAAC5B,iBAAiB,CAACmB,SAAS,CAACS,eAAe,EAAE,UAAU,CAAC;UAC9Ee,eAAe,EAAE,IAAI,CAAC3C,iBAAiB,CAACmB,SAAS,CAACwB,eAAe,EAAE,UAAU,CAAC;UAC9EtB,eAAe,EAAE,IAAI,CAACrB,iBAAiB,CAACqB,eAAe,EAAE,UAAU,CAAC;UACpEM,eAAe,EAAE,IAAI,CAAC3B,iBAAiB,CAAC2B,eAAe,EAAE,UAAU,CAAC;UACpEG,WAAW,EAAE,IAAI,CAAC9B,iBAAiB,CAAC8B,WAAW,EAAE,UAAU;;OAE9D;MAAA;MAAAlE,aAAA,GAAAE,CAAA;MAED,IAAI,CAACgC,aAAa,CAACoB,QAAQ,EAAEqB,OAAO,CAAC;MAAA;MAAA3E,aAAA,GAAAE,CAAA;MACrC,OAAOyE,OAAO;IAChB,CAAC,CAAC,OAAOxB,KAAK,EAAE;MAAA;MAAAnD,aAAA,GAAAE,CAAA;MACdK,QAAA,CAAA0C,MAAM,CAACE,KAAK,CAAC,oCAAoC,EAAEA,KAAK,EAAE,WAAW,CAAC;MAAA;MAAAnD,aAAA,GAAAE,CAAA;MACtE,OAAO,IAAI,CAAC8E,6BAA6B,EAAE;IAC7C;EACF;EAEQA,6BAA6BA,CAAA;IAAA;IAAAhF,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAE,CAAA;IACnC,OAAO;MACL0E,SAAS,EAAE,IAAI;MACfnC,MAAM,EAAE,KAAK;MACb9B,QAAQ,EAAEH,aAAa,CAACC,WAAW,CAACE,QAAQ;MAC5CkE,KAAK,EAAE;QACLC,cAAc,EAAE,IAAI,CAAC1C,iBAAiB,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC;QAC5D6B,WAAW,EAAE,IAAI,CAAC7B,iBAAiB,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC;QACzD4B,eAAe,EAAE,IAAI,CAAC5B,iBAAiB,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC;QAC7D2C,eAAe,EAAE,IAAI,CAAC3C,iBAAiB,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC;QAC7DqB,eAAe,EAAE,IAAI,CAACrB,iBAAiB,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC;QAC7D2B,eAAe,EAAE,IAAI,CAAC3B,iBAAiB,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC;QAC7D8B,WAAW,EAAE,IAAI,CAAC9B,iBAAiB,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK;;KAE3D;EACH;EAEA,MAAM6C,gBAAgBA,CAACC,aAAsB;IAAA;IAAAlF,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAE,CAAA;IAC3C;IAAI;IAAA,CAAAF,aAAA,GAAA4B,CAAA,YAACsD,aAAa;IAAA;IAAA,CAAAlF,aAAA,GAAA4B,CAAA,WAAIsD,aAAa,CAACC,IAAI,EAAE,KAAK,EAAE,GAAE;MAAA;MAAAnF,aAAA,GAAA4B,CAAA;MAAA5B,aAAA,GAAAE,CAAA;MACjD,OAAO;QACL0E,SAAS,EAAE,KAAK;QAChBnC,MAAM,EAAE,IAAI;QACZ9B,QAAQ,EAAEH,aAAa,CAACS,MAAM,CAACN,QAAQ;QACvCkE,KAAK,EAAE;UACLO,YAAY,EAAE,IAAI,CAAChD,iBAAiB,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM,CAAC;UACjEiD,gBAAgB,EAAE,IAAI,CAACjD,iBAAiB,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM,CAAC;UACrEkD,kBAAkB,EAAE,IAAI,CAAClD,iBAAiB,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM,CAAC;UACvEmD,iBAAiB,EAAE,IAAI,CAACnD,iBAAiB,CAAC,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC;UAC5DI,WAAW,EAAE,IAAI,CAACJ,iBAAiB,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM;;OAElE;IACH,CAAC;IAAA;IAAA;MAAApC,aAAA,GAAA4B,CAAA;IAAA;IAED,MAAM0B,QAAQ;IAAA;IAAA,CAAAtD,aAAA,GAAAE,CAAA,QAAG,UAAUgF,aAAa,EAAE;IAC1C,MAAMxD,MAAM;IAAA;IAAA,CAAA1B,aAAA,GAAAE,CAAA,QAAG,IAAI,CAACsB,aAAa,CAAiB8B,QAAQ,CAAC;IAAA;IAAAtD,aAAA,GAAAE,CAAA;IAC3D,IAAIwB,MAAM,EAAE;MAAA;MAAA1B,aAAA,GAAA4B,CAAA;MAAA5B,aAAA,GAAAE,CAAA;MAAA,OAAOwB,MAAM;IAAA;IAAA;IAAA;MAAA1B,aAAA,GAAA4B,CAAA;IAAA;IAAA5B,aAAA,GAAAE,CAAA;IAEzB,IAAI;MACF,MAAMsF,UAAU;MAAA;MAAA,CAAAxF,aAAA,GAAAE,CAAA,QAAG,MAAM,IAAAG,SAAA,CAAAoF,sBAAsB,EAACP,aAAa,CAAC;MAE9D,MAAMP,OAAO;MAAA;MAAA,CAAA3E,aAAA,GAAAE,CAAA,QAAmB;QAC9B0E,SAAS,EAAE,IAAI;QACfnC,MAAM,EAAE,KAAK;QACb9B,QAAQ,EAAEH,aAAa,CAACS,MAAM,CAACN,QAAQ;QACvCkE,KAAK,EAAE;UACKa,OAAO,EAAE,IAAI,CAACtD,iBAAiB,CAACoD,UAAU,CAACE,OAAO,EAAE,KAAK,CAAC;UACpEC,gBAAgB,EAAE,IAAI,CAACvD,iBAAiB,CAACoD,UAAU,CAACI,YAAY,CAACzB,MAAM,EAAE,KAAK,CAAC;UAC/E3B,WAAW,EAAE,IAAI,CAACJ,iBAAiB,CACjCoD,UAAU,CAAChD,WAAW;UAAA;UAAA,CAAAxC,aAAA,GAAA4B,CAAA,WAAG,IAAIC,IAAI,CAAC2D,UAAU,CAAChD,WAAW,CAAC,CAACqD,kBAAkB,EAAE;UAAA;UAAA,CAAA7F,aAAA,GAAA4B,CAAA,WAAG,SAAS,GAC1F,KAAK;;OAGV;MAAA;MAAA5B,aAAA,GAAAE,CAAA;MAED,IAAI,CAACgC,aAAa,CAACoB,QAAQ,EAAEqB,OAAO,CAAC;MAAA;MAAA3E,aAAA,GAAAE,CAAA;MACrC,OAAOyE,OAAO;IAChB,CAAC,CAAC,OAAOxB,KAAK,EAAE;MAAA;MAAAnD,aAAA,GAAAE,CAAA;MACdK,QAAA,CAAA0C,MAAM,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,EAAE,WAAW,CAAC;MAAA;MAAAnD,aAAA,GAAAE,CAAA;MACjE,OAAO;QACL0E,SAAS,EAAE,IAAI;QACfnC,MAAM,EAAE,KAAK;QACb9B,QAAQ,EAAEH,aAAa,CAACS,MAAM,CAACN,QAAQ;QACvCkE,KAAK,EAAE;UACLa,OAAO,EAAE,IAAI,CAACtD,iBAAiB,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;UAChDuD,gBAAgB,EAAE,IAAI,CAACvD,iBAAiB,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;UACzDI,WAAW,EAAE,IAAI,CAACJ,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK;;OAE5D;IACH;EACF;EAEA0D,uBAAuBA,CAAA;IAAA;IAAA9F,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAE,CAAA;IACrB,OAAO;MACL0E,SAAS,EAAE,KAAK;MAChBnC,MAAM,EAAE,IAAI;MACZ9B,QAAQ,EAAEH,aAAa,CAACI,aAAa,CAACD,QAAQ;MAC9CkE,KAAK,EAAE;QACLkB,kBAAkB,EAAE,IAAI,CAAC3D,iBAAiB,CAAC9B,kBAAA,CAAA0F,iBAAiB,CAAC7B,MAAM,EAAE,MAAM,CAAC;QAC5E8B,YAAY,EAAE,IAAI,CAAC7D,iBAAiB,CAClC,IAAI,CAACM,eAAe,CAClB,MAAM;UAAA;UAAA1C,aAAA,GAAAoB,CAAA;UAAApB,aAAA,GAAAE,CAAA;UAAA,OAAAI,kBAAA,CAAA0F,iBAAiB,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;YAAA;YAAApG,aAAA,GAAAoB,CAAA;YAAApB,aAAA,GAAAE,CAAA;YAAA,OAAAiG,GAAG,GAAGC,GAAG,CAACC,OAAO;UAAP,CAAO,EAAE,CAAC,CAAC;QAAD,CAAC,EAClE,CAAC,EACD,cAAc,CACf,EACD,MAAM,CACP;QACDC,gBAAgB,EAAE,IAAI,CAAClE,iBAAiB,CACtC,GAAG,IAAI,CAACM,eAAe,CACrB,MAAM;UAAA;UAAA1C,aAAA,GAAAoB,CAAA;UAAApB,aAAA,GAAAE,CAAA;UAAA,QAACI,kBAAA,CAAA0F,iBAAiB,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;YAAA;YAAApG,aAAA,GAAAoB,CAAA;YAAApB,aAAA,GAAAE,CAAA;YAAA,OAAAiG,GAAG,GAAGC,GAAG,CAACG,QAAQ;UAAR,CAAQ,EAAE,CAAC,CAAC,GAAG,SAAS,EAAEC,OAAO,CAAC,CAAC,CAAC;QAAD,CAAC,EAC5F,OAAO,EACP,kBAAkB,CACnB,MAAM,EACP,MAAM,CACP;QACDC,eAAe,EAAE,IAAI,CAACrE,iBAAiB,CACrC,IAAI,CAACM,eAAe,CAClB,MAAM;UAAA;UAAA1C,aAAA,GAAAoB,CAAA;UAAApB,aAAA,GAAAE,CAAA;UAAA,OAAAI,kBAAA,CAAA0F,iBAAiB,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;YAAA;YAAApG,aAAA,GAAAoB,CAAA;YAAApB,aAAA,GAAAE,CAAA;YAAA,OAAAiG,GAAG,GAAGC,GAAG,CAACM,SAAS;UAAT,CAAS,EAAE,CAAC,CAAC;QAAD,CAAC,EACpE,CAAC,EACD,iBAAiB,CAClB,EACD,MAAM;;KAGX;EACH;EAEAC,gBAAgBA,CAAA;IAAA;IAAA3G,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAE,CAAA;IACd,OAAO;MACL0E,SAAS,EAAE,KAAK;MAChBnC,MAAM,EAAE,IAAI;MACZ9B,QAAQ,EAAEH,aAAa,CAACK,MAAM,CAACF,QAAQ;MACvCkE,KAAK,EAAE;QACL+B,WAAW,EAAE,IAAI,CAACxE,iBAAiB,CAAC9B,kBAAA,CAAAuG,UAAU,CAAC1C,MAAM,EAAE,MAAM,CAAC;QAC9D2C,cAAc,EAAE,IAAI,CAAC1E,iBAAiB,CACpC,IAAI,CAACM,eAAe,CAClB,MAAM;UAAA;UAAA1C,aAAA,GAAAoB,CAAA;UAAApB,aAAA,GAAAE,CAAA;UAAA,OAAAI,kBAAA,CAAAuG,UAAU,CAACX,MAAM,CAAC,CAACC,GAAG,EAAEY,KAAK,KAAK;YAAA;YAAA/G,aAAA,GAAAoB,CAAA;YAAApB,aAAA,GAAAE,CAAA;YAAA,OAAAiG,GAAG,GAAGY,KAAK,CAACC,SAAS;UAAT,CAAS,EAAE,CAAC,CAAC;QAAD,CAAC,EACjE,CAAC,EACD,gBAAgB,CACjB,EACD,MAAM,CACP;QACDC,YAAY,EAAE,IAAI,CAAC7E,iBAAiB,CAClC,GAAG,IAAI,CAACM,eAAe,CACrB,MAAM;UAAA;UAAA1C,aAAA,GAAAoB,CAAA;UAAApB,aAAA,GAAAE,CAAA;UAAA,QAACI,kBAAA,CAAAuG,UAAU,CAACX,MAAM,CAAC,CAACC,GAAG,EAAEY,KAAK,KAAK;YAAA;YAAA/G,aAAA,GAAAoB,CAAA;YAAApB,aAAA,GAAAE,CAAA;YAAA,OAAAiG,GAAG,GAAGY,KAAK,CAACG,OAAO;UAAP,CAAO,EAAE,CAAC,CAAC,GAAG,SAAS,EAAEV,OAAO,CAAC,CAAC,CAAC;QAAD,CAAC,EACxF,OAAO,EACP,cAAc,CACf,MAAM,EACP,MAAM,CACP;QACDW,cAAc,EAAE,IAAI,CAAC/E,iBAAiB,CACpC9B,kBAAA,CAAAuG,UAAU,CAACxC,MAAM,CAAC+C,CAAC,IAAI;UAAA;UAAApH,aAAA,GAAAoB,CAAA;UAAApB,aAAA,GAAAE,CAAA;UAAA,OAAAkH,CAAC,CAACC,MAAM,KAAK,UAAU;QAAV,CAAU,CAAC,CAAClD,MAAM,EACtD,MAAM;;KAGX;EACH;EAEAmD,kBAAkBA,CAAA;IAAA;IAAAtH,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAE,CAAA;IAChB,OAAO;MACL0E,SAAS,EAAE,KAAK;MAChBnC,MAAM,EAAE,IAAI;MACZ9B,QAAQ,EAAEH,aAAa,CAACM,QAAQ,CAACH,QAAQ;MACzCkE,KAAK,EAAE;QACL0C,aAAa,EAAE,IAAI,CAACnF,iBAAiB,CAAC9B,kBAAA,CAAAkH,YAAY,CAACrD,MAAM,EAAE,MAAM,CAAC;QAClEsD,iBAAiB,EAAE,IAAI,CAACrF,iBAAiB,CACvC,IAAI,CAACM,eAAe,CAClB,MAAM;UAAA;UAAA1C,aAAA,GAAAoB,CAAA;UAAApB,aAAA,GAAAE,CAAA;UAAA,OAAAI,kBAAA,CAAAkH,YAAY,CAACtB,MAAM,CAAC,CAACC,GAAG,EAAEuB,OAAO,KAAK;YAAA;YAAA1H,aAAA,GAAAoB,CAAA;YAAApB,aAAA,GAAAE,CAAA;YAAA,OAAAiG,GAAG,GAAGuB,OAAO,CAACC,YAAY;UAAZ,CAAY,EAAE,CAAC,CAAC;QAAD,CAAC,EAC1E,CAAC,EACD,mBAAmB,CACpB,EACD,MAAM,CACP;QACDC,YAAY,EAAE,IAAI,CAACxF,iBAAiB,CAClC,GAAG,IAAI,CAACM,eAAe,CACrB,MAAM;UAAA;UAAA1C,aAAA,GAAAoB,CAAA;UAAApB,aAAA,GAAAE,CAAA;UAAA,QAACI,kBAAA,CAAAkH,YAAY,CAACtB,MAAM,CAAC,CAACC,GAAG,EAAEuB,OAAO,KAAK;YAAA;YAAA1H,aAAA,GAAAoB,CAAA;YAAApB,aAAA,GAAAE,CAAA;YAAA,OAAAiG,GAAG,GAAGuB,OAAO,CAACG,OAAO;UAAP,CAAO,EAAE,CAAC,CAAC,GAAG,SAAS,EAAErB,OAAO,CAAC,CAAC,CAAC;QAAD,CAAC,EAC9F,OAAO,EACP,cAAc,CACf,MAAM,EACP,MAAM,CACP;QACDsB,WAAW,EAAE,IAAI,CAAC1F,iBAAiB,CACjC,GAAG,IAAI,CAACM,eAAe,CACrB,MAAM;UAAA;UAAA1C,aAAA,GAAAoB,CAAA;UAAApB,aAAA,GAAAE,CAAA;UAAA,OAAAuE,IAAI,CAACC,KAAK,CAACpE,kBAAA,CAAAkH,YAAY,CAACtB,MAAM,CAAC,CAACC,GAAG,EAAEuB,OAAO,KAAK;YAAA;YAAA1H,aAAA,GAAAoB,CAAA;YAAApB,aAAA,GAAAE,CAAA;YAAA,OAAAiG,GAAG,GAAGuB,OAAO,CAACK,QAAQ;UAAR,CAAQ,EAAE,CAAC,CAAC,GAAGzH,kBAAA,CAAAkH,YAAY,CAACrD,MAAM,CAAC;QAAD,CAAC,EACxG,CAAC,EACD,aAAa,CACd,GAAG,EACJ,MAAM;;KAGX;EACH;EAEA6D,gBAAgBA,CAAA;IAAA;IAAAhI,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAE,CAAA;IACd,OAAO;MACL0E,SAAS,EAAE,KAAK;MAChBnC,MAAM,EAAE,IAAI;MACZ9B,QAAQ,EAAEH,aAAa,CAACO,MAAM,CAACJ,QAAQ;MACvCkE,KAAK,EAAE;QACLoD,WAAW,EAAE,IAAI,CAAC7F,iBAAiB,CAAC9B,kBAAA,CAAA4H,UAAU,CAAC/D,MAAM,EAAE,MAAM,CAAC;QAC9DgE,aAAa,EAAE,IAAI,CAAC/F,iBAAiB,CACnC,GAAG,IAAI,CAACM,eAAe,CACrB,MAAM;UAAA;UAAA1C,aAAA,GAAAoB,CAAA;UAAApB,aAAA,GAAAE,CAAA;UAAA,QAACI,kBAAA,CAAA4H,UAAU,CAAChC,MAAM,CAAC,CAACC,GAAG,EAAEiC,KAAK,KAAK;YAAA;YAAApI,aAAA,GAAAoB,CAAA;YAAApB,aAAA,GAAAE,CAAA;YAAA,OAAAiG,GAAG,GAAGiC,KAAK,CAACD,aAAa;UAAb,CAAa,EAAE,CAAC,CAAC,GAAG,SAAS,EAAE3B,OAAO,CAAC,CAAC,CAAC;QAAD,CAAC,EAC9F,OAAO,EACP,eAAe,CAChB,MAAM,EACP,MAAM,CACP;QACD6B,YAAY,EAAE,IAAI,CAACjG,iBAAiB,CAClC,IAAI,CAACM,eAAe,CAClB,MAAM;UAAA;UAAA1C,aAAA,GAAAoB,CAAA;UAAApB,aAAA,GAAAE,CAAA;UAAA,OAAAI,kBAAA,CAAA4H,UAAU,CAAChC,MAAM,CAAC,CAACC,GAAG,EAAEiC,KAAK,KAAK;YAAA;YAAApI,aAAA,GAAAoB,CAAA;YAAApB,aAAA,GAAAE,CAAA;YAAA,OAAAiG,GAAG,GAAGiC,KAAK,CAACE,OAAO;UAAP,CAAO,EAAE,CAAC,CAAC;QAAD,CAAC,EAC/D,CAAC,EACD,cAAc,CACf,EACD,MAAM,CACP;QACDC,eAAe,EAAE,IAAI,CAACnG,iBAAiB,CACrC9B,kBAAA,CAAA4H,UAAU,CAAC7D,MAAM,CAACmE,CAAC,IAAI;UAAA;UAAAxI,aAAA,GAAAoB,CAAA;UAAApB,aAAA,GAAAE,CAAA;UAAA,OAAAsI,CAAC,CAACnB,MAAM,KAAK,WAAW;QAAX,CAAW,CAAC,CAAClD,MAAM,EACvD,MAAM;;KAGX;EACH;EAEAsE,gBAAgBA,CAAA;IAAA;IAAAzI,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAE,CAAA;IACd,OAAO;MACL0E,SAAS,EAAE,KAAK;MAChBnC,MAAM,EAAE,IAAI;MACZ9B,QAAQ,EAAEH,aAAa,CAACQ,MAAM,CAACL,QAAQ;MACvCkE,KAAK,EAAE;QACL6D,gBAAgB,EAAE,IAAI,CAACtG,iBAAiB,CAAC9B,kBAAA,CAAAqI,UAAU,CAACxE,MAAM,EAAE,MAAM,CAAC;QACnEyE,OAAO,EAAE,IAAI,CAACxG,iBAAiB,CAC7B9B,kBAAA,CAAAqI,UAAU,CAACtE,MAAM,CAACwE,CAAC,IAAI;UAAA;UAAA7I,aAAA,GAAAoB,CAAA;UAAApB,aAAA,GAAAE,CAAA;UAAA,OAAA2I,CAAC,CAACC,YAAY,KAAK,QAAQ;QAAR,CAAQ,CAAC,CAAC3E,MAAM,EAC1D,MAAM,CACP;QACD4E,UAAU,EAAE,IAAI,CAAC3G,iBAAiB,CAChC9B,kBAAA,CAAAqI,UAAU,CAACtE,MAAM,CAACwE,CAAC,IAAI;UAAA;UAAA7I,aAAA,GAAAoB,CAAA;UAAApB,aAAA,GAAAE,CAAA;UAAA,OAAA2I,CAAC,CAACC,YAAY,KAAK,WAAW;QAAX,CAAW,CAAC,CAAC3E,MAAM,EAC7D,MAAM,CACP;QACD6E,iBAAiB,EAAE,IAAI,CAAC5G,iBAAiB,CACvC,IAAI,CAACM,eAAe,CAClB,MAAM;UAAA;UAAA1C,aAAA,GAAAoB,CAAA;UAAApB,aAAA,GAAAE,CAAA;UAAA,OAAAI,kBAAA,CAAAqI,UAAU,CAACzC,MAAM,CAAC,CAACC,GAAG,EAAE8C,MAAM,KAAK;YAAA;YAAAjJ,aAAA,GAAAoB,CAAA;YAAApB,aAAA,GAAAE,CAAA;YAAA,OAAAiG,GAAG,GAAG8C,MAAM,CAACD,iBAAiB;UAAjB,CAAiB,EAAE,CAAC,CAAC;QAAD,CAAC,EAC3E,CAAC,EACD,mBAAmB,CACpB,EACD,MAAM;;KAGX;EACH;EAEA,MAAME,aAAaA,CAAC7F,MAAc,EAAE6B,aAAsB;IAAA;IAAAlF,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAE,CAAA;IACxD,IAAI;MACF,MAAM,CAACO,WAAW,EAAEQ,MAAM,CAAC;MAAA;MAAA,CAAAjB,aAAA,GAAAE,CAAA,QAAG,MAAMwD,OAAO,CAACC,GAAG,CAAC,CAC9C,IAAI,CAACP,qBAAqB,CAACC,MAAM,CAAC,EAClC,IAAI,CAAC4B,gBAAgB,CAACC,aAAa,CAAC,CACrC,CAAC;MAAA;MAAAlF,aAAA,GAAAE,CAAA;MAEF,OAAO;QACLO,WAAW;QACXQ,MAAM;QACNL,aAAa,EAAE,IAAI,CAACkF,uBAAuB,EAAE;QAC7CjF,MAAM,EAAE,IAAI,CAAC8F,gBAAgB,EAAE;QAC/B7F,QAAQ,EAAE,IAAI,CAACwG,kBAAkB,EAAE;QACnCvG,MAAM,EAAE,IAAI,CAACiH,gBAAgB,EAAE;QAC/BhH,MAAM,EAAE,IAAI,CAACyH,gBAAgB;OAC9B;IACH,CAAC,CAAC,OAAOtF,KAAK,EAAE;MAAA;MAAAnD,aAAA,GAAAE,CAAA;MACdK,QAAA,CAAA0C,MAAM,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,EAAE,WAAW,CAAC;MAAA;MAAAnD,aAAA,GAAAE,CAAA;MAC9D,MAAMiD,KAAK;IACb;EACF;EAEA;EACAgG,cAAcA,CAACC,MAAc,EAAEC,QAAA;EAAA;EAAA,CAAArJ,aAAA,GAAA4B,CAAA,WAAmB,MAAM;IAAA;IAAA5B,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAE,CAAA;IACtD,IAAImJ,QAAQ,KAAK,KAAK,EAAE;MAAA;MAAArJ,aAAA,GAAA4B,CAAA;MAAA5B,aAAA,GAAAE,CAAA;MACtB,OAAO,IAAI,CAACkJ,MAAM,GAAG,SAAS,EAAE5C,OAAO,CAAC,CAAC,CAAC,EAAE;IAC9C,CAAC;IAAA;IAAA;MAAAxG,aAAA,GAAA4B,CAAA;IAAA;IAAA5B,aAAA,GAAAE,CAAA;IACD,OAAO,GAAGkJ,MAAM,CAACE,cAAc,CAAC,OAAO,CAAC,OAAO;EACjD;EAEAC,UAAUA,CAAA;IAAA;IAAAvJ,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAE,CAAA;IACR,IAAI,CAACmB,KAAK,CAACmI,KAAK,EAAE;EACpB;EAEAC,aAAaA,CAAA;IAAA;IAAAzJ,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAE,CAAA;IACX,OAAO;MACLwJ,IAAI,EAAE,IAAI,CAACrI,KAAK,CAACqI,IAAI;MACrBC,IAAI,EAAEC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACxI,KAAK,CAACsI,IAAI,EAAE;KACnC;EACH;;AAGF;AAAA;AAAA3J,aAAA,GAAAE,CAAA;AACa4J,OAAA,CAAAC,gBAAgB,GAAG,IAAI7I,gBAAgB,EAAE;AAAA;AAAAlB,aAAA,GAAAE,CAAA;AACtD4J,OAAA,CAAAE,OAAA,GAAeF,OAAA,CAAAC,gBAAgB","ignoreList":[]}