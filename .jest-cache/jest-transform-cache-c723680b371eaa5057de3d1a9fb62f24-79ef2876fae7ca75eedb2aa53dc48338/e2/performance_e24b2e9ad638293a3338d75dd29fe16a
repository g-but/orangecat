bbf55fafd8c9a57ae795b50000da27f5
"use strict";

/* istanbul ignore next */
function cov_201k99y8ix() {
  var path = "/home/g/dev/orangecat/src/utils/performance.tsx";
  var hash = "c4b641c4d7abc3814fe936657220418266101f1c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/utils/performance.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 194
        }
      },
      "4": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 50
        }
      },
      "5": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 44
        }
      },
      "6": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 28
        }
      },
      "7": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 28
        }
      },
      "8": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "9": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 54
        }
      },
      "10": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 34
        }
      },
      "11": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 34
        }
      },
      "12": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 50
        }
      },
      "13": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 44
        }
      },
      "14": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 40
        }
      },
      "15": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 56
        }
      },
      "16": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 66
        }
      },
      "17": {
        start: {
          line: 20,
          column: 22
        },
        end: {
          line: 20,
          column: 50
        }
      },
      "18": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 32
        }
      },
      "19": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 49
        }
      },
      "20": {
        start: {
          line: 36,
          column: 17
        },
        end: {
          line: 36,
          column: 36
        }
      },
      "21": {
        start: {
          line: 42,
          column: 26
        },
        end: {
          line: 42,
          column: 53
        }
      },
      "22": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 45,
          column: 6
        }
      },
      "23": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 259
        }
      },
      "24": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "25": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "26": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 57
        }
      },
      "27": {
        start: {
          line: 54,
          column: 45
        },
        end: {
          line: 54,
          column: 55
        }
      },
      "28": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 46
        }
      },
      "29": {
        start: {
          line: 57,
          column: 29
        },
        end: {
          line: 57,
          column: 39
        }
      },
      "30": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 31
        }
      },
      "31": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 48
        }
      },
      "32": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 46
        }
      },
      "33": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 39
        }
      },
      "34": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 23
        }
      },
      "35": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "36": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 31
        }
      },
      "37": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 82,
          column: 11
        }
      },
      "38": {
        start: {
          line: 85,
          column: 22
        },
        end: {
          line: 85,
          column: 41
        }
      },
      "39": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 87,
          column: 24
        }
      },
      "40": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 24
        }
      },
      "41": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "42": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 35
        }
      },
      "43": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 24
        }
      },
      "44": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 25
        }
      },
      "45": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 27
        }
      },
      "46": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 38
        }
      },
      "47": {
        start: {
          line: 101,
          column: 22
        },
        end: {
          line: 101,
          column: 41
        }
      },
      "48": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "49": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 43
        }
      },
      "50": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 38
        }
      },
      "51": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "52": {
        start: {
          line: 109,
          column: 28
        },
        end: {
          line: 109,
          column: 60
        }
      },
      "53": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "54": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 47
        }
      },
      "55": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 27
        }
      },
      "56": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 23
        }
      },
      "57": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 31
        }
      },
      "58": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 121,
          column: 30
        }
      },
      "59": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 122,
          column: 56
        }
      },
      "60": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "61": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 129,
          column: 13
        }
      },
      "62": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 127,
          column: 17
        }
      },
      "63": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 126,
          column: 51
        }
      },
      "64": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 39
        }
      },
      "65": {
        start: {
          line: 133,
          column: 24
        },
        end: {
          line: 133,
          column: 28
        }
      },
      "66": {
        start: {
          line: 134,
          column: 30
        },
        end: {
          line: 134,
          column: 40
        }
      },
      "67": {
        start: {
          line: 135,
          column: 29
        },
        end: {
          line: 135,
          column: 37
        }
      },
      "68": {
        start: {
          line: 136,
          column: 24
        },
        end: {
          line: 136,
          column: 56
        }
      },
      "69": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "70": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "71": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 32
        }
      },
      "72": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 50
        }
      },
      "73": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 48
        }
      },
      "74": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "75": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 35
        }
      },
      "76": {
        start: {
          line: 150,
          column: 24
        },
        end: {
          line: 150,
          column: 56
        }
      },
      "77": {
        start: {
          line: 151,
          column: 26
        },
        end: {
          line: 151,
          column: 85
        }
      },
      "78": {
        start: {
          line: 151,
          column: 61
        },
        end: {
          line: 151,
          column: 81
        }
      },
      "79": {
        start: {
          line: 152,
          column: 25
        },
        end: {
          line: 152,
          column: 85
        }
      },
      "80": {
        start: {
          line: 152,
          column: 60
        },
        end: {
          line: 152,
          column: 81
        }
      },
      "81": {
        start: {
          line: 153,
          column: 27
        },
        end: {
          line: 153,
          column: 52
        }
      },
      "82": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 158,
          column: 10
        }
      },
      "83": {
        start: {
          line: 161,
          column: 0
        },
        end: {
          line: 161,
          column: 44
        }
      },
      "84": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 41
        }
      },
      "85": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "86": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 49
        }
      },
      "87": {
        start: {
          line: 176,
          column: 24
        },
        end: {
          line: 179,
          column: 10
        }
      },
      "88": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 45
        }
      },
      "89": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 47
        }
      },
      "90": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 23
        }
      },
      "91": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 37
        }
      },
      "92": {
        start: {
          line: 187,
          column: 0
        },
        end: {
          line: 187,
          column: 50
        }
      },
      "93": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 33
        }
      },
      "94": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "95": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 39
        }
      },
      "96": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 43
        }
      },
      "97": {
        start: {
          line: 202,
          column: 23
        },
        end: {
          line: 202,
          column: 45
        }
      },
      "98": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "99": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 27
        }
      },
      "100": {
        start: {
          line: 208,
          column: 22
        },
        end: {
          line: 208,
          column: 39
        }
      },
      "101": {
        start: {
          line: 209,
          column: 23
        },
        end: {
          line: 209,
          column: 27
        }
      },
      "102": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 51
        }
      },
      "103": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 22
        }
      },
      "104": {
        start: {
          line: 214,
          column: 22
        },
        end: {
          line: 214,
          column: 39
        }
      },
      "105": {
        start: {
          line: 215,
          column: 23
        },
        end: {
          line: 215,
          column: 33
        }
      },
      "106": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 51
        }
      },
      "107": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 22
        }
      },
      "108": {
        start: {
          line: 220,
          column: 23
        },
        end: {
          line: 220,
          column: 51
        }
      },
      "109": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 222,
          column: 24
        }
      },
      "110": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 24
        }
      },
      "111": {
        start: {
          line: 223,
          column: 23
        },
        end: {
          line: 223,
          column: 56
        }
      },
      "112": {
        start: {
          line: 223,
          column: 50
        },
        end: {
          line: 223,
          column: 55
        }
      },
      "113": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 232,
          column: 10
        }
      },
      "114": {
        start: {
          line: 228,
          column: 45
        },
        end: {
          line: 228,
          column: 54
        }
      },
      "115": {
        start: {
          line: 235,
          column: 22
        },
        end: {
          line: 235,
          column: 24
        }
      },
      "116": {
        start: {
          line: 236,
          column: 21
        },
        end: {
          line: 236,
          column: 52
        }
      },
      "117": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "118": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 46
        }
      },
      "119": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 21
        }
      },
      "120": {
        start: {
          line: 243,
          column: 0
        },
        end: {
          line: 243,
          column: 48
        }
      },
      "121": {
        start: {
          line: 249,
          column: 18
        },
        end: {
          line: 249,
          column: 22
        }
      },
      "122": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 262,
          column: 7
        }
      },
      "123": {
        start: {
          line: 251,
          column: 22
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "124": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 27
        }
      },
      "125": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 254,
          column: 30
        }
      },
      "126": {
        start: {
          line: 254,
          column: 16
        },
        end: {
          line: 254,
          column: 30
        }
      },
      "127": {
        start: {
          line: 256,
          column: 24
        },
        end: {
          line: 256,
          column: 45
        }
      },
      "128": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 258,
          column: 34
        }
      },
      "129": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 34
        }
      },
      "130": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 42
        }
      },
      "131": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 261,
          column: 26
        }
      },
      "132": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 26
        }
      },
      "133": {
        start: {
          line: 268,
          column: 19
        },
        end: {
          line: 268,
          column: 20
        }
      },
      "134": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 275,
          column: 7
        }
      },
      "135": {
        start: {
          line: 270,
          column: 20
        },
        end: {
          line: 270,
          column: 30
        }
      },
      "136": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "137": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 27
        }
      },
      "138": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 33
        }
      },
      "139": {
        start: {
          line: 282,
          column: 4
        },
        end: {
          line: 294,
          column: 5
        }
      },
      "140": {
        start: {
          line: 282,
          column: 17
        },
        end: {
          line: 282,
          column: 18
        }
      },
      "141": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 293,
          column: 9
        }
      },
      "142": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 36
        }
      },
      "143": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 91
        }
      },
      "144": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 290,
          column: 13
        }
      },
      "145": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 289,
          column: 32
        }
      },
      "146": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 78
        }
      },
      "147": {
        start: {
          line: 292,
          column: 41
        },
        end: {
          line: 292,
          column: 76
        }
      },
      "148": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 295,
          column: 20
        }
      },
      "149": {
        start: {
          line: 301,
          column: 4
        },
        end: {
          line: 302,
          column: 15
        }
      },
      "150": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 15
        }
      },
      "151": {
        start: {
          line: 303,
          column: 21
        },
        end: {
          line: 310,
          column: 5
        }
      },
      "152": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 309,
          column: 11
        }
      },
      "153": {
        start: {
          line: 305,
          column: 25
        },
        end: {
          line: 305,
          column: 55
        }
      },
      "154": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 34
        }
      },
      "155": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 28
        }
      },
      "156": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 308,
          column: 44
        }
      },
      "157": {
        start: {
          line: 312,
          column: 19
        },
        end: {
          line: 312,
          column: 57
        }
      },
      "158": {
        start: {
          line: 313,
          column: 20
        },
        end: {
          line: 318,
          column: 5
        }
      },
      "159": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 314,
          column: 19
        }
      },
      "160": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 317,
          column: 11
        }
      },
      "161": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 63
        }
      },
      "162": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 321,
          column: 7
        }
      },
      "163": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 56
        }
      },
      "164": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 35
        }
      },
      "165": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 35
        }
      },
      "166": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 335,
          column: 35
        }
      },
      "167": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 338,
          column: 35
        }
      },
      "168": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 341,
          column: 38
        }
      },
      "169": {
        start: {
          line: 344,
          column: 0
        },
        end: {
          line: 344,
          column: 30
        }
      },
      "170": {
        start: {
          line: 347,
          column: 0
        },
        end: {
          line: 347,
          column: 81
        }
      },
      "171": {
        start: {
          line: 348,
          column: 0
        },
        end: {
          line: 348,
          column: 56
        }
      },
      "172": {
        start: {
          line: 349,
          column: 0
        },
        end: {
          line: 349,
          column: 54
        }
      },
      "173": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 351,
          column: 32
        }
      },
      "174": {
        start: {
          line: 356,
          column: 48
        },
        end: {
          line: 356,
          column: 76
        }
      },
      "175": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 364,
          column: 23
        }
      },
      "176": {
        start: {
          line: 358,
          column: 24
        },
        end: {
          line: 360,
          column: 17
        }
      },
      "177": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 37
        }
      },
      "178": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 363,
          column: 10
        }
      },
      "179": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 34
        }
      },
      "180": {
        start: {
          line: 365,
          column: 4
        },
        end: {
          line: 365,
          column: 26
        }
      },
      "181": {
        start: {
          line: 371,
          column: 20
        },
        end: {
          line: 371,
          column: 51
        }
      },
      "182": {
        start: {
          line: 372,
          column: 4
        },
        end: {
          line: 379,
          column: 13
        }
      },
      "183": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 376,
          column: 9
        }
      },
      "184": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 374,
          column: 30
        }
      },
      "185": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 41
        }
      },
      "186": {
        start: {
          line: 385,
          column: 19
        },
        end: {
          line: 385,
          column: 47
        }
      },
      "187": {
        start: {
          line: 386,
          column: 4
        },
        end: {
          line: 393,
          column: 25
        }
      },
      "188": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 388,
          column: 26
        }
      },
      "189": {
        start: {
          line: 388,
          column: 12
        },
        end: {
          line: 388,
          column: 26
        }
      },
      "190": {
        start: {
          line: 389,
          column: 22
        },
        end: {
          line: 389,
          column: 31
        }
      },
      "191": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 44
        }
      },
      "192": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 391,
          column: 21
        }
      },
      "193": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 401,
          column: 21
        }
      },
      "194": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 401,
          column: 21
        }
      },
      "195": {
        start: {
          line: 402,
          column: 23
        },
        end: {
          line: 402,
          column: 43
        }
      },
      "196": {
        start: {
          line: 403,
          column: 4
        },
        end: {
          line: 404,
          column: 21
        }
      },
      "197": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 404,
          column: 21
        }
      },
      "198": {
        start: {
          line: 405,
          column: 4
        },
        end: {
          line: 405,
          column: 87
        }
      },
      "199": {
        start: {
          line: 411,
          column: 4
        },
        end: {
          line: 412,
          column: 21
        }
      },
      "200": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 412,
          column: 21
        }
      },
      "201": {
        start: {
          line: 413,
          column: 19
        },
        end: {
          line: 413,
          column: 41
        }
      },
      "202": {
        start: {
          line: 414,
          column: 4
        },
        end: {
          line: 414,
          column: 32
        }
      },
      "203": {
        start: {
          line: 420,
          column: 4
        },
        end: {
          line: 421,
          column: 21
        }
      },
      "204": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 421,
          column: 21
        }
      },
      "205": {
        start: {
          line: 422,
          column: 4
        },
        end: {
          line: 423,
          column: 24
        }
      },
      "206": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 423,
          column: 24
        }
      },
      "207": {
        start: {
          line: 424,
          column: 4
        },
        end: {
          line: 424,
          column: 18
        }
      },
      "208": {
        start: {
          line: 431,
          column: 16
        },
        end: {
          line: 431,
          column: 20
        }
      },
      "209": {
        start: {
          line: 432,
          column: 4
        },
        end: {
          line: 439,
          column: 7
        }
      },
      "210": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 434,
          column: 40
        }
      },
      "211": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 434,
          column: 40
        }
      },
      "212": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 438,
          column: 11
        }
      },
      "213": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 29
        }
      },
      "214": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "createLazyComponent",
        decl: {
          start: {
            line: 41,
            column: 9
          },
          end: {
            line: 41,
            column: 28
          }
        },
        loc: {
          start: {
            line: 41,
            column: 49
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 41
      },
      "2": {
        name: "LazyWrapper",
        decl: {
          start: {
            line: 43,
            column: 20
          },
          end: {
            line: 43,
            column: 31
          }
        },
        loc: {
          start: {
            line: 43,
            column: 39
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 43
      },
      "3": {
        name: "preloadComponent",
        decl: {
          start: {
            line: 50,
            column: 9
          },
          end: {
            line: 50,
            column: 25
          }
        },
        loc: {
          start: {
            line: 50,
            column: 36
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 50
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 54,
            column: 39
          },
          end: {
            line: 54,
            column: 40
          }
        },
        loc: {
          start: {
            line: 54,
            column: 45
          },
          end: {
            line: 54,
            column: 55
          }
        },
        line: 54
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 57,
            column: 23
          },
          end: {
            line: 57,
            column: 24
          }
        },
        loc: {
          start: {
            line: 57,
            column: 29
          },
          end: {
            line: 57,
            column: 39
          }
        },
        line: 57
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 20
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 13
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 84
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        loc: {
          start: {
            line: 97,
            column: 13
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 97
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        loc: {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 100
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 107
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        loc: {
          start: {
            line: 116,
            column: 11
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 116
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 14
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 120
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 18
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 132
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        loc: {
          start: {
            line: 149,
            column: 15
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 149
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 151,
            column: 41
          },
          end: {
            line: 151,
            column: 42
          }
        },
        loc: {
          start: {
            line: 151,
            column: 61
          },
          end: {
            line: 151,
            column: 81
          }
        },
        line: 151
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 152,
            column: 40
          },
          end: {
            line: 152,
            column: 41
          }
        },
        loc: {
          start: {
            line: 152,
            column: 60
          },
          end: {
            line: 152,
            column: 81
          }
        },
        line: 152
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        loc: {
          start: {
            line: 167,
            column: 18
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 167
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 33
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 170
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 176,
            column: 44
          },
          end: {
            line: 176,
            column: 45
          }
        },
        loc: {
          start: {
            line: 176,
            column: 50
          },
          end: {
            line: 179,
            column: 9
          }
        },
        line: 176
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 183
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 193,
            column: 18
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 193
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        loc: {
          start: {
            line: 196,
            column: 22
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 196
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        loc: {
          start: {
            line: 207,
            column: 22
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 207
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        loc: {
          start: {
            line: 213,
            column: 33
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 213
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        loc: {
          start: {
            line: 219,
            column: 19
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 219
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 223,
            column: 40
          },
          end: {
            line: 223,
            column: 41
          }
        },
        loc: {
          start: {
            line: 223,
            column: 50
          },
          end: {
            line: 223,
            column: 55
          }
        },
        line: 223
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 228,
            column: 31
          },
          end: {
            line: 228,
            column: 32
          }
        },
        loc: {
          start: {
            line: 228,
            column: 45
          },
          end: {
            line: 228,
            column: 54
          }
        },
        line: 228
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        loc: {
          start: {
            line: 234,
            column: 18
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 234
      },
      "30": {
        name: "debounce",
        decl: {
          start: {
            line: 248,
            column: 9
          },
          end: {
            line: 248,
            column: 17
          }
        },
        loc: {
          start: {
            line: 248,
            column: 49
          },
          end: {
            line: 263,
            column: 1
          }
        },
        line: 248
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 250,
            column: 13
          }
        },
        loc: {
          start: {
            line: 250,
            column: 25
          },
          end: {
            line: 262,
            column: 5
          }
        },
        line: 250
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 251,
            column: 22
          },
          end: {
            line: 251,
            column: 23
          }
        },
        loc: {
          start: {
            line: 251,
            column: 28
          },
          end: {
            line: 255,
            column: 9
          }
        },
        line: 251
      },
      "33": {
        name: "throttle",
        decl: {
          start: {
            line: 267,
            column: 9
          },
          end: {
            line: 267,
            column: 17
          }
        },
        loc: {
          start: {
            line: 267,
            column: 30
          },
          end: {
            line: 276,
            column: 1
          }
        },
        line: 267
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 269,
            column: 13
          }
        },
        loc: {
          start: {
            line: 269,
            column: 25
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 269
      },
      "35": {
        name: "importWithFallback",
        decl: {
          start: {
            line: 281,
            column: 15
          },
          end: {
            line: 281,
            column: 33
          }
        },
        loc: {
          start: {
            line: 281,
            column: 67
          },
          end: {
            line: 296,
            column: 1
          }
        },
        line: 281
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 292,
            column: 30
          },
          end: {
            line: 292,
            column: 31
          }
        },
        loc: {
          start: {
            line: 292,
            column: 41
          },
          end: {
            line: 292,
            column: 76
          }
        },
        line: 292
      },
      "37": {
        name: "prefetchOnInteraction",
        decl: {
          start: {
            line: 300,
            column: 9
          },
          end: {
            line: 300,
            column: 30
          }
        },
        loc: {
          start: {
            line: 300,
            column: 37
          },
          end: {
            line: 322,
            column: 1
          }
        },
        line: 300
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 303,
            column: 21
          },
          end: {
            line: 303,
            column: 22
          }
        },
        loc: {
          start: {
            line: 303,
            column: 27
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 303
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 304,
            column: 21
          },
          end: {
            line: 304,
            column: 22
          }
        },
        loc: {
          start: {
            line: 304,
            column: 28
          },
          end: {
            line: 309,
            column: 9
          }
        },
        line: 304
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 313,
            column: 20
          },
          end: {
            line: 313,
            column: 21
          }
        },
        loc: {
          start: {
            line: 313,
            column: 26
          },
          end: {
            line: 318,
            column: 5
          }
        },
        line: 313
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 315,
            column: 23
          },
          end: {
            line: 315,
            column: 24
          }
        },
        loc: {
          start: {
            line: 315,
            column: 32
          },
          end: {
            line: 317,
            column: 9
          }
        },
        line: 315
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 319,
            column: 19
          },
          end: {
            line: 319,
            column: 20
          }
        },
        loc: {
          start: {
            line: 319,
            column: 28
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 319
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 18
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 328
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 331,
            column: 5
          }
        },
        loc: {
          start: {
            line: 331,
            column: 20
          },
          end: {
            line: 333,
            column: 5
          }
        },
        line: 331
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 334,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        },
        loc: {
          start: {
            line: 334,
            column: 13
          },
          end: {
            line: 336,
            column: 5
          }
        },
        line: 334
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 337,
            column: 4
          },
          end: {
            line: 337,
            column: 5
          }
        },
        loc: {
          start: {
            line: 337,
            column: 13
          },
          end: {
            line: 339,
            column: 5
          }
        },
        line: 337
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 340,
            column: 4
          },
          end: {
            line: 340,
            column: 5
          }
        },
        loc: {
          start: {
            line: 340,
            column: 16
          },
          end: {
            line: 342,
            column: 5
          }
        },
        line: 340
      },
      "48": {
        name: "useDebounce",
        decl: {
          start: {
            line: 355,
            column: 9
          },
          end: {
            line: 355,
            column: 20
          }
        },
        loc: {
          start: {
            line: 355,
            column: 35
          },
          end: {
            line: 366,
            column: 1
          }
        },
        line: 355
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 357,
            column: 27
          },
          end: {
            line: 357,
            column: 28
          }
        },
        loc: {
          start: {
            line: 357,
            column: 33
          },
          end: {
            line: 364,
            column: 5
          }
        },
        line: 357
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 358,
            column: 35
          },
          end: {
            line: 358,
            column: 36
          }
        },
        loc: {
          start: {
            line: 358,
            column: 41
          },
          end: {
            line: 360,
            column: 9
          }
        },
        line: 358
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 361,
            column: 15
          },
          end: {
            line: 361,
            column: 16
          }
        },
        loc: {
          start: {
            line: 361,
            column: 21
          },
          end: {
            line: 363,
            column: 9
          }
        },
        line: 361
      },
      "52": {
        name: "useThrottle",
        decl: {
          start: {
            line: 370,
            column: 9
          },
          end: {
            line: 370,
            column: 20
          }
        },
        loc: {
          start: {
            line: 370,
            column: 38
          },
          end: {
            line: 380,
            column: 1
          }
        },
        line: 370
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 372,
            column: 37
          },
          end: {
            line: 372,
            column: 38
          }
        },
        loc: {
          start: {
            line: 372,
            column: 50
          },
          end: {
            line: 377,
            column: 5
          }
        },
        line: 372
      },
      "54": {
        name: "usePerformanceCache",
        decl: {
          start: {
            line: 384,
            column: 9
          },
          end: {
            line: 384,
            column: 28
          }
        },
        loc: {
          start: {
            line: 384,
            column: 54
          },
          end: {
            line: 394,
            column: 1
          }
        },
        line: 384
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 386,
            column: 36
          },
          end: {
            line: 386,
            column: 37
          }
        },
        loc: {
          start: {
            line: 386,
            column: 42
          },
          end: {
            line: 393,
            column: 5
          }
        },
        line: 386
      },
      "56": {
        name: "isSlowConnection",
        decl: {
          start: {
            line: 399,
            column: 9
          },
          end: {
            line: 399,
            column: 25
          }
        },
        loc: {
          start: {
            line: 399,
            column: 28
          },
          end: {
            line: 406,
            column: 1
          }
        },
        line: 399
      },
      "57": {
        name: "isLowEndDevice",
        decl: {
          start: {
            line: 410,
            column: 9
          },
          end: {
            line: 410,
            column: 23
          }
        },
        loc: {
          start: {
            line: 410,
            column: 26
          },
          end: {
            line: 415,
            column: 1
          }
        },
        line: 410
      },
      "58": {
        name: "getOptimalImageQuality",
        decl: {
          start: {
            line: 419,
            column: 9
          },
          end: {
            line: 419,
            column: 31
          }
        },
        loc: {
          start: {
            line: 419,
            column: 34
          },
          end: {
            line: 425,
            column: 1
          }
        },
        line: 419
      },
      "59": {
        name: "createOptimizedEventHandler",
        decl: {
          start: {
            line: 429,
            column: 9
          },
          end: {
            line: 429,
            column: 36
          }
        },
        loc: {
          start: {
            line: 430,
            column: 2
          },
          end: {
            line: 440,
            column: 1
          }
        },
        line: 430
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 432,
            column: 12
          },
          end: {
            line: 432,
            column: 13
          }
        },
        loc: {
          start: {
            line: 432,
            column: 25
          },
          end: {
            line: 439,
            column: 5
          }
        },
        line: 432
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 435,
            column: 38
          },
          end: {
            line: 435,
            column: 39
          }
        },
        loc: {
          start: {
            line: 435,
            column: 44
          },
          end: {
            line: 438,
            column: 9
          }
        },
        line: 435
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 69
          },
          end: {
            line: 44,
            column: 179
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 80
          },
          end: {
            line: 44,
            column: 119
          }
        }, {
          start: {
            line: 44,
            column: 122
          },
          end: {
            line: 44,
            column: 179
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: 56,
            column: 13
          },
          end: {
            line: 58,
            column: 9
          }
        }],
        line: 53
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 65,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 65,
            column: 26
          },
          end: {
            line: 65,
            column: 28
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 67,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 67,
            column: 30
          }
        }, {
          start: {
            line: 67,
            column: 34
          },
          end: {
            line: 67,
            column: 47
          }
        }],
        line: 67
      },
      "8": {
        loc: {
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 68,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 68,
            column: 38
          }
        }, {
          start: {
            line: 68,
            column: 42
          },
          end: {
            line: 68,
            column: 45
          }
        }],
        line: 68
      },
      "9": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "10": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 87,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 87,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "11": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "12": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "13": {
        loc: {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 102,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 102,
            column: 17
          }
        }, {
          start: {
            line: 102,
            column: 21
          },
          end: {
            line: 102,
            column: 33
          }
        }],
        line: 102
      },
      "14": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "15": {
        loc: {
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 129,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 129,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "16": {
        loc: {
          start: {
            line: 125,
            column: 16
          },
          end: {
            line: 127,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 16
          },
          end: {
            line: 127,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "17": {
        loc: {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "18": {
        loc: {
          start: {
            line: 138,
            column: 16
          },
          end: {
            line: 139,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 16
          },
          end: {
            line: 138,
            column: 49
          }
        }, {
          start: {
            line: 139,
            column: 17
          },
          end: {
            line: 139,
            column: 52
          }
        }, {
          start: {
            line: 139,
            column: 56
          },
          end: {
            line: 139,
            column: 87
          }
        }],
        line: 138
      },
      "19": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "20": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "21": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "22": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "23": {
        loc: {
          start: {
            line: 220,
            column: 23
          },
          end: {
            line: 220,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 23
          },
          end: {
            line: 220,
            column: 45
          }
        }, {
          start: {
            line: 220,
            column: 49
          },
          end: {
            line: 220,
            column: 51
          }
        }],
        line: 220
      },
      "24": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 222,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 222,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "25": {
        loc: {
          start: {
            line: 248,
            column: 30
          },
          end: {
            line: 248,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 248,
            column: 42
          },
          end: {
            line: 248,
            column: 47
          }
        }],
        line: 248
      },
      "26": {
        loc: {
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 254,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 254,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "27": {
        loc: {
          start: {
            line: 256,
            column: 24
          },
          end: {
            line: 256,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 24
          },
          end: {
            line: 256,
            column: 33
          }
        }, {
          start: {
            line: 256,
            column: 37
          },
          end: {
            line: 256,
            column: 45
          }
        }],
        line: 256
      },
      "28": {
        loc: {
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 258,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 258,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "29": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 261,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 261,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "30": {
        loc: {
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "31": {
        loc: {
          start: {
            line: 281,
            column: 54
          },
          end: {
            line: 281,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 281,
            column: 64
          },
          end: {
            line: 281,
            column: 65
          }
        }],
        line: 281
      },
      "32": {
        loc: {
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 290,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 290,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "33": {
        loc: {
          start: {
            line: 301,
            column: 4
          },
          end: {
            line: 302,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 4
          },
          end: {
            line: 302,
            column: 15
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "34": {
        loc: {
          start: {
            line: 373,
            column: 8
          },
          end: {
            line: 376,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 373,
            column: 8
          },
          end: {
            line: 376,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 373
      },
      "35": {
        loc: {
          start: {
            line: 384,
            column: 43
          },
          end: {
            line: 384,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 384,
            column: 50
          },
          end: {
            line: 384,
            column: 52
          }
        }],
        line: 384
      },
      "36": {
        loc: {
          start: {
            line: 387,
            column: 8
          },
          end: {
            line: 388,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 8
          },
          end: {
            line: 388,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 387
      },
      "37": {
        loc: {
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 401,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 401,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 400
      },
      "38": {
        loc: {
          start: {
            line: 403,
            column: 4
          },
          end: {
            line: 404,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 4
          },
          end: {
            line: 404,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "39": {
        loc: {
          start: {
            line: 405,
            column: 11
          },
          end: {
            line: 405,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 405,
            column: 11
          },
          end: {
            line: 405,
            column: 49
          }
        }, {
          start: {
            line: 405,
            column: 53
          },
          end: {
            line: 405,
            column: 86
          }
        }],
        line: 405
      },
      "40": {
        loc: {
          start: {
            line: 411,
            column: 4
          },
          end: {
            line: 412,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 4
          },
          end: {
            line: 412,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "41": {
        loc: {
          start: {
            line: 414,
            column: 11
          },
          end: {
            line: 414,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 414,
            column: 11
          },
          end: {
            line: 414,
            column: 17
          }
        }, {
          start: {
            line: 414,
            column: 21
          },
          end: {
            line: 414,
            column: 31
          }
        }],
        line: 414
      },
      "42": {
        loc: {
          start: {
            line: 420,
            column: 4
          },
          end: {
            line: 421,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 420,
            column: 4
          },
          end: {
            line: 421,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 420
      },
      "43": {
        loc: {
          start: {
            line: 420,
            column: 8
          },
          end: {
            line: 420,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 420,
            column: 8
          },
          end: {
            line: 420,
            column: 24
          }
        }, {
          start: {
            line: 420,
            column: 28
          },
          end: {
            line: 420,
            column: 46
          }
        }],
        line: 420
      },
      "44": {
        loc: {
          start: {
            line: 422,
            column: 4
          },
          end: {
            line: 423,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 4
          },
          end: {
            line: 423,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "45": {
        loc: {
          start: {
            line: 429,
            column: 46
          },
          end: {
            line: 429,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 429,
            column: 54
          },
          end: {
            line: 429,
            column: 56
          }
        }],
        line: 429
      },
      "46": {
        loc: {
          start: {
            line: 433,
            column: 8
          },
          end: {
            line: 434,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 433,
            column: 8
          },
          end: {
            line: 434,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 433
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0],
      "46": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/utils/performance.tsx",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/utils/performance.tsx"],
      sourcesContent: ["/**\n * PERFORMANCE OPTIMIZATION UTILITIES\n * \n * This module provides utilities for improving application performance:\n * - Lazy loading components\n * - Code splitting\n * - Caching strategies\n * - Bundle optimization\n * \n * Created: 2025-06-08\n * Last Modified: 2025-06-08\n * Last Modified Summary: Performance optimization utilities for Option B implementation\n */\n\nimport { lazy, ComponentType, Suspense, ReactNode } from 'react'\nimport React from 'react'\nimport { logger } from './logger'\n\n// ==================== LAZY LOADING UTILITIES ====================\n\n/**\n * Enhanced lazy loading with error boundary and loading states\n */\nexport function createLazyComponent<T = any>(\n  importFn: () => Promise<{ default: ComponentType<T> }>,\n  fallback?: ComponentType\n) {\n  const LazyComponent = lazy(importFn)\n  \n  return function LazyWrapper(props: T) {\n    return (\n      <Suspense fallback={fallback ? React.createElement(fallback) : <div>Loading...</div>}>\n        <LazyComponent {...(props as any)} />\n      </Suspense>\n    )\n  }\n}\n\n/**\n * Preload component for better UX\n */\nexport function preloadComponent(importFn: () => Promise<{ default: ComponentType<any> }>) {\n  // Preload on idle or interaction\n  if (typeof window !== 'undefined') {\n    if ('requestIdleCallback' in window) {\n      window.requestIdleCallback(() => importFn())\n    } else {\n      setTimeout(() => importFn(), 100)\n    }\n  }\n}\n\n// ==================== CACHING UTILITIES ====================\n\ninterface CacheOptions {\n  ttl?: number // Time to live in milliseconds\n  maxSize?: number // Maximum number of entries\n  onEvict?: (key: string, value: any) => void\n}\n\n/**\n * Enhanced caching utility with TTL and size limits\n */\nexport class PerformanceCache<T = any> {\n  private cache = new Map<string, { value: T; timestamp: number; hitCount: number }>()\n  private readonly ttl: number\n  private readonly maxSize: number\n  private readonly onEvict?: (key: string, value: T) => void\n\n  constructor(options: CacheOptions = {}) {\n    this.ttl = options.ttl || 5 * 60 * 1000 // 5 minutes default\n    this.maxSize = options.maxSize || 100\n    this.onEvict = options.onEvict\n  }\n\n  set(key: string, value: T): void {\n    // Clean expired entries before adding new ones\n    this.cleanup()\n    \n    // Remove oldest entries if cache is full\n    if (this.cache.size >= this.maxSize) {\n      this.evictOldest()\n    }\n\n    this.cache.set(key, {\n      value,\n      timestamp: Date.now(),\n      hitCount: 0\n    })\n  }\n\n  get(key: string): T | null {\n    const entry = this.cache.get(key)\n    \n    if (!entry) return null\n    \n    // Check if expired\n    if (Date.now() - entry.timestamp > this.ttl) {\n      this.cache.delete(key)\n      return null\n    }\n    \n    // Update hit count for LRU\n    entry.hitCount++\n    return entry.value\n  }\n\n  has(key: string): boolean {\n    return this.get(key) !== null\n  }\n\n  delete(key: string): boolean {\n    const entry = this.cache.get(key)\n    if (entry && this.onEvict) {\n      this.onEvict(key, entry.value)\n    }\n    return this.cache.delete(key)\n  }\n\n  clear(): void {\n    if (this.onEvict) {\n      const entries = Array.from(this.cache.entries())\n      for (const [key, entry] of entries) {\n        this.onEvict(key, entry.value)\n      }\n    }\n    this.cache.clear()\n  }\n\n  size(): number {\n    this.cleanup()\n    return this.cache.size\n  }\n\n  private cleanup(): void {\n    const now = Date.now()\n    const entries = Array.from(this.cache.entries())\n    for (const [key, entry] of entries) {\n      if (now - entry.timestamp > this.ttl) {\n        if (this.onEvict) {\n          this.onEvict(key, entry.value)\n        }\n        this.cache.delete(key)\n      }\n    }\n  }\n\n  private evictOldest(): void {\n    let oldestKey: string | null = null\n    let oldestTimestamp = Date.now()\n    let lowestHitCount = Infinity\n\n    const entries = Array.from(this.cache.entries())\n    for (const [key, entry] of entries) {\n      if (entry.timestamp < oldestTimestamp || \n          (entry.timestamp === oldestTimestamp && entry.hitCount < lowestHitCount)) {\n        oldestKey = key\n        oldestTimestamp = entry.timestamp\n        lowestHitCount = entry.hitCount\n      }\n    }\n\n    if (oldestKey) {\n      this.delete(oldestKey)\n    }\n  }\n\n  getStats() {\n    const entries = Array.from(this.cache.entries())\n    const totalHits = entries.reduce((sum, [, entry]) => sum + entry.hitCount, 0)\n    const totalAge = entries.reduce((sum, [, entry]) => sum + entry.timestamp, 0)\n    const averageAge = totalAge / entries.length\n\n    return {\n      size: entries.length,\n      totalHits,\n      averageAge\n    }\n  }\n}\n\n// ==================== REQUEST DEDUPLICATION ====================\n\n/**\n * Deduplicate concurrent requests to the same resource\n */\nexport class RequestDeduplicator {\n  private pendingRequests = new Map<string, Promise<any>>()\n\n  async dedupe<T>(key: string, requestFn: () => Promise<T>): Promise<T> {\n    // If request is already pending, return the same promise\n    if (this.pendingRequests.has(key)) {\n      return this.pendingRequests.get(key)!\n    }\n\n    // Create new request\n    const request = requestFn().finally(() => {\n      // Clean up when request completes\n      this.pendingRequests.delete(key)\n    })\n\n    this.pendingRequests.set(key, request)\n    return request\n  }\n\n  clear(): void {\n    this.pendingRequests.clear()\n  }\n}\n\n// ==================== PERFORMANCE MONITORING ====================\n\n/**\n * Performance metrics collection\n */\nexport class PerformanceMonitor {\n  private metrics = new Map<string, number[]>()\n\n  mark(name: string, value: number): void {\n    if (!this.metrics.has(name)) {\n      this.metrics.set(name, [])\n    }\n    this.metrics.get(name)!.push(value)\n    \n    // Keep only last 100 measurements\n    const values = this.metrics.get(name)!\n    if (values.length > 100) {\n      values.shift()\n    }\n  }\n\n  measure<T>(name: string, fn: () => T): T {\n    const start = performance.now()\n    const result = fn()\n    this.mark(name, performance.now() - start)\n    return result\n  }\n\n  async measureAsync<T>(name: string, fn: () => Promise<T>): Promise<T> {\n    const start = performance.now()\n    const result = await fn()\n    this.mark(name, performance.now() - start)\n    return result\n  }\n\n  getStats(name: string) {\n    const values = this.metrics.get(name) || []\n    if (values.length === 0) return null\n\n    const sorted = [...values].sort((a, b) => a - b)\n    return {\n      count: values.length,\n      min: sorted[0],\n      max: sorted[sorted.length - 1],\n      avg: values.reduce((sum, val) => sum + val, 0) / values.length,\n      p50: sorted[Math.floor(sorted.length * 0.5)],\n      p95: sorted[Math.floor(sorted.length * 0.95)],\n      p99: sorted[Math.floor(sorted.length * 0.99)]\n    }\n  }\n\n  getAllStats() {\n    const stats: Record<string, any> = {}\n    const keys = Array.from(this.metrics.keys())\n    for (const name of keys) {\n      stats[name] = this.getStats(name)\n    }\n    return stats\n  }\n}\n\n// ==================== DEBOUNCING & THROTTLING ====================\n\n/**\n * Enhanced debounce with immediate execution option\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number,\n  immediate = false\n): T {\n  let timeout: NodeJS.Timeout | null = null\n  \n  return ((...args: Parameters<T>) => {\n    const later = () => {\n      timeout = null\n      if (!immediate) func(...args)\n    }\n    \n    const callNow = immediate && !timeout\n    \n    if (timeout) clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n    \n    if (callNow) func(...args)\n  }) as T\n}\n\n/**\n * Throttle function execution\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): T {\n  let lastTime = 0\n  \n  return ((...args: Parameters<T>) => {\n    const now = Date.now()\n    if (now - lastTime >= wait) {\n      lastTime = now\n      return func(...args)\n    }\n  }) as T\n}\n\n// ==================== BUNDLE OPTIMIZATION UTILITIES ====================\n\n/**\n * Dynamic imports with error handling\n */\nexport async function importWithFallback<T>(\n  importFn: () => Promise<T>,\n  fallback: T,\n  retries = 3\n): Promise<T> {\n  for (let i = 0; i < retries; i++) {\n    try {\n      return await importFn()\n    } catch (error) {\n              logger.warn(`Import failed (attempt ${i + 1}/${retries})`, { error })\n      if (i === retries - 1) {\n        return fallback\n      }\n      // Wait before retry\n      await new Promise(resolve => setTimeout(resolve, 1000 * (i + 1)))\n    }\n  }\n  return fallback\n}\n\n/**\n * Prefetch resources on interaction\n */\nexport function prefetchOnInteraction(urls: string[]) {\n  if (typeof window === 'undefined') return\n\n  const prefetch = () => {\n    urls.forEach(url => {\n      const link = document.createElement('link')\n      link.rel = 'prefetch'\n      link.href = url\n      document.head.appendChild(link)\n    })\n  }\n\n  // Prefetch on first user interaction\n  const events = ['mousedown', 'touchstart', 'keydown']\n  const handler = () => {\n    prefetch()\n    events.forEach(event => {\n      document.removeEventListener(event, handler, true)\n    })\n  }\n\n  events.forEach(event => {\n    document.addEventListener(event, handler, true)\n  })\n}\n\n// ==================== MEMORY OPTIMIZATION ====================\n\n/**\n * Weak reference cache for preventing memory leaks\n */\nexport class WeakCache<K extends object, V> {\n  private cache = new WeakMap<K, V>()\n\n  set(key: K, value: V): void {\n    this.cache.set(key, value)\n  }\n\n  get(key: K): V | undefined {\n    return this.cache.get(key)\n  }\n\n  has(key: K): boolean {\n    return this.cache.has(key)\n  }\n\n  delete(key: K): boolean {\n    return this.cache.delete(key)\n  }\n}\n\n// ==================== GLOBAL INSTANCES ====================\n\n// Global instances for common use cases\nexport const globalCache = new PerformanceCache({ ttl: 5 * 60 * 1000, maxSize: 100 })\nexport const requestDeduplicator = new RequestDeduplicator()\nexport const performanceMonitor = new PerformanceMonitor()\n\n// ==================== REACT HOOKS ====================\n\nimport { useCallback, useEffect, useRef, useState } from 'react'\n\n/**\n * Hook for debounced values\n */\nexport function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n\n/**\n * Hook for throttled callbacks\n */\nexport function useThrottle<T extends (...args: any[]) => any>(\n  callback: T,\n  delay: number\n): T {\n  const lastRun = useRef(Date.now())\n\n  return useCallback(\n    ((...args) => {\n      if (Date.now() - lastRun.current >= delay) {\n        callback(...args)\n        lastRun.current = Date.now()\n      }\n    }) as T,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [delay]\n  )\n}\n\n/**\n * Hook for performance-aware cached values\n */\nexport function usePerformanceCache<T>(\n  key: string,\n  factory: () => T,\n  deps: any[] = []\n): T {\n  const cached = globalCache.get(key)\n  \n  return useCallback(() => {\n    if (cached) return cached\n    \n    const value = factory()\n    globalCache.set(key, value)\n    return value\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [key, ...deps])()\n}\n\n// ==================== UTILITY FUNCTIONS ====================\n\n/**\n * Check if device has slow network connection\n */\nexport function isSlowConnection(): boolean {\n  if (typeof navigator === 'undefined') return false\n  \n  const connection = (navigator as any).connection\n  if (!connection) return false\n  \n  return connection.effectiveType === 'slow-2g' || connection.effectiveType === '2g'\n}\n\n/**\n * Check if device is low-end\n */\nexport function isLowEndDevice(): boolean {\n  if (typeof navigator === 'undefined') return false\n  \n  const memory = (navigator as any).deviceMemory\n  return memory && memory < 4 // Less than 4GB RAM\n}\n\n/**\n * Get optimal image quality based on device capabilities\n */\nexport function getOptimalImageQuality(): 'low' | 'medium' | 'high' {\n  if (isLowEndDevice() || isSlowConnection()) return 'low'\n  if (isSlowConnection()) return 'medium'\n  return 'high'\n}\n\n/**\n * Create optimized event handler that prevents excessive re-renders\n */\nexport function createOptimizedEventHandler<T extends (...args: any[]) => void>(\n  handler: T,\n  delay = 16 // ~60fps\n): T {\n  let rafId: number | null = null\n  \n  return ((...args: Parameters<T>) => {\n    if (rafId) cancelAnimationFrame(rafId)\n    \n    rafId = requestAnimationFrame(() => {\n      handler(...args)\n      rafId = null\n    })\n  }) as T\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c4b641c4d7abc3814fe936657220418266101f1c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_201k99y8ix = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_201k99y8ix();
var __importDefault =
/* istanbul ignore next */
(cov_201k99y8ix().s[0]++,
/* istanbul ignore next */
(cov_201k99y8ix().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_201k99y8ix().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_201k99y8ix().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_201k99y8ix().f[0]++;
  cov_201k99y8ix().s[1]++;
  return /* istanbul ignore next */(cov_201k99y8ix().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_201k99y8ix().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_201k99y8ix().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_201k99y8ix().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_201k99y8ix().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_201k99y8ix().s[3]++;
exports.performanceMonitor = exports.requestDeduplicator = exports.globalCache = exports.WeakCache = exports.PerformanceMonitor = exports.RequestDeduplicator = exports.PerformanceCache = void 0;
/* istanbul ignore next */
cov_201k99y8ix().s[4]++;
exports.createLazyComponent = createLazyComponent;
/* istanbul ignore next */
cov_201k99y8ix().s[5]++;
exports.preloadComponent = preloadComponent;
/* istanbul ignore next */
cov_201k99y8ix().s[6]++;
exports.debounce = debounce;
/* istanbul ignore next */
cov_201k99y8ix().s[7]++;
exports.throttle = throttle;
/* istanbul ignore next */
cov_201k99y8ix().s[8]++;
exports.importWithFallback = importWithFallback;
/* istanbul ignore next */
cov_201k99y8ix().s[9]++;
exports.prefetchOnInteraction = prefetchOnInteraction;
/* istanbul ignore next */
cov_201k99y8ix().s[10]++;
exports.useDebounce = useDebounce;
/* istanbul ignore next */
cov_201k99y8ix().s[11]++;
exports.useThrottle = useThrottle;
/* istanbul ignore next */
cov_201k99y8ix().s[12]++;
exports.usePerformanceCache = usePerformanceCache;
/* istanbul ignore next */
cov_201k99y8ix().s[13]++;
exports.isSlowConnection = isSlowConnection;
/* istanbul ignore next */
cov_201k99y8ix().s[14]++;
exports.isLowEndDevice = isLowEndDevice;
/* istanbul ignore next */
cov_201k99y8ix().s[15]++;
exports.getOptimalImageQuality = getOptimalImageQuality;
/* istanbul ignore next */
cov_201k99y8ix().s[16]++;
exports.createOptimizedEventHandler = createOptimizedEventHandler;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_201k99y8ix().s[17]++, require("react/jsx-runtime"));
/**
 * PERFORMANCE OPTIMIZATION UTILITIES
 *
 * This module provides utilities for improving application performance:
 * - Lazy loading components
 * - Code splitting
 * - Caching strategies
 * - Bundle optimization
 *
 * Created: 2025-06-08
 * Last Modified: 2025-06-08
 * Last Modified Summary: Performance optimization utilities for Option B implementation
 */
const react_1 =
/* istanbul ignore next */
(cov_201k99y8ix().s[18]++, require("react"));
const react_2 =
/* istanbul ignore next */
(cov_201k99y8ix().s[19]++, __importDefault(require("react")));
const logger_1 =
/* istanbul ignore next */
(cov_201k99y8ix().s[20]++, require("./logger"));
// ==================== LAZY LOADING UTILITIES ====================
/**
 * Enhanced lazy loading with error boundary and loading states
 */
function createLazyComponent(importFn, fallback) {
  /* istanbul ignore next */
  cov_201k99y8ix().f[1]++;
  const LazyComponent =
  /* istanbul ignore next */
  (cov_201k99y8ix().s[21]++, (0, react_1.lazy)(importFn));
  /* istanbul ignore next */
  cov_201k99y8ix().s[22]++;
  return function LazyWrapper(props) {
    /* istanbul ignore next */
    cov_201k99y8ix().f[2]++;
    cov_201k99y8ix().s[23]++;
    return (0, jsx_runtime_1.jsx)(react_1.Suspense, {
      fallback: fallback ?
      /* istanbul ignore next */
      (cov_201k99y8ix().b[3][0]++, react_2.default.createElement(fallback)) :
      /* istanbul ignore next */
      (cov_201k99y8ix().b[3][1]++, (0, jsx_runtime_1.jsx)("div", {
        children: "Loading..."
      })),
      children: (0, jsx_runtime_1.jsx)(LazyComponent, Object.assign({}, props))
    });
  };
}
/**
 * Preload component for better UX
 */
function preloadComponent(importFn) {
  /* istanbul ignore next */
  cov_201k99y8ix().f[3]++;
  cov_201k99y8ix().s[24]++;
  // Preload on idle or interaction
  if (typeof window !== 'undefined') {
    /* istanbul ignore next */
    cov_201k99y8ix().b[4][0]++;
    cov_201k99y8ix().s[25]++;
    if ('requestIdleCallback' in window) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[5][0]++;
      cov_201k99y8ix().s[26]++;
      window.requestIdleCallback(() => {
        /* istanbul ignore next */
        cov_201k99y8ix().f[4]++;
        cov_201k99y8ix().s[27]++;
        return importFn();
      });
    } else {
      /* istanbul ignore next */
      cov_201k99y8ix().b[5][1]++;
      cov_201k99y8ix().s[28]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_201k99y8ix().f[5]++;
        cov_201k99y8ix().s[29]++;
        return importFn();
      }, 100);
    }
  } else
  /* istanbul ignore next */
  {
    cov_201k99y8ix().b[4][1]++;
  }
}
/**
 * Enhanced caching utility with TTL and size limits
 */
class PerformanceCache {
  constructor(options =
  /* istanbul ignore next */
  (cov_201k99y8ix().b[6][0]++, {})) {
    /* istanbul ignore next */
    cov_201k99y8ix().f[6]++;
    cov_201k99y8ix().s[30]++;
    this.cache = new Map();
    /* istanbul ignore next */
    cov_201k99y8ix().s[31]++;
    this.ttl =
    /* istanbul ignore next */
    (cov_201k99y8ix().b[7][0]++, options.ttl) ||
    /* istanbul ignore next */
    (cov_201k99y8ix().b[7][1]++, 5 * 60 * 1000); // 5 minutes default
    /* istanbul ignore next */
    cov_201k99y8ix().s[32]++;
    this.maxSize =
    /* istanbul ignore next */
    (cov_201k99y8ix().b[8][0]++, options.maxSize) ||
    /* istanbul ignore next */
    (cov_201k99y8ix().b[8][1]++, 100);
    /* istanbul ignore next */
    cov_201k99y8ix().s[33]++;
    this.onEvict = options.onEvict;
  }
  set(key, value) {
    /* istanbul ignore next */
    cov_201k99y8ix().f[7]++;
    cov_201k99y8ix().s[34]++;
    // Clean expired entries before adding new ones
    this.cleanup();
    // Remove oldest entries if cache is full
    /* istanbul ignore next */
    cov_201k99y8ix().s[35]++;
    if (this.cache.size >= this.maxSize) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[9][0]++;
      cov_201k99y8ix().s[36]++;
      this.evictOldest();
    } else
    /* istanbul ignore next */
    {
      cov_201k99y8ix().b[9][1]++;
    }
    cov_201k99y8ix().s[37]++;
    this.cache.set(key, {
      value,
      timestamp: Date.now(),
      hitCount: 0
    });
  }
  get(key) {
    /* istanbul ignore next */
    cov_201k99y8ix().f[8]++;
    const entry =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[38]++, this.cache.get(key));
    /* istanbul ignore next */
    cov_201k99y8ix().s[39]++;
    if (!entry) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[10][0]++;
      cov_201k99y8ix().s[40]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_201k99y8ix().b[10][1]++;
    }
    // Check if expired
    cov_201k99y8ix().s[41]++;
    if (Date.now() - entry.timestamp > this.ttl) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[11][0]++;
      cov_201k99y8ix().s[42]++;
      this.cache.delete(key);
      /* istanbul ignore next */
      cov_201k99y8ix().s[43]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_201k99y8ix().b[11][1]++;
    }
    // Update hit count for LRU
    cov_201k99y8ix().s[44]++;
    entry.hitCount++;
    /* istanbul ignore next */
    cov_201k99y8ix().s[45]++;
    return entry.value;
  }
  has(key) {
    /* istanbul ignore next */
    cov_201k99y8ix().f[9]++;
    cov_201k99y8ix().s[46]++;
    return this.get(key) !== null;
  }
  delete(key) {
    /* istanbul ignore next */
    cov_201k99y8ix().f[10]++;
    const entry =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[47]++, this.cache.get(key));
    /* istanbul ignore next */
    cov_201k99y8ix().s[48]++;
    if (
    /* istanbul ignore next */
    (cov_201k99y8ix().b[13][0]++, entry) &&
    /* istanbul ignore next */
    (cov_201k99y8ix().b[13][1]++, this.onEvict)) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[12][0]++;
      cov_201k99y8ix().s[49]++;
      this.onEvict(key, entry.value);
    } else
    /* istanbul ignore next */
    {
      cov_201k99y8ix().b[12][1]++;
    }
    cov_201k99y8ix().s[50]++;
    return this.cache.delete(key);
  }
  clear() {
    /* istanbul ignore next */
    cov_201k99y8ix().f[11]++;
    cov_201k99y8ix().s[51]++;
    if (this.onEvict) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[14][0]++;
      const entries =
      /* istanbul ignore next */
      (cov_201k99y8ix().s[52]++, Array.from(this.cache.entries()));
      /* istanbul ignore next */
      cov_201k99y8ix().s[53]++;
      for (const [key, entry] of entries) {
        /* istanbul ignore next */
        cov_201k99y8ix().s[54]++;
        this.onEvict(key, entry.value);
      }
    } else
    /* istanbul ignore next */
    {
      cov_201k99y8ix().b[14][1]++;
    }
    cov_201k99y8ix().s[55]++;
    this.cache.clear();
  }
  size() {
    /* istanbul ignore next */
    cov_201k99y8ix().f[12]++;
    cov_201k99y8ix().s[56]++;
    this.cleanup();
    /* istanbul ignore next */
    cov_201k99y8ix().s[57]++;
    return this.cache.size;
  }
  cleanup() {
    /* istanbul ignore next */
    cov_201k99y8ix().f[13]++;
    const now =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[58]++, Date.now());
    const entries =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[59]++, Array.from(this.cache.entries()));
    /* istanbul ignore next */
    cov_201k99y8ix().s[60]++;
    for (const [key, entry] of entries) {
      /* istanbul ignore next */
      cov_201k99y8ix().s[61]++;
      if (now - entry.timestamp > this.ttl) {
        /* istanbul ignore next */
        cov_201k99y8ix().b[15][0]++;
        cov_201k99y8ix().s[62]++;
        if (this.onEvict) {
          /* istanbul ignore next */
          cov_201k99y8ix().b[16][0]++;
          cov_201k99y8ix().s[63]++;
          this.onEvict(key, entry.value);
        } else
        /* istanbul ignore next */
        {
          cov_201k99y8ix().b[16][1]++;
        }
        cov_201k99y8ix().s[64]++;
        this.cache.delete(key);
      } else
      /* istanbul ignore next */
      {
        cov_201k99y8ix().b[15][1]++;
      }
    }
  }
  evictOldest() {
    /* istanbul ignore next */
    cov_201k99y8ix().f[14]++;
    let oldestKey =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[65]++, null);
    let oldestTimestamp =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[66]++, Date.now());
    let lowestHitCount =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[67]++, Infinity);
    const entries =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[68]++, Array.from(this.cache.entries()));
    /* istanbul ignore next */
    cov_201k99y8ix().s[69]++;
    for (const [key, entry] of entries) {
      /* istanbul ignore next */
      cov_201k99y8ix().s[70]++;
      if (
      /* istanbul ignore next */
      (cov_201k99y8ix().b[18][0]++, entry.timestamp < oldestTimestamp) ||
      /* istanbul ignore next */
      (cov_201k99y8ix().b[18][1]++, entry.timestamp === oldestTimestamp) &&
      /* istanbul ignore next */
      (cov_201k99y8ix().b[18][2]++, entry.hitCount < lowestHitCount)) {
        /* istanbul ignore next */
        cov_201k99y8ix().b[17][0]++;
        cov_201k99y8ix().s[71]++;
        oldestKey = key;
        /* istanbul ignore next */
        cov_201k99y8ix().s[72]++;
        oldestTimestamp = entry.timestamp;
        /* istanbul ignore next */
        cov_201k99y8ix().s[73]++;
        lowestHitCount = entry.hitCount;
      } else
      /* istanbul ignore next */
      {
        cov_201k99y8ix().b[17][1]++;
      }
    }
    /* istanbul ignore next */
    cov_201k99y8ix().s[74]++;
    if (oldestKey) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[19][0]++;
      cov_201k99y8ix().s[75]++;
      this.delete(oldestKey);
    } else
    /* istanbul ignore next */
    {
      cov_201k99y8ix().b[19][1]++;
    }
  }
  getStats() {
    /* istanbul ignore next */
    cov_201k99y8ix().f[15]++;
    const entries =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[76]++, Array.from(this.cache.entries()));
    const totalHits =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[77]++, entries.reduce((sum, [, entry]) => {
      /* istanbul ignore next */
      cov_201k99y8ix().f[16]++;
      cov_201k99y8ix().s[78]++;
      return sum + entry.hitCount;
    }, 0));
    const totalAge =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[79]++, entries.reduce((sum, [, entry]) => {
      /* istanbul ignore next */
      cov_201k99y8ix().f[17]++;
      cov_201k99y8ix().s[80]++;
      return sum + entry.timestamp;
    }, 0));
    const averageAge =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[81]++, totalAge / entries.length);
    /* istanbul ignore next */
    cov_201k99y8ix().s[82]++;
    return {
      size: entries.length,
      totalHits,
      averageAge
    };
  }
}
/* istanbul ignore next */
cov_201k99y8ix().s[83]++;
exports.PerformanceCache = PerformanceCache;
// ==================== REQUEST DEDUPLICATION ====================
/**
 * Deduplicate concurrent requests to the same resource
 */
class RequestDeduplicator {
  constructor() {
    /* istanbul ignore next */
    cov_201k99y8ix().f[18]++;
    cov_201k99y8ix().s[84]++;
    this.pendingRequests = new Map();
  }
  async dedupe(key, requestFn) {
    /* istanbul ignore next */
    cov_201k99y8ix().f[19]++;
    cov_201k99y8ix().s[85]++;
    // If request is already pending, return the same promise
    if (this.pendingRequests.has(key)) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[20][0]++;
      cov_201k99y8ix().s[86]++;
      return this.pendingRequests.get(key);
    } else
    /* istanbul ignore next */
    {
      cov_201k99y8ix().b[20][1]++;
    }
    // Create new request
    const request =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[87]++, requestFn().finally(() => {
      /* istanbul ignore next */
      cov_201k99y8ix().f[20]++;
      cov_201k99y8ix().s[88]++;
      // Clean up when request completes
      this.pendingRequests.delete(key);
    }));
    /* istanbul ignore next */
    cov_201k99y8ix().s[89]++;
    this.pendingRequests.set(key, request);
    /* istanbul ignore next */
    cov_201k99y8ix().s[90]++;
    return request;
  }
  clear() {
    /* istanbul ignore next */
    cov_201k99y8ix().f[21]++;
    cov_201k99y8ix().s[91]++;
    this.pendingRequests.clear();
  }
}
/* istanbul ignore next */
cov_201k99y8ix().s[92]++;
exports.RequestDeduplicator = RequestDeduplicator;
// ==================== PERFORMANCE MONITORING ====================
/**
 * Performance metrics collection
 */
class PerformanceMonitor {
  constructor() {
    /* istanbul ignore next */
    cov_201k99y8ix().f[22]++;
    cov_201k99y8ix().s[93]++;
    this.metrics = new Map();
  }
  mark(name, value) {
    /* istanbul ignore next */
    cov_201k99y8ix().f[23]++;
    cov_201k99y8ix().s[94]++;
    if (!this.metrics.has(name)) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[21][0]++;
      cov_201k99y8ix().s[95]++;
      this.metrics.set(name, []);
    } else
    /* istanbul ignore next */
    {
      cov_201k99y8ix().b[21][1]++;
    }
    cov_201k99y8ix().s[96]++;
    this.metrics.get(name).push(value);
    // Keep only last 100 measurements
    const values =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[97]++, this.metrics.get(name));
    /* istanbul ignore next */
    cov_201k99y8ix().s[98]++;
    if (values.length > 100) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[22][0]++;
      cov_201k99y8ix().s[99]++;
      values.shift();
    } else
    /* istanbul ignore next */
    {
      cov_201k99y8ix().b[22][1]++;
    }
  }
  measure(name, fn) {
    /* istanbul ignore next */
    cov_201k99y8ix().f[24]++;
    const start =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[100]++, performance.now());
    const result =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[101]++, fn());
    /* istanbul ignore next */
    cov_201k99y8ix().s[102]++;
    this.mark(name, performance.now() - start);
    /* istanbul ignore next */
    cov_201k99y8ix().s[103]++;
    return result;
  }
  async measureAsync(name, fn) {
    /* istanbul ignore next */
    cov_201k99y8ix().f[25]++;
    const start =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[104]++, performance.now());
    const result =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[105]++, await fn());
    /* istanbul ignore next */
    cov_201k99y8ix().s[106]++;
    this.mark(name, performance.now() - start);
    /* istanbul ignore next */
    cov_201k99y8ix().s[107]++;
    return result;
  }
  getStats(name) {
    /* istanbul ignore next */
    cov_201k99y8ix().f[26]++;
    const values =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[108]++,
    /* istanbul ignore next */
    (cov_201k99y8ix().b[23][0]++, this.metrics.get(name)) ||
    /* istanbul ignore next */
    (cov_201k99y8ix().b[23][1]++, []));
    /* istanbul ignore next */
    cov_201k99y8ix().s[109]++;
    if (values.length === 0) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[24][0]++;
      cov_201k99y8ix().s[110]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_201k99y8ix().b[24][1]++;
    }
    const sorted =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[111]++, [...values].sort((a, b) => {
      /* istanbul ignore next */
      cov_201k99y8ix().f[27]++;
      cov_201k99y8ix().s[112]++;
      return a - b;
    }));
    /* istanbul ignore next */
    cov_201k99y8ix().s[113]++;
    return {
      count: values.length,
      min: sorted[0],
      max: sorted[sorted.length - 1],
      avg: values.reduce((sum, val) => {
        /* istanbul ignore next */
        cov_201k99y8ix().f[28]++;
        cov_201k99y8ix().s[114]++;
        return sum + val;
      }, 0) / values.length,
      p50: sorted[Math.floor(sorted.length * 0.5)],
      p95: sorted[Math.floor(sorted.length * 0.95)],
      p99: sorted[Math.floor(sorted.length * 0.99)]
    };
  }
  getAllStats() {
    /* istanbul ignore next */
    cov_201k99y8ix().f[29]++;
    const stats =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[115]++, {});
    const keys =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[116]++, Array.from(this.metrics.keys()));
    /* istanbul ignore next */
    cov_201k99y8ix().s[117]++;
    for (const name of keys) {
      /* istanbul ignore next */
      cov_201k99y8ix().s[118]++;
      stats[name] = this.getStats(name);
    }
    /* istanbul ignore next */
    cov_201k99y8ix().s[119]++;
    return stats;
  }
}
/* istanbul ignore next */
cov_201k99y8ix().s[120]++;
exports.PerformanceMonitor = PerformanceMonitor;
// ==================== DEBOUNCING & THROTTLING ====================
/**
 * Enhanced debounce with immediate execution option
 */
function debounce(func, wait, immediate =
/* istanbul ignore next */
(cov_201k99y8ix().b[25][0]++, false)) {
  /* istanbul ignore next */
  cov_201k99y8ix().f[30]++;
  let timeout =
  /* istanbul ignore next */
  (cov_201k99y8ix().s[121]++, null);
  /* istanbul ignore next */
  cov_201k99y8ix().s[122]++;
  return (...args) => {
    /* istanbul ignore next */
    cov_201k99y8ix().f[31]++;
    cov_201k99y8ix().s[123]++;
    const later = () => {
      /* istanbul ignore next */
      cov_201k99y8ix().f[32]++;
      cov_201k99y8ix().s[124]++;
      timeout = null;
      /* istanbul ignore next */
      cov_201k99y8ix().s[125]++;
      if (!immediate) {
        /* istanbul ignore next */
        cov_201k99y8ix().b[26][0]++;
        cov_201k99y8ix().s[126]++;
        func(...args);
      } else
      /* istanbul ignore next */
      {
        cov_201k99y8ix().b[26][1]++;
      }
    };
    const callNow =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[127]++,
    /* istanbul ignore next */
    (cov_201k99y8ix().b[27][0]++, immediate) &&
    /* istanbul ignore next */
    (cov_201k99y8ix().b[27][1]++, !timeout));
    /* istanbul ignore next */
    cov_201k99y8ix().s[128]++;
    if (timeout) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[28][0]++;
      cov_201k99y8ix().s[129]++;
      clearTimeout(timeout);
    } else
    /* istanbul ignore next */
    {
      cov_201k99y8ix().b[28][1]++;
    }
    cov_201k99y8ix().s[130]++;
    timeout = setTimeout(later, wait);
    /* istanbul ignore next */
    cov_201k99y8ix().s[131]++;
    if (callNow) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[29][0]++;
      cov_201k99y8ix().s[132]++;
      func(...args);
    } else
    /* istanbul ignore next */
    {
      cov_201k99y8ix().b[29][1]++;
    }
  };
}
/**
 * Throttle function execution
 */
function throttle(func, wait) {
  /* istanbul ignore next */
  cov_201k99y8ix().f[33]++;
  let lastTime =
  /* istanbul ignore next */
  (cov_201k99y8ix().s[133]++, 0);
  /* istanbul ignore next */
  cov_201k99y8ix().s[134]++;
  return (...args) => {
    /* istanbul ignore next */
    cov_201k99y8ix().f[34]++;
    const now =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[135]++, Date.now());
    /* istanbul ignore next */
    cov_201k99y8ix().s[136]++;
    if (now - lastTime >= wait) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[30][0]++;
      cov_201k99y8ix().s[137]++;
      lastTime = now;
      /* istanbul ignore next */
      cov_201k99y8ix().s[138]++;
      return func(...args);
    } else
    /* istanbul ignore next */
    {
      cov_201k99y8ix().b[30][1]++;
    }
  };
}
// ==================== BUNDLE OPTIMIZATION UTILITIES ====================
/**
 * Dynamic imports with error handling
 */
async function importWithFallback(importFn, fallback, retries =
/* istanbul ignore next */
(cov_201k99y8ix().b[31][0]++, 3)) {
  /* istanbul ignore next */
  cov_201k99y8ix().f[35]++;
  cov_201k99y8ix().s[139]++;
  for (let i =
  /* istanbul ignore next */
  (cov_201k99y8ix().s[140]++, 0); i < retries; i++) {
    /* istanbul ignore next */
    cov_201k99y8ix().s[141]++;
    try {
      /* istanbul ignore next */
      cov_201k99y8ix().s[142]++;
      return await importFn();
    } catch (error) {
      /* istanbul ignore next */
      cov_201k99y8ix().s[143]++;
      logger_1.logger.warn(`Import failed (attempt ${i + 1}/${retries})`, {
        error
      });
      /* istanbul ignore next */
      cov_201k99y8ix().s[144]++;
      if (i === retries - 1) {
        /* istanbul ignore next */
        cov_201k99y8ix().b[32][0]++;
        cov_201k99y8ix().s[145]++;
        return fallback;
      } else
      /* istanbul ignore next */
      {
        cov_201k99y8ix().b[32][1]++;
      }
      // Wait before retry
      cov_201k99y8ix().s[146]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_201k99y8ix().f[36]++;
        cov_201k99y8ix().s[147]++;
        return setTimeout(resolve, 1000 * (i + 1));
      });
    }
  }
  /* istanbul ignore next */
  cov_201k99y8ix().s[148]++;
  return fallback;
}
/**
 * Prefetch resources on interaction
 */
function prefetchOnInteraction(urls) {
  /* istanbul ignore next */
  cov_201k99y8ix().f[37]++;
  cov_201k99y8ix().s[149]++;
  if (typeof window === 'undefined') {
    /* istanbul ignore next */
    cov_201k99y8ix().b[33][0]++;
    cov_201k99y8ix().s[150]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_201k99y8ix().b[33][1]++;
  }
  cov_201k99y8ix().s[151]++;
  const prefetch = () => {
    /* istanbul ignore next */
    cov_201k99y8ix().f[38]++;
    cov_201k99y8ix().s[152]++;
    urls.forEach(url => {
      /* istanbul ignore next */
      cov_201k99y8ix().f[39]++;
      const link =
      /* istanbul ignore next */
      (cov_201k99y8ix().s[153]++, document.createElement('link'));
      /* istanbul ignore next */
      cov_201k99y8ix().s[154]++;
      link.rel = 'prefetch';
      /* istanbul ignore next */
      cov_201k99y8ix().s[155]++;
      link.href = url;
      /* istanbul ignore next */
      cov_201k99y8ix().s[156]++;
      document.head.appendChild(link);
    });
  };
  // Prefetch on first user interaction
  const events =
  /* istanbul ignore next */
  (cov_201k99y8ix().s[157]++, ['mousedown', 'touchstart', 'keydown']);
  /* istanbul ignore next */
  cov_201k99y8ix().s[158]++;
  const handler = () => {
    /* istanbul ignore next */
    cov_201k99y8ix().f[40]++;
    cov_201k99y8ix().s[159]++;
    prefetch();
    /* istanbul ignore next */
    cov_201k99y8ix().s[160]++;
    events.forEach(event => {
      /* istanbul ignore next */
      cov_201k99y8ix().f[41]++;
      cov_201k99y8ix().s[161]++;
      document.removeEventListener(event, handler, true);
    });
  };
  /* istanbul ignore next */
  cov_201k99y8ix().s[162]++;
  events.forEach(event => {
    /* istanbul ignore next */
    cov_201k99y8ix().f[42]++;
    cov_201k99y8ix().s[163]++;
    document.addEventListener(event, handler, true);
  });
}
// ==================== MEMORY OPTIMIZATION ====================
/**
 * Weak reference cache for preventing memory leaks
 */
class WeakCache {
  constructor() {
    /* istanbul ignore next */
    cov_201k99y8ix().f[43]++;
    cov_201k99y8ix().s[164]++;
    this.cache = new WeakMap();
  }
  set(key, value) {
    /* istanbul ignore next */
    cov_201k99y8ix().f[44]++;
    cov_201k99y8ix().s[165]++;
    this.cache.set(key, value);
  }
  get(key) {
    /* istanbul ignore next */
    cov_201k99y8ix().f[45]++;
    cov_201k99y8ix().s[166]++;
    return this.cache.get(key);
  }
  has(key) {
    /* istanbul ignore next */
    cov_201k99y8ix().f[46]++;
    cov_201k99y8ix().s[167]++;
    return this.cache.has(key);
  }
  delete(key) {
    /* istanbul ignore next */
    cov_201k99y8ix().f[47]++;
    cov_201k99y8ix().s[168]++;
    return this.cache.delete(key);
  }
}
/* istanbul ignore next */
cov_201k99y8ix().s[169]++;
exports.WeakCache = WeakCache;
// ==================== GLOBAL INSTANCES ====================
// Global instances for common use cases
/* istanbul ignore next */
cov_201k99y8ix().s[170]++;
exports.globalCache = new PerformanceCache({
  ttl: 5 * 60 * 1000,
  maxSize: 100
});
/* istanbul ignore next */
cov_201k99y8ix().s[171]++;
exports.requestDeduplicator = new RequestDeduplicator();
/* istanbul ignore next */
cov_201k99y8ix().s[172]++;
exports.performanceMonitor = new PerformanceMonitor();
// ==================== REACT HOOKS ====================
const react_3 =
/* istanbul ignore next */
(cov_201k99y8ix().s[173]++, require("react"));
/**
 * Hook for debounced values
 */
function useDebounce(value, delay) {
  /* istanbul ignore next */
  cov_201k99y8ix().f[48]++;
  const [debouncedValue, setDebouncedValue] =
  /* istanbul ignore next */
  (cov_201k99y8ix().s[174]++, (0, react_3.useState)(value));
  /* istanbul ignore next */
  cov_201k99y8ix().s[175]++;
  (0, react_3.useEffect)(() => {
    /* istanbul ignore next */
    cov_201k99y8ix().f[49]++;
    const handler =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[176]++, setTimeout(() => {
      /* istanbul ignore next */
      cov_201k99y8ix().f[50]++;
      cov_201k99y8ix().s[177]++;
      setDebouncedValue(value);
    }, delay));
    /* istanbul ignore next */
    cov_201k99y8ix().s[178]++;
    return () => {
      /* istanbul ignore next */
      cov_201k99y8ix().f[51]++;
      cov_201k99y8ix().s[179]++;
      clearTimeout(handler);
    };
  }, [value, delay]);
  /* istanbul ignore next */
  cov_201k99y8ix().s[180]++;
  return debouncedValue;
}
/**
 * Hook for throttled callbacks
 */
function useThrottle(callback, delay) {
  /* istanbul ignore next */
  cov_201k99y8ix().f[52]++;
  const lastRun =
  /* istanbul ignore next */
  (cov_201k99y8ix().s[181]++, (0, react_3.useRef)(Date.now()));
  /* istanbul ignore next */
  cov_201k99y8ix().s[182]++;
  return (0, react_3.useCallback)((...args) => {
    /* istanbul ignore next */
    cov_201k99y8ix().f[53]++;
    cov_201k99y8ix().s[183]++;
    if (Date.now() - lastRun.current >= delay) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[34][0]++;
      cov_201k99y8ix().s[184]++;
      callback(...args);
      /* istanbul ignore next */
      cov_201k99y8ix().s[185]++;
      lastRun.current = Date.now();
    } else
    /* istanbul ignore next */
    {
      cov_201k99y8ix().b[34][1]++;
    }
  },
  // eslint-disable-next-line react-hooks/exhaustive-deps
  [delay]);
}
/**
 * Hook for performance-aware cached values
 */
function usePerformanceCache(key, factory, deps =
/* istanbul ignore next */
(cov_201k99y8ix().b[35][0]++, [])) {
  /* istanbul ignore next */
  cov_201k99y8ix().f[54]++;
  const cached =
  /* istanbul ignore next */
  (cov_201k99y8ix().s[186]++, exports.globalCache.get(key));
  /* istanbul ignore next */
  cov_201k99y8ix().s[187]++;
  return (0, react_3.useCallback)(() => {
    /* istanbul ignore next */
    cov_201k99y8ix().f[55]++;
    cov_201k99y8ix().s[188]++;
    if (cached) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[36][0]++;
      cov_201k99y8ix().s[189]++;
      return cached;
    } else
    /* istanbul ignore next */
    {
      cov_201k99y8ix().b[36][1]++;
    }
    const value =
    /* istanbul ignore next */
    (cov_201k99y8ix().s[190]++, factory());
    /* istanbul ignore next */
    cov_201k99y8ix().s[191]++;
    exports.globalCache.set(key, value);
    /* istanbul ignore next */
    cov_201k99y8ix().s[192]++;
    return value;
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [key, ...deps])();
}
// ==================== UTILITY FUNCTIONS ====================
/**
 * Check if device has slow network connection
 */
function isSlowConnection() {
  /* istanbul ignore next */
  cov_201k99y8ix().f[56]++;
  cov_201k99y8ix().s[193]++;
  if (typeof navigator === 'undefined') {
    /* istanbul ignore next */
    cov_201k99y8ix().b[37][0]++;
    cov_201k99y8ix().s[194]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_201k99y8ix().b[37][1]++;
  }
  const connection =
  /* istanbul ignore next */
  (cov_201k99y8ix().s[195]++, navigator.connection);
  /* istanbul ignore next */
  cov_201k99y8ix().s[196]++;
  if (!connection) {
    /* istanbul ignore next */
    cov_201k99y8ix().b[38][0]++;
    cov_201k99y8ix().s[197]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_201k99y8ix().b[38][1]++;
  }
  cov_201k99y8ix().s[198]++;
  return /* istanbul ignore next */(cov_201k99y8ix().b[39][0]++, connection.effectiveType === 'slow-2g') ||
  /* istanbul ignore next */
  (cov_201k99y8ix().b[39][1]++, connection.effectiveType === '2g');
}
/**
 * Check if device is low-end
 */
function isLowEndDevice() {
  /* istanbul ignore next */
  cov_201k99y8ix().f[57]++;
  cov_201k99y8ix().s[199]++;
  if (typeof navigator === 'undefined') {
    /* istanbul ignore next */
    cov_201k99y8ix().b[40][0]++;
    cov_201k99y8ix().s[200]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_201k99y8ix().b[40][1]++;
  }
  const memory =
  /* istanbul ignore next */
  (cov_201k99y8ix().s[201]++, navigator.deviceMemory);
  /* istanbul ignore next */
  cov_201k99y8ix().s[202]++;
  return /* istanbul ignore next */(cov_201k99y8ix().b[41][0]++, memory) &&
  /* istanbul ignore next */
  (cov_201k99y8ix().b[41][1]++, memory < 4); // Less than 4GB RAM
}
/**
 * Get optimal image quality based on device capabilities
 */
function getOptimalImageQuality() {
  /* istanbul ignore next */
  cov_201k99y8ix().f[58]++;
  cov_201k99y8ix().s[203]++;
  if (
  /* istanbul ignore next */
  (cov_201k99y8ix().b[43][0]++, isLowEndDevice()) ||
  /* istanbul ignore next */
  (cov_201k99y8ix().b[43][1]++, isSlowConnection())) {
    /* istanbul ignore next */
    cov_201k99y8ix().b[42][0]++;
    cov_201k99y8ix().s[204]++;
    return 'low';
  } else
  /* istanbul ignore next */
  {
    cov_201k99y8ix().b[42][1]++;
  }
  cov_201k99y8ix().s[205]++;
  if (isSlowConnection()) {
    /* istanbul ignore next */
    cov_201k99y8ix().b[44][0]++;
    cov_201k99y8ix().s[206]++;
    return 'medium';
  } else
  /* istanbul ignore next */
  {
    cov_201k99y8ix().b[44][1]++;
  }
  cov_201k99y8ix().s[207]++;
  return 'high';
}
/**
 * Create optimized event handler that prevents excessive re-renders
 */
function createOptimizedEventHandler(handler, delay =
/* istanbul ignore next */
(cov_201k99y8ix().b[45][0]++, 16) // ~60fps
) {
  /* istanbul ignore next */
  cov_201k99y8ix().f[59]++;
  let rafId =
  /* istanbul ignore next */
  (cov_201k99y8ix().s[208]++, null);
  /* istanbul ignore next */
  cov_201k99y8ix().s[209]++;
  return (...args) => {
    /* istanbul ignore next */
    cov_201k99y8ix().f[60]++;
    cov_201k99y8ix().s[210]++;
    if (rafId) {
      /* istanbul ignore next */
      cov_201k99y8ix().b[46][0]++;
      cov_201k99y8ix().s[211]++;
      cancelAnimationFrame(rafId);
    } else
    /* istanbul ignore next */
    {
      cov_201k99y8ix().b[46][1]++;
    }
    cov_201k99y8ix().s[212]++;
    rafId = requestAnimationFrame(() => {
      /* istanbul ignore next */
      cov_201k99y8ix().f[61]++;
      cov_201k99y8ix().s[213]++;
      handler(...args);
      /* istanbul ignore next */
      cov_201k99y8ix().s[214]++;
      rafId = null;
    });
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,