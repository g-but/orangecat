69f149e3f6b91c392c9aa2a804a12875
'use client';
"use strict";

/* istanbul ignore next */
function cov_jpsja2v6t() {
  var path = "/home/g/dev/orangecat/src/components/bitcoin/QRCodeGenerator.tsx";
  var hash = "a3f6a34ef6408bf7796922ff66863f20ab62ddd0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/components/bitcoin/QRCodeGenerator.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 34
        }
      },
      "2": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 50
        }
      },
      "3": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 6,
          column: 32
        }
      },
      "4": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 46
        }
      },
      "5": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 50
        }
      },
      "6": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "7": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 32
        }
      },
      "8": {
        start: {
          line: 12,
          column: 22
        },
        end: {
          line: 12,
          column: 47
        }
      },
      "9": {
        start: {
          line: 13,
          column: 32
        },
        end: {
          line: 13,
          column: 60
        }
      },
      "10": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 18,
          column: 22
        }
      },
      "11": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 17,
          column: 9
        }
      },
      "12": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 59
        }
      },
      "13": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "14": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "15": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 55
        }
      },
      "16": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 28
        }
      },
      "17": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 59
        }
      },
      "18": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 53
        }
      },
      "19": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 45
        }
      },
      "20": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 64
        }
      },
      "21": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 1126
        }
      },
      "22": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 39
        }
      },
      "23": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "24": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "25": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 28
        }
      },
      "26": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 35
        }
      },
      "27": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 22
        }
      },
      "28": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 37
        }
      },
      "29": {
        start: {
          line: 44,
          column: 17
        },
        end: {
          line: 44,
          column: 33
        }
      },
      "30": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 28
        }
      },
      "31": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 45
        }
      },
      "32": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 55
        }
      },
      "33": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 55
        }
      },
      "34": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "35": {
        start: {
          line: 51,
          column: 19
        },
        end: {
          line: 51,
          column: 20
        }
      },
      "36": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "37": {
        start: {
          line: 52,
          column: 23
        },
        end: {
          line: 52,
          column: 24
        }
      },
      "38": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 55,
          column: 25
        }
      },
      "39": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 25
        }
      },
      "40": {
        start: {
          line: 57,
          column: 32
        },
        end: {
          line: 57,
          column: 51
        }
      },
      "41": {
        start: {
          line: 58,
          column: 31
        },
        end: {
          line: 58,
          column: 63
        }
      },
      "42": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "43": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 89
        }
      },
      "44": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "45": {
        start: {
          line: 67,
          column: 19
        },
        end: {
          line: 67,
          column: 20
        }
      },
      "46": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "47": {
        start: {
          line: 68,
          column: 23
        },
        end: {
          line: 68,
          column: 24
        }
      },
      "48": {
        start: {
          line: 69,
          column: 32
        },
        end: {
          line: 71,
          column: 62
        }
      },
      "49": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 75,
          column: 13
        }
      },
      "50": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 115
        }
      },
      "51": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 86,
          column: 41
        }
      },
      "52": {
        start: {
          line: 89,
          column: 15
        },
        end: {
          line: 89,
          column: 16
        }
      },
      "53": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "54": {
        start: {
          line: 90,
          column: 17
        },
        end: {
          line: 90,
          column: 18
        }
      },
      "55": {
        start: {
          line: 91,
          column: 21
        },
        end: {
          line: 91,
          column: 38
        }
      },
      "56": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 43
        }
      },
      "57": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 27
        }
      },
      "58": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "QRCodeGenerator",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 24
          }
        },
        loc: {
          start: {
            line: 11,
            column: 94
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 27
          },
          end: {
            line: 14,
            column: 28
          }
        },
        loc: {
          start: {
            line: 14,
            column: 33
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 24
          }
        },
        loc: {
          start: {
            line: 19,
            column: 35
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 24
          }
        },
        loc: {
          start: {
            line: 24,
            column: 29
          },
          end: {
            line: 24,
            column: 45
          }
        },
        line: 24
      },
      "4": {
        name: "generateQRCode",
        decl: {
          start: {
            line: 33,
            column: 9
          },
          end: {
            line: 33,
            column: 23
          }
        },
        loc: {
          start: {
            line: 33,
            column: 44
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 33
      },
      "5": {
        name: "drawFinderPattern",
        decl: {
          start: {
            line: 65,
            column: 9
          },
          end: {
            line: 65,
            column: 26
          }
        },
        loc: {
          start: {
            line: 65,
            column: 64
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 65
      },
      "6": {
        name: "isFinderPattern",
        decl: {
          start: {
            line: 79,
            column: 9
          },
          end: {
            line: 79,
            column: 24
          }
        },
        loc: {
          start: {
            line: 79,
            column: 44
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 79
      },
      "7": {
        name: "simpleHash",
        decl: {
          start: {
            line: 88,
            column: 9
          },
          end: {
            line: 88,
            column: 19
          }
        },
        loc: {
          start: {
            line: 88,
            column: 25
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 88
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 34
          },
          end: {
            line: 11,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 41
          },
          end: {
            line: 11,
            column: 44
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 11,
            column: 46
          },
          end: {
            line: 11,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 58
          },
          end: {
            line: 11,
            column: 60
          }
        }],
        line: 11
      },
      "2": {
        loc: {
          start: {
            line: 11,
            column: 62
          },
          end: {
            line: 11,
            column: 83
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 79
          },
          end: {
            line: 11,
            column: 83
          }
        }],
        line: 11
      },
      "3": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "4": {
        loc: {
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 29
          }
        }, {
          start: {
            line: 15,
            column: 33
          },
          end: {
            line: 15,
            column: 38
          }
        }],
        line: 15
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 120
          },
          end: {
            line: 30,
            column: 230
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 120
          },
          end: {
            line: 30,
            column: 125
          }
        }, {
          start: {
            line: 30,
            column: 130
          },
          end: {
            line: 30,
            column: 229
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 30,
            column: 451
          },
          end: {
            line: 30,
            column: 991
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 451
          },
          end: {
            line: 30,
            column: 465
          }
        }, {
          start: {
            line: 30,
            column: 470
          },
          end: {
            line: 30,
            column: 990
          }
        }],
        line: 30
      },
      "7": {
        loc: {
          start: {
            line: 30,
            column: 619
          },
          end: {
            line: 30,
            column: 987
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 629
          },
          end: {
            line: 30,
            column: 790
          }
        }, {
          start: {
            line: 30,
            column: 795
          },
          end: {
            line: 30,
            column: 986
          }
        }],
        line: 30
      },
      "8": {
        loc: {
          start: {
            line: 30,
            column: 936
          },
          end: {
            line: 30,
            column: 982
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 961
          },
          end: {
            line: 30,
            column: 970
          }
        }, {
          start: {
            line: 30,
            column: 973
          },
          end: {
            line: 30,
            column: 982
          }
        }],
        line: 30
      },
      "9": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 36,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "10": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 55,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 55,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "11": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "12": {
        loc: {
          start: {
            line: 69,
            column: 32
          },
          end: {
            line: 71,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 33
          },
          end: {
            line: 69,
            column: 42
          }
        }, {
          start: {
            line: 69,
            column: 46
          },
          end: {
            line: 69,
            column: 55
          }
        }, {
          start: {
            line: 70,
            column: 17
          },
          end: {
            line: 70,
            column: 26
          }
        }, {
          start: {
            line: 70,
            column: 30
          },
          end: {
            line: 70,
            column: 39
          }
        }, {
          start: {
            line: 71,
            column: 17
          },
          end: {
            line: 71,
            column: 25
          }
        }, {
          start: {
            line: 71,
            column: 29
          },
          end: {
            line: 71,
            column: 37
          }
        }, {
          start: {
            line: 71,
            column: 41
          },
          end: {
            line: 71,
            column: 49
          }
        }, {
          start: {
            line: 71,
            column: 53
          },
          end: {
            line: 71,
            column: 61
          }
        }],
        line: 69
      },
      "13": {
        loc: {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "14": {
        loc: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 86,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 5
          },
          end: {
            line: 82,
            column: 12
          }
        }, {
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 82,
            column: 23
          }
        }, {
          start: {
            line: 84,
            column: 9
          },
          end: {
            line: 84,
            column: 16
          }
        }, {
          start: {
            line: 84,
            column: 20
          },
          end: {
            line: 84,
            column: 38
          }
        }, {
          start: {
            line: 86,
            column: 9
          },
          end: {
            line: 86,
            column: 27
          }
        }, {
          start: {
            line: 86,
            column: 31
          },
          end: {
            line: 86,
            column: 38
          }
        }],
        line: 82
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0, 0, 0, 0, 0, 0],
      "13": [0, 0],
      "14": [0, 0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/components/bitcoin/QRCodeGenerator.tsx",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/components/bitcoin/QRCodeGenerator.tsx"],
      sourcesContent: ["'use client'\n\nimport { useEffect, useRef } from 'react'\nimport { Copy, Check } from 'lucide-react'\nimport { Button } from '@/components/ui/Button'\nimport { toast } from 'sonner'\nimport { useState } from 'react'\n\ninterface QRCodeGeneratorProps {\n  value: string\n  size?: number\n  className?: string\n  showCopyButton?: boolean\n  label?: string\n}\n\nexport default function QRCodeGenerator({ \n  value, \n  size = 200, \n  className = '', \n  showCopyButton = true,\n  label \n}: QRCodeGeneratorProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const [copied, setCopied] = useState(false)\n\n  useEffect(() => {\n    if (canvasRef.current && value) {\n      generateQRCode(value, canvasRef.current, size)\n    }\n  }, [value, size])\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(value)\n      setCopied(true)\n      toast.success('Copied to clipboard!')\n      \n      setTimeout(() => setCopied(false), 2000)\n    } catch (error) {\n      toast.error('Failed to copy to clipboard')\n    }\n  }\n\n  return (\n    <div className={`flex flex-col items-center space-y-4 ${className}`}>\n      {label && (\n        <h3 className=\"text-lg font-semibold text-gray-900\">{label}</h3>\n      )}\n      \n      <div className=\"bg-white p-4 rounded-xl shadow-lg border-2 border-gray-100\">\n        <canvas\n          ref={canvasRef}\n          width={size}\n          height={size}\n          className=\"block\"\n        />\n      </div>\n\n      {showCopyButton && (\n        <Button\n          onClick={handleCopy}\n          variant=\"outline\"\n          className=\"flex items-center gap-2\"\n          disabled={copied}\n        >\n          {copied ? (\n            <>\n              <Check className=\"w-4 h-4 text-green-600\" />\n              Copied!\n            </>\n          ) : (\n            <>\n              <Copy className=\"w-4 h-4\" />\n              Copy {value.startsWith('ln') ? 'Invoice' : 'Address'}\n            </>\n          )}\n        </Button>\n      )}\n\n      <div className=\"text-xs text-gray-500 text-center max-w-xs break-all font-mono\">\n        {value}\n      </div>\n    </div>\n  )\n}\n\n// Simple QR Code generation function\nfunction generateQRCode(text: string, canvas: HTMLCanvasElement, size: number) {\n  const ctx = canvas.getContext('2d')\n  if (!ctx) return\n\n  // Clear canvas\n  ctx.fillStyle = 'white'\n  ctx.fillRect(0, 0, size, size)\n\n  // Simple QR-like pattern generation\n  const modules = 25 // 25x25 grid for simplicity\n  const moduleSize = size / modules\n  \n  // Generate deterministic pattern based on text hash\n  const hash = simpleHash(text)\n  \n  ctx.fillStyle = 'black'\n  \n  // Draw finder patterns (corners)\n  drawFinderPattern(ctx, 0, 0, moduleSize)\n  drawFinderPattern(ctx, modules - 7, 0, moduleSize)\n  drawFinderPattern(ctx, 0, modules - 7, moduleSize)\n  \n  // Draw data modules based on hash\n  for (let row = 0; row < modules; row++) {\n    for (let col = 0; col < modules; col++) {\n      // Skip finder patterns\n      if (isFinderPattern(row, col, modules)) continue\n      \n      // Generate module based on position and hash\n      const moduleIndex = row * modules + col\n      const shouldFill = ((hash + moduleIndex) % 3) === 0\n      \n      if (shouldFill) {\n        ctx.fillRect(col * moduleSize, row * moduleSize, moduleSize, moduleSize)\n      }\n    }\n  }\n}\n\nfunction drawFinderPattern(ctx: CanvasRenderingContext2D, startRow: number, startCol: number, moduleSize: number) {\n  // Draw 7x7 finder pattern\n  for (let row = 0; row < 7; row++) {\n    for (let col = 0; col < 7; col++) {\n      const shouldFill = (\n        (row === 0 || row === 6) || // Top and bottom borders\n        (col === 0 || col === 6) || // Left and right borders\n        (row >= 2 && row <= 4 && col >= 2 && col <= 4) // Inner 3x3 square\n      )\n      \n      if (shouldFill) {\n        ctx.fillRect((startCol + col) * moduleSize, (startRow + row) * moduleSize, moduleSize, moduleSize)\n      }\n    }\n  }\n}\n\nfunction isFinderPattern(row: number, col: number, modules: number): boolean {\n  return (\n    // Top-left\n    (row < 9 && col < 9) ||\n    // Top-right  \n    (row < 9 && col >= modules - 8) ||\n    // Bottom-left\n    (row >= modules - 8 && col < 9)\n  )\n}\n\nfunction simpleHash(str: string): number {\n  let hash = 0\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + char\n    hash = hash & hash // Convert to 32-bit integer\n  }\n  return Math.abs(hash)\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a3f6a34ef6408bf7796922ff66863f20ab62ddd0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_jpsja2v6t = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_jpsja2v6t();
cov_jpsja2v6t().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_jpsja2v6t().s[1]++;
exports.default = QRCodeGenerator;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_jpsja2v6t().s[2]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_jpsja2v6t().s[3]++, require("react"));
const lucide_react_1 =
/* istanbul ignore next */
(cov_jpsja2v6t().s[4]++, require("lucide-react"));
const Button_1 =
/* istanbul ignore next */
(cov_jpsja2v6t().s[5]++, require("@/components/ui/Button"));
const sonner_1 =
/* istanbul ignore next */
(cov_jpsja2v6t().s[6]++, require("sonner"));
const react_2 =
/* istanbul ignore next */
(cov_jpsja2v6t().s[7]++, require("react"));
function QRCodeGenerator({
  value,
  size =
  /* istanbul ignore next */
  (cov_jpsja2v6t().b[0][0]++, 200),
  className =
  /* istanbul ignore next */
  (cov_jpsja2v6t().b[1][0]++, ''),
  showCopyButton =
  /* istanbul ignore next */
  (cov_jpsja2v6t().b[2][0]++, true),
  label
}) {
  /* istanbul ignore next */
  cov_jpsja2v6t().f[0]++;
  const canvasRef =
  /* istanbul ignore next */
  (cov_jpsja2v6t().s[8]++, (0, react_1.useRef)(null));
  const [copied, setCopied] =
  /* istanbul ignore next */
  (cov_jpsja2v6t().s[9]++, (0, react_2.useState)(false));
  /* istanbul ignore next */
  cov_jpsja2v6t().s[10]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_jpsja2v6t().f[1]++;
    cov_jpsja2v6t().s[11]++;
    if (
    /* istanbul ignore next */
    (cov_jpsja2v6t().b[4][0]++, canvasRef.current) &&
    /* istanbul ignore next */
    (cov_jpsja2v6t().b[4][1]++, value)) {
      /* istanbul ignore next */
      cov_jpsja2v6t().b[3][0]++;
      cov_jpsja2v6t().s[12]++;
      generateQRCode(value, canvasRef.current, size);
    } else
    /* istanbul ignore next */
    {
      cov_jpsja2v6t().b[3][1]++;
    }
  }, [value, size]);
  /* istanbul ignore next */
  cov_jpsja2v6t().s[13]++;
  const handleCopy = async () => {
    /* istanbul ignore next */
    cov_jpsja2v6t().f[2]++;
    cov_jpsja2v6t().s[14]++;
    try {
      /* istanbul ignore next */
      cov_jpsja2v6t().s[15]++;
      await navigator.clipboard.writeText(value);
      /* istanbul ignore next */
      cov_jpsja2v6t().s[16]++;
      setCopied(true);
      /* istanbul ignore next */
      cov_jpsja2v6t().s[17]++;
      sonner_1.toast.success('Copied to clipboard!');
      /* istanbul ignore next */
      cov_jpsja2v6t().s[18]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_jpsja2v6t().f[3]++;
        cov_jpsja2v6t().s[19]++;
        return setCopied(false);
      }, 2000);
    } catch (error) {
      /* istanbul ignore next */
      cov_jpsja2v6t().s[20]++;
      sonner_1.toast.error('Failed to copy to clipboard');
    }
  };
  /* istanbul ignore next */
  cov_jpsja2v6t().s[21]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: `flex flex-col items-center space-y-4 ${className}`,
    children: [
    /* istanbul ignore next */
    (cov_jpsja2v6t().b[5][0]++, label) &&
    /* istanbul ignore next */
    (cov_jpsja2v6t().b[5][1]++, (0, jsx_runtime_1.jsx)("h3", {
      className: "text-lg font-semibold text-gray-900",
      children: label
    })), (0, jsx_runtime_1.jsx)("div", {
      className: "bg-white p-4 rounded-xl shadow-lg border-2 border-gray-100",
      children: (0, jsx_runtime_1.jsx)("canvas", {
        ref: canvasRef,
        width: size,
        height: size,
        className: "block"
      })
    }),
    /* istanbul ignore next */
    (cov_jpsja2v6t().b[6][0]++, showCopyButton) &&
    /* istanbul ignore next */
    (cov_jpsja2v6t().b[6][1]++, (0, jsx_runtime_1.jsx)(Button_1.Button, {
      onClick: handleCopy,
      variant: "outline",
      className: "flex items-center gap-2",
      disabled: copied,
      children: copied ?
      /* istanbul ignore next */
      (cov_jpsja2v6t().b[7][0]++, (0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, {
        children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Check, {
          className: "w-4 h-4 text-green-600"
        }), "Copied!"]
      })) :
      /* istanbul ignore next */
      (cov_jpsja2v6t().b[7][1]++, (0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, {
        children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Copy, {
          className: "w-4 h-4"
        }), "Copy ", value.startsWith('ln') ?
        /* istanbul ignore next */
        (cov_jpsja2v6t().b[8][0]++, 'Invoice') :
        /* istanbul ignore next */
        (cov_jpsja2v6t().b[8][1]++, 'Address')]
      }))
    })), (0, jsx_runtime_1.jsx)("div", {
      className: "text-xs text-gray-500 text-center max-w-xs break-all font-mono",
      children: value
    })]
  });
}
// Simple QR Code generation function
function generateQRCode(text, canvas, size) {
  /* istanbul ignore next */
  cov_jpsja2v6t().f[4]++;
  const ctx =
  /* istanbul ignore next */
  (cov_jpsja2v6t().s[22]++, canvas.getContext('2d'));
  /* istanbul ignore next */
  cov_jpsja2v6t().s[23]++;
  if (!ctx) {
    /* istanbul ignore next */
    cov_jpsja2v6t().b[9][0]++;
    cov_jpsja2v6t().s[24]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_jpsja2v6t().b[9][1]++;
  }
  // Clear canvas
  cov_jpsja2v6t().s[25]++;
  ctx.fillStyle = 'white';
  /* istanbul ignore next */
  cov_jpsja2v6t().s[26]++;
  ctx.fillRect(0, 0, size, size);
  // Simple QR-like pattern generation
  const modules =
  /* istanbul ignore next */
  (cov_jpsja2v6t().s[27]++, 25); // 25x25 grid for simplicity
  const moduleSize =
  /* istanbul ignore next */
  (cov_jpsja2v6t().s[28]++, size / modules);
  // Generate deterministic pattern based on text hash
  const hash =
  /* istanbul ignore next */
  (cov_jpsja2v6t().s[29]++, simpleHash(text));
  /* istanbul ignore next */
  cov_jpsja2v6t().s[30]++;
  ctx.fillStyle = 'black';
  // Draw finder patterns (corners)
  /* istanbul ignore next */
  cov_jpsja2v6t().s[31]++;
  drawFinderPattern(ctx, 0, 0, moduleSize);
  /* istanbul ignore next */
  cov_jpsja2v6t().s[32]++;
  drawFinderPattern(ctx, modules - 7, 0, moduleSize);
  /* istanbul ignore next */
  cov_jpsja2v6t().s[33]++;
  drawFinderPattern(ctx, 0, modules - 7, moduleSize);
  // Draw data modules based on hash
  /* istanbul ignore next */
  cov_jpsja2v6t().s[34]++;
  for (let row =
  /* istanbul ignore next */
  (cov_jpsja2v6t().s[35]++, 0); row < modules; row++) {
    /* istanbul ignore next */
    cov_jpsja2v6t().s[36]++;
    for (let col =
    /* istanbul ignore next */
    (cov_jpsja2v6t().s[37]++, 0); col < modules; col++) {
      /* istanbul ignore next */
      cov_jpsja2v6t().s[38]++;
      // Skip finder patterns
      if (isFinderPattern(row, col, modules)) {
        /* istanbul ignore next */
        cov_jpsja2v6t().b[10][0]++;
        cov_jpsja2v6t().s[39]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_jpsja2v6t().b[10][1]++;
      }
      // Generate module based on position and hash
      const moduleIndex =
      /* istanbul ignore next */
      (cov_jpsja2v6t().s[40]++, row * modules + col);
      const shouldFill =
      /* istanbul ignore next */
      (cov_jpsja2v6t().s[41]++, (hash + moduleIndex) % 3 === 0);
      /* istanbul ignore next */
      cov_jpsja2v6t().s[42]++;
      if (shouldFill) {
        /* istanbul ignore next */
        cov_jpsja2v6t().b[11][0]++;
        cov_jpsja2v6t().s[43]++;
        ctx.fillRect(col * moduleSize, row * moduleSize, moduleSize, moduleSize);
      } else
      /* istanbul ignore next */
      {
        cov_jpsja2v6t().b[11][1]++;
      }
    }
  }
}
function drawFinderPattern(ctx, startRow, startCol, moduleSize) {
  /* istanbul ignore next */
  cov_jpsja2v6t().f[5]++;
  cov_jpsja2v6t().s[44]++;
  // Draw 7x7 finder pattern
  for (let row =
  /* istanbul ignore next */
  (cov_jpsja2v6t().s[45]++, 0); row < 7; row++) {
    /* istanbul ignore next */
    cov_jpsja2v6t().s[46]++;
    for (let col =
    /* istanbul ignore next */
    (cov_jpsja2v6t().s[47]++, 0); col < 7; col++) {
      const shouldFill =
      /* istanbul ignore next */
      (cov_jpsja2v6t().s[48]++,
      /* istanbul ignore next */
      (cov_jpsja2v6t().b[12][0]++, row === 0) ||
      /* istanbul ignore next */
      (cov_jpsja2v6t().b[12][1]++, row === 6) ||
      // Top and bottom borders
      /* istanbul ignore next */
      (cov_jpsja2v6t().b[12][2]++, col === 0) ||
      /* istanbul ignore next */
      (cov_jpsja2v6t().b[12][3]++, col === 6) ||
      // Left and right borders
      /* istanbul ignore next */
      (cov_jpsja2v6t().b[12][4]++, row >= 2) &&
      /* istanbul ignore next */
      (cov_jpsja2v6t().b[12][5]++, row <= 4) &&
      /* istanbul ignore next */
      (cov_jpsja2v6t().b[12][6]++, col >= 2) &&
      /* istanbul ignore next */
      (cov_jpsja2v6t().b[12][7]++, col <= 4) // Inner 3x3 square
      );
      /* istanbul ignore next */
      cov_jpsja2v6t().s[49]++;
      if (shouldFill) {
        /* istanbul ignore next */
        cov_jpsja2v6t().b[13][0]++;
        cov_jpsja2v6t().s[50]++;
        ctx.fillRect((startCol + col) * moduleSize, (startRow + row) * moduleSize, moduleSize, moduleSize);
      } else
      /* istanbul ignore next */
      {
        cov_jpsja2v6t().b[13][1]++;
      }
    }
  }
}
function isFinderPattern(row, col, modules) {
  /* istanbul ignore next */
  cov_jpsja2v6t().f[6]++;
  cov_jpsja2v6t().s[51]++;
  return (
    // Top-left
    /* istanbul ignore next */
    (cov_jpsja2v6t().b[14][0]++, row < 9) &&
    /* istanbul ignore next */
    (cov_jpsja2v6t().b[14][1]++, col < 9) ||
    // Top-right  
    /* istanbul ignore next */
    (cov_jpsja2v6t().b[14][2]++, row < 9) &&
    /* istanbul ignore next */
    (cov_jpsja2v6t().b[14][3]++, col >= modules - 8) ||
    // Bottom-left
    /* istanbul ignore next */
    (cov_jpsja2v6t().b[14][4]++, row >= modules - 8) &&
    /* istanbul ignore next */
    (cov_jpsja2v6t().b[14][5]++, col < 9)
  );
}
function simpleHash(str) {
  /* istanbul ignore next */
  cov_jpsja2v6t().f[7]++;
  let hash =
  /* istanbul ignore next */
  (cov_jpsja2v6t().s[52]++, 0);
  /* istanbul ignore next */
  cov_jpsja2v6t().s[53]++;
  for (let i =
  /* istanbul ignore next */
  (cov_jpsja2v6t().s[54]++, 0); i < str.length; i++) {
    const char =
    /* istanbul ignore next */
    (cov_jpsja2v6t().s[55]++, str.charCodeAt(i));
    /* istanbul ignore next */
    cov_jpsja2v6t().s[56]++;
    hash = (hash << 5) - hash + char;
    /* istanbul ignore next */
    cov_jpsja2v6t().s[57]++;
    hash = hash & hash; // Convert to 32-bit integer
  }
  /* istanbul ignore next */
  cov_jpsja2v6t().s[58]++;
  return Math.abs(hash);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,