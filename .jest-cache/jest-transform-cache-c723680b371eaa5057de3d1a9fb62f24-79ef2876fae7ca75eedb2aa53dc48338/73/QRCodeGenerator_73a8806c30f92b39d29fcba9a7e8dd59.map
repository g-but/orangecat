{"version":3,"names":["cov_jpsja2v6t","actualCoverage","s","exports","default","QRCodeGenerator","react_1","require","lucide_react_1","Button_1","sonner_1","react_2","value","size","b","className","showCopyButton","label","f","canvasRef","useRef","copied","setCopied","useState","useEffect","current","generateQRCode","handleCopy","navigator","clipboard","writeText","toast","success","setTimeout","error","jsx_runtime_1","jsxs","children","jsx","ref","width","height","Button","onClick","variant","disabled","Fragment","Check","Copy","startsWith","text","canvas","ctx","getContext","fillStyle","fillRect","modules","moduleSize","hash","simpleHash","drawFinderPattern","row","col","isFinderPattern","moduleIndex","shouldFill","startRow","startCol","str","i","length","char","charCodeAt","Math","abs"],"sources":["/home/g/dev/orangecat/src/components/bitcoin/QRCodeGenerator.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useRef } from 'react'\nimport { Copy, Check } from 'lucide-react'\nimport { Button } from '@/components/ui/Button'\nimport { toast } from 'sonner'\nimport { useState } from 'react'\n\ninterface QRCodeGeneratorProps {\n  value: string\n  size?: number\n  className?: string\n  showCopyButton?: boolean\n  label?: string\n}\n\nexport default function QRCodeGenerator({ \n  value, \n  size = 200, \n  className = '', \n  showCopyButton = true,\n  label \n}: QRCodeGeneratorProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const [copied, setCopied] = useState(false)\n\n  useEffect(() => {\n    if (canvasRef.current && value) {\n      generateQRCode(value, canvasRef.current, size)\n    }\n  }, [value, size])\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(value)\n      setCopied(true)\n      toast.success('Copied to clipboard!')\n      \n      setTimeout(() => setCopied(false), 2000)\n    } catch (error) {\n      toast.error('Failed to copy to clipboard')\n    }\n  }\n\n  return (\n    <div className={`flex flex-col items-center space-y-4 ${className}`}>\n      {label && (\n        <h3 className=\"text-lg font-semibold text-gray-900\">{label}</h3>\n      )}\n      \n      <div className=\"bg-white p-4 rounded-xl shadow-lg border-2 border-gray-100\">\n        <canvas\n          ref={canvasRef}\n          width={size}\n          height={size}\n          className=\"block\"\n        />\n      </div>\n\n      {showCopyButton && (\n        <Button\n          onClick={handleCopy}\n          variant=\"outline\"\n          className=\"flex items-center gap-2\"\n          disabled={copied}\n        >\n          {copied ? (\n            <>\n              <Check className=\"w-4 h-4 text-green-600\" />\n              Copied!\n            </>\n          ) : (\n            <>\n              <Copy className=\"w-4 h-4\" />\n              Copy {value.startsWith('ln') ? 'Invoice' : 'Address'}\n            </>\n          )}\n        </Button>\n      )}\n\n      <div className=\"text-xs text-gray-500 text-center max-w-xs break-all font-mono\">\n        {value}\n      </div>\n    </div>\n  )\n}\n\n// Simple QR Code generation function\nfunction generateQRCode(text: string, canvas: HTMLCanvasElement, size: number) {\n  const ctx = canvas.getContext('2d')\n  if (!ctx) return\n\n  // Clear canvas\n  ctx.fillStyle = 'white'\n  ctx.fillRect(0, 0, size, size)\n\n  // Simple QR-like pattern generation\n  const modules = 25 // 25x25 grid for simplicity\n  const moduleSize = size / modules\n  \n  // Generate deterministic pattern based on text hash\n  const hash = simpleHash(text)\n  \n  ctx.fillStyle = 'black'\n  \n  // Draw finder patterns (corners)\n  drawFinderPattern(ctx, 0, 0, moduleSize)\n  drawFinderPattern(ctx, modules - 7, 0, moduleSize)\n  drawFinderPattern(ctx, 0, modules - 7, moduleSize)\n  \n  // Draw data modules based on hash\n  for (let row = 0; row < modules; row++) {\n    for (let col = 0; col < modules; col++) {\n      // Skip finder patterns\n      if (isFinderPattern(row, col, modules)) continue\n      \n      // Generate module based on position and hash\n      const moduleIndex = row * modules + col\n      const shouldFill = ((hash + moduleIndex) % 3) === 0\n      \n      if (shouldFill) {\n        ctx.fillRect(col * moduleSize, row * moduleSize, moduleSize, moduleSize)\n      }\n    }\n  }\n}\n\nfunction drawFinderPattern(ctx: CanvasRenderingContext2D, startRow: number, startCol: number, moduleSize: number) {\n  // Draw 7x7 finder pattern\n  for (let row = 0; row < 7; row++) {\n    for (let col = 0; col < 7; col++) {\n      const shouldFill = (\n        (row === 0 || row === 6) || // Top and bottom borders\n        (col === 0 || col === 6) || // Left and right borders\n        (row >= 2 && row <= 4 && col >= 2 && col <= 4) // Inner 3x3 square\n      )\n      \n      if (shouldFill) {\n        ctx.fillRect((startCol + col) * moduleSize, (startRow + row) * moduleSize, moduleSize, moduleSize)\n      }\n    }\n  }\n}\n\nfunction isFinderPattern(row: number, col: number, modules: number): boolean {\n  return (\n    // Top-left\n    (row < 9 && col < 9) ||\n    // Top-right  \n    (row < 9 && col >= modules - 8) ||\n    // Bottom-left\n    (row >= modules - 8 && col < 9)\n  )\n}\n\nfunction simpleHash(str: string): number {\n  let hash = 0\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + char\n    hash = hash & hash // Convert to 32-bit integer\n  }\n  return Math.abs(hash)\n} "],"mappings":"AAAA,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}