{"file":"/home/g/dev/orangecat/src/stores/__tests__/campaignStore.unit.test.ts","mappings":"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","names":[],"sources":["/home/g/dev/orangecat/src/stores/__tests__/campaignStore.unit.test.ts"],"sourcesContent":["/**\n * Campaign Store Unit Tests - Logic Testing\n * \n * These tests focus on the store's internal logic and state management\n * without complex external dependencies.\n */\n\nimport { act, renderHook } from '@testing-library/react'\n\n// Mock environment variables\nprocess.env.NEXT_PUBLIC_SUPABASE_URL = 'https://test.supabase.co'\nprocess.env.NEXT_PUBLIC_SUPABASE_ANON_KEY = 'test-anon-key'\n\n// Simple mock for Supabase\njest.mock('@supabase/ssr', () => ({\n  createBrowserClient: jest.fn(() => ({\n    from: jest.fn(() => ({\n      select: jest.fn(() => ({\n        eq: jest.fn(() => ({\n          order: jest.fn(() => Promise.resolve({ data: [], error: null }))\n        }))\n      })),\n      insert: jest.fn(() => ({\n        select: jest.fn(() => ({\n          single: jest.fn(() => Promise.resolve({ data: null, error: null }))\n        }))\n      })),\n      update: jest.fn(() => ({\n        eq: jest.fn(() => ({\n          select: jest.fn(() => ({\n            single: jest.fn(() => Promise.resolve({ data: null, error: null }))\n          }))\n        }))\n      })),\n      delete: jest.fn(() => ({\n        eq: jest.fn(() => Promise.resolve({ data: null, error: null }))\n      }))\n    }))\n  }))\n}))\n\nimport { useCampaignStore, CampaignFormData, Campaign } from '../campaignStore'\n\ndescribe('Campaign Store - Unit Tests', () => {\n  const mockUserId = 'user-123'\n  const mockCampaignId = 'campaign-456'\n\n  const mockFormData: CampaignFormData = {\n    title: 'Test Campaign',\n    description: 'Test Description',\n    bitcoin_address: 'bc1qw508d6qejxtdg4y5r3zarvary0c5xw7kv8f3t4',\n    lightning_address: 'test@lightning.network',\n    website_url: 'https://example.com',\n    goal_amount: 1000000,\n    categories: ['technology', 'startup'],\n    images: []\n  }\n\n  const mockCampaign: Campaign = {\n    id: mockCampaignId,\n    user_id: mockUserId,\n    title: 'Test Campaign',\n    description: 'Test Description',\n    bitcoin_address: 'bc1qw508d6qejxtdg4y5r3zarvary0c5xw7kv8f3t4',\n    lightning_address: 'test@lightning.network',\n    website_url: 'https://example.com',\n    goal_amount: 1000000,\n    total_funding: 0,\n    contributor_count: 0,\n    is_active: false,\n    is_public: false,\n    category: 'technology',\n    tags: ['startup'],\n    currency: 'BTC',\n    created_at: '2024-01-01T00:00:00.000Z',\n    updated_at: '2024-01-01T00:00:00.000Z',\n    isDraft: true,\n    isActive: false,\n    isPaused: false,\n    lastModified: '2024-01-01T00:00:00.000Z',\n    syncStatus: 'synced'\n  } as Campaign\n\n  beforeEach(() => {\n    // Reset store state before each test\n    const { result } = renderHook(() => useCampaignStore())\n    act(() => {\n      result.current.campaigns = []\n      result.current.currentDraft = null\n      result.current.currentDraftId = null\n      result.current.isLoading = false\n      result.current.isSyncing = false\n      result.current.error = null\n      result.current.lastSync = null\n    })\n  })\n\n  describe('🏗️ Initial State', () => {\n    test('should have correct initial state', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      expect(result.current.campaigns).toEqual([])\n      expect(result.current.currentDraft).toBeNull()\n      expect(result.current.currentDraftId).toBeNull()\n      expect(result.current.isLoading).toBe(false)\n      expect(result.current.isSyncing).toBe(false)\n      expect(result.current.error).toBeNull()\n      expect(result.current.lastSync).toBeNull()\n    })\n\n    test('should have correct computed getters', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      expect(result.current.drafts).toEqual([])\n      expect(result.current.activeCampaigns).toEqual([])\n      expect(result.current.pausedCampaigns).toEqual([])\n    })\n  })\n\n  describe('📝 Draft Management', () => {\n    test('should update draft field correctly', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      act(() => {\n        result.current.currentDraft = { ...mockFormData }\n      })\n      \n      act(() => {\n        result.current.updateDraftField('title', 'Updated Title')\n      })\n      \n      expect(result.current.currentDraft?.title).toBe('Updated Title')\n    })\n\n    test('should clear current draft', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      act(() => {\n        result.current.currentDraft = { ...mockFormData }\n        result.current.currentDraftId = 'draft-123'\n      })\n      \n      act(() => {\n        result.current.clearCurrentDraft()\n      })\n      \n      expect(result.current.currentDraft).toBeNull()\n      expect(result.current.currentDraftId).toBeNull()\n    })\n\n    test('should detect unsaved changes', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      // No draft = no unsaved changes\n      expect(result.current.hasUnsavedChanges()).toBe(false)\n      \n      act(() => {\n        result.current.currentDraft = { ...mockFormData }\n      })\n      \n      // Has draft = has unsaved changes\n      expect(result.current.hasUnsavedChanges()).toBe(true)\n    })\n  })\n\n  describe('📊 Campaign Filtering & Computed Properties', () => {\n    test('should filter drafts correctly', () => {\n      const draftCampaign = { ...mockCampaign, isDraft: true, isActive: false, isPaused: false }\n      const activeCampaign = { ...mockCampaign, id: 'active-1', isDraft: false, isActive: true, isPaused: false }\n      \n      // Test the filtering logic directly\n      const campaigns = [draftCampaign, activeCampaign]\n      const drafts = campaigns.filter(c => c.isDraft)\n      \n      expect(drafts).toHaveLength(1)\n      expect(drafts[0].id).toBe(mockCampaignId)\n    })\n\n    test('should filter active campaigns correctly', () => {\n      const draftCampaign = { ...mockCampaign, isDraft: true, isActive: false, isPaused: false }\n      const activeCampaign = { ...mockCampaign, id: 'active-1', isDraft: false, isActive: true, isPaused: false }\n      \n      // Test the filtering logic directly\n      const campaigns = [draftCampaign, activeCampaign]\n      const activeCampaigns = campaigns.filter(c => c.isActive)\n      \n      expect(activeCampaigns).toHaveLength(1)\n      expect(activeCampaigns[0].id).toBe('active-1')\n    })\n\n    test('should filter paused campaigns correctly', () => {\n      const draftCampaign = { ...mockCampaign, isDraft: true, isActive: false, isPaused: false }\n      const pausedCampaign = { ...mockCampaign, id: 'paused-1', isDraft: false, isActive: false, isPaused: true }\n      \n      // Test the filtering logic directly\n      const campaigns = [draftCampaign, pausedCampaign]\n      const pausedCampaigns = campaigns.filter(c => c.isPaused)\n      \n      expect(pausedCampaigns).toHaveLength(1)\n      expect(pausedCampaigns[0].id).toBe('paused-1')\n    })\n  })\n\n  describe('🔍 Campaign Utilities', () => {\n    test('should get campaign by ID', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      act(() => {\n        result.current.campaigns = [mockCampaign]\n      })\n      \n      const found = result.current.getCampaignById(mockCampaignId)\n      expect(found).toEqual(mockCampaign)\n      \n      const notFound = result.current.getCampaignById('non-existent')\n      expect(notFound).toBeUndefined()\n    })\n\n    test('should calculate stats correctly', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      const campaigns = [\n        { ...mockCampaign, isDraft: true, isActive: false, isPaused: false, total_funding: 100000 },\n        { ...mockCampaign, id: 'active-1', isDraft: false, isActive: true, isPaused: false, total_funding: 200000 },\n        { ...mockCampaign, id: 'paused-1', isDraft: false, isActive: false, isPaused: true, total_funding: 150000 }\n      ]\n      \n      act(() => {\n        result.current.campaigns = campaigns\n      })\n      \n      const stats = result.current.getStats()\n      \n      expect(stats.totalCampaigns).toBe(3)\n      expect(stats.totalDrafts).toBe(1)\n      expect(stats.totalActive).toBe(1)\n      expect(stats.totalPaused).toBe(1)\n      expect(stats.totalRaised).toBe(450000) // 100k + 200k + 150k\n    })\n  })\n\n  describe('📝 Campaign Loading for Edit', () => {\n    test('should load campaign for edit', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      act(() => {\n        result.current.campaigns = [mockCampaign]\n      })\n      \n      act(() => {\n        result.current.loadCampaignForEdit(mockCampaignId)\n      })\n      \n      expect(result.current.currentDraftId).toBe(mockCampaignId)\n      expect(result.current.currentDraft).toEqual({\n        title: mockCampaign.title,\n        description: mockCampaign.description || '',\n        bitcoin_address: mockCampaign.bitcoin_address || '',\n        lightning_address: mockCampaign.lightning_address || '',\n        website_url: mockCampaign.website_url || '',\n        goal_amount: mockCampaign.goal_amount || 0,\n        categories: [mockCampaign.category, ...(mockCampaign.tags || [])].filter(Boolean),\n        images: []\n      })\n    })\n\n    test('should handle loading non-existent campaign for edit', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      act(() => {\n        result.current.campaigns = [mockCampaign]\n      })\n      \n      act(() => {\n        result.current.loadCampaignForEdit('non-existent')\n      })\n      \n      // Should not change current draft if campaign not found\n      expect(result.current.currentDraftId).toBeNull()\n      expect(result.current.currentDraft).toBeNull()\n    })\n  })\n\n  describe('🔄 State Management', () => {\n    test('should handle loading state correctly', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      act(() => {\n        result.current.isLoading = true\n      })\n      \n      expect(result.current.isLoading).toBe(true)\n      \n      act(() => {\n        result.current.isLoading = false\n      })\n      \n      expect(result.current.isLoading).toBe(false)\n    })\n\n    test('should handle syncing state correctly', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      act(() => {\n        result.current.isSyncing = true\n      })\n      \n      expect(result.current.isSyncing).toBe(true)\n      \n      act(() => {\n        result.current.isSyncing = false\n      })\n      \n      expect(result.current.isSyncing).toBe(false)\n    })\n\n    test('should handle error state correctly', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      const errorMessage = 'Test error message'\n      \n      act(() => {\n        result.current.error = errorMessage\n      })\n      \n      expect(result.current.error).toBe(errorMessage)\n      \n      act(() => {\n        result.current.error = null\n      })\n      \n      expect(result.current.error).toBeNull()\n    })\n  })\n\n  describe('🧮 Edge Cases & Validation', () => {\n    test('should handle empty campaigns array', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      expect(result.current.campaigns).toEqual([])\n      expect(result.current.drafts).toEqual([])\n      expect(result.current.activeCampaigns).toEqual([])\n      expect(result.current.pausedCampaigns).toEqual([])\n      \n      const stats = result.current.getStats()\n      expect(stats.totalCampaigns).toBe(0)\n      expect(stats.totalRaised).toBe(0)\n    })\n\n    test('should handle campaigns with null/undefined values', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      const campaignWithNulls = {\n        ...mockCampaign,\n        description: null,\n        bitcoin_address: null,\n        lightning_address: null,\n        website_url: null,\n        goal_amount: null,\n        total_funding: null,\n        tags: null\n      }\n      \n      act(() => {\n        result.current.campaigns = [campaignWithNulls]\n      })\n      \n      const stats = result.current.getStats()\n      expect(stats.totalCampaigns).toBe(1)\n      expect(stats.totalRaised).toBe(0) // null total_funding should be treated as 0\n    })\n\n    test('should handle updateDraftField with null current draft', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      // Should create a new draft when currentDraft is null\n      act(() => {\n        result.current.updateDraftField('title', 'New Title')\n      })\n      \n      // Should create a new draft with the updated field\n      expect(result.current.currentDraft).toEqual({\n        title: 'New Title',\n        description: '',\n        bitcoin_address: '',\n        lightning_address: '',\n        website_url: '',\n        goal_amount: 0,\n        categories: [],\n        images: []\n      })\n    })\n  })\n\n  describe('🔧 Additional Coverage - Sync Logic', () => {\n    test('should handle campaign state transitions correctly', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      const draftCampaign = { \n        ...mockCampaign, \n        isDraft: true, \n        isActive: false, \n        isPaused: false,\n        lastModified: '2024-01-01T00:00:00.000Z',\n        syncStatus: 'synced' as const\n      }\n      const activeCampaign = { \n        ...mockCampaign, \n        id: 'active-1', \n        isDraft: false, \n        isActive: true, \n        isPaused: false,\n        lastModified: '2024-01-01T00:00:00.000Z',\n        syncStatus: 'synced' as const\n      }\n      const pausedCampaign = { \n        ...mockCampaign, \n        id: 'paused-1', \n        isDraft: false, \n        isActive: false, \n        isPaused: true,\n        lastModified: '2024-01-01T00:00:00.000Z',\n        syncStatus: 'synced' as const\n      }\n      \n      act(() => {\n        // Direct assignment for unit testing\n        result.current.campaigns = [draftCampaign, activeCampaign, pausedCampaign]\n      })\n      \n      // Test computed properties\n      expect(result.current.drafts).toHaveLength(1)\n      expect(result.current.activeCampaigns).toHaveLength(1)\n      expect(result.current.pausedCampaigns).toHaveLength(1)\n      \n      // Test stats calculation\n      const stats = result.current.getStats()\n      expect(stats.totalCampaigns).toBe(3)\n      expect(stats.totalDrafts).toBe(1)\n      expect(stats.totalActive).toBe(1)\n      expect(stats.totalPaused).toBe(1)\n    })\n\n    test('should handle campaign data validation edge cases', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      // Test with campaigns having various data states\n      const campaignsWithEdgeCases = [\n        { ...mockCampaign, total_funding: null, goal_amount: 0 },\n        { ...mockCampaign, id: 'camp-2', total_funding: undefined, goal_amount: null },\n        { ...mockCampaign, id: 'camp-3', total_funding: 500000, goal_amount: 1000000 }\n      ]\n      \n      act(() => {\n        result.current.campaigns = campaignsWithEdgeCases\n      })\n      \n      const stats = result.current.getStats()\n      expect(stats.totalRaised).toBe(500000) // Only the valid funding amount\n      expect(stats.totalCampaigns).toBe(3)\n    })\n\n    test('should handle draft field updates with various data types', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      // Start with empty draft\n      act(() => {\n        result.current.updateDraftField('title', 'Test Campaign')\n      })\n      \n      expect(result.current.currentDraft?.title).toBe('Test Campaign')\n      \n      // Update with number\n      act(() => {\n        result.current.updateDraftField('goal_amount', 1000000)\n      })\n      \n      expect(result.current.currentDraft?.goal_amount).toBe(1000000)\n      \n      // Update with array\n      act(() => {\n        result.current.updateDraftField('categories', ['bitcoin', 'education'])\n      })\n      \n      expect(result.current.currentDraft?.categories).toEqual(['bitcoin', 'education'])\n    })\n\n    test('should handle campaign loading for edit with complete data', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      const fullCampaign = {\n        ...mockCampaign,\n        description: 'Full description',\n        bitcoin_address: 'bc1qw508d6qejxtdg4y5r3zarvary0c5xw7kv8f3t4',\n        lightning_address: 'test@lightning.network',\n        website_url: 'https://example.com',\n        goal_amount: 2000000,\n        category: 'technology',\n        tags: ['bitcoin', 'education']\n      }\n      \n      act(() => {\n        result.current.campaigns = [fullCampaign]\n      })\n      \n      act(() => {\n        result.current.loadCampaignForEdit(mockCampaignId)\n      })\n      \n      expect(result.current.currentDraft).toEqual({\n        title: fullCampaign.title,\n        description: fullCampaign.description,\n        bitcoin_address: fullCampaign.bitcoin_address,\n        lightning_address: fullCampaign.lightning_address,\n        website_url: fullCampaign.website_url,\n        goal_amount: fullCampaign.goal_amount,\n        categories: ['technology', 'bitcoin', 'education'],\n        images: []\n      })\n    })\n\n    test('should handle state management flags correctly', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      // Test loading state\n      act(() => {\n        result.current.isLoading = true\n        result.current.error = 'Previous error'\n      })\n      \n      expect(result.current.isLoading).toBe(true)\n      expect(result.current.error).toBe('Previous error')\n      \n      // Test syncing state\n      act(() => {\n        result.current.isSyncing = true\n        result.current.isLoading = false\n        result.current.error = null\n      })\n      \n      expect(result.current.isSyncing).toBe(true)\n      expect(result.current.isLoading).toBe(false)\n      expect(result.current.error).toBeNull()\n      \n      // Test completion state\n      act(() => {\n        result.current.isSyncing = false\n        result.current.lastSync = new Date().toISOString()\n      })\n      \n      expect(result.current.isSyncing).toBe(false)\n      expect(result.current.lastSync).toBeTruthy()\n    })\n\n    test('should handle complex campaign filtering scenarios', () => {\n      const { result } = renderHook(() => useCampaignStore())\n      \n      const complexCampaigns = [\n        { ...mockCampaign, id: 'draft-1', isDraft: true, isActive: false, isPaused: false, total_funding: 0, lastModified: '2024-01-01T00:00:00.000Z', syncStatus: 'synced' as const },\n        { ...mockCampaign, id: 'draft-2', isDraft: true, isActive: false, isPaused: false, total_funding: 50000, lastModified: '2024-01-01T00:00:00.000Z', syncStatus: 'synced' as const },\n        { ...mockCampaign, id: 'active-1', isDraft: false, isActive: true, isPaused: false, total_funding: 100000, lastModified: '2024-01-01T00:00:00.000Z', syncStatus: 'synced' as const },\n        { ...mockCampaign, id: 'active-2', isDraft: false, isActive: true, isPaused: false, total_funding: 200000, lastModified: '2024-01-01T00:00:00.000Z', syncStatus: 'synced' as const },\n        { ...mockCampaign, id: 'paused-1', isDraft: false, isActive: false, isPaused: true, total_funding: 75000, lastModified: '2024-01-01T00:00:00.000Z', syncStatus: 'synced' as const },\n        { ...mockCampaign, id: 'paused-2', isDraft: false, isActive: false, isPaused: true, total_funding: 125000, lastModified: '2024-01-01T00:00:00.000Z', syncStatus: 'synced' as const }\n      ]\n      \n      act(() => {\n        result.current.campaigns = complexCampaigns\n      })\n      \n      // Test filtering\n      expect(result.current.drafts).toHaveLength(2)\n      expect(result.current.activeCampaigns).toHaveLength(2)\n      expect(result.current.pausedCampaigns).toHaveLength(2)\n      \n      // Test stats with complex data\n      const stats = result.current.getStats()\n      expect(stats.totalCampaigns).toBe(6)\n      expect(stats.totalDrafts).toBe(2)\n      expect(stats.totalActive).toBe(2)\n      expect(stats.totalPaused).toBe(2)\n      expect(stats.totalRaised).toBe(550000) // Sum of all funding\n    })\n  })\n}) "],"version":3}