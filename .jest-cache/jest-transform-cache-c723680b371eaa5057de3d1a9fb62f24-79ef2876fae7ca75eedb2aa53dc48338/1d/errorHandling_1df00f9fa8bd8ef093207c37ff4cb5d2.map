{"version":3,"names":["cov_1edhc44b9h","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","createErrorResponse","withErrorHandling","isErrorResponse","getCorrelationIdFromHeaders","addCorrelationIdToHeaders","server_1","require","logger_1","ErrorCode","ApiError","Error","constructor","code","message","statusCode","options","correlationId","generateCorrelationId","details","timestamp","Date","toISOString","logger","error","stack","cause","now","Math","random","toString","substr","toResponseData","getUserSafeMessage","AUTH_REQUIRED","AUTH_INVALID","AUTH_EXPIRED","AUTH_INSUFFICIENT_PERMISSIONS","VALIDATION_MISSING_FIELD","VALIDATION_INVALID_FORMAT","VALIDATION_INVALID_VALUE","RESOURCE_NOT_FOUND","RESOURCE_ALREADY_EXISTS","RATE_LIMIT_EXCEEDED","TOO_MANY_REQUESTS","DATABASE_ERROR","EXTERNAL_SERVICE_ERROR","INTERNAL_SERVER_ERROR","SERVICE_UNAVAILABLE","apiError","responseData","NextResponse","json","status","headers","ErrorHelpers","authenticationRequired","validationError","field","reason","resourceNotFound","resource","rateLimitExceeded","retryAfterSeconds","databaseError","operation","insufficientPermissions","errorContext","operationName","fallbackErrorCode","fallbackStatusCode","contextInfo","Object","assign","String","fallbackCode","fallbackStatus","response","get","set"],"sources":["/home/g/dev/orangecat/src/lib/api/errorHandling.ts"],"sourcesContent":["/**\n * STRUCTURED ERROR HANDLING SYSTEM\n *\n * Provides comprehensive error handling with:\n * - Structured error codes and messages\n * - Consistent error response format\n * - Proper HTTP status codes\n * - Correlation IDs for debugging\n * - Security-conscious error exposure\n *\n * üõ°Ô∏è SECURITY: Never exposes internal system details\n * üîç DEBUGGING: Comprehensive logging with correlation IDs\n * üìä MONITORING: Structured error data for analytics\n */\n\nimport { NextResponse } from 'next/server'\nimport { logger } from '@/utils/logger'\n\n/**\n * Error codes for consistent error handling across the application\n */\nexport enum ErrorCode {\n  // Authentication & Authorization\n  AUTH_REQUIRED = 'AUTH_REQUIRED',\n  AUTH_INVALID = 'AUTH_INVALID',\n  AUTH_EXPIRED = 'AUTH_EXPIRED',\n  AUTH_INSUFFICIENT_PERMISSIONS = 'AUTH_INSUFFICIENT_PERMISSIONS',\n\n  // Validation Errors\n  VALIDATION_MISSING_FIELD = 'VALIDATION_MISSING_FIELD',\n  VALIDATION_INVALID_FORMAT = 'VALIDATION_INVALID_FORMAT',\n  VALIDATION_INVALID_VALUE = 'VALIDATION_INVALID_VALUE',\n  VALIDATION_TOO_LONG = 'VALIDATION_TOO_LONG',\n  VALIDATION_TOO_SHORT = 'VALIDATION_TOO_SHORT',\n\n  // Resource Errors\n  RESOURCE_NOT_FOUND = 'RESOURCE_NOT_FOUND',\n  RESOURCE_ALREADY_EXISTS = 'RESOURCE_ALREADY_EXISTS',\n  RESOURCE_CONFLICT = 'RESOURCE_CONFLICT',\n\n  // Rate Limiting\n  RATE_LIMIT_EXCEEDED = 'RATE_LIMIT_EXCEEDED',\n  TOO_MANY_REQUESTS = 'TOO_MANY_REQUESTS',\n\n  // Business Logic\n  BUSINESS_RULE_VIOLATION = 'BUSINESS_RULE_VIOLATION',\n  INSUFFICIENT_BALANCE = 'INSUFFICIENT_BALANCE',\n  INVALID_OPERATION = 'INVALID_OPERATION',\n\n  // System Errors\n  DATABASE_ERROR = 'DATABASE_ERROR',\n  EXTERNAL_SERVICE_ERROR = 'EXTERNAL_SERVICE_ERROR',\n  INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR',\n  SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE'\n}\n\n/**\n * Structured error class with correlation tracking\n */\nexport class ApiError extends Error {\n  public readonly code: ErrorCode\n  public readonly statusCode: number\n  public readonly correlationId: string\n  public readonly details?: Record<string, any>\n  public readonly timestamp: string\n\n  constructor(\n    code: ErrorCode,\n    message: string,\n    statusCode: number,\n    options?: {\n      correlationId?: string\n      details?: Record<string, any>\n      cause?: Error\n    }\n  ) {\n    super(message)\n    this.name = 'ApiError'\n    this.code = code\n    this.statusCode = statusCode\n    this.correlationId = options?.correlationId || this.generateCorrelationId()\n    this.details = options?.details\n    this.timestamp = new Date().toISOString()\n\n    // Log the error for debugging (internal only)\n    logger.error(`API Error [${this.correlationId}]: ${this.code}`, {\n      message: this.message,\n      statusCode: this.statusCode,\n      details: this.details,\n      stack: this.stack\n    }, 'ApiError')\n\n    // Maintain proper stack trace\n    if (options?.cause) {\n      this.cause = options.cause\n    }\n  }\n\n  private generateCorrelationId(): string {\n    return `err_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n  }\n\n  /**\n   * Convert to safe response data (removes internal details)\n   */\n  toResponseData(): ApiErrorResponse {\n    return {\n      error: {\n        code: this.code,\n        message: this.getUserSafeMessage(),\n        correlationId: this.correlationId,\n        timestamp: this.timestamp\n      }\n    }\n  }\n\n  private getUserSafeMessage(): string {\n    // Return user-safe messages that don't expose internal details\n    switch (this.code) {\n      case ErrorCode.AUTH_REQUIRED:\n        return 'Authentication required'\n      case ErrorCode.AUTH_INVALID:\n        return 'Invalid authentication credentials'\n      case ErrorCode.AUTH_EXPIRED:\n        return 'Authentication expired'\n      case ErrorCode.AUTH_INSUFFICIENT_PERMISSIONS:\n        return 'Insufficient permissions for this operation'\n      case ErrorCode.VALIDATION_MISSING_FIELD:\n        return 'Required field is missing'\n      case ErrorCode.VALIDATION_INVALID_FORMAT:\n        return 'Invalid data format provided'\n      case ErrorCode.VALIDATION_INVALID_VALUE:\n        return 'Invalid value provided'\n      case ErrorCode.RESOURCE_NOT_FOUND:\n        return 'Requested resource not found'\n      case ErrorCode.RESOURCE_ALREADY_EXISTS:\n        return 'Resource already exists'\n      case ErrorCode.RATE_LIMIT_EXCEEDED:\n        return 'Rate limit exceeded. Please try again later.'\n      case ErrorCode.TOO_MANY_REQUESTS:\n        return 'Too many requests. Please slow down.'\n      case ErrorCode.DATABASE_ERROR:\n        return 'Database operation failed'\n      case ErrorCode.EXTERNAL_SERVICE_ERROR:\n        return 'External service temporarily unavailable'\n      case ErrorCode.INTERNAL_SERVER_ERROR:\n        return 'Internal server error occurred'\n      case ErrorCode.SERVICE_UNAVAILABLE:\n        return 'Service temporarily unavailable'\n      default:\n        return 'An unexpected error occurred'\n    }\n  }\n}\n\n/**\n * Structured API error response format\n */\nexport interface ApiErrorResponse {\n  error: {\n    code: ErrorCode\n    message: string\n    correlationId: string\n    timestamp: string\n  }\n}\n\n/**\n * Create standardized error response\n */\nexport function createErrorResponse(\n  error: ApiError | Error | string,\n  statusCode?: number\n): NextResponse<ApiErrorResponse> {\n  let apiError: ApiError\n\n  if (error instanceof ApiError) {\n    apiError = error\n  } else if (error instanceof Error) {\n    // Convert unknown errors to structured errors\n    apiError = new ApiError(\n      ErrorCode.INTERNAL_SERVER_ERROR,\n      error.message,\n      statusCode || 500,\n      { cause: error }\n    )\n  } else {\n    // Convert string errors\n    apiError = new ApiError(\n      ErrorCode.INTERNAL_SERVER_ERROR,\n      error,\n      statusCode || 500\n    )\n  }\n\n  const responseData = apiError.toResponseData()\n\n  return NextResponse.json(responseData, {\n    status: apiError.statusCode,\n    headers: {\n      'X-Correlation-ID': apiError.correlationId,\n      'Content-Type': 'application/json'\n    }\n  })\n}\n\n/**\n * Helper functions for common error scenarios\n */\nexport const ErrorHelpers = {\n  authenticationRequired: (correlationId?: string): ApiError => {\n    return new ApiError(\n      ErrorCode.AUTH_REQUIRED,\n      'Authentication required',\n      401,\n      { correlationId }\n    )\n  },\n\n  validationError: (field: string, reason: string, correlationId?: string): ApiError => {\n    const message = `Validation failed for ${field}: ${reason}`\n    return new ApiError(\n      ErrorCode.VALIDATION_INVALID_VALUE,\n      message,\n      400,\n      { correlationId, details: { field, reason } }\n    )\n  },\n\n  resourceNotFound: (resource: string, correlationId?: string): ApiError => {\n    const message = `${resource} not found`\n    return new ApiError(\n      ErrorCode.RESOURCE_NOT_FOUND,\n      message,\n      404,\n      { correlationId, details: { resource } }\n    )\n  },\n\n  rateLimitExceeded: (retryAfterSeconds: number = 60, correlationId?: string): ApiError => {\n    return new ApiError(\n      ErrorCode.RATE_LIMIT_EXCEEDED,\n      `Rate limit exceeded. Retry after ${retryAfterSeconds} seconds.`,\n      429,\n      {\n        correlationId,\n        details: { retryAfterSeconds }\n      }\n    )\n  },\n\n  databaseError: (operation: string, correlationId?: string): ApiError => {\n    return new ApiError(\n      ErrorCode.DATABASE_ERROR,\n      'Database operation failed',\n      500,\n      {\n        correlationId,\n        details: { operation }\n      }\n    )\n  },\n\n  insufficientPermissions: (resource: string, correlationId?: string): ApiError => {\n    const message = `Insufficient permissions to access ${resource}`\n    return new ApiError(\n      ErrorCode.AUTH_INSUFFICIENT_PERMISSIONS,\n      message,\n      403,\n      {\n        correlationId,\n        details: { resource }\n      }\n    )\n  }\n}\n\n/**\n * Wrap async functions with structured error handling\n */\nexport async function withErrorHandling<T>(\n  operation: () => Promise<T>,\n  errorContext?: {\n    operation?: string\n    correlationId?: string\n    fallbackErrorCode?: ErrorCode\n    fallbackStatusCode?: number\n  }\n): Promise<T> {\n  const { operation: operationName, correlationId, fallbackErrorCode, fallbackStatusCode } = errorContext || {}\n\n  try {\n    return await operation()\n  } catch (error) {\n    const contextInfo = {\n      operation: operationName,\n      correlationId,\n      timestamp: new Date().toISOString()\n    }\n\n    if (error instanceof ApiError) {\n      // Re-throw structured errors as-is\n      throw error\n    }\n\n    // Log the error with context\n    logger.error(`Operation failed: ${operationName || 'unknown'}`, {\n      error: error instanceof Error ? error.message : String(error),\n      stack: error instanceof Error ? error.stack : undefined,\n      ...contextInfo\n    }, 'ErrorHandler')\n\n    // Convert to structured error\n    const fallbackCode = fallbackErrorCode || ErrorCode.INTERNAL_SERVER_ERROR\n    const fallbackStatus = fallbackStatusCode || 500\n\n    throw new ApiError(\n      fallbackCode,\n      'Operation failed',\n      fallbackStatus,\n      {\n        correlationId,\n        details: contextInfo\n      }\n    )\n  }\n}\n\n/**\n * Type guard to check if response is an error response\n */\nexport function isErrorResponse(response: any): response is ApiErrorResponse {\n  return response && response.error && response.error.code && response.error.message\n}\n\n/**\n * Extract correlation ID from headers\n */\nexport function getCorrelationIdFromHeaders(headers: Headers): string | undefined {\n  return headers.get('X-Correlation-ID') || undefined\n}\n\n/**\n * Add correlation ID to headers\n */\nexport function addCorrelationIdToHeaders(headers: Headers, correlationId: string): void {\n  headers.set('X-Correlation-ID', correlationId)\n}\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]}