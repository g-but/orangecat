{"version":3,"names":["cov_u83x5gbn","actualCoverage","exports","TransparencyScore","react_1","s","require","transparency_1","Card_1","__importDefault","progress_1","lucide_react_1","profileToTransparencyData","profile","f","isOpenSource","hasContributionGuidelines","Boolean","b","_a","bio","includes","hasIssueTracking","hasMissionStatement","length","hasKPIs","hasProgressUpdates","hasTransactionHistory","hasTransactionComments","hasFinancialReports","hasPublicChannels","username","hasCommunityUpdates","display_name","isResponsiveToFeedback","score","setScore","useState","loading","setLoading","useEffect","loadScore","transparencyData","result","calculateTransparencyScore","error","jsx_runtime_1","jsx","default","className","children","jsxs","Info","Progress","value"],"sources":["/home/g/dev/orangecat/src/components/profile/TransparencyScore.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { calculateTransparencyScore } from '@/services/transparency'\nimport { Profile } from '@/types/database'\nimport Card from '@/components/ui/Card'\nimport { Progress } from '@/components/ui/progress'\nimport { Info } from 'lucide-react'\nimport type { TransparencyData } from '@/services/transparency'\n\ninterface TransparencyScoreProps {\n  profile: Profile\n}\n\n// Helper function to convert Profile to TransparencyData\nconst profileToTransparencyData = (profile: Profile): TransparencyData => {\n  // Use some heuristics to determine transparency metrics based on profile data\n  return {\n    isOpenSource: true, // Default for the platform\n    hasContributionGuidelines: Boolean(profile.bio?.includes('contribute')),\n    hasIssueTracking: true, // Default for the platform\n    hasMissionStatement: Boolean(profile.bio && profile.bio.length > 50),\n    hasKPIs: false, // Not available from profile data\n    hasProgressUpdates: false, // Not available from profile data\n    hasTransactionHistory: true, // Default for the platform\n    hasTransactionComments: false, // Not available from profile data\n    hasFinancialReports: false, // Not available from profile data\n    hasPublicChannels: Boolean(profile.username), \n    hasCommunityUpdates: Boolean(profile.display_name),\n    isResponsiveToFeedback: true, // Default for the platform\n  };\n};\n\nexport function TransparencyScore({ profile }: TransparencyScoreProps) {\n  const [score, setScore] = useState<number>(0)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const loadScore = async () => {\n      try {\n        // Convert Profile to TransparencyData before passing to calculateTransparencyScore\n        const transparencyData = profileToTransparencyData(profile);\n        const result = await calculateTransparencyScore(transparencyData)\n        setScore(result.score)\n      } catch (error) {\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    loadScore()\n  }, [profile])\n\n  if (loading) {\n    return (\n      <Card className=\"p-4\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-4 bg-gray-200 rounded w-1/4 mb-2\"></div>\n          <div className=\"h-2 bg-gray-200 rounded w-full\"></div>\n        </div>\n      </Card>\n    )\n  }\n\n  return (\n    <Card className=\"p-4\">\n      <div className=\"flex items-center justify-between mb-2\">\n        <h3 className=\"text-sm font-medium\">Transparency Score</h3>\n        <Info className=\"w-4 h-4 text-gray-400\" />\n      </div>\n      <Progress value={score * 100} className=\"mb-2\" />\n      <p className=\"text-xs text-gray-500\">\n        {score >= 0.8 ? 'High' : score >= 0.5 ? 'Medium' : 'Low'} transparency\n      </p>\n    </Card>\n  )\n} "],"mappingscE;IAAAA,YAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBFE,OAAA,CAAAC,iBAAA,GAAAA,iBAAA;;;;AA/BA,MAAAC,OAAA;AAAA;AAAA,CAAAJ,YAAA,GAAAK,CAAA,OAAAC,OAAA;AACA,MAAAC,cAAA;AAAA;AAAA,CAAAP,YAAA,GAAAK,CAAA,OAAAC,OAAA;AAEA,MAAAE,MAAA;AAAA;AAAA,CAAAR,YAAA,GAAAK,CAAA,OAAAI,eAAA,CAAAH,OAAA;AACA,MAAAI,UAAA;AAAA;AAAA,CAAAV,YAAA,GAAAK,CAAA,OAAAC,OAAA;AACA,MAAAK,cAAA;AAAA;AAAA,CAAAX,YAAA,GAAAK,CAAA,OAAAC,OAAA;AAOA;AAAA;AAAAN,YAAA,GAAAK,CAAA;AACA,MAAMO,yBAAyB,GAAIC,OAAgB,IAAsB;EAAA;EAAAb,YAAA,GAAAc,CAAA;;EACvE;EAAA;EAAAd,YAAA,GAAAK,CAAA;EACA,OAAO;IACLU,YAAY,EAAE,IAAI;IAAE;IACpBC,yBAAyB,EAAEC,OAAO;IAAC;IAAA,CAAAjB,YAAA,GAAAkB,CAAA,WAAAC,EAAA,GAAAN,OAAO,CAACO,GAAG;IAAA;IAAA,CAAApB,YAAA,GAAAkB,CAAA,UAAAC,EAAA;IAAA;IAAA,CAAAnB,YAAA,GAAAkB,CAAA;IAAA;IAAA,CAAAlB,YAAA,GAAAkB,CAAA,UAAAC,EAAA,CAAEE,QAAQ,CAAC,YAAY,CAAC,EAAC;IACvEC,gBAAgB,EAAE,IAAI;IAAE;IACxBC,mBAAmB,EAAEN,OAAO;IAAC;IAAA,CAAAjB,YAAA,GAAAkB,CAAA,UAAAL,OAAO,CAACO,GAAG;IAAA;IAAA,CAAApB,YAAA,GAAAkB,CAAA,UAAIL,OAAO,CAACO,GAAG,CAACI,MAAM,GAAG,EAAE,EAAC;IACpEC,OAAO,EAAE,KAAK;IAAE;IAChBC,kBAAkB,EAAE,KAAK;IAAE;IAC3BC,qBAAqB,EAAE,IAAI;IAAE;IAC7BC,sBAAsB,EAAE,KAAK;IAAE;IAC/BC,mBAAmB,EAAE,KAAK;IAAE;IAC5BC,iBAAiB,EAAEb,OAAO,CAACJ,OAAO,CAACkB,QAAQ,CAAC;IAC5CC,mBAAmB,EAAEf,OAAO,CAACJ,OAAO,CAACoB,YAAY,CAAC;IAClDC,sBAAsB,EAAE,IAAI,CAAE;GAC/B;AACH,CAAC;AAED,SAAgB/B,iBAAiBA,CAAC;EAAEU;AAAO,CAA0B;EAAA;EAAAb,YAAA,GAAAc,CAAA;EACnE,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC;EAAA;EAAA,CAAApC,YAAA,GAAAK,CAAA,QAAG,IAAAD,OAAA,CAAAiC,QAAQ,EAAS,CAAC,CAAC;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC;EAAA;EAAA,CAAAvC,YAAA,GAAAK,CAAA,QAAG,IAAAD,OAAA,CAAAiC,QAAQ,EAAC,IAAI,CAAC;EAAA;EAAArC,YAAA,GAAAK,CAAA;EAE5C,IAAAD,OAAA,CAAAoC,SAAS,EAAC,MAAK;IAAA;IAAAxC,YAAA,GAAAc,CAAA;IAAAd,YAAA,GAAAK,CAAA;IACb,MAAMoC,SAAS,GAAG,MAAAA,CAAA,KAAW;MAAA;MAAAzC,YAAA,GAAAc,CAAA;MAAAd,YAAA,GAAAK,CAAA;MAC3B,IAAI;QACF;QACA,MAAMqC,gBAAgB;QAAA;QAAA,CAAA1C,YAAA,GAAAK,CAAA,QAAGO,yBAAyB,CAACC,OAAO,CAAC;QAC3D,MAAM8B,MAAM;QAAA;QAAA,CAAA3C,YAAA,GAAAK,CAAA,QAAG,MAAM,IAAAE,cAAA,CAAAqC,0BAA0B,EAACF,gBAAgB,CAAC;QAAA;QAAA1C,YAAA,GAAAK,CAAA;QACjE+B,QAAQ,CAACO,MAAM,CAACR,KAAK,CAAC;MACxB,CAAC,CAAC,OAAOU,KAAK,EAAE,CAChB,CAAC,SAAS;QAAA;QAAA7C,YAAA,GAAAK,CAAA;QACRkC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAAA;IAAAvC,YAAA,GAAAK,CAAA;IAEDoC,SAAS,EAAE;EACb,CAAC,EAAE,CAAC5B,OAAO,CAAC,CAAC;EAAA;EAAAb,YAAA,GAAAK,CAAA;EAEb,IAAIiC,OAAO,EAAE;IAAA;IAAAtC,YAAA,GAAAkB,CAAA;IAAAlB,YAAA,GAAAK,CAAA;IACX,OACE,IAAAyC,aAAA,CAAAC,GAAA,EAACvC,MAAA,CAAAwC,OAAI;MAACC,SAAS,EAAC,KAAK;MAAAC,QAAA,EACnB,IAAAJ,aAAA,CAAAK,IAAA;QAAKF,SAAS,EAAC,eAAe;QAAAC,QAAA,GAC5B,IAAAJ,aAAA,CAAAC,GAAA;UAAKE,SAAS,EAAC;QAAoC,EAAO,EAC1D,IAAAH,aAAA,CAAAC,GAAA;UAAKE,SAAS,EAAC;QAAgC,EAAO;MAAA;IAClD,EACD;EAEX,CAAC;EAAA;EAAA;IAAAjD,YAAA,GAAAkB,CAAA;EAAA;EAAAlB,YAAA,GAAAK,CAAA;EAED,OACE,IAAAyC,aAAA,CAAAK,IAAA,EAAC3C,MAAA,CAAAwC,OAAI;IAACC,SAAS,EAAC,KAAK;IAAAC,QAAA,GACnB,IAAAJ,aAAA,CAAAK,IAAA;MAAKF,SAAS,EAAC,wCAAwC;MAAAC,QAAA,GACrD,IAAAJ,aAAA,CAAAC,GAAA;QAAIE,SAAS,EAAC,qBAAqB;QAAAC,QAAA;MAAA,EAAwB,EAC3D,IAAAJ,aAAA,CAAAC,GAAA,EAACpC,cAAA,CAAAyC,IAAI;QAACH,SAAS,EAAC;MAAuB,EAAG;IAAA,EACtC,EACN,IAAAH,aAAA,CAAAC,GAAA,EAACrC,UAAA,CAAA2C,QAAQ;MAACC,KAAK,EAAEnB,KAAK,GAAG,GAAG;MAAEc,SAAS,EAAC;IAAM,EAAG,EACjD,IAAAH,aAAA,CAAAK,IAAA;MAAGF,SAAS,EAAC,uBAAuB;MAAAC,QAAA,GACjCf,KAAK,IAAI,GAAG;MAAA;MAAA,CAAAnC,YAAA,GAAAkB,CAAA,UAAG,MAAM;MAAA;MAAA,CAAAlB,YAAA,GAAAkB,CAAA,UAAGiB,KAAK,IAAI,GAAG;MAAA;MAAA,CAAAnC,YAAA,GAAAkB,CAAA,UAAG,QAAQ;MAAA;MAAA,CAAAlB,YAAA,GAAAkB,CAAA,UAAG,KAAK;IAAA,EACtD;EAAA,EACC;AAEX","ignoreList":[]}