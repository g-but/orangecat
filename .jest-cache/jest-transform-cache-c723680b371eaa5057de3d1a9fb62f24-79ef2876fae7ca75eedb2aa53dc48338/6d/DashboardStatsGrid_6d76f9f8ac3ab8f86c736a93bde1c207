981475119af9357927fac800cc1d2fd5
'use client';
"use strict";

/* istanbul ignore next */
function cov_13zwkvxb7i() {
  var path = "/home/g/dev/orangecat/src/components/dashboard/DashboardStatsGrid.tsx";
  var hash = "bccd2280a320f98dc9174d891f48607d9dcbf22e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/components/dashboard/DashboardStatsGrid.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 37
        }
      },
      "2": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 50
        }
      },
      "3": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "4": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 758
        }
      },
      "5": {
        start: {
          line: 8,
          column: 134
        },
        end: {
          line: 8,
          column: 751
        }
      }
    },
    fnMap: {
      "0": {
        name: "DashboardStatsGrid",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 27
          }
        },
        loc: {
          start: {
            line: 7,
            column: 39
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 116
          },
          end: {
            line: 8,
            column: 117
          }
        },
        loc: {
          start: {
            line: 8,
            column: 134
          },
          end: {
            line: 8,
            column: 751
          }
        },
        line: 8
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/components/dashboard/DashboardStatsGrid.tsx",
      mappings: "AAAA,YAAY,CAAA;;;AASZ,qCAoBC;;AA3BD,+CAAwD;AAOxD,SAAwB,kBAAkB,CAAC,EAAE,KAAK,EAA2B;IAC3E,OAAO,CACL,gCAAK,SAAS,EAAC,uCAAuC,YACnD,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CAC1B,uBAAC,WAAI,cACH,uBAAC,kBAAW,IAAC,SAAS,EAAC,KAAK,YAC1B,iCAAK,SAAS,EAAC,yBAAyB,aACtC,gCAAK,SAAS,EAAE,GAAG,IAAI,CAAC,SAAS,mBAAmB,YAClD,uBAAC,IAAI,CAAC,IAAI,IAAC,SAAS,EAAC,SAAS,GAAG,GAC7B,EACN,4CACE,8BAAG,SAAS,EAAC,kCAAkC,YAAE,IAAI,CAAC,KAAK,GAAK,EAChE,8BAAG,SAAS,EAAC,uBAAuB,YAAE,IAAI,CAAC,QAAQ,GAAK,IACpD,IACF,GACM,IAXL,KAAK,CAYT,CACR,CAAC,GACE,CACP,CAAA;AACH,CAAC",
      names: [],
      sources: ["/home/g/dev/orangecat/src/components/dashboard/DashboardStatsGrid.tsx"],
      sourcesContent: ["'use client'\n\nimport { Card, CardContent } from '@/components/ui/Card'\nimport { DashboardStats } from '@/types/dashboard'\n\ninterface DashboardStatsGridProps {\n  stats: DashboardStats[]\n}\n\nexport default function DashboardStatsGrid({ stats }: DashboardStatsGridProps) {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n      {stats.map((stat, index) => (\n        <Card key={index}>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-4\">\n              <div className={`${stat.iconColor} p-3 rounded-full`}>\n                <stat.icon className=\"w-6 h-6\" />\n              </div>\n              <div>\n                <p className=\"text-2xl font-bold text-gray-900\">{stat.value}</p>\n                <p className=\"text-gray-600 text-sm\">{stat.subtitle}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  )\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bccd2280a320f98dc9174d891f48607d9dcbf22e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_13zwkvxb7i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_13zwkvxb7i();
cov_13zwkvxb7i().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_13zwkvxb7i().s[1]++;
exports.default = DashboardStatsGrid;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_13zwkvxb7i().s[2]++, require("react/jsx-runtime"));
const Card_1 =
/* istanbul ignore next */
(cov_13zwkvxb7i().s[3]++, require("@/components/ui/Card"));
function DashboardStatsGrid({
  stats
}) {
  /* istanbul ignore next */
  cov_13zwkvxb7i().f[0]++;
  cov_13zwkvxb7i().s[4]++;
  return (0, jsx_runtime_1.jsx)("div", {
    className: "grid grid-cols-1 md:grid-cols-4 gap-6",
    children: stats.map((stat, index) => {
      /* istanbul ignore next */
      cov_13zwkvxb7i().f[1]++;
      cov_13zwkvxb7i().s[5]++;
      return (0, jsx_runtime_1.jsx)(Card_1.Card, {
        children: (0, jsx_runtime_1.jsx)(Card_1.CardContent, {
          className: "p-6",
          children: (0, jsx_runtime_1.jsxs)("div", {
            className: "flex items-center gap-4",
            children: [(0, jsx_runtime_1.jsx)("div", {
              className: `${stat.iconColor} p-3 rounded-full`,
              children: (0, jsx_runtime_1.jsx)(stat.icon, {
                className: "w-6 h-6"
              })
            }), (0, jsx_runtime_1.jsxs)("div", {
              children: [(0, jsx_runtime_1.jsx)("p", {
                className: "text-2xl font-bold text-gray-900",
                children: stat.value
              }), (0, jsx_runtime_1.jsx)("p", {
                className: "text-gray-600 text-sm",
                children: stat.subtitle
              })]
            })]
          })
        })
      }, index);
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwiZGVmYXVsdCIsIkRhc2hib2FyZFN0YXRzR3JpZCIsIkNhcmRfMSIsImNvdl8xM3p3a3Z4YjdpIiwicyIsInJlcXVpcmUiLCJzdGF0cyIsImYiLCJqc3hfcnVudGltZV8xIiwianN4IiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJtYXAiLCJzdGF0IiwiaW5kZXgiLCJDYXJkIiwiQ2FyZENvbnRlbnQiLCJqc3hzIiwiaWNvbkNvbG9yIiwiaWNvbiIsInZhbHVlIiwic3VidGl0bGUiXSwic291cmNlcyI6WyIvaG9tZS9nL2Rldi9vcmFuZ2VjYXQvc3JjL2NvbXBvbmVudHMvZGFzaGJvYXJkL0Rhc2hib2FyZFN0YXRzR3JpZC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXG5cbmltcG9ydCB7IENhcmQsIENhcmRDb250ZW50IH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL0NhcmQnXG5pbXBvcnQgeyBEYXNoYm9hcmRTdGF0cyB9IGZyb20gJ0AvdHlwZXMvZGFzaGJvYXJkJ1xuXG5pbnRlcmZhY2UgRGFzaGJvYXJkU3RhdHNHcmlkUHJvcHMge1xuICBzdGF0czogRGFzaGJvYXJkU3RhdHNbXVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEYXNoYm9hcmRTdGF0c0dyaWQoeyBzdGF0cyB9OiBEYXNoYm9hcmRTdGF0c0dyaWRQcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtNCBnYXAtNlwiPlxuICAgICAge3N0YXRzLm1hcCgoc3RhdCwgaW5kZXgpID0+IChcbiAgICAgICAgPENhcmQga2V5PXtpbmRleH0+XG4gICAgICAgICAgPENhcmRDb250ZW50IGNsYXNzTmFtZT1cInAtNlwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtNFwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YCR7c3RhdC5pY29uQ29sb3J9IHAtMyByb3VuZGVkLWZ1bGxgfT5cbiAgICAgICAgICAgICAgICA8c3RhdC5pY29uIGNsYXNzTmFtZT1cInctNiBoLTZcIiAvPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmb250LWJvbGQgdGV4dC1ncmF5LTkwMFwiPntzdGF0LnZhbHVlfTwvcD5cbiAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNjAwIHRleHQtc21cIj57c3RhdC5zdWJ0aXRsZX08L3A+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9DYXJkQ29udGVudD5cbiAgICAgICAgPC9DYXJkPlxuICAgICAgKSl9XG4gICAgPC9kaXY+XG4gIClcbn0gIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFTWkEsT0FBQSxDQUFBQyxPQUFBLEdBQUFDLGtCQUFBOzs7O0FBUEEsTUFBQUMsTUFBQTtBQUFBO0FBQUEsQ0FBQUMsY0FBQSxHQUFBQyxDQUFBLE9BQUFDLE9BQUE7QUFPQSxTQUF3Qkosa0JBQWtCQSxDQUFDO0VBQUVLO0FBQUssQ0FBMkI7RUFBQTtFQUFBSCxjQUFBLEdBQUFJLENBQUE7RUFBQUosY0FBQSxHQUFBQyxDQUFBO0VBQzNFLE9BQ0UsSUFBQUksYUFBQSxDQUFBQyxHQUFBO0lBQUtDLFNBQVMsRUFBQyx1Q0FBdUM7SUFBQUMsUUFBQSxFQUNuREwsS0FBSyxDQUFDTSxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxFQUFFQyxLQUFLLEtBQ3JCO01BQUE7TUFBQVgsY0FBQSxHQUFBSSxDQUFBO01BQUFKLGNBQUEsR0FBQUMsQ0FBQTtNQUFBLFdBQUFJLGFBQUEsQ0FBQUMsR0FBQSxFQUFDUCxNQUFBLENBQUFhLElBQUk7UUFBQUosUUFBQSxFQUNILElBQUFILGFBQUEsQ0FBQUMsR0FBQSxFQUFDUCxNQUFBLENBQUFjLFdBQVc7VUFBQ04sU0FBUyxFQUFDLEtBQUs7VUFBQUMsUUFBQSxFQUMxQixJQUFBSCxhQUFBLENBQUFTLElBQUE7WUFBS1AsU0FBUyxFQUFDLHlCQUF5QjtZQUFBQyxRQUFBLEdBQ3RDLElBQUFILGFBQUEsQ0FBQUMsR0FBQTtjQUFLQyxTQUFTLEVBQUUsR0FBR0csSUFBSSxDQUFDSyxTQUFTLG1CQUFtQjtjQUFBUCxRQUFBLEVBQ2xELElBQUFILGFBQUEsQ0FBQUMsR0FBQSxFQUFDSSxJQUFJLENBQUNNLElBQUk7Z0JBQUNULFNBQVMsRUFBQztjQUFTO1lBQUcsRUFDN0IsRUFDTixJQUFBRixhQUFBLENBQUFTLElBQUE7Y0FBQU4sUUFBQSxHQUNFLElBQUFILGFBQUEsQ0FBQUMsR0FBQTtnQkFBR0MsU0FBUyxFQUFDLGtDQUFrQztnQkFBQUMsUUFBQSxFQUFFRSxJQUFJLENBQUNPO2NBQUssRUFBSyxFQUNoRSxJQUFBWixhQUFBLENBQUFDLEdBQUE7Z0JBQUdDLFNBQVMsRUFBQyx1QkFBdUI7Z0JBQUFDLFFBQUEsRUFBRUUsSUFBSSxDQUFDUTtjQUFRLEVBQUs7WUFBQSxFQUNwRDtVQUFBO1FBQ0Y7TUFDTSxHQVhMUCxLQUFLLENBWVQ7SUFaUyxDQWFqQjtFQUFDLEVBQ0U7QUFFViIsImlnbm9yZUxpc3QiOltdfQ==