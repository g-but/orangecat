{"file":"/home/g/dev/orangecat/src/services/profileService.ts","mappings":";AAAA;;;;;;;;;;;;;;;;;;;GAmBG;;;AAEH,kDAAkD;AAClD,yCASyB;AARvB,uGAAA,cAAc,OAAA;AACd,sGAAA,aAAa,OAAA;AACb,sGAAA,aAAa,OAAA;AACb,sGAAA,aAAa,OAAA;AAUf,6DAA6D;AAC7D,2CAAiD;AAEpC,QAAA,UAAU,GAAG,sBAAc,CAAC,UAAU,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AAC5D,QAAA,aAAa,GAAG,sBAAc,CAAC,aAAa,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AAClE,QAAA,aAAa,GAAG,sBAAc,CAAC,aAAa,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AAClE,QAAA,aAAa,GAAG,sBAAc,CAAC,aAAa,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AAClE,QAAA,cAAc,GAAG,sBAAc,CAAC,cAAc,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AACpE,QAAA,cAAc,GAAG,sBAAc,CAAC,cAAc,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AACpE,QAAA,eAAe,GAAG,sBAAc,CAAC,eAAe,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AACtE,QAAA,qBAAqB,GAAG,sBAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AAClF,QAAA,qBAAqB,GAAG,sBAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AAE/F,4CAA4C;AAC5C,kBAAe,sBAAc,CAAC","names":[],"sources":["/home/g/dev/orangecat/src/services/profileService.ts"],"sourcesContent":["/**\n * PROFILE SERVICE - CLEAN MODULAR ARCHITECTURE\n * \n * Created: 2025-01-08\n * Last Modified: 2025-01-09\n * Last Modified Summary: âœ… REFACTORED from 808-line monolith to modular architecture - Option A Phase 1 Complete\n * \n * BEFORE: 808 lines in single file (102% over 400-line limit)\n * AFTER: Clean imports from 5 focused modules (~200 lines each)\n * \n * Performance Impact: Improved tree-shaking, better code splitting, easier maintenance\n * Architecture: Follows Single Responsibility Principle, DRY principles\n * \n * Module Structure:\n * - types.ts: All TypeScript interfaces and types\n * - mapper.ts: Database schema mapping logic\n * - reader.ts: All read operations (getProfile, searchProfiles, etc.)\n * - writer.ts: All write operations (updateProfile, createProfile, etc.)\n * - index.ts: Combined service interface\n */\n\n// Export everything from the modular architecture\nexport {\n  ProfileService,\n  ProfileMapper,\n  ProfileReader,\n  ProfileWriter,\n  type ScalableProfile,\n  type ScalableProfileFormData,\n  type ProfileAnalytics,\n  type ProfileServiceResponse\n} from './profile/index';\n\n// Legacy compatibility exports\nexport type { Profile, ProfileFormData } from '@/types/database';\n\n// Re-export some common functions for backward compatibility\nimport { ProfileService } from './profile/index';\n\nexport const getProfile = ProfileService.getProfile.bind(ProfileService);\nexport const updateProfile = ProfileService.updateProfile.bind(ProfileService);\nexport const createProfile = ProfileService.createProfile.bind(ProfileService);\nexport const deleteProfile = ProfileService.deleteProfile.bind(ProfileService);\nexport const getAllProfiles = ProfileService.getAllProfiles.bind(ProfileService);\nexport const searchProfiles = ProfileService.searchProfiles.bind(ProfileService);\nexport const updateAnalytics = ProfileService.updateAnalytics.bind(ProfileService);\nexport const incrementProfileViews = ProfileService.incrementProfileViews.bind(ProfileService);\nexport const fallbackProfileUpdate = ProfileService.fallbackProfileUpdate.bind(ProfileService);\n\n// Default export for backward compatibility\nexport default ProfileService; "],"version":3}