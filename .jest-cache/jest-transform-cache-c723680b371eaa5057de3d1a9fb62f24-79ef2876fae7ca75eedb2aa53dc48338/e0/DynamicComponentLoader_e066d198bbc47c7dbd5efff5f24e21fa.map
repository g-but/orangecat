{"version":3,"names":["exports","createDynamicComponent","cov_v2vtqw29c","s","useLazyComponent","react_1","require","Loading_1","__importDefault","importFunc","fallback","f","LazyComponent","lazy","DynamicComponent","props","jsx_runtime_1","jsx","Suspense","b","default","children","Object","assign","DynamicAnalyticsDashboard","Promise","resolve","then","__importStar","className","DynamicCampaignManagement","DynamicQRGenerator","DynamicRichTextEditor","DynamicAdvancedCharts","DynamicImageUpload","DynamicDatePicker","DynamicAdvancedSearch","preloadComponent","window","requestIdleCallback","catch","setTimeout","threshold","IntersectionLazyComponent","rootMargin","componentProps","__rest"],"sources":["/home/g/dev/orangecat/src/components/DynamicComponentLoader.tsx"],"sourcesContent":["/**\n * Dynamic Component Loader\n * \n * Provides lazy loading for heavy components to reduce initial bundle size.\n * Critical for performance optimization and code splitting.\n * \n * @author Claude Code Assistant\n * @created 2025-06-30\n */\n\nimport { lazy, Suspense, ComponentType } from 'react'\nimport Loading from '@/components/Loading'\n\n/**\n * Create a dynamically imported component with loading fallback\n * @param importFunc - Function that returns a dynamic import promise\n * @param fallback - Optional custom loading component\n * @returns Component wrapped with Suspense and lazy loading\n */\nexport function createDynamicComponent<T extends ComponentType<any>>(\n  importFunc: () => Promise<{ default: T }>,\n  fallback?: React.ReactNode\n) {\n  const LazyComponent = lazy(importFunc)\n  \n  return function DynamicComponent(props: React.ComponentProps<T>) {\n    return (\n      <Suspense fallback={fallback || <Loading />}>\n        <LazyComponent {...props} />\n      </Suspense>\n    )\n  }\n}\n\n/**\n * Pre-defined dynamic components for common heavy modules\n */\n\n// Analytics Dashboard (heavy charts and data visualization)\nexport const DynamicAnalyticsDashboard = createDynamicComponent(\n  () => import('@/components/dashboard/AnalyticsDashboard'),\n  <div className=\"animate-pulse bg-gray-200 h-64 rounded-lg\" />\n)\n\n// Campaign Management (complex forms and state)\nexport const DynamicCampaignManagement = createDynamicComponent(\n  () => import('@/components/dashboard/CampaignManagement'),\n  <div className=\"animate-pulse bg-gray-200 h-48 rounded-lg\" />\n)\n\n// QR Code Generator (external library heavy)\nexport const DynamicQRGenerator = createDynamicComponent(\n  () => import('@/components/ui/QRGenerator'),\n  <div className=\"animate-pulse bg-gray-200 w-48 h-48 rounded-lg mx-auto\" />\n)\n\n// Rich Text Editor (if you have one)\nexport const DynamicRichTextEditor = createDynamicComponent(\n  () => import('@/components/ui/RichTextEditor'),\n  <div className=\"animate-pulse bg-gray-200 h-32 rounded-lg\" />\n)\n\n// Advanced Charts (chart libraries are heavy)\nexport const DynamicAdvancedCharts = createDynamicComponent(\n  () => import('@/components/charts/AdvancedCharts'),\n  <div className=\"animate-pulse bg-gray-200 h-80 rounded-lg\" />\n)\n\n// Image Upload with Preview (file handling libraries)\nexport const DynamicImageUpload = createDynamicComponent(\n  () => import('@/components/ui/ImageUpload'),\n  <div className=\"animate-pulse bg-gray-200 h-40 rounded-lg\" />\n)\n\n// Date Picker (date libraries can be heavy)\nexport const DynamicDatePicker = createDynamicComponent(\n  () => import('@/components/ui/DatePicker'),\n  <div className=\"animate-pulse bg-gray-200 h-10 w-48 rounded\" />\n)\n\n// Advanced Search (complex filtering logic)\nexport const DynamicAdvancedSearch = createDynamicComponent(\n  () => import('@/components/search/AdvancedSearch'),\n  <div className=\"animate-pulse bg-gray-200 h-16 rounded-lg\" />\n)\n\n/**\n * Utility for preloading components on user interaction\n */\nexport const preloadComponent = (importFunc: () => Promise<any>) => {\n  // Only preload in browser environment\n  if (typeof window !== 'undefined') {\n    // Use requestIdleCallback if available, otherwise setTimeout\n    if ('requestIdleCallback' in window) {\n      requestIdleCallback(() => {\n        importFunc().catch(() => {\n          // Silently fail - preloading is an optimization\n        })\n      })\n    } else {\n      setTimeout(() => {\n        importFunc().catch(() => {\n          // Silently fail - preloading is an optimization\n        })\n      }, 100)\n    }\n  }\n}\n\n/**\n * Hook for intersection-based component loading\n */\nexport function useLazyComponent<T extends ComponentType<any>>(\n  importFunc: () => Promise<{ default: T }>,\n  threshold = 0.1\n) {\n  const LazyComponent = lazy(importFunc)\n  \n  return function IntersectionLazyComponent(props: React.ComponentProps<T> & { \n    fallback?: React.ReactNode,\n    rootMargin?: string \n  }) {\n    const { fallback, rootMargin = '50px', ...componentProps } = props\n    \n    return (\n      <Suspense fallback={fallback || <Loading />}>\n        <LazyComponent {...(componentProps as React.ComponentProps<T>)} />\n      </Suspense>\n    )\n  }\n}"],"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","ignoreList":[]}