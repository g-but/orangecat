{"version":3,"names":["cov_2ngwovllcu","actualCoverage","exports","default","RoleManagement","useAuth_1","s","require","navigation_1","react_1","Loading_1","__importDefault","children","requiredRole","b","f","user","profile","isLoading","useAuth","router","useRouter","isAdmin","_a","email","endsWith","_b","app_metadata","role","useEffect","push","jsx_runtime_1","jsx","Fragment"],"sources":["/home/g/dev/orangecat/src/components/auth/RoleManagement.tsx"],"sourcesContent":["'use client'\n\nimport { useAuth } from '@/hooks/useAuth'\nimport { useRouter } from 'next/navigation'\nimport { useEffect } from 'react'\nimport Loading from '@/components/Loading'\n\ninterface RoleManagementProps {\n  children: React.ReactNode\n  requiredRole?: 'admin' | 'user'\n}\n\nexport default function RoleManagement({ children, requiredRole = 'user' }: RoleManagementProps) {\n  const { user, profile, isLoading } = useAuth()\n  const router = useRouter()\n  \n  // Check if user is admin based on email domain - you can adjust this logic\n  // to match your specific admin identification method\n  const isAdmin = user?.email?.endsWith('@orangecat.ch') || \n                 user?.email === 'admin@example.com' ||\n                 user?.app_metadata?.role === 'admin'\n\n  useEffect(() => {\n    if (!isLoading && !user) {\n      router.push('/auth?from=protected')\n    } else if (!isLoading && requiredRole === 'admin' && !isAdmin) {\n      router.push('/')\n    }\n  }, [user, isAdmin, isLoading, router, requiredRole])\n\n  if (isLoading) {\n    return <Loading />\n  }\n\n  if (!user || (requiredRole === 'admin' && !isAdmin)) {\n    return null\n  }\n\n  return <>{children}</>\n} "],"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","ignoreList":[]}