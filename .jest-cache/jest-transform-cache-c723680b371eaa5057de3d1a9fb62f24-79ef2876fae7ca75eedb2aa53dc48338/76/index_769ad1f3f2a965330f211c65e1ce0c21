5a705fc88f9260af14819bdaa4e18beb
"use strict";

/**
 * SUPABASE AUTH SERVICE - CLEAN AUTHENTICATION OPERATIONS
 *
 * This service handles all authentication operations with proper
 * error handling, logging, and type safety.
 *
 * Created: 2025-06-08
 * Last Modified: 2025-01-22
 * Last Modified Summary: Enhanced timeout handling and error messages for better UX
 */
/* istanbul ignore next */
function cov_261dkgvklu() {
  var path = "/home/g/dev/orangecat/src/services/supabase/auth/index.ts";
  var hash = "3a3e5aeb02e51a4e3f1452db4e5d622c4a27c1f5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/services/supabase/auth/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 22
        },
        end: {
          line: 14,
          column: 1
        }
      },
      "1": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 62
        }
      },
      "2": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "3": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 29
        }
      },
      "4": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "5": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 26
        }
      },
      "7": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "8": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 40
        }
      },
      "9": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 32
        }
      },
      "10": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 26
        }
      },
      "11": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 46
        }
      },
      "12": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 42
        }
      },
      "13": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 44
        }
      },
      "14": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 48
        }
      },
      "15": {
        start: {
          line: 28,
          column: 17
        },
        end: {
          line: 28,
          column: 54
        }
      },
      "16": {
        start: {
          line: 29,
          column: 17
        },
        end: {
          line: 29,
          column: 42
        }
      },
      "17": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 53,
          column: 1
        }
      },
      "18": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "19": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 43,
          column: 10
        }
      },
      "20": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "21": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 50,
          column: 10
        }
      },
      "22": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 17
        }
      },
      "23": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "24": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 71
        }
      },
      "25": {
        start: {
          line: 76,
          column: 31
        },
        end: {
          line: 78,
          column: 10
        }
      },
      "26": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 91
        }
      },
      "27": {
        start: {
          line: 77,
          column: 29
        },
        end: {
          line: 77,
          column: 82
        }
      },
      "28": {
        start: {
          line: 79,
          column: 28
        },
        end: {
          line: 82,
          column: 10
        }
      },
      "29": {
        start: {
          line: 83,
          column: 32
        },
        end: {
          line: 83,
          column: 81
        }
      },
      "30": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "31": {
        start: {
          line: 85,
          column: 34
        },
        end: {
          line: 85,
          column: 67
        }
      },
      "32": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 93
        }
      },
      "33": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 81
        }
      },
      "34": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "35": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 37
        }
      },
      "36": {
        start: {
          line: 97,
          column: 30
        },
        end: {
          line: 97,
          column: 63
        }
      },
      "37": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 101,
          column: 19
        }
      },
      "38": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 105,
          column: 10
        }
      },
      "39": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "40": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 71
        }
      },
      "41": {
        start: {
          line: 132,
          column: 31
        },
        end: {
          line: 134,
          column: 10
        }
      },
      "42": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 89
        }
      },
      "43": {
        start: {
          line: 133,
          column: 29
        },
        end: {
          line: 133,
          column: 80
        }
      },
      "44": {
        start: {
          line: 135,
          column: 24
        },
        end: {
          line: 135,
          column: 86
        }
      },
      "45": {
        start: {
          line: 136,
          column: 28
        },
        end: {
          line: 143,
          column: 10
        }
      },
      "46": {
        start: {
          line: 144,
          column: 32
        },
        end: {
          line: 144,
          column: 81
        }
      },
      "47": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "48": {
        start: {
          line: 146,
          column: 34
        },
        end: {
          line: 146,
          column: 67
        }
      },
      "49": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 93
        }
      },
      "50": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 81
        }
      },
      "51": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 154,
          column: 11
        }
      },
      "52": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 37
        }
      },
      "53": {
        start: {
          line: 158,
          column: 30
        },
        end: {
          line: 158,
          column: 63
        }
      },
      "54": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 162,
          column: 19
        }
      },
      "55": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 166,
          column: 10
        }
      },
      "56": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "57": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 61
        }
      },
      "58": {
        start: {
          line: 184,
          column: 26
        },
        end: {
          line: 184,
          column: 63
        }
      },
      "59": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "60": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 79
        }
      },
      "61": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 36
        }
      },
      "62": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 53
        }
      },
      "63": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 31
        }
      },
      "64": {
        start: {
          line: 193,
          column: 26
        },
        end: {
          line: 193,
          column: 31
        }
      },
      "65": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 196,
          column: 19
        }
      },
      "66": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 36
        }
      },
      "67": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "68": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 70
        }
      },
      "69": {
        start: {
          line: 218,
          column: 24
        },
        end: {
          line: 218,
          column: 86
        }
      },
      "70": {
        start: {
          line: 220,
          column: 28
        },
        end: {
          line: 220,
          column: 93
        }
      },
      "71": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 88
        }
      },
      "72": {
        start: {
          line: 222,
          column: 26
        },
        end: {
          line: 224,
          column: 10
        }
      },
      "73": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "74": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 92
        }
      },
      "75": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 29
        }
      },
      "76": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 96
        }
      },
      "77": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 31
        }
      },
      "78": {
        start: {
          line: 233,
          column: 29
        },
        end: {
          line: 233,
          column: 83
        }
      },
      "79": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 237,
          column: 11
        }
      },
      "80": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 72
        }
      },
      "81": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 273,
          column: 5
        }
      },
      "82": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 60
        }
      },
      "83": {
        start: {
          line: 257,
          column: 26
        },
        end: {
          line: 259,
          column: 10
        }
      },
      "84": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "85": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 86
        }
      },
      "86": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 36
        }
      },
      "87": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 63
        }
      },
      "88": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 31
        }
      },
      "89": {
        start: {
          line: 268,
          column: 26
        },
        end: {
          line: 268,
          column: 31
        }
      },
      "90": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 271,
          column: 19
        }
      },
      "91": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 36
        }
      },
      "92": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 303,
          column: 5
        }
      },
      "93": {
        start: {
          line: 289,
          column: 45
        },
        end: {
          line: 289,
          column: 85
        }
      },
      "94": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 293,
          column: 9
        }
      },
      "95": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 85
        }
      },
      "96": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 51
        }
      },
      "97": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 200
        }
      },
      "98": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 40
        }
      },
      "99": {
        start: {
          line: 298,
          column: 26
        },
        end: {
          line: 298,
          column: 31
        }
      },
      "100": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 301,
          column: 19
        }
      },
      "101": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 51
        }
      },
      "102": {
        start: {
          line: 318,
          column: 4
        },
        end: {
          line: 333,
          column: 5
        }
      },
      "103": {
        start: {
          line: 319,
          column: 42
        },
        end: {
          line: 319,
          column: 79
        }
      },
      "104": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 323,
          column: 9
        }
      },
      "105": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 82
        }
      },
      "106": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 322,
          column: 48
        }
      },
      "107": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 176
        }
      },
      "108": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 325,
          column: 37
        }
      },
      "109": {
        start: {
          line: 328,
          column: 26
        },
        end: {
          line: 328,
          column: 31
        }
      },
      "110": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 331,
          column: 19
        }
      },
      "111": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 48
        }
      },
      "112": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 357,
          column: 67
        }
      },
      "113": {
        start: {
          line: 358,
          column: 39
        },
        end: {
          line: 362,
          column: 6
        }
      },
      "114": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 208
        }
      },
      "115": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 33
        }
      },
      "116": {
        start: {
          line: 363,
          column: 4
        },
        end: {
          line: 363,
          column: 24
        }
      },
      "117": {
        start: {
          line: 381,
          column: 4
        },
        end: {
          line: 389,
          column: 5
        }
      },
      "118": {
        start: {
          line: 384,
          column: 25
        },
        end: {
          line: 384,
          column: 40
        }
      },
      "119": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 385,
          column: 22
        }
      },
      "120": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 21
        }
      },
      "121": {
        start: {
          line: 404,
          column: 4
        },
        end: {
          line: 410,
          column: 5
        }
      },
      "122": {
        start: {
          line: 405,
          column: 25
        },
        end: {
          line: 405,
          column: 40
        }
      },
      "123": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 406,
          column: 77
        }
      },
      "124": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 409,
          column: 20
        }
      },
      "125": {
        start: {
          line: 428,
          column: 4
        },
        end: {
          line: 455,
          column: 5
        }
      },
      "126": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 429,
          column: 72
        }
      },
      "127": {
        start: {
          line: 431,
          column: 24
        },
        end: {
          line: 431,
          column: 86
        }
      },
      "128": {
        start: {
          line: 432,
          column: 27
        },
        end: {
          line: 432,
          column: 127
        }
      },
      "129": {
        start: {
          line: 433,
          column: 32
        },
        end: {
          line: 440,
          column: 10
        }
      },
      "130": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 444,
          column: 9
        }
      },
      "131": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 442,
          column: 94
        }
      },
      "132": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 443,
          column: 73
        }
      },
      "133": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 445,
          column: 83
        }
      },
      "134": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 446,
          column: 37
        }
      },
      "135": {
        start: {
          line: 449,
          column: 26
        },
        end: {
          line: 449,
          column: 31
        }
      },
      "136": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 453,
          column: 19
        }
      },
      "137": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 454,
          column: 73
        }
      },
      "138": {
        start: {
          line: 458,
          column: 14
        },
        end: {
          line: 458,
          column: 33
        }
      },
      "139": {
        start: {
          line: 459,
          column: 0
        },
        end: {
          line: 459,
          column: 118
        }
      },
      "140": {
        start: {
          line: 459,
          column: 85
        },
        end: {
          line: 459,
          column: 112
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 56
          },
          end: {
            line: 12,
            column: 57
          }
        },
        loc: {
          start: {
            line: 12,
            column: 71
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 25
          }
        },
        loc: {
          start: {
            line: 36,
            column: 46
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 36
      },
      "2": {
        name: "signIn",
        decl: {
          start: {
            line: 71,
            column: 15
          },
          end: {
            line: 71,
            column: 21
          }
        },
        loc: {
          start: {
            line: 71,
            column: 43
          },
          end: {
            line: 107,
            column: 1
          }
        },
        line: 71
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 76,
            column: 43
          },
          end: {
            line: 76,
            column: 44
          }
        },
        loc: {
          start: {
            line: 76,
            column: 58
          },
          end: {
            line: 78,
            column: 9
          }
        },
        line: 76
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 77,
            column: 23
          },
          end: {
            line: 77,
            column: 24
          }
        },
        loc: {
          start: {
            line: 77,
            column: 29
          },
          end: {
            line: 77,
            column: 82
          }
        },
        line: 77
      },
      "5": {
        name: "signUp",
        decl: {
          start: {
            line: 127,
            column: 15
          },
          end: {
            line: 127,
            column: 21
          }
        },
        loc: {
          start: {
            line: 127,
            column: 60
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 127
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 132,
            column: 43
          },
          end: {
            line: 132,
            column: 44
          }
        },
        loc: {
          start: {
            line: 132,
            column: 58
          },
          end: {
            line: 134,
            column: 9
          }
        },
        line: 132
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 133,
            column: 23
          },
          end: {
            line: 133,
            column: 24
          }
        },
        loc: {
          start: {
            line: 133,
            column: 29
          },
          end: {
            line: 133,
            column: 80
          }
        },
        line: 133
      },
      "8": {
        name: "signOut",
        decl: {
          start: {
            line: 181,
            column: 15
          },
          end: {
            line: 181,
            column: 22
          }
        },
        loc: {
          start: {
            line: 181,
            column: 25
          },
          end: {
            line: 199,
            column: 1
          }
        },
        line: 181
      },
      "9": {
        name: "resetPassword",
        decl: {
          start: {
            line: 213,
            column: 15
          },
          end: {
            line: 213,
            column: 28
          }
        },
        loc: {
          start: {
            line: 213,
            column: 40
          },
          end: {
            line: 240,
            column: 1
          }
        },
        line: 213
      },
      "10": {
        name: "updatePassword",
        decl: {
          start: {
            line: 254,
            column: 15
          },
          end: {
            line: 254,
            column: 29
          }
        },
        loc: {
          start: {
            line: 254,
            column: 47
          },
          end: {
            line: 274,
            column: 1
          }
        },
        line: 254
      },
      "11": {
        name: "getSession",
        decl: {
          start: {
            line: 286,
            column: 15
          },
          end: {
            line: 286,
            column: 25
          }
        },
        loc: {
          start: {
            line: 286,
            column: 28
          },
          end: {
            line: 304,
            column: 1
          }
        },
        line: 286
      },
      "12": {
        name: "getUser",
        decl: {
          start: {
            line: 317,
            column: 15
          },
          end: {
            line: 317,
            column: 22
          }
        },
        loc: {
          start: {
            line: 317,
            column: 25
          },
          end: {
            line: 334,
            column: 1
          }
        },
        line: 317
      },
      "13": {
        name: "onAuthStateChange",
        decl: {
          start: {
            line: 356,
            column: 9
          },
          end: {
            line: 356,
            column: 26
          }
        },
        loc: {
          start: {
            line: 356,
            column: 37
          },
          end: {
            line: 364,
            column: 1
          }
        },
        line: 356
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 358,
            column: 79
          },
          end: {
            line: 358,
            column: 80
          }
        },
        loc: {
          start: {
            line: 358,
            column: 99
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 358
      },
      "15": {
        name: "isAuthenticated",
        decl: {
          start: {
            line: 380,
            column: 15
          },
          end: {
            line: 380,
            column: 30
          }
        },
        loc: {
          start: {
            line: 380,
            column: 33
          },
          end: {
            line: 390,
            column: 1
          }
        },
        line: 380
      },
      "16": {
        name: "getCurrentUserId",
        decl: {
          start: {
            line: 403,
            column: 15
          },
          end: {
            line: 403,
            column: 31
          }
        },
        loc: {
          start: {
            line: 403,
            column: 34
          },
          end: {
            line: 411,
            column: 1
          }
        },
        line: 403
      },
      "17": {
        name: "signInWithProvider",
        decl: {
          start: {
            line: 427,
            column: 15
          },
          end: {
            line: 427,
            column: 33
          }
        },
        loc: {
          start: {
            line: 427,
            column: 53
          },
          end: {
            line: 456,
            column: 1
          }
        },
        line: 427
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 459,
            column: 71
          },
          end: {
            line: 459,
            column: 72
          }
        },
        loc: {
          start: {
            line: 459,
            column: 83
          },
          end: {
            line: 459,
            column: 114
          }
        },
        line: 459
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 22
          },
          end: {
            line: 14,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 12,
            column: 27
          }
        }, {
          start: {
            line: 12,
            column: 31
          },
          end: {
            line: 12,
            column: 51
          }
        }, {
          start: {
            line: 12,
            column: 56
          },
          end: {
            line: 14,
            column: 1
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 11
          },
          end: {
            line: 13,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 37
          },
          end: {
            line: 13,
            column: 40
          }
        }, {
          start: {
            line: 13,
            column: 43
          },
          end: {
            line: 13,
            column: 61
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 13,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 13,
            column: 15
          }
        }, {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 33
          }
        }],
        line: 13
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 35
          }
        }, {
          start: {
            line: 38,
            column: 40
          },
          end: {
            line: 38,
            column: 120
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 40
          },
          end: {
            line: 38,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 89
          },
          end: {
            line: 38,
            column: 95
          }
        }, {
          start: {
            line: 38,
            column: 98
          },
          end: {
            line: 38,
            column: 120
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 38,
            column: 40
          },
          end: {
            line: 38,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 40
          },
          end: {
            line: 38,
            column: 69
          }
        }, {
          start: {
            line: 38,
            column: 73
          },
          end: {
            line: 38,
            column: 86
          }
        }],
        line: 38
      },
      "7": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "8": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 57
          },
          end: {
            line: 45,
            column: 63
          }
        }, {
          start: {
            line: 45,
            column: 66
          },
          end: {
            line: 45,
            column: 86
          }
        }],
        line: 45
      },
      "9": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 37
          }
        }, {
          start: {
            line: 45,
            column: 41
          },
          end: {
            line: 45,
            column: 54
          }
        }],
        line: 45
      },
      "10": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "11": {
        loc: {
          start: {
            line: 91,
            column: 20
          },
          end: {
            line: 91,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 65
          },
          end: {
            line: 91,
            column: 71
          }
        }, {
          start: {
            line: 91,
            column: 74
          },
          end: {
            line: 91,
            column: 79
          }
        }],
        line: 91
      },
      "12": {
        loc: {
          start: {
            line: 91,
            column: 20
          },
          end: {
            line: 91,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 20
          },
          end: {
            line: 91,
            column: 45
          }
        }, {
          start: {
            line: 91,
            column: 49
          },
          end: {
            line: 91,
            column: 62
          }
        }],
        line: 91
      },
      "13": {
        loc: {
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 135,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 135,
            column: 56
          }
        }, {
          start: {
            line: 135,
            column: 60
          },
          end: {
            line: 135,
            column: 86
          }
        }],
        line: 135
      },
      "14": {
        loc: {
          start: {
            line: 141,
            column: 33
          },
          end: {
            line: 141,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 33
          },
          end: {
            line: 141,
            column: 48
          }
        }, {
          start: {
            line: 141,
            column: 52
          },
          end: {
            line: 141,
            column: 78
          }
        }],
        line: 141
      },
      "15": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "16": {
        loc: {
          start: {
            line: 152,
            column: 20
          },
          end: {
            line: 152,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 65
          },
          end: {
            line: 152,
            column: 71
          }
        }, {
          start: {
            line: 152,
            column: 74
          },
          end: {
            line: 152,
            column: 79
          }
        }],
        line: 152
      },
      "17": {
        loc: {
          start: {
            line: 152,
            column: 20
          },
          end: {
            line: 152,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 20
          },
          end: {
            line: 152,
            column: 45
          }
        }, {
          start: {
            line: 152,
            column: 49
          },
          end: {
            line: 152,
            column: 62
          }
        }],
        line: 152
      },
      "18": {
        loc: {
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "19": {
        loc: {
          start: {
            line: 218,
            column: 24
          },
          end: {
            line: 218,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 24
          },
          end: {
            line: 218,
            column: 56
          }
        }, {
          start: {
            line: 218,
            column: 60
          },
          end: {
            line: 218,
            column: 86
          }
        }],
        line: 218
      },
      "20": {
        loc: {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "21": {
        loc: {
          start: {
            line: 233,
            column: 29
          },
          end: {
            line: 233,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 233,
            column: 54
          },
          end: {
            line: 233,
            column: 67
          }
        }, {
          start: {
            line: 233,
            column: 70
          },
          end: {
            line: 233,
            column: 83
          }
        }],
        line: 233
      },
      "22": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "23": {
        loc: {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "24": {
        loc: {
          start: {
            line: 294,
            column: 84
          },
          end: {
            line: 294,
            column: 196
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 294,
            column: 182
          },
          end: {
            line: 294,
            column: 188
          }
        }, {
          start: {
            line: 294,
            column: 191
          },
          end: {
            line: 294,
            column: 196
          }
        }],
        line: 294
      },
      "25": {
        loc: {
          start: {
            line: 294,
            column: 84
          },
          end: {
            line: 294,
            column: 179
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 294,
            column: 84
          },
          end: {
            line: 294,
            column: 162
          }
        }, {
          start: {
            line: 294,
            column: 166
          },
          end: {
            line: 294,
            column: 179
          }
        }],
        line: 294
      },
      "26": {
        loc: {
          start: {
            line: 294,
            column: 90
          },
          end: {
            line: 294,
            column: 152
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 294,
            column: 131
          },
          end: {
            line: 294,
            column: 137
          }
        }, {
          start: {
            line: 294,
            column: 140
          },
          end: {
            line: 294,
            column: 152
          }
        }],
        line: 294
      },
      "27": {
        loc: {
          start: {
            line: 294,
            column: 90
          },
          end: {
            line: 294,
            column: 128
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 294,
            column: 90
          },
          end: {
            line: 294,
            column: 106
          }
        }, {
          start: {
            line: 294,
            column: 110
          },
          end: {
            line: 294,
            column: 128
          }
        }],
        line: 294
      },
      "28": {
        loc: {
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "29": {
        loc: {
          start: {
            line: 324,
            column: 58
          },
          end: {
            line: 324,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 324,
            column: 93
          },
          end: {
            line: 324,
            column: 99
          }
        }, {
          start: {
            line: 324,
            column: 102
          },
          end: {
            line: 324,
            column: 109
          }
        }],
        line: 324
      },
      "30": {
        loc: {
          start: {
            line: 324,
            column: 58
          },
          end: {
            line: 324,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 324,
            column: 58
          },
          end: {
            line: 324,
            column: 71
          }
        }, {
          start: {
            line: 324,
            column: 75
          },
          end: {
            line: 324,
            column: 90
          }
        }],
        line: 324
      },
      "31": {
        loc: {
          start: {
            line: 324,
            column: 118
          },
          end: {
            line: 324,
            column: 172
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 324,
            column: 153
          },
          end: {
            line: 324,
            column: 159
          }
        }, {
          start: {
            line: 324,
            column: 162
          },
          end: {
            line: 324,
            column: 172
          }
        }],
        line: 324
      },
      "32": {
        loc: {
          start: {
            line: 324,
            column: 118
          },
          end: {
            line: 324,
            column: 150
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 324,
            column: 118
          },
          end: {
            line: 324,
            column: 131
          }
        }, {
          start: {
            line: 324,
            column: 135
          },
          end: {
            line: 324,
            column: 150
          }
        }],
        line: 324
      },
      "33": {
        loc: {
          start: {
            line: 360,
            column: 92
          },
          end: {
            line: 360,
            column: 204
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 360,
            column: 190
          },
          end: {
            line: 360,
            column: 196
          }
        }, {
          start: {
            line: 360,
            column: 199
          },
          end: {
            line: 360,
            column: 204
          }
        }],
        line: 360
      },
      "34": {
        loc: {
          start: {
            line: 360,
            column: 92
          },
          end: {
            line: 360,
            column: 187
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 360,
            column: 92
          },
          end: {
            line: 360,
            column: 170
          }
        }, {
          start: {
            line: 360,
            column: 174
          },
          end: {
            line: 360,
            column: 187
          }
        }],
        line: 360
      },
      "35": {
        loc: {
          start: {
            line: 360,
            column: 98
          },
          end: {
            line: 360,
            column: 160
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 360,
            column: 139
          },
          end: {
            line: 360,
            column: 145
          }
        }, {
          start: {
            line: 360,
            column: 148
          },
          end: {
            line: 360,
            column: 160
          }
        }],
        line: 360
      },
      "36": {
        loc: {
          start: {
            line: 360,
            column: 98
          },
          end: {
            line: 360,
            column: 136
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 360,
            column: 98
          },
          end: {
            line: 360,
            column: 114
          }
        }, {
          start: {
            line: 360,
            column: 118
          },
          end: {
            line: 360,
            column: 136
          }
        }],
        line: 360
      },
      "37": {
        loc: {
          start: {
            line: 406,
            column: 15
          },
          end: {
            line: 406,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 16
          },
          end: {
            line: 406,
            column: 67
          }
        }, {
          start: {
            line: 406,
            column: 72
          },
          end: {
            line: 406,
            column: 76
          }
        }],
        line: 406
      },
      "38": {
        loc: {
          start: {
            line: 406,
            column: 16
          },
          end: {
            line: 406,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 406,
            column: 51
          },
          end: {
            line: 406,
            column: 57
          }
        }, {
          start: {
            line: 406,
            column: 60
          },
          end: {
            line: 406,
            column: 67
          }
        }],
        line: 406
      },
      "39": {
        loc: {
          start: {
            line: 406,
            column: 16
          },
          end: {
            line: 406,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 16
          },
          end: {
            line: 406,
            column: 29
          }
        }, {
          start: {
            line: 406,
            column: 33
          },
          end: {
            line: 406,
            column: 48
          }
        }],
        line: 406
      },
      "40": {
        loc: {
          start: {
            line: 431,
            column: 24
          },
          end: {
            line: 431,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 431,
            column: 24
          },
          end: {
            line: 431,
            column: 56
          }
        }, {
          start: {
            line: 431,
            column: 60
          },
          end: {
            line: 431,
            column: 86
          }
        }],
        line: 431
      },
      "41": {
        loc: {
          start: {
            line: 432,
            column: 27
          },
          end: {
            line: 432,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 432,
            column: 28
          },
          end: {
            line: 432,
            column: 96
          }
        }, {
          start: {
            line: 432,
            column: 101
          },
          end: {
            line: 432,
            column: 127
          }
        }],
        line: 432
      },
      "42": {
        loc: {
          start: {
            line: 432,
            column: 28
          },
          end: {
            line: 432,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 432,
            column: 69
          },
          end: {
            line: 432,
            column: 75
          }
        }, {
          start: {
            line: 432,
            column: 78
          },
          end: {
            line: 432,
            column: 96
          }
        }],
        line: 432
      },
      "43": {
        loc: {
          start: {
            line: 432,
            column: 28
          },
          end: {
            line: 432,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 432,
            column: 28
          },
          end: {
            line: 432,
            column: 44
          }
        }, {
          start: {
            line: 432,
            column: 48
          },
          end: {
            line: 432,
            column: 66
          }
        }],
        line: 432
      },
      "44": {
        loc: {
          start: {
            line: 437,
            column: 24
          },
          end: {
            line: 437,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 437,
            column: 65
          },
          end: {
            line: 437,
            column: 71
          }
        }, {
          start: {
            line: 437,
            column: 74
          },
          end: {
            line: 437,
            column: 88
          }
        }],
        line: 437
      },
      "45": {
        loc: {
          start: {
            line: 437,
            column: 24
          },
          end: {
            line: 437,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 437,
            column: 24
          },
          end: {
            line: 437,
            column: 40
          }
        }, {
          start: {
            line: 437,
            column: 44
          },
          end: {
            line: 437,
            column: 62
          }
        }],
        line: 437
      },
      "46": {
        loc: {
          start: {
            line: 438,
            column: 29
          },
          end: {
            line: 438,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 438,
            column: 70
          },
          end: {
            line: 438,
            column: 76
          }
        }, {
          start: {
            line: 438,
            column: 79
          },
          end: {
            line: 438,
            column: 98
          }
        }],
        line: 438
      },
      "47": {
        loc: {
          start: {
            line: 438,
            column: 29
          },
          end: {
            line: 438,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 438,
            column: 29
          },
          end: {
            line: 438,
            column: 45
          }
        }, {
          start: {
            line: 438,
            column: 49
          },
          end: {
            line: 438,
            column: 67
          }
        }],
        line: 438
      },
      "48": {
        loc: {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 444,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 444,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 441
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/services/supabase/auth/index.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/services/supabase/auth/index.ts"],
      sourcesContent: ["/**\n * SUPABASE AUTH SERVICE - CLEAN AUTHENTICATION OPERATIONS\n * \n * This service handles all authentication operations with proper\n * error handling, logging, and type safety.\n * \n * Created: 2025-06-08\n * Last Modified: 2025-01-22\n * Last Modified Summary: Enhanced timeout handling and error messages for better UX\n */\n\nimport supabase from '../client'\nimport { logger, logAuth } from '@/utils/logger'\nimport type { \n  AuthResponse, \n  SignInRequest, \n  SignUpRequest, \n  PasswordResetRequest,\n  PasswordUpdateRequest,\n  AuthError,\n  isAuthError\n} from '../types'\n\n/**\n * Enhanced error handling with timeout detection for authentication operations\n * @param error - The error object from auth operation\n * @param operation - The auth operation that failed (for context)\n * @returns Standardized AuthError with enhanced messaging\n */\nconst handleAuthError = (error: any, operation: string): AuthError => {\n  if (error.name === 'AbortError' || error.message?.includes('timeout')) {\n    return {\n      name: 'TimeoutError',\n      message: 'Request timed out. Please check your internet connection or try again later.',\n      status: 408\n    } as AuthError;\n  }\n\n  if (error.message?.includes('fetch')) {\n    return {\n      name: 'NetworkError',\n      message: 'Unable to connect to authentication service. Please check your internet connection.',\n      status: 0\n    } as AuthError;\n  }\n\n  return error as AuthError;\n};\n\n// ==================== AUTHENTICATION OPERATIONS ====================\n\n/**\n * Sign in a user with email and password\n * @param params - Sign in parameters\n * @param params.email - User's email address\n * @param params.password - User's password\n * @returns Promise<AuthResponse> - Authentication response with user data or error\n * @example\n * ```typescript\n * const result = await signIn({ email: 'user@example.com', password: 'password123' });\n * if (result.error) {\n *   console.error('Sign in failed:', result.error.message);\n * } else {\n *   console.log('Signed in user:', result.data.user?.id);\n * }\n * ```\n */\nexport async function signIn({ email, password }: SignInRequest): Promise<AuthResponse> {\n  try {\n    logAuth('Attempting to sign in user', { email })\n    \n    // Add timeout wrapper for auth operations\n    const timeoutPromise = new Promise<never>((_, reject) => {\n      setTimeout(() => reject(new Error('Authentication request timed out')), 20000);\n    });\n\n    const authPromise = supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n\n    const { data, error } = await Promise.race([authPromise, timeoutPromise]);\n\n    if (error) {\n      const enhancedError = handleAuthError(error, 'sign in');\n      logAuth('Sign in failed', { email, error: enhancedError.message })\n      return { data: { user: null, session: null }, error: enhancedError }\n    }\n\n    logAuth('Sign in successful', { \n      email, \n      userId: data.user?.id,\n      hasSession: !!data.session \n    })\n    \n    return { data, error: null }\n  } catch (error) {\n    const enhancedError = handleAuthError(error, 'sign in');\n    logger.error('Unexpected error during sign in', { \n      email, \n      error: enhancedError.message \n    }, 'Auth')\n    \n    return { \n      data: { user: null, session: null }, \n      error: enhancedError \n    }\n  }\n}\n\n/**\n * Sign up a new user with email and password\n * @param params - Sign up parameters\n * @param params.email - User's email address\n * @param params.password - User's password (should meet security requirements)\n * @param params.emailRedirectTo - Optional redirect URL after email confirmation\n * @returns Promise<AuthResponse> - Authentication response with user data or error\n * @example\n * ```typescript\n * const result = await signUp({ \n *   email: 'newuser@example.com', \n *   password: 'securePassword123',\n *   emailRedirectTo: 'https://myapp.com/welcome'\n * });\n * if (!result.error) {\n *   console.log('User registered, check email for confirmation');\n * }\n * ```\n */\nexport async function signUp({ email, password, emailRedirectTo }: SignUpRequest): Promise<AuthResponse> {\n  try {\n    logAuth('Attempting to sign up user', { email })\n    \n    // Add timeout wrapper\n    const timeoutPromise = new Promise<never>((_, reject) => {\n      setTimeout(() => reject(new Error('Registration request timed out')), 25000);\n    });\n\n    const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || 'https://www.orangecat.ch'\n\n    const authPromise = supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        // After email confirmation, Supabase will redirect here with ?code= for session exchange\n        emailRedirectTo: emailRedirectTo || `${siteUrl}/auth/callback`\n      }\n    });\n\n    const { data, error } = await Promise.race([authPromise, timeoutPromise]);\n\n    if (error) {\n      const enhancedError = handleAuthError(error, 'sign up');\n      logAuth('Sign up failed', { email, error: enhancedError.message })\n      return { data: { user: null, session: null }, error: enhancedError }\n    }\n\n    logAuth('Sign up successful', { \n      email, \n      userId: data.user?.id,\n      needsConfirmation: !data.session \n    })\n    \n    return { data, error: null }\n  } catch (error) {\n    const enhancedError = handleAuthError(error, 'sign up');\n    logger.error('Unexpected error during sign up', { \n      email, \n      error: enhancedError.message \n    }, 'Auth')\n    \n    return { \n      data: { user: null, session: null }, \n      error: enhancedError \n    }\n  }\n}\n\n/**\n * Sign out the current user from all sessions\n * @returns Promise<{error: AuthError | null}> - Success status or error\n * @example\n * ```typescript\n * const { error } = await signOut();\n * if (!error) {\n *   console.log('User signed out successfully');\n *   // Redirect to login page\n * }\n * ```\n */\nexport async function signOut(): Promise<{ error: AuthError | null }> {\n  try {\n    logAuth('Attempting to sign out user')\n    \n    const { error } = await supabase.auth.signOut()\n\n    if (error) {\n      logAuth('Sign out failed', { error: error.message })\n      return { error: error as AuthError }\n    }\n\n    logAuth('Sign out successful')\n    return { error: null }\n  } catch (error) {\n    const authError = error as AuthError\n    logger.error('Unexpected error during sign out', { \n      error: authError.message \n    }, 'Auth')\n    \n    return { error: authError }\n  }\n}\n\n/**\n * Reset password for a user by sending email with reset link\n * @param params - Password reset parameters\n * @returns Promise with error status\n * \n * @example\n * ```typescript\n * const { error } = await resetPassword({ email: 'user@example.com' });\n * if (!error) {\n *   console.log('Password reset email sent');\n * }\n * ```\n */\nexport async function resetPassword({ email }: PasswordResetRequest): Promise<{ error: AuthError | null }> {\n  try {\n    logAuth('Attempting password reset', { email })\n    \n    // Use canonical www domain to avoid losing hash/query tokens on redirect\n    // Important: This URL MUST match exactly what's configured in Supabase Dashboard\n    const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || 'https://www.orangecat.ch'\n    // Use confirm route so Supabase verifies token server-side and sets cookies, then we redirect to reset\n    const redirectUrl = `${siteUrl}/auth/confirm?type=recovery&next=/auth/reset-password`\n    \n    logAuth('Using redirect URL for password reset', { redirectUrl })\n    \n    const { error } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: redirectUrl\n    })\n\n    if (error) {\n      logAuth('Password reset failed', { email, error: error.message })\n      return { error }\n    }\n\n    logAuth('Password reset email sent successfully', { email, redirectUrl })\n    return { error: null }\n  } catch (error) {\n    const errorMessage = error instanceof Error ? error.message : String(error)\n    logger.error('Unexpected error during password reset', {\n      error: errorMessage,\n      email\n    })\n    return { error: { message: errorMessage, name: 'ResetError' } as AuthError }\n  }\n}\n\n/**\n * Update user password (requires authenticated session)\n * @param params - Password update parameters\n * @param params.newPassword - The new password (should meet security requirements)\n * @returns Promise<{error: AuthError | null}> - Success status or error\n * @example\n * ```typescript\n * const { error } = await updatePassword({ newPassword: 'newSecurePassword123' });\n * if (!error) {\n *   console.log('Password updated successfully');\n * }\n * ```\n */\nexport async function updatePassword({ newPassword }: PasswordUpdateRequest): Promise<{ error: AuthError | null }> {\n  try {\n    logAuth('Attempting password update')\n    \n    const { error } = await supabase.auth.updateUser({\n      password: newPassword\n    })\n\n    if (error) {\n      logAuth('Password update failed', { error: error.message })\n      return { error: error as AuthError }\n    }\n\n    logAuth('Password updated successfully')\n    return { error: null }\n  } catch (error) {\n    const authError = error as AuthError\n    logger.error('Unexpected error during password update', { \n      error: authError.message \n    }, 'Auth')\n    \n    return { error: authError }\n  }\n}\n\n/**\n * Get current user session from local storage\n * @returns Promise<{session: Session | null, error: AuthError | null}> - Current session or error\n * @example\n * ```typescript\n * const { session, error } = await getSession();\n * if (session) {\n *   console.log('User is authenticated:', session.user.id);\n * }\n * ```\n */\nexport async function getSession() {\n  try {\n    const { data: { session }, error } = await supabase.auth.getSession()\n    \n    if (error) {\n      logAuth('Failed to get session', { error: error.message })\n      return { session: null, error: error as AuthError }\n    }\n    \n    logAuth('Session retrieved', { hasSession: !!session, userId: session?.user?.id })\n    return { session, error: null }\n  } catch (error) {\n    const authError = error as AuthError\n    logger.error('Unexpected error getting session', { \n      error: authError.message \n    }, 'Auth')\n    \n    return { session: null, error: authError }\n  }\n}\n\n/**\n * Get current user with server-side token validation\n * More secure than getSession() as it validates token with server\n * @returns Promise<{user: User | null, error: AuthError | null}> - Current user or error\n * @example\n * ```typescript\n * const { user, error } = await getUser();\n * if (user) {\n *   console.log('Authenticated user:', user.email);\n * }\n * ```\n */\nexport async function getUser() {\n  try {\n    const { data: { user }, error } = await supabase.auth.getUser()\n    \n    if (error) {\n      logAuth('Failed to get user', { error: error.message })\n      return { user: null, error: error as AuthError }\n    }\n    \n    logAuth('User retrieved', { userId: user?.id, email: user?.email })\n    return { user, error: null }\n  } catch (error) {\n    const authError = error as AuthError\n    logger.error('Unexpected error getting user', { \n      error: authError.message \n    }, 'Auth')\n    \n    return { user: null, error: authError }\n  }\n}\n\n// ==================== AUTH STATE MONITORING ====================\n\n/**\n * Subscribe to authentication state changes\n * @param callback - Function called when auth state changes\n * @param callback.event - Auth event type (SIGNED_IN, SIGNED_OUT, etc.)\n * @param callback.session - New session data or null\n * @returns Subscription object with unsubscribe method\n * @example\n * ```typescript\n * const subscription = onAuthStateChange((event, session) => {\n *   if (event === 'SIGNED_IN') {\n *     console.log('User signed in:', session.user.id);\n *   } else if (event === 'SIGNED_OUT') {\n *     console.log('User signed out');\n *   }\n * });\n * \n * // Later, unsubscribe\n * subscription.unsubscribe();\n * ```\n */\nexport function onAuthStateChange(callback: (event: string, session: any) => void) {\n  logAuth('Setting up auth state change listener')\n  \n  const { data: { subscription } } = supabase.auth.onAuthStateChange((event, session) => {\n    logAuth('Auth state changed', { event, hasSession: !!session, userId: session?.user?.id })\n    callback(event, session)\n  })\n  \n  return subscription\n}\n\n// ==================== UTILITY FUNCTIONS ====================\n\n/**\n * Check if user is currently authenticated with server validation\n * Uses getUser() for server-side token validation instead of local storage\n * @returns Promise<boolean> - True if user is authenticated and token is valid\n * @example\n * ```typescript\n * const isLoggedIn = await isAuthenticated();\n * if (isLoggedIn) {\n *   // Show authenticated content\n * } else {\n *   // Redirect to login\n * }\n * ```\n */\nexport async function isAuthenticated(): Promise<boolean> {\n  try {\n    // SECURITY FIX: Use getUser() instead of getSession() for better security\n    // getUser() validates the token with the server, while getSession() only reads from storage\n    const { user } = await getUser()\n    return !!user\n  } catch {\n    return false\n  }\n}\n\n/**\n * Get current user ID with server validation\n * @returns Promise<string | null> - User ID if authenticated, null otherwise\n * @example\n * ```typescript\n * const userId = await getCurrentUserId();\n * if (userId) {\n *   // Load user-specific data\n *   const profile = await getProfile(userId);\n * }\n * ```\n */\nexport async function getCurrentUserId(): Promise<string | null> {\n  try {\n    const { user } = await getUser()\n    return user?.id || null\n  } catch {\n    return null\n  }\n}\n\n/**\n * Sign in with OAuth provider\n * @param provider - OAuth provider ('google', 'github', 'twitter', etc.)\n * @param options - Additional options for the provider\n * @returns Promise<{data: {user: User | null, session: Session | null} | null, error: AuthError | null}>\n * @example\n * ```typescript\n * const result = await signInWithProvider('google', {\n *   redirectTo: 'https://myapp.com/dashboard'\n * });\n * if (!result.error) {\n *   // User will be redirected to provider for authentication\n * }\n * ```\n */\nexport async function signInWithProvider(\n  provider: 'google' | 'github' | 'twitter' | 'discord' | 'apple',\n  options?: {\n    redirectTo?: string\n    scopes?: string\n    queryParams?: Record<string, string>\n  }\n): Promise<AuthResponse> {\n  try {\n    logAuth('Attempting OAuth sign in', { provider })\n\n    // Use canonical www domain to avoid losing hash/query tokens on redirect\n    const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || 'https://www.orangecat.ch'\n    const redirectTo = options?.redirectTo || `${siteUrl}/auth/callback`\n\n    const { data, error } = await supabase.auth.signInWithOAuth({\n      provider,\n      options: {\n        redirectTo,\n        scopes: options?.scopes,\n        queryParams: options?.queryParams,\n      }\n    })\n\n    if (error) {\n      logAuth('OAuth sign in failed', { provider, error: error.message })\n      return { data: { user: null, session: null }, error: error as AuthError }\n    }\n\n    logAuth('OAuth sign in initiated', { provider, redirectTo })\n    return { data, error: null }\n  } catch (error) {\n    const authError = error as AuthError\n    logger.error('Unexpected error during OAuth sign in', {\n      provider,\n      error: authError.message\n    }, 'Auth')\n\n    return { data: { user: null, session: null }, error: authError }\n  }\n}\n\n// ==================== EXPORTS ====================\n\nexport {\n  type AuthResponse,\n  type SignInRequest,\n  type SignUpRequest,\n  type PasswordResetRequest,\n  type PasswordUpdateRequest,\n  type AuthError,\n  isAuthError\n} from '../types' "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3a3e5aeb02e51a4e3f1452db4e5d622c4a27c1f5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_261dkgvklu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_261dkgvklu();
var __importDefault =
/* istanbul ignore next */
(cov_261dkgvklu().s[0]++,
/* istanbul ignore next */
(cov_261dkgvklu().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_261dkgvklu().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_261dkgvklu().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_261dkgvklu().f[0]++;
  cov_261dkgvklu().s[1]++;
  return /* istanbul ignore next */(cov_261dkgvklu().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_261dkgvklu().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_261dkgvklu().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_261dkgvklu().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_261dkgvklu().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_261dkgvklu().s[3]++;
exports.isAuthError = void 0;
/* istanbul ignore next */
cov_261dkgvklu().s[4]++;
exports.signIn = signIn;
/* istanbul ignore next */
cov_261dkgvklu().s[5]++;
exports.signUp = signUp;
/* istanbul ignore next */
cov_261dkgvklu().s[6]++;
exports.signOut = signOut;
/* istanbul ignore next */
cov_261dkgvklu().s[7]++;
exports.resetPassword = resetPassword;
/* istanbul ignore next */
cov_261dkgvklu().s[8]++;
exports.updatePassword = updatePassword;
/* istanbul ignore next */
cov_261dkgvklu().s[9]++;
exports.getSession = getSession;
/* istanbul ignore next */
cov_261dkgvklu().s[10]++;
exports.getUser = getUser;
/* istanbul ignore next */
cov_261dkgvklu().s[11]++;
exports.onAuthStateChange = onAuthStateChange;
/* istanbul ignore next */
cov_261dkgvklu().s[12]++;
exports.isAuthenticated = isAuthenticated;
/* istanbul ignore next */
cov_261dkgvklu().s[13]++;
exports.getCurrentUserId = getCurrentUserId;
/* istanbul ignore next */
cov_261dkgvklu().s[14]++;
exports.signInWithProvider = signInWithProvider;
const client_1 =
/* istanbul ignore next */
(cov_261dkgvklu().s[15]++, __importDefault(require("../client")));
const logger_1 =
/* istanbul ignore next */
(cov_261dkgvklu().s[16]++, require("@/utils/logger"));
/**
 * Enhanced error handling with timeout detection for authentication operations
 * @param error - The error object from auth operation
 * @param operation - The auth operation that failed (for context)
 * @returns Standardized AuthError with enhanced messaging
 */
/* istanbul ignore next */
cov_261dkgvklu().s[17]++;
const handleAuthError = (error, operation) => {
  /* istanbul ignore next */
  cov_261dkgvklu().f[1]++;
  var _a, _b;
  /* istanbul ignore next */
  cov_261dkgvklu().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_261dkgvklu().b[4][0]++, error.name === 'AbortError') ||
  /* istanbul ignore next */
  (cov_261dkgvklu().b[4][1]++,
  /* istanbul ignore next */
  (cov_261dkgvklu().b[6][0]++, (_a = error.message) === null) ||
  /* istanbul ignore next */
  (cov_261dkgvklu().b[6][1]++, _a === void 0) ?
  /* istanbul ignore next */
  (cov_261dkgvklu().b[5][0]++, void 0) :
  /* istanbul ignore next */
  (cov_261dkgvklu().b[5][1]++, _a.includes('timeout')))) {
    /* istanbul ignore next */
    cov_261dkgvklu().b[3][0]++;
    cov_261dkgvklu().s[19]++;
    return {
      name: 'TimeoutError',
      message: 'Request timed out. Please check your internet connection or try again later.',
      status: 408
    };
  } else
  /* istanbul ignore next */
  {
    cov_261dkgvklu().b[3][1]++;
  }
  cov_261dkgvklu().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_261dkgvklu().b[9][0]++, (_b = error.message) === null) ||
  /* istanbul ignore next */
  (cov_261dkgvklu().b[9][1]++, _b === void 0) ?
  /* istanbul ignore next */
  (cov_261dkgvklu().b[8][0]++, void 0) :
  /* istanbul ignore next */
  (cov_261dkgvklu().b[8][1]++, _b.includes('fetch'))) {
    /* istanbul ignore next */
    cov_261dkgvklu().b[7][0]++;
    cov_261dkgvklu().s[21]++;
    return {
      name: 'NetworkError',
      message: 'Unable to connect to authentication service. Please check your internet connection.',
      status: 0
    };
  } else
  /* istanbul ignore next */
  {
    cov_261dkgvklu().b[7][1]++;
  }
  cov_261dkgvklu().s[22]++;
  return error;
};
// ==================== AUTHENTICATION OPERATIONS ====================
/**
 * Sign in a user with email and password
 * @param params - Sign in parameters
 * @param params.email - User's email address
 * @param params.password - User's password
 * @returns Promise<AuthResponse> - Authentication response with user data or error
 * @example
 * ```typescript
 * const result = await signIn({ email: 'user@example.com', password: 'password123' });
 * if (result.error) {
 *   console.error('Sign in failed:', result.error.message);
 * } else {
 *   console.log('Signed in user:', result.data.user?.id);
 * }
 * ```
 */
async function signIn({
  email,
  password
}) {
  /* istanbul ignore next */
  cov_261dkgvklu().f[2]++;
  var _a;
  /* istanbul ignore next */
  cov_261dkgvklu().s[23]++;
  try {
    /* istanbul ignore next */
    cov_261dkgvklu().s[24]++;
    (0, logger_1.logAuth)('Attempting to sign in user', {
      email
    });
    // Add timeout wrapper for auth operations
    const timeoutPromise =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[25]++, new Promise((_, reject) => {
      /* istanbul ignore next */
      cov_261dkgvklu().f[3]++;
      cov_261dkgvklu().s[26]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_261dkgvklu().f[4]++;
        cov_261dkgvklu().s[27]++;
        return reject(new Error('Authentication request timed out'));
      }, 20000);
    }));
    const authPromise =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[28]++, client_1.default.auth.signInWithPassword({
      email,
      password
    }));
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[29]++, await Promise.race([authPromise, timeoutPromise]));
    /* istanbul ignore next */
    cov_261dkgvklu().s[30]++;
    if (error) {
      /* istanbul ignore next */
      cov_261dkgvklu().b[10][0]++;
      const enhancedError =
      /* istanbul ignore next */
      (cov_261dkgvklu().s[31]++, handleAuthError(error, 'sign in'));
      /* istanbul ignore next */
      cov_261dkgvklu().s[32]++;
      (0, logger_1.logAuth)('Sign in failed', {
        email,
        error: enhancedError.message
      });
      /* istanbul ignore next */
      cov_261dkgvklu().s[33]++;
      return {
        data: {
          user: null,
          session: null
        },
        error: enhancedError
      };
    } else
    /* istanbul ignore next */
    {
      cov_261dkgvklu().b[10][1]++;
    }
    cov_261dkgvklu().s[34]++;
    (0, logger_1.logAuth)('Sign in successful', {
      email,
      userId:
      /* istanbul ignore next */
      (cov_261dkgvklu().b[12][0]++, (_a = data.user) === null) ||
      /* istanbul ignore next */
      (cov_261dkgvklu().b[12][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_261dkgvklu().b[11][0]++, void 0) :
      /* istanbul ignore next */
      (cov_261dkgvklu().b[11][1]++, _a.id),
      hasSession: !!data.session
    });
    /* istanbul ignore next */
    cov_261dkgvklu().s[35]++;
    return {
      data,
      error: null
    };
  } catch (error) {
    const enhancedError =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[36]++, handleAuthError(error, 'sign in'));
    /* istanbul ignore next */
    cov_261dkgvklu().s[37]++;
    logger_1.logger.error('Unexpected error during sign in', {
      email,
      error: enhancedError.message
    }, 'Auth');
    /* istanbul ignore next */
    cov_261dkgvklu().s[38]++;
    return {
      data: {
        user: null,
        session: null
      },
      error: enhancedError
    };
  }
}
/**
 * Sign up a new user with email and password
 * @param params - Sign up parameters
 * @param params.email - User's email address
 * @param params.password - User's password (should meet security requirements)
 * @param params.emailRedirectTo - Optional redirect URL after email confirmation
 * @returns Promise<AuthResponse> - Authentication response with user data or error
 * @example
 * ```typescript
 * const result = await signUp({
 *   email: 'newuser@example.com',
 *   password: 'securePassword123',
 *   emailRedirectTo: 'https://myapp.com/welcome'
 * });
 * if (!result.error) {
 *   console.log('User registered, check email for confirmation');
 * }
 * ```
 */
async function signUp({
  email,
  password,
  emailRedirectTo
}) {
  /* istanbul ignore next */
  cov_261dkgvklu().f[5]++;
  var _a;
  /* istanbul ignore next */
  cov_261dkgvklu().s[39]++;
  try {
    /* istanbul ignore next */
    cov_261dkgvklu().s[40]++;
    (0, logger_1.logAuth)('Attempting to sign up user', {
      email
    });
    // Add timeout wrapper
    const timeoutPromise =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[41]++, new Promise((_, reject) => {
      /* istanbul ignore next */
      cov_261dkgvklu().f[6]++;
      cov_261dkgvklu().s[42]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_261dkgvklu().f[7]++;
        cov_261dkgvklu().s[43]++;
        return reject(new Error('Registration request timed out'));
      }, 25000);
    }));
    const siteUrl =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[44]++,
    /* istanbul ignore next */
    (cov_261dkgvklu().b[13][0]++, process.env.NEXT_PUBLIC_SITE_URL) ||
    /* istanbul ignore next */
    (cov_261dkgvklu().b[13][1]++, 'https://www.orangecat.ch'));
    const authPromise =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[45]++, client_1.default.auth.signUp({
      email,
      password,
      options: {
        // After email confirmation, Supabase will redirect here with ?code= for session exchange
        emailRedirectTo:
        /* istanbul ignore next */
        (cov_261dkgvklu().b[14][0]++, emailRedirectTo) ||
        /* istanbul ignore next */
        (cov_261dkgvklu().b[14][1]++, `${siteUrl}/auth/callback`)
      }
    }));
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[46]++, await Promise.race([authPromise, timeoutPromise]));
    /* istanbul ignore next */
    cov_261dkgvklu().s[47]++;
    if (error) {
      /* istanbul ignore next */
      cov_261dkgvklu().b[15][0]++;
      const enhancedError =
      /* istanbul ignore next */
      (cov_261dkgvklu().s[48]++, handleAuthError(error, 'sign up'));
      /* istanbul ignore next */
      cov_261dkgvklu().s[49]++;
      (0, logger_1.logAuth)('Sign up failed', {
        email,
        error: enhancedError.message
      });
      /* istanbul ignore next */
      cov_261dkgvklu().s[50]++;
      return {
        data: {
          user: null,
          session: null
        },
        error: enhancedError
      };
    } else
    /* istanbul ignore next */
    {
      cov_261dkgvklu().b[15][1]++;
    }
    cov_261dkgvklu().s[51]++;
    (0, logger_1.logAuth)('Sign up successful', {
      email,
      userId:
      /* istanbul ignore next */
      (cov_261dkgvklu().b[17][0]++, (_a = data.user) === null) ||
      /* istanbul ignore next */
      (cov_261dkgvklu().b[17][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_261dkgvklu().b[16][0]++, void 0) :
      /* istanbul ignore next */
      (cov_261dkgvklu().b[16][1]++, _a.id),
      needsConfirmation: !data.session
    });
    /* istanbul ignore next */
    cov_261dkgvklu().s[52]++;
    return {
      data,
      error: null
    };
  } catch (error) {
    const enhancedError =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[53]++, handleAuthError(error, 'sign up'));
    /* istanbul ignore next */
    cov_261dkgvklu().s[54]++;
    logger_1.logger.error('Unexpected error during sign up', {
      email,
      error: enhancedError.message
    }, 'Auth');
    /* istanbul ignore next */
    cov_261dkgvklu().s[55]++;
    return {
      data: {
        user: null,
        session: null
      },
      error: enhancedError
    };
  }
}
/**
 * Sign out the current user from all sessions
 * @returns Promise<{error: AuthError | null}> - Success status or error
 * @example
 * ```typescript
 * const { error } = await signOut();
 * if (!error) {
 *   console.log('User signed out successfully');
 *   // Redirect to login page
 * }
 * ```
 */
async function signOut() {
  /* istanbul ignore next */
  cov_261dkgvklu().f[8]++;
  cov_261dkgvklu().s[56]++;
  try {
    /* istanbul ignore next */
    cov_261dkgvklu().s[57]++;
    (0, logger_1.logAuth)('Attempting to sign out user');
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[58]++, await client_1.default.auth.signOut());
    /* istanbul ignore next */
    cov_261dkgvklu().s[59]++;
    if (error) {
      /* istanbul ignore next */
      cov_261dkgvklu().b[18][0]++;
      cov_261dkgvklu().s[60]++;
      (0, logger_1.logAuth)('Sign out failed', {
        error: error.message
      });
      /* istanbul ignore next */
      cov_261dkgvklu().s[61]++;
      return {
        error: error
      };
    } else
    /* istanbul ignore next */
    {
      cov_261dkgvklu().b[18][1]++;
    }
    cov_261dkgvklu().s[62]++;
    (0, logger_1.logAuth)('Sign out successful');
    /* istanbul ignore next */
    cov_261dkgvklu().s[63]++;
    return {
      error: null
    };
  } catch (error) {
    const authError =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[64]++, error);
    /* istanbul ignore next */
    cov_261dkgvklu().s[65]++;
    logger_1.logger.error('Unexpected error during sign out', {
      error: authError.message
    }, 'Auth');
    /* istanbul ignore next */
    cov_261dkgvklu().s[66]++;
    return {
      error: authError
    };
  }
}
/**
 * Reset password for a user by sending email with reset link
 * @param params - Password reset parameters
 * @returns Promise with error status
 *
 * @example
 * ```typescript
 * const { error } = await resetPassword({ email: 'user@example.com' });
 * if (!error) {
 *   console.log('Password reset email sent');
 * }
 * ```
 */
async function resetPassword({
  email
}) {
  /* istanbul ignore next */
  cov_261dkgvklu().f[9]++;
  cov_261dkgvklu().s[67]++;
  try {
    /* istanbul ignore next */
    cov_261dkgvklu().s[68]++;
    (0, logger_1.logAuth)('Attempting password reset', {
      email
    });
    // Use canonical www domain to avoid losing hash/query tokens on redirect
    // Important: This URL MUST match exactly what's configured in Supabase Dashboard
    const siteUrl =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[69]++,
    /* istanbul ignore next */
    (cov_261dkgvklu().b[19][0]++, process.env.NEXT_PUBLIC_SITE_URL) ||
    /* istanbul ignore next */
    (cov_261dkgvklu().b[19][1]++, 'https://www.orangecat.ch'));
    // Use confirm route so Supabase verifies token server-side and sets cookies, then we redirect to reset
    const redirectUrl =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[70]++, `${siteUrl}/auth/confirm?type=recovery&next=/auth/reset-password`);
    /* istanbul ignore next */
    cov_261dkgvklu().s[71]++;
    (0, logger_1.logAuth)('Using redirect URL for password reset', {
      redirectUrl
    });
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[72]++, await client_1.default.auth.resetPasswordForEmail(email, {
      redirectTo: redirectUrl
    }));
    /* istanbul ignore next */
    cov_261dkgvklu().s[73]++;
    if (error) {
      /* istanbul ignore next */
      cov_261dkgvklu().b[20][0]++;
      cov_261dkgvklu().s[74]++;
      (0, logger_1.logAuth)('Password reset failed', {
        email,
        error: error.message
      });
      /* istanbul ignore next */
      cov_261dkgvklu().s[75]++;
      return {
        error
      };
    } else
    /* istanbul ignore next */
    {
      cov_261dkgvklu().b[20][1]++;
    }
    cov_261dkgvklu().s[76]++;
    (0, logger_1.logAuth)('Password reset email sent successfully', {
      email,
      redirectUrl
    });
    /* istanbul ignore next */
    cov_261dkgvklu().s[77]++;
    return {
      error: null
    };
  } catch (error) {
    const errorMessage =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[78]++, error instanceof Error ?
    /* istanbul ignore next */
    (cov_261dkgvklu().b[21][0]++, error.message) :
    /* istanbul ignore next */
    (cov_261dkgvklu().b[21][1]++, String(error)));
    /* istanbul ignore next */
    cov_261dkgvklu().s[79]++;
    logger_1.logger.error('Unexpected error during password reset', {
      error: errorMessage,
      email
    });
    /* istanbul ignore next */
    cov_261dkgvklu().s[80]++;
    return {
      error: {
        message: errorMessage,
        name: 'ResetError'
      }
    };
  }
}
/**
 * Update user password (requires authenticated session)
 * @param params - Password update parameters
 * @param params.newPassword - The new password (should meet security requirements)
 * @returns Promise<{error: AuthError | null}> - Success status or error
 * @example
 * ```typescript
 * const { error } = await updatePassword({ newPassword: 'newSecurePassword123' });
 * if (!error) {
 *   console.log('Password updated successfully');
 * }
 * ```
 */
async function updatePassword({
  newPassword
}) {
  /* istanbul ignore next */
  cov_261dkgvklu().f[10]++;
  cov_261dkgvklu().s[81]++;
  try {
    /* istanbul ignore next */
    cov_261dkgvklu().s[82]++;
    (0, logger_1.logAuth)('Attempting password update');
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[83]++, await client_1.default.auth.updateUser({
      password: newPassword
    }));
    /* istanbul ignore next */
    cov_261dkgvklu().s[84]++;
    if (error) {
      /* istanbul ignore next */
      cov_261dkgvklu().b[22][0]++;
      cov_261dkgvklu().s[85]++;
      (0, logger_1.logAuth)('Password update failed', {
        error: error.message
      });
      /* istanbul ignore next */
      cov_261dkgvklu().s[86]++;
      return {
        error: error
      };
    } else
    /* istanbul ignore next */
    {
      cov_261dkgvklu().b[22][1]++;
    }
    cov_261dkgvklu().s[87]++;
    (0, logger_1.logAuth)('Password updated successfully');
    /* istanbul ignore next */
    cov_261dkgvklu().s[88]++;
    return {
      error: null
    };
  } catch (error) {
    const authError =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[89]++, error);
    /* istanbul ignore next */
    cov_261dkgvklu().s[90]++;
    logger_1.logger.error('Unexpected error during password update', {
      error: authError.message
    }, 'Auth');
    /* istanbul ignore next */
    cov_261dkgvklu().s[91]++;
    return {
      error: authError
    };
  }
}
/**
 * Get current user session from local storage
 * @returns Promise<{session: Session | null, error: AuthError | null}> - Current session or error
 * @example
 * ```typescript
 * const { session, error } = await getSession();
 * if (session) {
 *   console.log('User is authenticated:', session.user.id);
 * }
 * ```
 */
async function getSession() {
  /* istanbul ignore next */
  cov_261dkgvklu().f[11]++;
  var _a;
  /* istanbul ignore next */
  cov_261dkgvklu().s[92]++;
  try {
    const {
      data: {
        session
      },
      error
    } =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[93]++, await client_1.default.auth.getSession());
    /* istanbul ignore next */
    cov_261dkgvklu().s[94]++;
    if (error) {
      /* istanbul ignore next */
      cov_261dkgvklu().b[23][0]++;
      cov_261dkgvklu().s[95]++;
      (0, logger_1.logAuth)('Failed to get session', {
        error: error.message
      });
      /* istanbul ignore next */
      cov_261dkgvklu().s[96]++;
      return {
        session: null,
        error: error
      };
    } else
    /* istanbul ignore next */
    {
      cov_261dkgvklu().b[23][1]++;
    }
    cov_261dkgvklu().s[97]++;
    (0, logger_1.logAuth)('Session retrieved', {
      hasSession: !!session,
      userId:
      /* istanbul ignore next */
      (cov_261dkgvklu().b[25][0]++, (_a =
      /* istanbul ignore next */
      (cov_261dkgvklu().b[27][0]++, session === null) ||
      /* istanbul ignore next */
      (cov_261dkgvklu().b[27][1]++, session === void 0) ?
      /* istanbul ignore next */
      (cov_261dkgvklu().b[26][0]++, void 0) :
      /* istanbul ignore next */
      (cov_261dkgvklu().b[26][1]++, session.user)) === null) ||
      /* istanbul ignore next */
      (cov_261dkgvklu().b[25][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_261dkgvklu().b[24][0]++, void 0) :
      /* istanbul ignore next */
      (cov_261dkgvklu().b[24][1]++, _a.id)
    });
    /* istanbul ignore next */
    cov_261dkgvklu().s[98]++;
    return {
      session,
      error: null
    };
  } catch (error) {
    const authError =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[99]++, error);
    /* istanbul ignore next */
    cov_261dkgvklu().s[100]++;
    logger_1.logger.error('Unexpected error getting session', {
      error: authError.message
    }, 'Auth');
    /* istanbul ignore next */
    cov_261dkgvklu().s[101]++;
    return {
      session: null,
      error: authError
    };
  }
}
/**
 * Get current user with server-side token validation
 * More secure than getSession() as it validates token with server
 * @returns Promise<{user: User | null, error: AuthError | null}> - Current user or error
 * @example
 * ```typescript
 * const { user, error } = await getUser();
 * if (user) {
 *   console.log('Authenticated user:', user.email);
 * }
 * ```
 */
async function getUser() {
  /* istanbul ignore next */
  cov_261dkgvklu().f[12]++;
  cov_261dkgvklu().s[102]++;
  try {
    const {
      data: {
        user
      },
      error
    } =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[103]++, await client_1.default.auth.getUser());
    /* istanbul ignore next */
    cov_261dkgvklu().s[104]++;
    if (error) {
      /* istanbul ignore next */
      cov_261dkgvklu().b[28][0]++;
      cov_261dkgvklu().s[105]++;
      (0, logger_1.logAuth)('Failed to get user', {
        error: error.message
      });
      /* istanbul ignore next */
      cov_261dkgvklu().s[106]++;
      return {
        user: null,
        error: error
      };
    } else
    /* istanbul ignore next */
    {
      cov_261dkgvklu().b[28][1]++;
    }
    cov_261dkgvklu().s[107]++;
    (0, logger_1.logAuth)('User retrieved', {
      userId:
      /* istanbul ignore next */
      (cov_261dkgvklu().b[30][0]++, user === null) ||
      /* istanbul ignore next */
      (cov_261dkgvklu().b[30][1]++, user === void 0) ?
      /* istanbul ignore next */
      (cov_261dkgvklu().b[29][0]++, void 0) :
      /* istanbul ignore next */
      (cov_261dkgvklu().b[29][1]++, user.id),
      email:
      /* istanbul ignore next */
      (cov_261dkgvklu().b[32][0]++, user === null) ||
      /* istanbul ignore next */
      (cov_261dkgvklu().b[32][1]++, user === void 0) ?
      /* istanbul ignore next */
      (cov_261dkgvklu().b[31][0]++, void 0) :
      /* istanbul ignore next */
      (cov_261dkgvklu().b[31][1]++, user.email)
    });
    /* istanbul ignore next */
    cov_261dkgvklu().s[108]++;
    return {
      user,
      error: null
    };
  } catch (error) {
    const authError =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[109]++, error);
    /* istanbul ignore next */
    cov_261dkgvklu().s[110]++;
    logger_1.logger.error('Unexpected error getting user', {
      error: authError.message
    }, 'Auth');
    /* istanbul ignore next */
    cov_261dkgvklu().s[111]++;
    return {
      user: null,
      error: authError
    };
  }
}
// ==================== AUTH STATE MONITORING ====================
/**
 * Subscribe to authentication state changes
 * @param callback - Function called when auth state changes
 * @param callback.event - Auth event type (SIGNED_IN, SIGNED_OUT, etc.)
 * @param callback.session - New session data or null
 * @returns Subscription object with unsubscribe method
 * @example
 * ```typescript
 * const subscription = onAuthStateChange((event, session) => {
 *   if (event === 'SIGNED_IN') {
 *     console.log('User signed in:', session.user.id);
 *   } else if (event === 'SIGNED_OUT') {
 *     console.log('User signed out');
 *   }
 * });
 *
 * // Later, unsubscribe
 * subscription.unsubscribe();
 * ```
 */
function onAuthStateChange(callback) {
  /* istanbul ignore next */
  cov_261dkgvklu().f[13]++;
  cov_261dkgvklu().s[112]++;
  (0, logger_1.logAuth)('Setting up auth state change listener');
  const {
    data: {
      subscription
    }
  } =
  /* istanbul ignore next */
  (cov_261dkgvklu().s[113]++, client_1.default.auth.onAuthStateChange((event, session) => {
    /* istanbul ignore next */
    cov_261dkgvklu().f[14]++;
    var _a;
    /* istanbul ignore next */
    cov_261dkgvklu().s[114]++;
    (0, logger_1.logAuth)('Auth state changed', {
      event,
      hasSession: !!session,
      userId:
      /* istanbul ignore next */
      (cov_261dkgvklu().b[34][0]++, (_a =
      /* istanbul ignore next */
      (cov_261dkgvklu().b[36][0]++, session === null) ||
      /* istanbul ignore next */
      (cov_261dkgvklu().b[36][1]++, session === void 0) ?
      /* istanbul ignore next */
      (cov_261dkgvklu().b[35][0]++, void 0) :
      /* istanbul ignore next */
      (cov_261dkgvklu().b[35][1]++, session.user)) === null) ||
      /* istanbul ignore next */
      (cov_261dkgvklu().b[34][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_261dkgvklu().b[33][0]++, void 0) :
      /* istanbul ignore next */
      (cov_261dkgvklu().b[33][1]++, _a.id)
    });
    /* istanbul ignore next */
    cov_261dkgvklu().s[115]++;
    callback(event, session);
  }));
  /* istanbul ignore next */
  cov_261dkgvklu().s[116]++;
  return subscription;
}
// ==================== UTILITY FUNCTIONS ====================
/**
 * Check if user is currently authenticated with server validation
 * Uses getUser() for server-side token validation instead of local storage
 * @returns Promise<boolean> - True if user is authenticated and token is valid
 * @example
 * ```typescript
 * const isLoggedIn = await isAuthenticated();
 * if (isLoggedIn) {
 *   // Show authenticated content
 * } else {
 *   // Redirect to login
 * }
 * ```
 */
async function isAuthenticated() {
  /* istanbul ignore next */
  cov_261dkgvklu().f[15]++;
  cov_261dkgvklu().s[117]++;
  try {
    // SECURITY FIX: Use getUser() instead of getSession() for better security
    // getUser() validates the token with the server, while getSession() only reads from storage
    const {
      user
    } =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[118]++, await getUser());
    /* istanbul ignore next */
    cov_261dkgvklu().s[119]++;
    return !!user;
  } catch (_a) {
    /* istanbul ignore next */
    cov_261dkgvklu().s[120]++;
    return false;
  }
}
/**
 * Get current user ID with server validation
 * @returns Promise<string | null> - User ID if authenticated, null otherwise
 * @example
 * ```typescript
 * const userId = await getCurrentUserId();
 * if (userId) {
 *   // Load user-specific data
 *   const profile = await getProfile(userId);
 * }
 * ```
 */
async function getCurrentUserId() {
  /* istanbul ignore next */
  cov_261dkgvklu().f[16]++;
  cov_261dkgvklu().s[121]++;
  try {
    const {
      user
    } =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[122]++, await getUser());
    /* istanbul ignore next */
    cov_261dkgvklu().s[123]++;
    return /* istanbul ignore next */(cov_261dkgvklu().b[37][0]++,
    /* istanbul ignore next */
    (cov_261dkgvklu().b[39][0]++, user === null) ||
    /* istanbul ignore next */
    (cov_261dkgvklu().b[39][1]++, user === void 0) ?
    /* istanbul ignore next */
    (cov_261dkgvklu().b[38][0]++, void 0) :
    /* istanbul ignore next */
    (cov_261dkgvklu().b[38][1]++, user.id)) ||
    /* istanbul ignore next */
    (cov_261dkgvklu().b[37][1]++, null);
  } catch (_a) {
    /* istanbul ignore next */
    cov_261dkgvklu().s[124]++;
    return null;
  }
}
/**
 * Sign in with OAuth provider
 * @param provider - OAuth provider ('google', 'github', 'twitter', etc.)
 * @param options - Additional options for the provider
 * @returns Promise<{data: {user: User | null, session: Session | null} | null, error: AuthError | null}>
 * @example
 * ```typescript
 * const result = await signInWithProvider('google', {
 *   redirectTo: 'https://myapp.com/dashboard'
 * });
 * if (!result.error) {
 *   // User will be redirected to provider for authentication
 * }
 * ```
 */
async function signInWithProvider(provider, options) {
  /* istanbul ignore next */
  cov_261dkgvklu().f[17]++;
  cov_261dkgvklu().s[125]++;
  try {
    /* istanbul ignore next */
    cov_261dkgvklu().s[126]++;
    (0, logger_1.logAuth)('Attempting OAuth sign in', {
      provider
    });
    // Use canonical www domain to avoid losing hash/query tokens on redirect
    const siteUrl =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[127]++,
    /* istanbul ignore next */
    (cov_261dkgvklu().b[40][0]++, process.env.NEXT_PUBLIC_SITE_URL) ||
    /* istanbul ignore next */
    (cov_261dkgvklu().b[40][1]++, 'https://www.orangecat.ch'));
    const redirectTo =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[128]++,
    /* istanbul ignore next */
    (cov_261dkgvklu().b[41][0]++,
    /* istanbul ignore next */
    (cov_261dkgvklu().b[43][0]++, options === null) ||
    /* istanbul ignore next */
    (cov_261dkgvklu().b[43][1]++, options === void 0) ?
    /* istanbul ignore next */
    (cov_261dkgvklu().b[42][0]++, void 0) :
    /* istanbul ignore next */
    (cov_261dkgvklu().b[42][1]++, options.redirectTo)) ||
    /* istanbul ignore next */
    (cov_261dkgvklu().b[41][1]++, `${siteUrl}/auth/callback`));
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[129]++, await client_1.default.auth.signInWithOAuth({
      provider,
      options: {
        redirectTo,
        scopes:
        /* istanbul ignore next */
        (cov_261dkgvklu().b[45][0]++, options === null) ||
        /* istanbul ignore next */
        (cov_261dkgvklu().b[45][1]++, options === void 0) ?
        /* istanbul ignore next */
        (cov_261dkgvklu().b[44][0]++, void 0) :
        /* istanbul ignore next */
        (cov_261dkgvklu().b[44][1]++, options.scopes),
        queryParams:
        /* istanbul ignore next */
        (cov_261dkgvklu().b[47][0]++, options === null) ||
        /* istanbul ignore next */
        (cov_261dkgvklu().b[47][1]++, options === void 0) ?
        /* istanbul ignore next */
        (cov_261dkgvklu().b[46][0]++, void 0) :
        /* istanbul ignore next */
        (cov_261dkgvklu().b[46][1]++, options.queryParams)
      }
    }));
    /* istanbul ignore next */
    cov_261dkgvklu().s[130]++;
    if (error) {
      /* istanbul ignore next */
      cov_261dkgvklu().b[48][0]++;
      cov_261dkgvklu().s[131]++;
      (0, logger_1.logAuth)('OAuth sign in failed', {
        provider,
        error: error.message
      });
      /* istanbul ignore next */
      cov_261dkgvklu().s[132]++;
      return {
        data: {
          user: null,
          session: null
        },
        error: error
      };
    } else
    /* istanbul ignore next */
    {
      cov_261dkgvklu().b[48][1]++;
    }
    cov_261dkgvklu().s[133]++;
    (0, logger_1.logAuth)('OAuth sign in initiated', {
      provider,
      redirectTo
    });
    /* istanbul ignore next */
    cov_261dkgvklu().s[134]++;
    return {
      data,
      error: null
    };
  } catch (error) {
    const authError =
    /* istanbul ignore next */
    (cov_261dkgvklu().s[135]++, error);
    /* istanbul ignore next */
    cov_261dkgvklu().s[136]++;
    logger_1.logger.error('Unexpected error during OAuth sign in', {
      provider,
      error: authError.message
    }, 'Auth');
    /* istanbul ignore next */
    cov_261dkgvklu().s[137]++;
    return {
      data: {
        user: null,
        session: null
      },
      error: authError
    };
  }
}
// ==================== EXPORTS ====================
var types_1 =
/* istanbul ignore next */
(cov_261dkgvklu().s[138]++, require("../types"));
/* istanbul ignore next */
cov_261dkgvklu().s[139]++;
Object.defineProperty(exports, "isAuthError", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_261dkgvklu().f[18]++;
    cov_261dkgvklu().s[140]++;
    return types_1.isAuthError;
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,