{"version":3,"names":["cov_2a2gxx0ghh","actualCoverage","exports","getFeaturedCampaigns","s","getTrendingCampaigns","getStaffPicks","getNearlyFundedCampaigns","getNewAndNoteworthy","featureCampaign","unfeatureCampaign","client_1","__importDefault","require","logger_1","limit","b","f","data","campaigns","error","default","from","select","eq","order","ascending","featuredCampaigns","map","campaign","index","progress","goal_amount","total_funding","featured_type","contributor_count","Object","assign","featured_priority","profiles","Array","isArray","logger","not","nearlyFunded","filter","slice","gte","Date","now","toISOString","gt","campaignId","featuredType","priority","featuredUntil","info"],"sources":["/home/g/dev/orangecat/src/services/featured.ts"],"sourcesContent":["import supabase from '@/services/supabase/client'\nimport { logger } from '@/utils/logger'\n\nexport type FeaturedType = \n  | 'trending' \n  | 'staff_pick' \n  | 'community_choice' \n  | 'nearly_funded' \n  | 'new_and_noteworthy'\n  | 'featured'\n\nexport interface FeaturedCampaign {\n  id: string\n  title: string\n  description: string\n  goal_amount: number\n  total_funding: number\n  contributor_count: number\n  is_active: boolean\n  featured_image_url?: string\n  slug?: string\n  created_at: string\n  end_date?: string\n  featured_type: FeaturedType\n  featured_priority: number\n  featured_until?: string\n  profiles?: {\n    username: string\n    display_name?: string\n    avatar_url?: string\n  }\n}\n\n// Get featured campaigns\nexport async function getFeaturedCampaigns(limit: number = 6): Promise<FeaturedCampaign[]> {\n  try {\n    // For now, we'll simulate featured campaigns by getting high-performing campaigns\n    // In the future, this would query a dedicated featured_campaigns table\n    const { data: campaigns, error } = await supabase\n      .from('funding_pages')\n      .select(`\n        id, title, description, goal_amount, total_funding, contributor_count,\n        is_active, featured_image_url, slug, created_at,\n        profiles!inner(username, display_name, avatar_url)\n      `)\n      .eq('is_public', true)\n      .eq('is_active', true)\n      .order('total_funding', { ascending: false })\n      .limit(limit)\n\n    if (error) throw error\n\n    // Transform to featured campaigns with simulated featured types\n    const featuredCampaigns: FeaturedCampaign[] = (campaigns || []).map((campaign, index) => {\n      const progress = campaign.goal_amount ? (campaign.total_funding / campaign.goal_amount) * 100 : 0\n      \n      // Determine featured type based on campaign characteristics\n      let featured_type: FeaturedType = 'featured'\n      if (progress >= 80) {\n        featured_type = 'nearly_funded'\n      } else if (campaign.contributor_count >= 50) {\n        featured_type = 'community_choice'\n      } else if (campaign.total_funding >= 10000) {\n        featured_type = 'trending'\n      } else if (index < 2) {\n        featured_type = 'staff_pick'\n      } else {\n        featured_type = 'new_and_noteworthy'\n      }\n\n      return {\n        ...campaign,\n        featured_type,\n        featured_priority: index + 1,\n        profiles: Array.isArray(campaign.profiles) ? campaign.profiles[0] : campaign.profiles\n      }\n    })\n\n    return featuredCampaigns\n  } catch (error) {\n    logger.error('Error fetching featured campaigns', error, 'Featured')\n    return []\n  }\n}\n\n// Get trending campaigns (subset of featured)\nexport async function getTrendingCampaigns(limit: number = 3): Promise<FeaturedCampaign[]> {\n  try {\n    const { data: campaigns, error } = await supabase\n      .from('funding_pages')\n      .select(`\n        id, title, description, goal_amount, total_funding, contributor_count,\n        is_active, featured_image_url, slug, created_at,\n        profiles!inner(username, display_name, avatar_url)\n      `)\n      .eq('is_public', true)\n      .eq('is_active', true)\n      .order('contributor_count', { ascending: false })\n      .limit(limit)\n\n    if (error) throw error\n\n    return (campaigns || []).map((campaign, index) => ({\n      ...campaign,\n      featured_type: 'trending' as FeaturedType,\n      featured_priority: index + 1,\n      profiles: Array.isArray(campaign.profiles) ? campaign.profiles[0] : campaign.profiles\n    }))\n  } catch (error) {\n    logger.error('Error fetching trending campaigns', error, 'Featured')\n    return []\n  }\n}\n\n// Get staff picks\nexport async function getStaffPicks(limit: number = 3): Promise<FeaturedCampaign[]> {\n  try {\n    // For now, get campaigns with good descriptions and images\n    const { data: campaigns, error } = await supabase\n      .from('funding_pages')\n      .select(`\n        id, title, description, goal_amount, total_funding, contributor_count,\n        is_active, featured_image_url, slug, created_at,\n        profiles!inner(username, display_name, avatar_url)\n      `)\n      .eq('is_public', true)\n      .eq('is_active', true)\n      .not('featured_image_url', 'is', null)\n      .not('description', 'is', null)\n      .order('created_at', { ascending: false })\n      .limit(limit)\n\n    if (error) throw error\n\n    return (campaigns || []).map((campaign, index) => ({\n      ...campaign,\n      featured_type: 'staff_pick' as FeaturedType,\n      featured_priority: index + 1,\n      profiles: Array.isArray(campaign.profiles) ? campaign.profiles[0] : campaign.profiles\n    }))\n  } catch (error) {\n    logger.error('Error fetching staff picks', error, 'Featured')\n    return []\n  }\n}\n\n// Get nearly funded campaigns\nexport async function getNearlyFundedCampaigns(limit: number = 3): Promise<FeaturedCampaign[]> {\n  try {\n    const { data: campaigns, error } = await supabase\n      .from('funding_pages')\n      .select(`\n        id, title, description, goal_amount, total_funding, contributor_count,\n        is_active, featured_image_url, slug, created_at,\n        profiles!inner(username, display_name, avatar_url)\n      `)\n      .eq('is_public', true)\n      .eq('is_active', true)\n      .not('goal_amount', 'is', null)\n      .order('total_funding', { ascending: false })\n      .limit(20) // Get more to filter\n\n    if (error) throw error\n\n    // Filter for campaigns that are 70%+ funded\n    const nearlyFunded = (campaigns || [])\n      .filter(campaign => {\n        const progress = campaign.goal_amount ? (campaign.total_funding / campaign.goal_amount) * 100 : 0\n        return progress >= 70 && progress < 100\n      })\n      .slice(0, limit)\n\n    return nearlyFunded.map((campaign, index) => ({\n      ...campaign,\n      featured_type: 'nearly_funded' as FeaturedType,\n      featured_priority: index + 1,\n      profiles: Array.isArray(campaign.profiles) ? campaign.profiles[0] : campaign.profiles\n    }))\n  } catch (error) {\n    logger.error('Error fetching nearly funded campaigns', error, 'Featured')\n    return []\n  }\n}\n\n// Get new and noteworthy campaigns\nexport async function getNewAndNoteworthy(limit: number = 3): Promise<FeaturedCampaign[]> {\n  try {\n    // Get recent campaigns with some traction\n    const { data: campaigns, error } = await supabase\n      .from('funding_pages')\n      .select(`\n        id, title, description, goal_amount, total_funding, contributor_count,\n        is_active, featured_image_url, slug, created_at,\n        profiles!inner(username, display_name, avatar_url)\n      `)\n      .eq('is_public', true)\n      .eq('is_active', true)\n      .gte('created_at', new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString()) // Last 30 days\n      .gt('contributor_count', 0) // Has at least some supporters\n      .order('created_at', { ascending: false })\n      .limit(limit)\n\n    if (error) throw error\n\n    return (campaigns || []).map((campaign, index) => ({\n      ...campaign,\n      featured_type: 'new_and_noteworthy' as FeaturedType,\n      featured_priority: index + 1,\n      profiles: Array.isArray(campaign.profiles) ? campaign.profiles[0] : campaign.profiles\n    }))\n  } catch (error) {\n    logger.error('Error fetching new and noteworthy campaigns', error, 'Featured')\n    return []\n  }\n}\n\n// Admin function to manually feature a campaign (future implementation)\nexport async function featureCampaign(\n  campaignId: string, \n  featuredType: FeaturedType, \n  priority: number = 1,\n  featuredUntil?: string\n): Promise<boolean> {\n  // This would be implemented when we add a featured_campaigns table\n  // For now, return true to indicate success\n  logger.info('Campaign featured', { campaignId, featuredType, priority, featuredUntil }, 'Featured')\n  return true\n}\n\n// Admin function to unfeature a campaign\nexport async function unfeatureCampaign(campaignId: string): Promise<boolean> {\n  // This would be implemented when we add a featured_campaigns table\n  logger.info('Campaign unfeatured', { campaignId }, 'Featured')\n  return true\n} "],"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","ignoreList":[]}