{"version":3,"names":["cov_261dkgvklu","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","signIn","signUp","signOut","resetPassword","updatePassword","getSession","getUser","onAuthStateChange","isAuthenticated","getCurrentUserId","signInWithProvider","client_1","__importDefault","require","logger_1","handleAuthError","error","operation","_a","message","includes","status","_b","email","password","logAuth","timeoutPromise","Promise","_","reject","setTimeout","Error","authPromise","default","auth","signInWithPassword","data","race","enhancedError","user","session","userId","id","hasSession","logger","emailRedirectTo","siteUrl","process","env","NEXT_PUBLIC_SITE_URL","options","needsConfirmation","authError","redirectUrl","resetPasswordForEmail","redirectTo","errorMessage","String","newPassword","updateUser","callback","subscription","event","provider","signInWithOAuth","scopes","queryParams","types_1","Object","defineProperty","enumerable","get","isAuthError"],"sources":["/home/g/dev/orangecat/src/services/supabase/auth/index.ts"],"sourcesContent":["/**\n * SUPABASE AUTH SERVICE - CLEAN AUTHENTICATION OPERATIONS\n * \n * This service handles all authentication operations with proper\n * error handling, logging, and type safety.\n * \n * Created: 2025-06-08\n * Last Modified: 2025-01-22\n * Last Modified Summary: Enhanced timeout handling and error messages for better UX\n */\n\nimport supabase from '../client'\nimport { logger, logAuth } from '@/utils/logger'\nimport type { \n  AuthResponse, \n  SignInRequest, \n  SignUpRequest, \n  PasswordResetRequest,\n  PasswordUpdateRequest,\n  AuthError,\n  isAuthError\n} from '../types'\n\n/**\n * Enhanced error handling with timeout detection for authentication operations\n * @param error - The error object from auth operation\n * @param operation - The auth operation that failed (for context)\n * @returns Standardized AuthError with enhanced messaging\n */\nconst handleAuthError = (error: any, operation: string): AuthError => {\n  if (error.name === 'AbortError' || error.message?.includes('timeout')) {\n    return {\n      name: 'TimeoutError',\n      message: 'Request timed out. Please check your internet connection or try again later.',\n      status: 408\n    } as AuthError;\n  }\n\n  if (error.message?.includes('fetch')) {\n    return {\n      name: 'NetworkError',\n      message: 'Unable to connect to authentication service. Please check your internet connection.',\n      status: 0\n    } as AuthError;\n  }\n\n  return error as AuthError;\n};\n\n// ==================== AUTHENTICATION OPERATIONS ====================\n\n/**\n * Sign in a user with email and password\n * @param params - Sign in parameters\n * @param params.email - User's email address\n * @param params.password - User's password\n * @returns Promise<AuthResponse> - Authentication response with user data or error\n * @example\n * ```typescript\n * const result = await signIn({ email: 'user@example.com', password: 'password123' });\n * if (result.error) {\n *   console.error('Sign in failed:', result.error.message);\n * } else {\n *   console.log('Signed in user:', result.data.user?.id);\n * }\n * ```\n */\nexport async function signIn({ email, password }: SignInRequest): Promise<AuthResponse> {\n  try {\n    logAuth('Attempting to sign in user', { email })\n    \n    // Add timeout wrapper for auth operations\n    const timeoutPromise = new Promise<never>((_, reject) => {\n      setTimeout(() => reject(new Error('Authentication request timed out')), 20000);\n    });\n\n    const authPromise = supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n\n    const { data, error } = await Promise.race([authPromise, timeoutPromise]);\n\n    if (error) {\n      const enhancedError = handleAuthError(error, 'sign in');\n      logAuth('Sign in failed', { email, error: enhancedError.message })\n      return { data: { user: null, session: null }, error: enhancedError }\n    }\n\n    logAuth('Sign in successful', { \n      email, \n      userId: data.user?.id,\n      hasSession: !!data.session \n    })\n    \n    return { data, error: null }\n  } catch (error) {\n    const enhancedError = handleAuthError(error, 'sign in');\n    logger.error('Unexpected error during sign in', { \n      email, \n      error: enhancedError.message \n    }, 'Auth')\n    \n    return { \n      data: { user: null, session: null }, \n      error: enhancedError \n    }\n  }\n}\n\n/**\n * Sign up a new user with email and password\n * @param params - Sign up parameters\n * @param params.email - User's email address\n * @param params.password - User's password (should meet security requirements)\n * @param params.emailRedirectTo - Optional redirect URL after email confirmation\n * @returns Promise<AuthResponse> - Authentication response with user data or error\n * @example\n * ```typescript\n * const result = await signUp({ \n *   email: 'newuser@example.com', \n *   password: 'securePassword123',\n *   emailRedirectTo: 'https://myapp.com/welcome'\n * });\n * if (!result.error) {\n *   console.log('User registered, check email for confirmation');\n * }\n * ```\n */\nexport async function signUp({ email, password, emailRedirectTo }: SignUpRequest): Promise<AuthResponse> {\n  try {\n    logAuth('Attempting to sign up user', { email })\n    \n    // Add timeout wrapper\n    const timeoutPromise = new Promise<never>((_, reject) => {\n      setTimeout(() => reject(new Error('Registration request timed out')), 25000);\n    });\n\n    const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || 'https://www.orangecat.ch'\n\n    const authPromise = supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        // After email confirmation, Supabase will redirect here with ?code= for session exchange\n        emailRedirectTo: emailRedirectTo || `${siteUrl}/auth/callback`\n      }\n    });\n\n    const { data, error } = await Promise.race([authPromise, timeoutPromise]);\n\n    if (error) {\n      const enhancedError = handleAuthError(error, 'sign up');\n      logAuth('Sign up failed', { email, error: enhancedError.message })\n      return { data: { user: null, session: null }, error: enhancedError }\n    }\n\n    logAuth('Sign up successful', { \n      email, \n      userId: data.user?.id,\n      needsConfirmation: !data.session \n    })\n    \n    return { data, error: null }\n  } catch (error) {\n    const enhancedError = handleAuthError(error, 'sign up');\n    logger.error('Unexpected error during sign up', { \n      email, \n      error: enhancedError.message \n    }, 'Auth')\n    \n    return { \n      data: { user: null, session: null }, \n      error: enhancedError \n    }\n  }\n}\n\n/**\n * Sign out the current user from all sessions\n * @returns Promise<{error: AuthError | null}> - Success status or error\n * @example\n * ```typescript\n * const { error } = await signOut();\n * if (!error) {\n *   console.log('User signed out successfully');\n *   // Redirect to login page\n * }\n * ```\n */\nexport async function signOut(): Promise<{ error: AuthError | null }> {\n  try {\n    logAuth('Attempting to sign out user')\n    \n    const { error } = await supabase.auth.signOut()\n\n    if (error) {\n      logAuth('Sign out failed', { error: error.message })\n      return { error: error as AuthError }\n    }\n\n    logAuth('Sign out successful')\n    return { error: null }\n  } catch (error) {\n    const authError = error as AuthError\n    logger.error('Unexpected error during sign out', { \n      error: authError.message \n    }, 'Auth')\n    \n    return { error: authError }\n  }\n}\n\n/**\n * Reset password for a user by sending email with reset link\n * @param params - Password reset parameters\n * @returns Promise with error status\n * \n * @example\n * ```typescript\n * const { error } = await resetPassword({ email: 'user@example.com' });\n * if (!error) {\n *   console.log('Password reset email sent');\n * }\n * ```\n */\nexport async function resetPassword({ email }: PasswordResetRequest): Promise<{ error: AuthError | null }> {\n  try {\n    logAuth('Attempting password reset', { email })\n    \n    // Use canonical www domain to avoid losing hash/query tokens on redirect\n    // Important: This URL MUST match exactly what's configured in Supabase Dashboard\n    const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || 'https://www.orangecat.ch'\n    // Use confirm route so Supabase verifies token server-side and sets cookies, then we redirect to reset\n    const redirectUrl = `${siteUrl}/auth/confirm?type=recovery&next=/auth/reset-password`\n    \n    logAuth('Using redirect URL for password reset', { redirectUrl })\n    \n    const { error } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: redirectUrl\n    })\n\n    if (error) {\n      logAuth('Password reset failed', { email, error: error.message })\n      return { error }\n    }\n\n    logAuth('Password reset email sent successfully', { email, redirectUrl })\n    return { error: null }\n  } catch (error) {\n    const errorMessage = error instanceof Error ? error.message : String(error)\n    logger.error('Unexpected error during password reset', {\n      error: errorMessage,\n      email\n    })\n    return { error: { message: errorMessage, name: 'ResetError' } as AuthError }\n  }\n}\n\n/**\n * Update user password (requires authenticated session)\n * @param params - Password update parameters\n * @param params.newPassword - The new password (should meet security requirements)\n * @returns Promise<{error: AuthError | null}> - Success status or error\n * @example\n * ```typescript\n * const { error } = await updatePassword({ newPassword: 'newSecurePassword123' });\n * if (!error) {\n *   console.log('Password updated successfully');\n * }\n * ```\n */\nexport async function updatePassword({ newPassword }: PasswordUpdateRequest): Promise<{ error: AuthError | null }> {\n  try {\n    logAuth('Attempting password update')\n    \n    const { error } = await supabase.auth.updateUser({\n      password: newPassword\n    })\n\n    if (error) {\n      logAuth('Password update failed', { error: error.message })\n      return { error: error as AuthError }\n    }\n\n    logAuth('Password updated successfully')\n    return { error: null }\n  } catch (error) {\n    const authError = error as AuthError\n    logger.error('Unexpected error during password update', { \n      error: authError.message \n    }, 'Auth')\n    \n    return { error: authError }\n  }\n}\n\n/**\n * Get current user session from local storage\n * @returns Promise<{session: Session | null, error: AuthError | null}> - Current session or error\n * @example\n * ```typescript\n * const { session, error } = await getSession();\n * if (session) {\n *   console.log('User is authenticated:', session.user.id);\n * }\n * ```\n */\nexport async function getSession() {\n  try {\n    const { data: { session }, error } = await supabase.auth.getSession()\n    \n    if (error) {\n      logAuth('Failed to get session', { error: error.message })\n      return { session: null, error: error as AuthError }\n    }\n    \n    logAuth('Session retrieved', { hasSession: !!session, userId: session?.user?.id })\n    return { session, error: null }\n  } catch (error) {\n    const authError = error as AuthError\n    logger.error('Unexpected error getting session', { \n      error: authError.message \n    }, 'Auth')\n    \n    return { session: null, error: authError }\n  }\n}\n\n/**\n * Get current user with server-side token validation\n * More secure than getSession() as it validates token with server\n * @returns Promise<{user: User | null, error: AuthError | null}> - Current user or error\n * @example\n * ```typescript\n * const { user, error } = await getUser();\n * if (user) {\n *   console.log('Authenticated user:', user.email);\n * }\n * ```\n */\nexport async function getUser() {\n  try {\n    const { data: { user }, error } = await supabase.auth.getUser()\n    \n    if (error) {\n      logAuth('Failed to get user', { error: error.message })\n      return { user: null, error: error as AuthError }\n    }\n    \n    logAuth('User retrieved', { userId: user?.id, email: user?.email })\n    return { user, error: null }\n  } catch (error) {\n    const authError = error as AuthError\n    logger.error('Unexpected error getting user', { \n      error: authError.message \n    }, 'Auth')\n    \n    return { user: null, error: authError }\n  }\n}\n\n// ==================== AUTH STATE MONITORING ====================\n\n/**\n * Subscribe to authentication state changes\n * @param callback - Function called when auth state changes\n * @param callback.event - Auth event type (SIGNED_IN, SIGNED_OUT, etc.)\n * @param callback.session - New session data or null\n * @returns Subscription object with unsubscribe method\n * @example\n * ```typescript\n * const subscription = onAuthStateChange((event, session) => {\n *   if (event === 'SIGNED_IN') {\n *     console.log('User signed in:', session.user.id);\n *   } else if (event === 'SIGNED_OUT') {\n *     console.log('User signed out');\n *   }\n * });\n * \n * // Later, unsubscribe\n * subscription.unsubscribe();\n * ```\n */\nexport function onAuthStateChange(callback: (event: string, session: any) => void) {\n  logAuth('Setting up auth state change listener')\n  \n  const { data: { subscription } } = supabase.auth.onAuthStateChange((event, session) => {\n    logAuth('Auth state changed', { event, hasSession: !!session, userId: session?.user?.id })\n    callback(event, session)\n  })\n  \n  return subscription\n}\n\n// ==================== UTILITY FUNCTIONS ====================\n\n/**\n * Check if user is currently authenticated with server validation\n * Uses getUser() for server-side token validation instead of local storage\n * @returns Promise<boolean> - True if user is authenticated and token is valid\n * @example\n * ```typescript\n * const isLoggedIn = await isAuthenticated();\n * if (isLoggedIn) {\n *   // Show authenticated content\n * } else {\n *   // Redirect to login\n * }\n * ```\n */\nexport async function isAuthenticated(): Promise<boolean> {\n  try {\n    // SECURITY FIX: Use getUser() instead of getSession() for better security\n    // getUser() validates the token with the server, while getSession() only reads from storage\n    const { user } = await getUser()\n    return !!user\n  } catch {\n    return false\n  }\n}\n\n/**\n * Get current user ID with server validation\n * @returns Promise<string | null> - User ID if authenticated, null otherwise\n * @example\n * ```typescript\n * const userId = await getCurrentUserId();\n * if (userId) {\n *   // Load user-specific data\n *   const profile = await getProfile(userId);\n * }\n * ```\n */\nexport async function getCurrentUserId(): Promise<string | null> {\n  try {\n    const { user } = await getUser()\n    return user?.id || null\n  } catch {\n    return null\n  }\n}\n\n/**\n * Sign in with OAuth provider\n * @param provider - OAuth provider ('google', 'github', 'twitter', etc.)\n * @param options - Additional options for the provider\n * @returns Promise<{data: {user: User | null, session: Session | null} | null, error: AuthError | null}>\n * @example\n * ```typescript\n * const result = await signInWithProvider('google', {\n *   redirectTo: 'https://myapp.com/dashboard'\n * });\n * if (!result.error) {\n *   // User will be redirected to provider for authentication\n * }\n * ```\n */\nexport async function signInWithProvider(\n  provider: 'google' | 'github' | 'twitter' | 'discord' | 'apple',\n  options?: {\n    redirectTo?: string\n    scopes?: string\n    queryParams?: Record<string, string>\n  }\n): Promise<AuthResponse> {\n  try {\n    logAuth('Attempting OAuth sign in', { provider })\n\n    // Use canonical www domain to avoid losing hash/query tokens on redirect\n    const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || 'https://www.orangecat.ch'\n    const redirectTo = options?.redirectTo || `${siteUrl}/auth/callback`\n\n    const { data, error } = await supabase.auth.signInWithOAuth({\n      provider,\n      options: {\n        redirectTo,\n        scopes: options?.scopes,\n        queryParams: options?.queryParams,\n      }\n    })\n\n    if (error) {\n      logAuth('OAuth sign in failed', { provider, error: error.message })\n      return { data: { user: null, session: null }, error: error as AuthError }\n    }\n\n    logAuth('OAuth sign in initiated', { provider, redirectTo })\n    return { data, error: null }\n  } catch (error) {\n    const authError = error as AuthError\n    logger.error('Unexpected error during OAuth sign in', {\n      provider,\n      error: authError.message\n    }, 'Auth')\n\n    return { data: { user: null, session: null }, error: authError }\n  }\n}\n\n// ==================== EXPORTS ====================\n\nexport {\n  type AuthResponse,\n  type SignInRequest,\n  type SignUpRequest,\n  type PasswordResetRequest,\n  type PasswordUpdateRequest,\n  type AuthError,\n  isAuthError\n} from '../types' "],"mappings":"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","ignoreList":[]}