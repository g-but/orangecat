6efe095d51adca07cf1c34a374775625
"use strict";

/* istanbul ignore next */
function cov_12ez6h4cyt() {
  var path = "/home/g/dev/orangecat/src/utils/validation.ts";
  var hash = "65639f87e04d99d48b95225f163075567329c99a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/utils/validation.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 230
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 36
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 34
        }
      },
      "4": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 32
        }
      },
      "5": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 48
        }
      },
      "6": {
        start: {
          line: 9,
          column: 28
        },
        end: {
          line: 9,
          column: 52
        }
      },
      "7": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 57
        }
      },
      "8": {
        start: {
          line: 11,
          column: 31
        },
        end: {
          line: 11,
          column: 81
        }
      },
      "9": {
        start: {
          line: 13,
          column: 30
        },
        end: {
          line: 90,
          column: 1
        }
      },
      "10": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 5
        }
      },
      "11": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 67
        }
      },
      "12": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "13": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 72
        }
      },
      "14": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "15": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "16": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 69
        }
      },
      "17": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "18": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 42
        }
      },
      "19": {
        start: {
          line: 37,
          column: 9
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "20": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 42
        }
      },
      "21": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 73
        }
      },
      "22": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "23": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 73
        }
      },
      "24": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "25": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "26": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 77
        }
      },
      "27": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "28": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 77
        }
      },
      "29": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "30": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 77
        }
      },
      "31": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "32": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "33": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 76
        }
      },
      "34": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "35": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 76
        }
      },
      "36": {
        start: {
          line: 77,
          column: 9
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "37": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "38": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 74
        }
      },
      "39": {
        start: {
          line: 83,
          column: 9
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "40": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "41": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 75
        }
      },
      "42": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 27
        }
      },
      "43": {
        start: {
          line: 91,
          column: 0
        },
        end: {
          line: 91,
          column: 54
        }
      },
      "44": {
        start: {
          line: 93,
          column: 32
        },
        end: {
          line: 119,
          column: 1
        }
      },
      "45": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "46": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 69
        }
      },
      "47": {
        start: {
          line: 98,
          column: 19
        },
        end: {
          line: 98,
          column: 40
        }
      },
      "48": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "49": {
        start: {
          line: 100,
          column: 33
        },
        end: {
          line: 100,
          column: 97
        }
      },
      "50": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "51": {
        start: {
          line: 101,
          column: 47
        },
        end: {
          line: 101,
          column: 73
        }
      },
      "52": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 74
        }
      },
      "53": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "54": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 75
        }
      },
      "55": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 112,
          column: 5
        }
      },
      "56": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 63
        }
      },
      "57": {
        start: {
          line: 114,
          column: 30
        },
        end: {
          line: 114,
          column: 88
        }
      },
      "58": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "59": {
        start: {
          line: 115,
          column: 55
        },
        end: {
          line: 115,
          column: 96
        }
      },
      "60": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 78
        }
      },
      "61": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 118,
          column: 27
        }
      },
      "62": {
        start: {
          line: 120,
          column: 0
        },
        end: {
          line: 120,
          column: 58
        }
      },
      "63": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 183,
          column: 1
        }
      },
      "64": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "65": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 60
        }
      },
      "66": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "67": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 86
        }
      },
      "68": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "69": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 81
        }
      },
      "70": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "71": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 102
        }
      },
      "72": {
        start: {
          line: 139,
          column: 26
        },
        end: {
          line: 139,
          column: 44
        }
      },
      "73": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "74": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 111
        }
      },
      "75": {
        start: {
          line: 144,
          column: 28
        },
        end: {
          line: 144,
          column: 77
        }
      },
      "76": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "77": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 150,
          column: 10
        }
      },
      "78": {
        start: {
          line: 153,
          column: 30
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "79": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 160,
          column: 5
        }
      },
      "80": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 63
        }
      },
      "81": {
        start: {
          line: 163,
          column: 28
        },
        end: {
          line: 165,
          column: 5
        }
      },
      "82": {
        start: {
          line: 167,
          column: 31
        },
        end: {
          line: 167,
          column: 53
        }
      },
      "83": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "84": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 90
        }
      },
      "85": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 181,
          column: 5
        }
      },
      "86": {
        start: {
          line: 173,
          column: 31
        },
        end: {
          line: 173,
          column: 92
        }
      },
      "87": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "88": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 179,
          column: 14
        }
      },
      "89": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 182,
          column: 27
        }
      },
      "90": {
        start: {
          line: 184,
          column: 0
        },
        end: {
          line: 184,
          column: 42
        }
      },
      "91": {
        start: {
          line: 186,
          column: 19
        },
        end: {
          line: 253,
          column: 1
        }
      },
      "92": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 189,
          column: 5
        }
      },
      "93": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 31
        }
      },
      "94": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "95": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 75
        }
      },
      "96": {
        start: {
          line: 195,
          column: 30
        },
        end: {
          line: 204,
          column: 5
        }
      },
      "97": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "98": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "99": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 78
        }
      },
      "100": {
        start: {
          line: 211,
          column: 30
        },
        end: {
          line: 211,
          column: 71
        }
      },
      "101": {
        start: {
          line: 212,
          column: 27
        },
        end: {
          line: 212,
          column: 55
        }
      },
      "102": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "103": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 79
        }
      },
      "104": {
        start: {
          line: 217,
          column: 30
        },
        end: {
          line: 217,
          column: 127
        }
      },
      "105": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 220,
          column: 5
        }
      },
      "106": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 74
        }
      },
      "107": {
        start: {
          line: 222,
          column: 27
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "108": {
        start: {
          line: 227,
          column: 21
        },
        end: {
          line: 227,
          column: 38
        }
      },
      "109": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 232,
          column: 5
        }
      },
      "110": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "111": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 82
        }
      },
      "112": {
        start: {
          line: 234,
          column: 31
        },
        end: {
          line: 234,
          column: 83
        }
      },
      "113": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 237,
          column: 5
        }
      },
      "114": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 34
        }
      },
      "115": {
        start: {
          line: 239,
          column: 43
        },
        end: {
          line: 246,
          column: 5
        }
      },
      "116": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "117": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "118": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 89
        }
      },
      "119": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 252,
          column: 27
        }
      },
      "120": {
        start: {
          line: 254,
          column: 0
        },
        end: {
          line: 254,
          column: 32
        }
      },
      "121": {
        start: {
          line: 256,
          column: 30
        },
        end: {
          line: 265,
          column: 1
        }
      },
      "122": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 258,
          column: 18
        }
      },
      "123": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 18
        }
      },
      "124": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 264,
          column: 34
        }
      },
      "125": {
        start: {
          line: 266,
          column: 0
        },
        end: {
          line: 266,
          column: 54
        }
      },
      "126": {
        start: {
          line: 268,
          column: 36
        },
        end: {
          line: 271,
          column: 1
        }
      },
      "127": {
        start: {
          line: 269,
          column: 19
        },
        end: {
          line: 269,
          column: 62
        }
      },
      "128": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 270,
          column: 24
        }
      },
      "129": {
        start: {
          line: 272,
          column: 0
        },
        end: {
          line: 272,
          column: 66
        }
      },
      "130": {
        start: {
          line: 273,
          column: 38
        },
        end: {
          line: 276,
          column: 1
        }
      },
      "131": {
        start: {
          line: 274,
          column: 19
        },
        end: {
          line: 274,
          column: 64
        }
      },
      "132": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 275,
          column: 24
        }
      },
      "133": {
        start: {
          line: 277,
          column: 0
        },
        end: {
          line: 277,
          column: 70
        }
      },
      "134": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 281,
          column: 18
        }
      },
      "135": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 18
        }
      },
      "136": {
        start: {
          line: 282,
          column: 21
        },
        end: {
          line: 282,
          column: 31
        }
      },
      "137": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 284,
          column: 62
        }
      },
      "138": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 288,
          column: 5
        }
      },
      "139": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 287,
          column: 45
        }
      },
      "140": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 289,
          column: 22
        }
      },
      "141": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 294,
          column: 5
        }
      },
      "142": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 49
        }
      },
      "143": {
        start: {
          line: 295,
          column: 23
        },
        end: {
          line: 295,
          column: 40
        }
      },
      "144": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 322,
          column: 5
        }
      },
      "145": {
        start: {
          line: 297,
          column: 23
        },
        end: {
          line: 297,
          column: 42
        }
      },
      "146": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "147": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 304,
          column: 14
        }
      },
      "148": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "149": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 312,
          column: 14
        }
      },
      "150": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 314,
          column: 45
        }
      },
      "151": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 321,
          column: 10
        }
      },
      "152": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 325,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 13,
            column: 31
          }
        },
        loc: {
          start: {
            line: 13,
            column: 43
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 93,
            column: 32
          },
          end: {
            line: 93,
            column: 33
          }
        },
        loc: {
          start: {
            line: 93,
            column: 45
          },
          end: {
            line: 119,
            column: 1
          }
        },
        line: 93
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 101,
            column: 34
          },
          end: {
            line: 101,
            column: 35
          }
        },
        loc: {
          start: {
            line: 101,
            column: 47
          },
          end: {
            line: 101,
            column: 73
          }
        },
        line: 101
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 115,
            column: 41
          },
          end: {
            line: 115,
            column: 42
          }
        },
        loc: {
          start: {
            line: 115,
            column: 55
          },
          end: {
            line: 115,
            column: 96
          }
        },
        line: 115
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 122,
            column: 24
          },
          end: {
            line: 122,
            column: 25
          }
        },
        loc: {
          start: {
            line: 122,
            column: 38
          },
          end: {
            line: 183,
            column: 1
          }
        },
        line: 122
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 186,
            column: 19
          },
          end: {
            line: 186,
            column: 20
          }
        },
        loc: {
          start: {
            line: 186,
            column: 28
          },
          end: {
            line: 253,
            column: 1
          }
        },
        line: 186
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 256,
            column: 30
          },
          end: {
            line: 256,
            column: 31
          }
        },
        loc: {
          start: {
            line: 256,
            column: 39
          },
          end: {
            line: 265,
            column: 1
          }
        },
        line: 256
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 268,
            column: 36
          },
          end: {
            line: 268,
            column: 37
          }
        },
        loc: {
          start: {
            line: 268,
            column: 49
          },
          end: {
            line: 271,
            column: 1
          }
        },
        line: 268
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 273,
            column: 38
          },
          end: {
            line: 273,
            column: 39
          }
        },
        loc: {
          start: {
            line: 273,
            column: 51
          },
          end: {
            line: 276,
            column: 1
          }
        },
        line: 273
      },
      "9": {
        name: "normalizeUrl",
        decl: {
          start: {
            line: 279,
            column: 9
          },
          end: {
            line: 279,
            column: 21
          }
        },
        loc: {
          start: {
            line: 279,
            column: 27
          },
          end: {
            line: 290,
            column: 1
          }
        },
        line: 279
      },
      "10": {
        name: "validateUrl",
        decl: {
          start: {
            line: 291,
            column: 9
          },
          end: {
            line: 291,
            column: 20
          }
        },
        loc: {
          start: {
            line: 291,
            column: 26
          },
          end: {
            line: 323,
            column: 1
          }
        },
        line: 291
      },
      "11": {
        name: "isValidUrl",
        decl: {
          start: {
            line: 324,
            column: 9
          },
          end: {
            line: 324,
            column: 19
          }
        },
        loc: {
          start: {
            line: 324,
            column: 25
          },
          end: {
            line: 326,
            column: 1
          }
        },
        line: 324
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 33
          }
        }, {
          start: {
            line: 18,
            column: 37
          },
          end: {
            line: 18,
            column: 64
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 43,
            column: 5
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: 41,
            column: 9
          },
          end: {
            line: 43,
            column: 5
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 37,
            column: 13
          },
          end: {
            line: 37,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 13
          },
          end: {
            line: 37,
            column: 36
          }
        }, {
          start: {
            line: 37,
            column: 40
          },
          end: {
            line: 37,
            column: 63
          }
        }],
        line: 37
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        }, {
          start: {
            line: 58,
            column: 9
          },
          end: {
            line: 63,
            column: 5
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "10": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 38
          }
        }, {
          start: {
            line: 51,
            column: 42
          },
          end: {
            line: 51,
            column: 63
          }
        }],
        line: 51
      },
      "11": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "12": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 34
          }
        }, {
          start: {
            line: 54,
            column: 38
          },
          end: {
            line: 54,
            column: 60
          }
        }],
        line: 54
      },
      "13": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "14": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 34
          }
        }, {
          start: {
            line: 60,
            column: 38
          },
          end: {
            line: 60,
            column: 60
          }
        }, {
          start: {
            line: 60,
            column: 64
          },
          end: {
            line: 60,
            column: 86
          }
        }],
        line: 60
      },
      "15": {
        loc: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        }, {
          start: {
            line: 77,
            column: 9
          },
          end: {
            line: 88,
            column: 5
          }
        }],
        line: 65
      },
      "16": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "17": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 69,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 69,
            column: 31
          }
        }, {
          start: {
            line: 69,
            column: 35
          },
          end: {
            line: 69,
            column: 54
          }
        }],
        line: 69
      },
      "18": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "19": {
        loc: {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 73,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 73,
            column: 33
          }
        }, {
          start: {
            line: 73,
            column: 37
          },
          end: {
            line: 73,
            column: 58
          }
        }],
        line: 73
      },
      "20": {
        loc: {
          start: {
            line: 77,
            column: 9
          },
          end: {
            line: 88,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 9
          },
          end: {
            line: 88,
            column: 5
          }
        }, {
          start: {
            line: 83,
            column: 9
          },
          end: {
            line: 88,
            column: 5
          }
        }],
        line: 77
      },
      "21": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "22": {
        loc: {
          start: {
            line: 83,
            column: 9
          },
          end: {
            line: 88,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 9
          },
          end: {
            line: 88,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "23": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "24": {
        loc: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "25": {
        loc: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "26": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "27": {
        loc: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "28": {
        loc: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "29": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 110,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 110,
            column: 14
          }
        }, {
          start: {
            line: 110,
            column: 18
          },
          end: {
            line: 110,
            column: 37
          }
        }],
        line: 110
      },
      "30": {
        loc: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "31": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 115,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 115,
            column: 14
          }
        }, {
          start: {
            line: 115,
            column: 18
          },
          end: {
            line: 115,
            column: 97
          }
        }],
        line: 115
      },
      "32": {
        loc: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "33": {
        loc: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "34": {
        loc: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "35": {
        loc: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "36": {
        loc: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "37": {
        loc: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "38": {
        loc: {
          start: {
            line: 148,
            column: 19
          },
          end: {
            line: 148,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 19
          },
          end: {
            line: 148,
            column: 41
          }
        }, {
          start: {
            line: 148,
            column: 45
          },
          end: {
            line: 148,
            column: 68
          }
        }],
        line: 148
      },
      "39": {
        loc: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "40": {
        loc: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "41": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "42": {
        loc: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "43": {
        loc: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "44": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "45": {
        loc: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "46": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 213,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 213,
            column: 22
          }
        }, {
          start: {
            line: 213,
            column: 26
          },
          end: {
            line: 213,
            column: 51
          }
        }],
        line: 213
      },
      "47": {
        loc: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "48": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "49": {
        loc: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "50": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "51": {
        loc: {
          start: {
            line: 257,
            column: 4
          },
          end: {
            line: 258,
            column: 18
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 4
          },
          end: {
            line: 258,
            column: 18
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "52": {
        loc: {
          start: {
            line: 280,
            column: 4
          },
          end: {
            line: 281,
            column: 18
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 4
          },
          end: {
            line: 281,
            column: 18
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "53": {
        loc: {
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 288,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 288,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "54": {
        loc: {
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 286,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 286,
            column: 18
          }
        }, {
          start: {
            line: 286,
            column: 22
          },
          end: {
            line: 286,
            column: 56
          }
        }],
        line: 286
      },
      "55": {
        loc: {
          start: {
            line: 292,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "56": {
        loc: {
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "57": {
        loc: {
          start: {
            line: 307,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "58": {
        loc: {
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 307,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 307,
            column: 28
          }
        }, {
          start: {
            line: 307,
            column: 32
          },
          end: {
            line: 307,
            column: 58
          }
        }],
        line: 307
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/utils/validation.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/utils/validation.ts"],
      sourcesContent: ["import { isProtectedUsername, validateBioForImpersonation } from './verification';\n\n// Pre-compiled regex patterns for performance (avoid creating new regex objects on each call)\nconst BECH32_FORMAT_REGEX = /^bc1[02-9ac-hj-np-z]+$/;\nconst BASE58_FORMAT_REGEX = /^[13][1-9A-HJ-NP-Za-km-z]+$/;\nconst LIGHTNING_FORMAT_REGEX = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n// Enhanced Bitcoin address validation with comprehensive security\nexport const isValidBitcoinAddress = (address: string): { valid: boolean; error?: string } => {\n  if (!address) {\n    return { valid: false, error: 'Bitcoin address required' };\n  }\n\n  // 1. Prevent testnet addresses on mainnet (check before format validation)\n  if (address.startsWith('tb1') || address.startsWith('bcrt1')) {\n    return { valid: false, error: 'Testnet addresses not allowed' };\n  }\n\n  // 2. Check for known burn addresses FIRST (before format validation)\n  const burnAddresses = [\n    '1111111111111111111114oLvT2',\n    '1BitcoinEaterAddressDontSendf59kuE',\n    'bc1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq9424r'\n  ];\n  if (burnAddresses.includes(address)) {\n    return { valid: false, error: 'Burn addresses not allowed' };\n  }\n\n  // 3. Basic format validation with proper character sets\n  let formatRegex: RegExp;\n  \n  if (address.startsWith('bc1')) {\n    // Bech32 addresses: lowercase only, proper bech32 character set  \n    // Valid bech32 chars: 0-9 and a-z except 1, b, i, o \n    formatRegex = BECH32_FORMAT_REGEX;\n  } else if (address.startsWith('1') || address.startsWith('3')) {\n    // Base58 addresses: exclude 0, O, I, l to prevent confusion\n    formatRegex = BASE58_FORMAT_REGEX;\n  } else {\n    return { valid: false, error: 'Invalid Bitcoin address format' };\n  }\n  \n  if (!formatRegex.test(address)) {\n    return { valid: false, error: 'Invalid Bitcoin address format' };\n  }\n\n  // 3.5. Additional validation for specific invalid patterns\n  if (address.startsWith('bc1')) {\n    // Reject addresses with invalid bech32 patterns\n    // But allow Taproot addresses (bc1p) to have different rules\n    if (address.startsWith('bc1q') && address.endsWith('0')) {\n      return { valid: false, error: 'Invalid Bitcoin address format' };\n    }\n    if (address.includes('0I') || address.includes('Ol')) {\n      return { valid: false, error: 'Invalid Bitcoin address format' };\n    }\n  } else {\n    // Reject Base58 addresses with confusing character combinations\n    if (address.includes('0O') || address.includes('Il') || address.includes('I0')) {\n      return { valid: false, error: 'Invalid Bitcoin address format' };\n    }\n  }\n\n  // 4. Length validation by address type\n  if (address.startsWith('bc1')) {\n    // Bech32 (SegWit) addresses - more strict validation\n    // P2WPKH: exactly 42 chars, P2WSH: exactly 62 chars, Taproot: exactly 62 chars\n    // Anything else in between is likely invalid\n    if (address.length < 42 || address.length > 62) {\n      return { valid: false, error: 'Invalid bech32 address length' };\n    }\n    // Additional check: reject addresses that are not standard lengths\n    if (address.length !== 42 && address.length !== 62) {\n      return { valid: false, error: 'Invalid bech32 address length' };\n    }\n  } else if (address.startsWith('3')) {\n    // P2SH addresses (SegWit wrapped)\n    if (address.length !== 34) {\n      return { valid: false, error: 'Invalid P2SH address length' };\n    }\n  } else if (address.startsWith('1')) {\n    // Legacy P2PKH addresses\n    if (address.length !== 34) {\n      return { valid: false, error: 'Invalid P2PKH address length' };\n    }\n  }\n\n  return { valid: true };\n};\n\n// Enhanced Lightning address validation with security checks\nexport const isValidLightningAddress = (address: string): { valid: boolean; error?: string } => {\n  if (!address) {\n    return { valid: false, error: 'Lightning address required' };\n  }\n\n  // 1. Prevent local/private addresses (check before format validation)\n  const domain = address.split('@')[1];\n  if (domain) {\n    const forbiddenDomains = ['localhost', '127.0.0.1', '0.0.0.0', '10.', '192.168.', '172.'];\n    if (forbiddenDomains.some(forbidden => domain.includes(forbidden))) {\n      return { valid: false, error: 'Local addresses not allowed' };\n    }\n  }\n\n  // 2. Basic format validation\n  if (!LIGHTNING_FORMAT_REGEX.test(address)) {\n    return { valid: false, error: 'Invalid Lightning address format' };\n  }\n\n  // 3. Domain length validation\n  if (domain && domain.length > 253) {\n    return { valid: false, error: 'Domain name too long' };\n  }\n\n  // 4. Prevent obviously suspicious domains\n  const suspiciousDomains = ['tempmail', 'guerrillamail', '10minutemail', 'throwaway'];\n  if (domain && suspiciousDomains.some(suspicious => domain.toLowerCase().includes(suspicious))) {\n    return { valid: false, error: 'Temporary email domains not allowed' };\n  }\n\n  return { valid: true };\n};\n\n// Enhanced username validation with anti-impersonation protection\nexport const isValidUsername = (username: string): { valid: boolean; error?: string; suggestedAlternatives?: string[] } => {\n  if (!username) {\n    return { valid: false, error: 'Username required' };\n  }\n\n  // 1. Length validation\n  if (username.length < 3) {\n    return { valid: false, error: 'Username must be at least 3 characters long' };\n  }\n  if (username.length > 30) {\n    return { valid: false, error: 'Username must be 30 characters or less' };\n  }\n\n  // 2. Check for Unicode attacks and character substitutions FIRST\n  // Check for non-ASCII characters that could be lookalikes\n  if (!/^[\\x00-\\x7F]*$/.test(username)) {\n    return { valid: false, error: 'Cyrillic, Greek, and other non-ASCII characters not allowed' };\n  }\n\n  // 3. Character validation (after Unicode check)\n  const usernameRegex = /^[a-zA-Z0-9_-]+$/;\n  if (!usernameRegex.test(username)) {\n    return { valid: false, error: 'Username can only contain letters, numbers, hyphens, and underscores' };\n  }\n\n  // 4. Check for protected usernames using the verification system\n  const protectionCheck = isProtectedUsername(username);\n  if (protectionCheck.isProtected) {\n    return { \n      valid: false, \n      error: protectionCheck.reason || 'Username is protected',\n      suggestedAlternatives: protectionCheck.suggestedAlternatives\n    };\n  }\n\n  // 5. Reserved usernames (platform-specific)\n  const reservedUsernames = [\n    'admin', 'administrator', 'root', 'mod', 'moderator', 'support',\n    'help', 'api', 'www', 'mail', 'email', 'official', 'verified', \n    'staff', 'team', 'orangecat', 'orange-cat', 'orange_cat'\n  ];\n  \n  if (reservedUsernames.includes(username.toLowerCase())) {\n    return { valid: false, error: 'Username is reserved' };\n  }\n\n  // 6. Check for character substitution patterns that might be celebrity impersonation\n  // Common substitutions: 0->o, 3->e, 4->a, 1->i, 5->s, etc.\n  const substitutionMap: Record<string, string> = {\n    '0': 'o', '3': 'e', '4': 'a', '1': 'i', '5': 's', '6': 'g', '7': 't', '9': 'g'\n  };\n  \n  // Create a version with substitutions reversed to check against protected names\n  let substitutionReversed = username.toLowerCase();\n  for (const [num, letter] of Object.entries(substitutionMap)) {\n    substitutionReversed = substitutionReversed.replace(new RegExp(num, 'g'), letter);\n  }\n  \n  // If the substitution-reversed version is protected, block it\n  if (substitutionReversed !== username.toLowerCase()) {\n    const celebrityCheck = isProtectedUsername(substitutionReversed);\n    if (celebrityCheck.isProtected) {\n      return { \n        valid: false, \n        error: 'Username resembles protected celebrity name',\n        suggestedAlternatives: celebrityCheck.suggestedAlternatives\n      };\n    }\n  }\n\n  return { valid: true };\n};\n\n// Enhanced bio content validation and sanitization\nexport const isValidBio = (bio: string): { valid: boolean; error?: string } => {\n  if (!bio) {\n    return { valid: true }; // Bio is optional\n  }\n\n  // 1. Length limits\n  if (bio.length > 500) {\n    return { valid: false, error: 'Bio must be under 500 characters' };\n  }\n\n  // 2. HTML/Script injection prevention\n  const dangerousPatterns = [\n    /<script[^>]*>.*?<\\/script>/gi,\n    /javascript:/gi,\n    /on\\w+\\s*=/gi,  // onclick, onload, etc.\n    /<iframe/gi,\n    /<object/gi,\n    /<embed/gi,\n    /<link/gi,\n    /<meta/gi\n  ];\n\n  for (const pattern of dangerousPatterns) {\n    if (pattern.test(bio)) {\n      return { valid: false, error: 'Bio contains prohibited content' };\n    }\n  }\n\n  // 3. Prevent alternative Bitcoin address injection\n  const btcAddressPattern = /\\b(bc1|[13])[a-zA-HJ-NP-Z0-9]{25,62}\\b/g;\n  const foundAddresses = bio.match(btcAddressPattern);\n  if (foundAddresses && foundAddresses.length > 0) {\n    return { valid: false, error: 'Bitcoin addresses not allowed in bio' };\n  }\n\n  // 4. Prevent verification badge spoofing (check before authority terms)\n  const verificationSpoof = /(verified|official|certified|authentic).*[\u2713\u2714\u2611]|[\u2713\u2714\u2611].*(verified|official|certified|authentic)/gi;\n  if (verificationSpoof.test(bio)) {\n    return { valid: false, error: 'Verification claims not allowed' };\n  }\n\n  // 5. Prevent authority impersonation\n  const authorityTerms = [\n    'official bitcoin', 'bitcoin foundation', 'bitcoin core',\n    'satoshi nakamoto', 'bitcoin developer', 'core developer', \n    'lightning labs', 'blockstream', 'bitcoin.org'\n  ];\n\n  const bioLower = bio.toLowerCase();\n  for (const term of authorityTerms) {\n    if (bioLower.includes(term)) {\n      return { valid: false, error: 'Authority claims not allowed in bio' };\n    }\n  }\n\n  // 6. Use verification system for additional impersonation checks\n  const impersonationCheck = validateBioForImpersonation(bio);\n  if (!impersonationCheck.valid) {\n    return impersonationCheck;\n  }\n\n  // 7. Additional celebrity impersonation detection\n  const celebrityImpersonationPatterns = [\n    /i am (elon|jack|satoshi|michael|andreas)/i,\n    /this is (elon|jack|satoshi|michael|andreas)/i,\n    /real (elon|jack|satoshi|michael|andreas)/i,\n    /actual (elon|jack|satoshi|michael|andreas)/i,\n    /genuine (elon|jack|satoshi|michael|andreas)/i,\n    /not fake.*i am/i\n  ];\n\n  for (const pattern of celebrityImpersonationPatterns) {\n    if (pattern.test(bio)) {\n      return { valid: false, error: 'Celebrity impersonation claims not allowed' };\n    }\n  }\n\n  return { valid: true };\n};\n\n// Client-side sanitization for bio display (additional security layer)\nexport const sanitizeBioForDisplay = (bio: string): string => {\n  if (!bio) return '';\n  \n  return bio\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;')\n    .replace(/\\//g, '&#x2F;');\n};\n\n// Legacy compatibility functions (maintain existing API)\nexport const isValidBitcoinAddressLegacy = (address: string): boolean => {\n  const result = isValidBitcoinAddress(address);\n  return result.valid;\n};\n\nexport const isValidLightningAddressLegacy = (address: string): boolean => {\n  const result = isValidLightningAddress(address);\n  return result.valid;\n};\n\n// URL validation utilities for seamless user experience\n\nexport function normalizeUrl(url: string): string {\n  if (!url.trim()) return ''\n  \n  let normalized = url.trim()\n  \n  // Remove any surrounding quotes or spaces\n  normalized = normalized.replace(/^[\"'\\s]+|[\"'\\s]+$/g, '')\n  \n  // If it doesn't start with a protocol, add https://\n  if (normalized && !normalized.match(/^https?:\\/\\//i)) {\n    normalized = `https://${normalized}`\n  }\n  \n  return normalized\n}\n\nexport function validateUrl(url: string): { isValid: boolean; normalized: string; error?: string } {\n  if (!url.trim()) {\n    return { isValid: true, normalized: '' } // Empty is valid (optional field)\n  }\n  \n  const normalized = normalizeUrl(url)\n  \n  try {\n    const urlObj = new URL(normalized)\n    \n    // Check if it's a valid HTTP/HTTPS URL\n    if (!['http:', 'https:'].includes(urlObj.protocol)) {\n      return {\n        isValid: false,\n        normalized,\n        error: 'URL must use http:// or https://'\n      }\n    }\n    \n    // Check if hostname exists\n    if (!urlObj.hostname || urlObj.hostname.length < 3) {\n      return {\n        isValid: false,\n        normalized,\n        error: 'Please enter a valid domain name'\n      }\n    }\n    \n    return { isValid: true, normalized }\n  } catch (error) {\n    return {\n      isValid: false,\n      normalized,\n      error: 'Please enter a valid URL'\n    }\n  }\n}\n\nexport function isValidUrl(url: string): boolean {\n  return validateUrl(url).isValid\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "65639f87e04d99d48b95225f163075567329c99a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12ez6h4cyt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12ez6h4cyt();
cov_12ez6h4cyt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_12ez6h4cyt().s[1]++;
exports.isValidLightningAddressLegacy = exports.isValidBitcoinAddressLegacy = exports.sanitizeBioForDisplay = exports.isValidBio = exports.isValidUsername = exports.isValidLightningAddress = exports.isValidBitcoinAddress = void 0;
/* istanbul ignore next */
cov_12ez6h4cyt().s[2]++;
exports.normalizeUrl = normalizeUrl;
/* istanbul ignore next */
cov_12ez6h4cyt().s[3]++;
exports.validateUrl = validateUrl;
/* istanbul ignore next */
cov_12ez6h4cyt().s[4]++;
exports.isValidUrl = isValidUrl;
const verification_1 =
/* istanbul ignore next */
(cov_12ez6h4cyt().s[5]++, require("./verification"));
// Pre-compiled regex patterns for performance (avoid creating new regex objects on each call)
const BECH32_FORMAT_REGEX =
/* istanbul ignore next */
(cov_12ez6h4cyt().s[6]++, /^bc1[02-9ac-hj-np-z]+$/);
const BASE58_FORMAT_REGEX =
/* istanbul ignore next */
(cov_12ez6h4cyt().s[7]++, /^[13][1-9A-HJ-NP-Za-km-z]+$/);
const LIGHTNING_FORMAT_REGEX =
/* istanbul ignore next */
(cov_12ez6h4cyt().s[8]++, /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/);
// Enhanced Bitcoin address validation with comprehensive security
/* istanbul ignore next */
cov_12ez6h4cyt().s[9]++;
const isValidBitcoinAddress = address => {
  /* istanbul ignore next */
  cov_12ez6h4cyt().f[0]++;
  cov_12ez6h4cyt().s[10]++;
  if (!address) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[0][0]++;
    cov_12ez6h4cyt().s[11]++;
    return {
      valid: false,
      error: 'Bitcoin address required'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[0][1]++;
  }
  // 1. Prevent testnet addresses on mainnet (check before format validation)
  cov_12ez6h4cyt().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_12ez6h4cyt().b[2][0]++, address.startsWith('tb1')) ||
  /* istanbul ignore next */
  (cov_12ez6h4cyt().b[2][1]++, address.startsWith('bcrt1'))) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[1][0]++;
    cov_12ez6h4cyt().s[13]++;
    return {
      valid: false,
      error: 'Testnet addresses not allowed'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[1][1]++;
  }
  // 2. Check for known burn addresses FIRST (before format validation)
  const burnAddresses =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[14]++, ['1111111111111111111114oLvT2', '1BitcoinEaterAddressDontSendf59kuE', 'bc1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq9424r']);
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[15]++;
  if (burnAddresses.includes(address)) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[3][0]++;
    cov_12ez6h4cyt().s[16]++;
    return {
      valid: false,
      error: 'Burn addresses not allowed'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[3][1]++;
  }
  // 3. Basic format validation with proper character sets
  let formatRegex;
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[17]++;
  if (address.startsWith('bc1')) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[4][0]++;
    cov_12ez6h4cyt().s[18]++;
    // Bech32 addresses: lowercase only, proper bech32 character set  
    // Valid bech32 chars: 0-9 and a-z except 1, b, i, o 
    formatRegex = BECH32_FORMAT_REGEX;
  } else {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[4][1]++;
    cov_12ez6h4cyt().s[19]++;
    if (
    /* istanbul ignore next */
    (cov_12ez6h4cyt().b[6][0]++, address.startsWith('1')) ||
    /* istanbul ignore next */
    (cov_12ez6h4cyt().b[6][1]++, address.startsWith('3'))) {
      /* istanbul ignore next */
      cov_12ez6h4cyt().b[5][0]++;
      cov_12ez6h4cyt().s[20]++;
      // Base58 addresses: exclude 0, O, I, l to prevent confusion
      formatRegex = BASE58_FORMAT_REGEX;
    } else {
      /* istanbul ignore next */
      cov_12ez6h4cyt().b[5][1]++;
      cov_12ez6h4cyt().s[21]++;
      return {
        valid: false,
        error: 'Invalid Bitcoin address format'
      };
    }
  }
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[22]++;
  if (!formatRegex.test(address)) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[7][0]++;
    cov_12ez6h4cyt().s[23]++;
    return {
      valid: false,
      error: 'Invalid Bitcoin address format'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[7][1]++;
  }
  // 3.5. Additional validation for specific invalid patterns
  cov_12ez6h4cyt().s[24]++;
  if (address.startsWith('bc1')) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[8][0]++;
    cov_12ez6h4cyt().s[25]++;
    // Reject addresses with invalid bech32 patterns
    // But allow Taproot addresses (bc1p) to have different rules
    if (
    /* istanbul ignore next */
    (cov_12ez6h4cyt().b[10][0]++, address.startsWith('bc1q')) &&
    /* istanbul ignore next */
    (cov_12ez6h4cyt().b[10][1]++, address.endsWith('0'))) {
      /* istanbul ignore next */
      cov_12ez6h4cyt().b[9][0]++;
      cov_12ez6h4cyt().s[26]++;
      return {
        valid: false,
        error: 'Invalid Bitcoin address format'
      };
    } else
    /* istanbul ignore next */
    {
      cov_12ez6h4cyt().b[9][1]++;
    }
    cov_12ez6h4cyt().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_12ez6h4cyt().b[12][0]++, address.includes('0I')) ||
    /* istanbul ignore next */
    (cov_12ez6h4cyt().b[12][1]++, address.includes('Ol'))) {
      /* istanbul ignore next */
      cov_12ez6h4cyt().b[11][0]++;
      cov_12ez6h4cyt().s[28]++;
      return {
        valid: false,
        error: 'Invalid Bitcoin address format'
      };
    } else
    /* istanbul ignore next */
    {
      cov_12ez6h4cyt().b[11][1]++;
    }
  } else {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[8][1]++;
    cov_12ez6h4cyt().s[29]++;
    // Reject Base58 addresses with confusing character combinations
    if (
    /* istanbul ignore next */
    (cov_12ez6h4cyt().b[14][0]++, address.includes('0O')) ||
    /* istanbul ignore next */
    (cov_12ez6h4cyt().b[14][1]++, address.includes('Il')) ||
    /* istanbul ignore next */
    (cov_12ez6h4cyt().b[14][2]++, address.includes('I0'))) {
      /* istanbul ignore next */
      cov_12ez6h4cyt().b[13][0]++;
      cov_12ez6h4cyt().s[30]++;
      return {
        valid: false,
        error: 'Invalid Bitcoin address format'
      };
    } else
    /* istanbul ignore next */
    {
      cov_12ez6h4cyt().b[13][1]++;
    }
  }
  // 4. Length validation by address type
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[31]++;
  if (address.startsWith('bc1')) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[15][0]++;
    cov_12ez6h4cyt().s[32]++;
    // Bech32 (SegWit) addresses - more strict validation
    // P2WPKH: exactly 42 chars, P2WSH: exactly 62 chars, Taproot: exactly 62 chars
    // Anything else in between is likely invalid
    if (
    /* istanbul ignore next */
    (cov_12ez6h4cyt().b[17][0]++, address.length < 42) ||
    /* istanbul ignore next */
    (cov_12ez6h4cyt().b[17][1]++, address.length > 62)) {
      /* istanbul ignore next */
      cov_12ez6h4cyt().b[16][0]++;
      cov_12ez6h4cyt().s[33]++;
      return {
        valid: false,
        error: 'Invalid bech32 address length'
      };
    } else
    /* istanbul ignore next */
    {
      cov_12ez6h4cyt().b[16][1]++;
    }
    // Additional check: reject addresses that are not standard lengths
    cov_12ez6h4cyt().s[34]++;
    if (
    /* istanbul ignore next */
    (cov_12ez6h4cyt().b[19][0]++, address.length !== 42) &&
    /* istanbul ignore next */
    (cov_12ez6h4cyt().b[19][1]++, address.length !== 62)) {
      /* istanbul ignore next */
      cov_12ez6h4cyt().b[18][0]++;
      cov_12ez6h4cyt().s[35]++;
      return {
        valid: false,
        error: 'Invalid bech32 address length'
      };
    } else
    /* istanbul ignore next */
    {
      cov_12ez6h4cyt().b[18][1]++;
    }
  } else {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[15][1]++;
    cov_12ez6h4cyt().s[36]++;
    if (address.startsWith('3')) {
      /* istanbul ignore next */
      cov_12ez6h4cyt().b[20][0]++;
      cov_12ez6h4cyt().s[37]++;
      // P2SH addresses (SegWit wrapped)
      if (address.length !== 34) {
        /* istanbul ignore next */
        cov_12ez6h4cyt().b[21][0]++;
        cov_12ez6h4cyt().s[38]++;
        return {
          valid: false,
          error: 'Invalid P2SH address length'
        };
      } else
      /* istanbul ignore next */
      {
        cov_12ez6h4cyt().b[21][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_12ez6h4cyt().b[20][1]++;
      cov_12ez6h4cyt().s[39]++;
      if (address.startsWith('1')) {
        /* istanbul ignore next */
        cov_12ez6h4cyt().b[22][0]++;
        cov_12ez6h4cyt().s[40]++;
        // Legacy P2PKH addresses
        if (address.length !== 34) {
          /* istanbul ignore next */
          cov_12ez6h4cyt().b[23][0]++;
          cov_12ez6h4cyt().s[41]++;
          return {
            valid: false,
            error: 'Invalid P2PKH address length'
          };
        } else
        /* istanbul ignore next */
        {
          cov_12ez6h4cyt().b[23][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_12ez6h4cyt().b[22][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[42]++;
  return {
    valid: true
  };
};
/* istanbul ignore next */
cov_12ez6h4cyt().s[43]++;
exports.isValidBitcoinAddress = isValidBitcoinAddress;
// Enhanced Lightning address validation with security checks
/* istanbul ignore next */
cov_12ez6h4cyt().s[44]++;
const isValidLightningAddress = address => {
  /* istanbul ignore next */
  cov_12ez6h4cyt().f[1]++;
  cov_12ez6h4cyt().s[45]++;
  if (!address) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[24][0]++;
    cov_12ez6h4cyt().s[46]++;
    return {
      valid: false,
      error: 'Lightning address required'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[24][1]++;
  }
  // 1. Prevent local/private addresses (check before format validation)
  const domain =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[47]++, address.split('@')[1]);
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[48]++;
  if (domain) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[25][0]++;
    const forbiddenDomains =
    /* istanbul ignore next */
    (cov_12ez6h4cyt().s[49]++, ['localhost', '127.0.0.1', '0.0.0.0', '10.', '192.168.', '172.']);
    /* istanbul ignore next */
    cov_12ez6h4cyt().s[50]++;
    if (forbiddenDomains.some(forbidden => {
      /* istanbul ignore next */
      cov_12ez6h4cyt().f[2]++;
      cov_12ez6h4cyt().s[51]++;
      return domain.includes(forbidden);
    })) {
      /* istanbul ignore next */
      cov_12ez6h4cyt().b[26][0]++;
      cov_12ez6h4cyt().s[52]++;
      return {
        valid: false,
        error: 'Local addresses not allowed'
      };
    } else
    /* istanbul ignore next */
    {
      cov_12ez6h4cyt().b[26][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[25][1]++;
  }
  // 2. Basic format validation
  cov_12ez6h4cyt().s[53]++;
  if (!LIGHTNING_FORMAT_REGEX.test(address)) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[27][0]++;
    cov_12ez6h4cyt().s[54]++;
    return {
      valid: false,
      error: 'Invalid Lightning address format'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[27][1]++;
  }
  // 3. Domain length validation
  cov_12ez6h4cyt().s[55]++;
  if (
  /* istanbul ignore next */
  (cov_12ez6h4cyt().b[29][0]++, domain) &&
  /* istanbul ignore next */
  (cov_12ez6h4cyt().b[29][1]++, domain.length > 253)) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[28][0]++;
    cov_12ez6h4cyt().s[56]++;
    return {
      valid: false,
      error: 'Domain name too long'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[28][1]++;
  }
  // 4. Prevent obviously suspicious domains
  const suspiciousDomains =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[57]++, ['tempmail', 'guerrillamail', '10minutemail', 'throwaway']);
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[58]++;
  if (
  /* istanbul ignore next */
  (cov_12ez6h4cyt().b[31][0]++, domain) &&
  /* istanbul ignore next */
  (cov_12ez6h4cyt().b[31][1]++, suspiciousDomains.some(suspicious => {
    /* istanbul ignore next */
    cov_12ez6h4cyt().f[3]++;
    cov_12ez6h4cyt().s[59]++;
    return domain.toLowerCase().includes(suspicious);
  }))) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[30][0]++;
    cov_12ez6h4cyt().s[60]++;
    return {
      valid: false,
      error: 'Temporary email domains not allowed'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[30][1]++;
  }
  cov_12ez6h4cyt().s[61]++;
  return {
    valid: true
  };
};
/* istanbul ignore next */
cov_12ez6h4cyt().s[62]++;
exports.isValidLightningAddress = isValidLightningAddress;
// Enhanced username validation with anti-impersonation protection
/* istanbul ignore next */
cov_12ez6h4cyt().s[63]++;
const isValidUsername = username => {
  /* istanbul ignore next */
  cov_12ez6h4cyt().f[4]++;
  cov_12ez6h4cyt().s[64]++;
  if (!username) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[32][0]++;
    cov_12ez6h4cyt().s[65]++;
    return {
      valid: false,
      error: 'Username required'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[32][1]++;
  }
  // 1. Length validation
  cov_12ez6h4cyt().s[66]++;
  if (username.length < 3) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[33][0]++;
    cov_12ez6h4cyt().s[67]++;
    return {
      valid: false,
      error: 'Username must be at least 3 characters long'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[33][1]++;
  }
  cov_12ez6h4cyt().s[68]++;
  if (username.length > 30) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[34][0]++;
    cov_12ez6h4cyt().s[69]++;
    return {
      valid: false,
      error: 'Username must be 30 characters or less'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[34][1]++;
  }
  // 2. Check for Unicode attacks and character substitutions FIRST
  // Check for non-ASCII characters that could be lookalikes
  cov_12ez6h4cyt().s[70]++;
  if (!/^[\x00-\x7F]*$/.test(username)) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[35][0]++;
    cov_12ez6h4cyt().s[71]++;
    return {
      valid: false,
      error: 'Cyrillic, Greek, and other non-ASCII characters not allowed'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[35][1]++;
  }
  // 3. Character validation (after Unicode check)
  const usernameRegex =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[72]++, /^[a-zA-Z0-9_-]+$/);
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[73]++;
  if (!usernameRegex.test(username)) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[36][0]++;
    cov_12ez6h4cyt().s[74]++;
    return {
      valid: false,
      error: 'Username can only contain letters, numbers, hyphens, and underscores'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[36][1]++;
  }
  // 4. Check for protected usernames using the verification system
  const protectionCheck =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[75]++, (0, verification_1.isProtectedUsername)(username));
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[76]++;
  if (protectionCheck.isProtected) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[37][0]++;
    cov_12ez6h4cyt().s[77]++;
    return {
      valid: false,
      error:
      /* istanbul ignore next */
      (cov_12ez6h4cyt().b[38][0]++, protectionCheck.reason) ||
      /* istanbul ignore next */
      (cov_12ez6h4cyt().b[38][1]++, 'Username is protected'),
      suggestedAlternatives: protectionCheck.suggestedAlternatives
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[37][1]++;
  }
  // 5. Reserved usernames (platform-specific)
  const reservedUsernames =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[78]++, ['admin', 'administrator', 'root', 'mod', 'moderator', 'support', 'help', 'api', 'www', 'mail', 'email', 'official', 'verified', 'staff', 'team', 'orangecat', 'orange-cat', 'orange_cat']);
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[79]++;
  if (reservedUsernames.includes(username.toLowerCase())) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[39][0]++;
    cov_12ez6h4cyt().s[80]++;
    return {
      valid: false,
      error: 'Username is reserved'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[39][1]++;
  }
  // 6. Check for character substitution patterns that might be celebrity impersonation
  // Common substitutions: 0->o, 3->e, 4->a, 1->i, 5->s, etc.
  const substitutionMap =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[81]++, {
    '0': 'o',
    '3': 'e',
    '4': 'a',
    '1': 'i',
    '5': 's',
    '6': 'g',
    '7': 't',
    '9': 'g'
  });
  // Create a version with substitutions reversed to check against protected names
  let substitutionReversed =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[82]++, username.toLowerCase());
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[83]++;
  for (const [num, letter] of Object.entries(substitutionMap)) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().s[84]++;
    substitutionReversed = substitutionReversed.replace(new RegExp(num, 'g'), letter);
  }
  // If the substitution-reversed version is protected, block it
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[85]++;
  if (substitutionReversed !== username.toLowerCase()) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[40][0]++;
    const celebrityCheck =
    /* istanbul ignore next */
    (cov_12ez6h4cyt().s[86]++, (0, verification_1.isProtectedUsername)(substitutionReversed));
    /* istanbul ignore next */
    cov_12ez6h4cyt().s[87]++;
    if (celebrityCheck.isProtected) {
      /* istanbul ignore next */
      cov_12ez6h4cyt().b[41][0]++;
      cov_12ez6h4cyt().s[88]++;
      return {
        valid: false,
        error: 'Username resembles protected celebrity name',
        suggestedAlternatives: celebrityCheck.suggestedAlternatives
      };
    } else
    /* istanbul ignore next */
    {
      cov_12ez6h4cyt().b[41][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[40][1]++;
  }
  cov_12ez6h4cyt().s[89]++;
  return {
    valid: true
  };
};
/* istanbul ignore next */
cov_12ez6h4cyt().s[90]++;
exports.isValidUsername = isValidUsername;
// Enhanced bio content validation and sanitization
/* istanbul ignore next */
cov_12ez6h4cyt().s[91]++;
const isValidBio = bio => {
  /* istanbul ignore next */
  cov_12ez6h4cyt().f[5]++;
  cov_12ez6h4cyt().s[92]++;
  if (!bio) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[42][0]++;
    cov_12ez6h4cyt().s[93]++;
    return {
      valid: true
    }; // Bio is optional
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[42][1]++;
  }
  // 1. Length limits
  cov_12ez6h4cyt().s[94]++;
  if (bio.length > 500) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[43][0]++;
    cov_12ez6h4cyt().s[95]++;
    return {
      valid: false,
      error: 'Bio must be under 500 characters'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[43][1]++;
  }
  // 2. HTML/Script injection prevention
  const dangerousPatterns =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[96]++, [/<script[^>]*>.*?<\/script>/gi, /javascript:/gi, /on\w+\s*=/gi,
  // onclick, onload, etc.
  /<iframe/gi, /<object/gi, /<embed/gi, /<link/gi, /<meta/gi]);
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[97]++;
  for (const pattern of dangerousPatterns) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().s[98]++;
    if (pattern.test(bio)) {
      /* istanbul ignore next */
      cov_12ez6h4cyt().b[44][0]++;
      cov_12ez6h4cyt().s[99]++;
      return {
        valid: false,
        error: 'Bio contains prohibited content'
      };
    } else
    /* istanbul ignore next */
    {
      cov_12ez6h4cyt().b[44][1]++;
    }
  }
  // 3. Prevent alternative Bitcoin address injection
  const btcAddressPattern =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[100]++, /\b(bc1|[13])[a-zA-HJ-NP-Z0-9]{25,62}\b/g);
  const foundAddresses =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[101]++, bio.match(btcAddressPattern));
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[102]++;
  if (
  /* istanbul ignore next */
  (cov_12ez6h4cyt().b[46][0]++, foundAddresses) &&
  /* istanbul ignore next */
  (cov_12ez6h4cyt().b[46][1]++, foundAddresses.length > 0)) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[45][0]++;
    cov_12ez6h4cyt().s[103]++;
    return {
      valid: false,
      error: 'Bitcoin addresses not allowed in bio'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[45][1]++;
  }
  // 4. Prevent verification badge spoofing (check before authority terms)
  const verificationSpoof =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[104]++, /(verified|official|certified|authentic).*[✓✔☑]|[✓✔☑].*(verified|official|certified|authentic)/gi);
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[105]++;
  if (verificationSpoof.test(bio)) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[47][0]++;
    cov_12ez6h4cyt().s[106]++;
    return {
      valid: false,
      error: 'Verification claims not allowed'
    };
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[47][1]++;
  }
  // 5. Prevent authority impersonation
  const authorityTerms =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[107]++, ['official bitcoin', 'bitcoin foundation', 'bitcoin core', 'satoshi nakamoto', 'bitcoin developer', 'core developer', 'lightning labs', 'blockstream', 'bitcoin.org']);
  const bioLower =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[108]++, bio.toLowerCase());
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[109]++;
  for (const term of authorityTerms) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().s[110]++;
    if (bioLower.includes(term)) {
      /* istanbul ignore next */
      cov_12ez6h4cyt().b[48][0]++;
      cov_12ez6h4cyt().s[111]++;
      return {
        valid: false,
        error: 'Authority claims not allowed in bio'
      };
    } else
    /* istanbul ignore next */
    {
      cov_12ez6h4cyt().b[48][1]++;
    }
  }
  // 6. Use verification system for additional impersonation checks
  const impersonationCheck =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[112]++, (0, verification_1.validateBioForImpersonation)(bio));
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[113]++;
  if (!impersonationCheck.valid) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[49][0]++;
    cov_12ez6h4cyt().s[114]++;
    return impersonationCheck;
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[49][1]++;
  }
  // 7. Additional celebrity impersonation detection
  const celebrityImpersonationPatterns =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[115]++, [/i am (elon|jack|satoshi|michael|andreas)/i, /this is (elon|jack|satoshi|michael|andreas)/i, /real (elon|jack|satoshi|michael|andreas)/i, /actual (elon|jack|satoshi|michael|andreas)/i, /genuine (elon|jack|satoshi|michael|andreas)/i, /not fake.*i am/i]);
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[116]++;
  for (const pattern of celebrityImpersonationPatterns) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().s[117]++;
    if (pattern.test(bio)) {
      /* istanbul ignore next */
      cov_12ez6h4cyt().b[50][0]++;
      cov_12ez6h4cyt().s[118]++;
      return {
        valid: false,
        error: 'Celebrity impersonation claims not allowed'
      };
    } else
    /* istanbul ignore next */
    {
      cov_12ez6h4cyt().b[50][1]++;
    }
  }
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[119]++;
  return {
    valid: true
  };
};
/* istanbul ignore next */
cov_12ez6h4cyt().s[120]++;
exports.isValidBio = isValidBio;
// Client-side sanitization for bio display (additional security layer)
/* istanbul ignore next */
cov_12ez6h4cyt().s[121]++;
const sanitizeBioForDisplay = bio => {
  /* istanbul ignore next */
  cov_12ez6h4cyt().f[6]++;
  cov_12ez6h4cyt().s[122]++;
  if (!bio) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[51][0]++;
    cov_12ez6h4cyt().s[123]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[51][1]++;
  }
  cov_12ez6h4cyt().s[124]++;
  return bio.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g, '&#x2F;');
};
/* istanbul ignore next */
cov_12ez6h4cyt().s[125]++;
exports.sanitizeBioForDisplay = sanitizeBioForDisplay;
// Legacy compatibility functions (maintain existing API)
/* istanbul ignore next */
cov_12ez6h4cyt().s[126]++;
const isValidBitcoinAddressLegacy = address => {
  /* istanbul ignore next */
  cov_12ez6h4cyt().f[7]++;
  const result =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[127]++, (0, exports.isValidBitcoinAddress)(address));
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[128]++;
  return result.valid;
};
/* istanbul ignore next */
cov_12ez6h4cyt().s[129]++;
exports.isValidBitcoinAddressLegacy = isValidBitcoinAddressLegacy;
/* istanbul ignore next */
cov_12ez6h4cyt().s[130]++;
const isValidLightningAddressLegacy = address => {
  /* istanbul ignore next */
  cov_12ez6h4cyt().f[8]++;
  const result =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[131]++, (0, exports.isValidLightningAddress)(address));
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[132]++;
  return result.valid;
};
/* istanbul ignore next */
cov_12ez6h4cyt().s[133]++;
exports.isValidLightningAddressLegacy = isValidLightningAddressLegacy;
// URL validation utilities for seamless user experience
function normalizeUrl(url) {
  /* istanbul ignore next */
  cov_12ez6h4cyt().f[9]++;
  cov_12ez6h4cyt().s[134]++;
  if (!url.trim()) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[52][0]++;
    cov_12ez6h4cyt().s[135]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[52][1]++;
  }
  let normalized =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[136]++, url.trim());
  // Remove any surrounding quotes or spaces
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[137]++;
  normalized = normalized.replace(/^["'\s]+|["'\s]+$/g, '');
  // If it doesn't start with a protocol, add https://
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[138]++;
  if (
  /* istanbul ignore next */
  (cov_12ez6h4cyt().b[54][0]++, normalized) &&
  /* istanbul ignore next */
  (cov_12ez6h4cyt().b[54][1]++, !normalized.match(/^https?:\/\//i))) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[53][0]++;
    cov_12ez6h4cyt().s[139]++;
    normalized = `https://${normalized}`;
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[53][1]++;
  }
  cov_12ez6h4cyt().s[140]++;
  return normalized;
}
function validateUrl(url) {
  /* istanbul ignore next */
  cov_12ez6h4cyt().f[10]++;
  cov_12ez6h4cyt().s[141]++;
  if (!url.trim()) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().b[55][0]++;
    cov_12ez6h4cyt().s[142]++;
    return {
      isValid: true,
      normalized: ''
    }; // Empty is valid (optional field)
  } else
  /* istanbul ignore next */
  {
    cov_12ez6h4cyt().b[55][1]++;
  }
  const normalized =
  /* istanbul ignore next */
  (cov_12ez6h4cyt().s[143]++, normalizeUrl(url));
  /* istanbul ignore next */
  cov_12ez6h4cyt().s[144]++;
  try {
    const urlObj =
    /* istanbul ignore next */
    (cov_12ez6h4cyt().s[145]++, new URL(normalized));
    // Check if it's a valid HTTP/HTTPS URL
    /* istanbul ignore next */
    cov_12ez6h4cyt().s[146]++;
    if (!['http:', 'https:'].includes(urlObj.protocol)) {
      /* istanbul ignore next */
      cov_12ez6h4cyt().b[56][0]++;
      cov_12ez6h4cyt().s[147]++;
      return {
        isValid: false,
        normalized,
        error: 'URL must use http:// or https://'
      };
    } else
    /* istanbul ignore next */
    {
      cov_12ez6h4cyt().b[56][1]++;
    }
    // Check if hostname exists
    cov_12ez6h4cyt().s[148]++;
    if (
    /* istanbul ignore next */
    (cov_12ez6h4cyt().b[58][0]++, !urlObj.hostname) ||
    /* istanbul ignore next */
    (cov_12ez6h4cyt().b[58][1]++, urlObj.hostname.length < 3)) {
      /* istanbul ignore next */
      cov_12ez6h4cyt().b[57][0]++;
      cov_12ez6h4cyt().s[149]++;
      return {
        isValid: false,
        normalized,
        error: 'Please enter a valid domain name'
      };
    } else
    /* istanbul ignore next */
    {
      cov_12ez6h4cyt().b[57][1]++;
    }
    cov_12ez6h4cyt().s[150]++;
    return {
      isValid: true,
      normalized
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_12ez6h4cyt().s[151]++;
    return {
      isValid: false,
      normalized,
      error: 'Please enter a valid URL'
    };
  }
}
function isValidUrl(url) {
  /* istanbul ignore next */
  cov_12ez6h4cyt().f[11]++;
  cov_12ez6h4cyt().s[152]++;
  return validateUrl(url).isValid;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,