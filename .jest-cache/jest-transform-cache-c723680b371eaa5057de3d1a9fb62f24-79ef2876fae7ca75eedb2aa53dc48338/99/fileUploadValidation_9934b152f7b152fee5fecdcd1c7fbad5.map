{"version":3,"names":["cov_2ebajqwuk9","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","path_1","__importDefault","require","sharp_1","MAGIC_BYTES","SUSPICIOUS_PATTERNS","exports","UPLOAD_CONFIGS","avatar","maxSize","allowedExtensions","allowedMimeTypes","dimensions","width","height","banner","campaign","FileUploadValidator","validateFile","buffer","config","fileExtension","default","extname","toLowerCase","includes","valid","error","signature","fileHeader","Array","from","slice","length","signatureMatch","every","byte","index","fileContent","toString","Math","min","pattern","test","size","sanitizedName","replace","substring","detectedType","processImage","format","processed","resize","fit","position","toFormat","quality","toBuffer","resolveWithObject","data","metadata","info","Error","message","getConfig"],"sources":["/home/g/dev/orangecat/src/utils/fileUploadValidation.ts"],"sourcesContent":["/**\n * CENTRALIZED FILE UPLOAD VALIDATION\n * \n * Created: 2025-01-09\n * Purpose: Eliminate 600+ lines of duplicate validation code across avatar/banner routes\n * \n * Consolidates:\n * - src/app/api/avatar/route.ts (duplicate validation)\n * - src/app/api/banner/route.ts (duplicate validation)\n * - Campaign storage validation\n * - Profile storage validation\n */\n\nimport path from 'path'\nimport sharp from 'sharp'\n\n// File type validation with magic bytes\nconst MAGIC_BYTES = {\n  'image/jpeg': [0xFF, 0xD8, 0xFF],\n  'image/png': [0x89, 0x50, 0x4E, 0x47],\n  'image/gif': [0x47, 0x49, 0x46],\n  'image/webp': [0x52, 0x49, 0x46, 0x46]\n}\n\n// Suspicious content patterns to scan for\nconst SUSPICIOUS_PATTERNS = [\n  /<\\?php/gi,           // PHP code\n  /<script/gi,          // JavaScript\n  /<%/gi,               // JSP/ASP code\n  /\\.exe\\b/gi,          // Executable references\n  /\\.dll\\b/gi,          // DLL references\n  /javascript:/gi,      // JavaScript protocol\n  /vbscript:/gi         // VBScript protocol\n]\n\nexport interface FileValidationResult {\n  valid: boolean\n  error?: string\n  sanitizedName?: string\n  detectedType?: string\n}\n\nexport interface FileUploadConfig {\n  maxSize: number\n  allowedExtensions: readonly string[]\n  allowedMimeTypes: readonly string[]\n  dimensions: {\n    width: number\n    height: number\n  }\n}\n\nexport const UPLOAD_CONFIGS = {\n  avatar: {\n    maxSize: 2 * 1024 * 1024, // 2MB\n    allowedExtensions: ['.jpg', '.jpeg', '.png', '.webp'],\n    allowedMimeTypes: ['image/jpeg', 'image/png', 'image/webp'],\n    dimensions: { width: 400, height: 400 }\n  },\n  banner: {\n    maxSize: 5 * 1024 * 1024, // 5MB\n    allowedExtensions: ['.jpg', '.jpeg', '.png', '.webp', '.gif'],\n    allowedMimeTypes: ['image/jpeg', 'image/png', 'image/webp', 'image/gif'],\n    dimensions: { width: 1200, height: 400 }\n  },\n  campaign: {\n    maxSize: 10 * 1024 * 1024, // 10MB\n    allowedExtensions: ['.jpg', '.jpeg', '.png', '.webp', '.gif'],\n    allowedMimeTypes: ['image/jpeg', 'image/png', 'image/webp', 'image/gif'],\n    dimensions: { width: 1200, height: 600 }\n  }\n} as const\n\nexport class FileUploadValidator {\n  /**\n   * Comprehensive file validation with security layers\n   */\n  static async validateFile(\n    file: File, \n    buffer: Buffer, \n    config: FileUploadConfig\n  ): Promise<FileValidationResult> {\n    // 1. File extension validation\n    const fileExtension = path.extname(file.name).toLowerCase()\n    \n    if (!(config.allowedExtensions as string[]).includes(fileExtension)) {\n      return { valid: false, error: 'Invalid file extension' }\n    }\n    \n    // 2. MIME type validation with strict checking\n    if (!(config.allowedMimeTypes as string[]).includes(file.type)) {\n      return { valid: false, error: 'MIME type does not match allowed types' }\n    }\n    \n    // 3. Magic byte validation (file signature)\n    const signature = MAGIC_BYTES[file.type as keyof typeof MAGIC_BYTES]\n    if (signature) {\n      const fileHeader = Array.from(buffer.slice(0, signature.length))\n      const signatureMatch = signature.every((byte, index) => fileHeader[index] === byte)\n      if (!signatureMatch) {\n        return { valid: false, error: 'File signature does not match declared type' }\n      }\n    }\n    \n    // 4. Content scanning for embedded threats\n    const fileContent = buffer.toString('utf8', 0, Math.min(buffer.length, 10000)) // Scan first 10KB\n    for (const pattern of SUSPICIOUS_PATTERNS) {\n      if (pattern.test(fileContent)) {\n        return { valid: false, error: 'Suspicious content detected in file' }\n      }\n    }\n    \n    // 5. File size validation\n    if (file.size > config.maxSize) {\n      return { valid: false, error: `File too large. Maximum size: ${config.maxSize / 1024 / 1024}MB` }\n    }\n    \n    // 6. Filename sanitization\n    const sanitizedName = file.name\n      .replace(/[^a-zA-Z0-9.-]/g, '_')  // Replace special chars\n      .replace(/\\.{2,}/g, '.')         // Prevent path traversal\n      .substring(0, 100)               // Limit length\n    \n    return { \n      valid: true, \n      sanitizedName,\n      detectedType: file.type \n    }\n  }\n\n  /**\n   * Secure image processing with Sharp\n   */\n  static async processImage(\n    buffer: Buffer, \n    config: FileUploadConfig,\n    format: 'webp' | 'jpeg' = 'webp'\n  ): Promise<{ buffer: Buffer; metadata: any }> {\n    try {\n      const processed = await sharp(buffer)\n        .resize(config.dimensions.width, config.dimensions.height, {\n          fit: 'cover',\n          position: 'center'\n        })\n        .toFormat(format, { quality: 85 })\n        .toBuffer({ resolveWithObject: true })\n\n      return {\n        buffer: processed.data,\n        metadata: processed.info\n      }\n    } catch (error) {\n      throw new Error(`Image processing failed: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    }\n  }\n\n  /**\n   * Get upload configuration by type\n   */\n  static getConfig(type: keyof typeof UPLOAD_CONFIGS): FileUploadConfig {\n    return UPLOAD_CONFIGS[type]\n  }\n} "],"mappings":";;AAAA;;;;;;;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,K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","ignoreList":[]}