0f10aef9407f2d9fbd48340ff379b627
"use strict";

/* istanbul ignore next */
function cov_66klm9org() {
  var path = "/home/g/dev/orangecat/src/hooks/useSearch.ts";
  var hash = "6d23f506e2c561278a3d050b34695c78ee981120";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/hooks/useSearch.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 34
        }
      },
      "4": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 44
        }
      },
      "6": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 32
        }
      },
      "7": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 45
        }
      },
      "8": {
        start: {
          line: 13,
          column: 26
        },
        end: {
          line: 16,
          column: 5
        }
      },
      "9": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 32
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 59
        }
      },
      "11": {
        start: {
          line: 15,
          column: 37
        },
        end: {
          line: 15,
          column: 50
        }
      },
      "12": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "13": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 32
        }
      },
      "14": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 25
        }
      },
      "15": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 34,
          column: 1
        }
      },
      "16": {
        start: {
          line: 36,
          column: 140
        },
        end: {
          line: 36,
          column: 147
        }
      },
      "17": {
        start: {
          line: 38,
          column: 30
        },
        end: {
          line: 38,
          column: 65
        }
      },
      "18": {
        start: {
          line: 39,
          column: 40
        },
        end: {
          line: 39,
          column: 74
        }
      },
      "19": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 66
        }
      },
      "20": {
        start: {
          line: 41,
          column: 34
        },
        end: {
          line: 41,
          column: 71
        }
      },
      "21": {
        start: {
          line: 43,
          column: 34
        },
        end: {
          line: 43,
          column: 59
        }
      },
      "22": {
        start: {
          line: 44,
          column: 34
        },
        end: {
          line: 44,
          column: 62
        }
      },
      "23": {
        start: {
          line: 45,
          column: 30
        },
        end: {
          line: 45,
          column: 57
        }
      },
      "24": {
        start: {
          line: 46,
          column: 44
        },
        end: {
          line: 46,
          column: 68
        }
      },
      "25": {
        start: {
          line: 47,
          column: 34
        },
        end: {
          line: 47,
          column: 62
        }
      },
      "26": {
        start: {
          line: 48,
          column: 46
        },
        end: {
          line: 48,
          column: 70
        }
      },
      "27": {
        start: {
          line: 50,
          column: 42
        },
        end: {
          line: 50,
          column: 67
        }
      },
      "28": {
        start: {
          line: 52,
          column: 48
        },
        end: {
          line: 52,
          column: 76
        }
      },
      "29": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 58,
          column: 28
        }
      },
      "30": {
        start: {
          line: 54,
          column: 22
        },
        end: {
          line: 56,
          column: 22
        }
      },
      "31": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 37
        }
      },
      "32": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 41
        }
      },
      "33": {
        start: {
          line: 57,
          column: 21
        },
        end: {
          line: 57,
          column: 40
        }
      },
      "34": {
        start: {
          line: 60,
          column: 26
        },
        end: {
          line: 97,
          column: 53
        }
      },
      "35": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "36": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 29
        }
      },
      "37": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 27
        }
      },
      "38": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "39": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 61
        }
      },
      "40": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "41": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 86,
          column: 13
        }
      },
      "42": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 67
        }
      },
      "43": {
        start: {
          line: 81,
          column: 35
        },
        end: {
          line: 81,
          column: 65
        }
      },
      "44": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 45
        }
      },
      "45": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 36
        }
      },
      "46": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 49
        }
      },
      "47": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 41
        }
      },
      "48": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 63
        }
      },
      "49": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 64
        }
      },
      "50": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 30
        }
      },
      "51": {
        start: {
          line: 99,
          column: 21
        },
        end: {
          line: 103,
          column: 56
        }
      },
      "52": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 101,
          column: 19
        }
      },
      "53": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 19
        }
      },
      "54": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 49
        }
      },
      "55": {
        start: {
          line: 105,
          column: 28
        },
        end: {
          line: 117,
          column: 10
        }
      },
      "56": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "57": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 31
        }
      },
      "58": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 19
        }
      },
      "59": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "60": {
        start: {
          line: 111,
          column: 35
        },
        end: {
          line: 111,
          column: 91
        }
      },
      "61": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 43
        }
      },
      "62": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 31
        }
      },
      "63": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 123,
          column: 36
        }
      },
      "64": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "65": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 28
        }
      },
      "66": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 127,
          column: 42
        }
      },
      "67": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 40
        }
      },
      "68": {
        start: {
          line: 129,
          column: 24
        },
        end: {
          line: 140,
          column: 10
        }
      },
      "69": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 21
        }
      },
      "70": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 29
        }
      },
      "71": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 31
        }
      },
      "72": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 23
        }
      },
      "73": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 23
        }
      },
      "74": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 23
        }
      },
      "75": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 27
        }
      },
      "76": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 26
        }
      },
      "77": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 28
        }
      },
      "78": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 27
        }
      },
      "79": {
        start: {
          line: 142,
          column: 23
        },
        end: {
          line: 144,
          column: 10
        }
      },
      "80": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 23
        }
      },
      "81": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 146,
          column: 79
        }
      },
      "82": {
        start: {
          line: 146,
          column: 47
        },
        end: {
          line: 146,
          column: 67
        }
      },
      "83": {
        start: {
          line: 147,
          column: 24
        },
        end: {
          line: 147,
          column: 70
        }
      },
      "84": {
        start: {
          line: 147,
          column: 51
        },
        end: {
          line: 147,
          column: 58
        }
      },
      "85": {
        start: {
          line: 148,
          column: 23
        },
        end: {
          line: 148,
          column: 80
        }
      },
      "86": {
        start: {
          line: 148,
          column: 50
        },
        end: {
          line: 148,
          column: 68
        }
      },
      "87": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 174,
          column: 6
        }
      },
      "88": {
        start: {
          line: 166,
          column: 29
        },
        end: {
          line: 166,
          column: 44
        }
      },
      "89": {
        start: {
          line: 178,
          column: 42
        },
        end: {
          line: 178,
          column: 67
        }
      },
      "90": {
        start: {
          line: 179,
          column: 34
        },
        end: {
          line: 179,
          column: 62
        }
      },
      "91": {
        start: {
          line: 180,
          column: 30
        },
        end: {
          line: 180,
          column: 57
        }
      },
      "92": {
        start: {
          line: 182,
          column: 28
        },
        end: {
          line: 222,
          column: 11
        }
      },
      "93": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "94": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 31
        }
      },
      "95": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 30
        }
      },
      "96": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 19
        }
      },
      "97": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 25
        }
      },
      "98": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 23
        }
      },
      "99": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "100": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 67
        }
      },
      "101": {
        start: {
          line: 192,
          column: 41
        },
        end: {
          line: 192,
          column: 65
        }
      },
      "102": {
        start: {
          line: 194,
          column: 31
        },
        end: {
          line: 194,
          column: 56
        }
      },
      "103": {
        start: {
          line: 195,
          column: 40
        },
        end: {
          line: 195,
          column: 42
        }
      },
      "104": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 201,
          column: 15
        }
      },
      "105": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 200,
          column: 17
        }
      },
      "106": {
        start: {
          line: 199,
          column: 20
        },
        end: {
          line: 199,
          column: 56
        }
      },
      "107": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 210,
          column: 13
        }
      },
      "108": {
        start: {
          line: 204,
          column: 37
        },
        end: {
          line: 208,
          column: 17
        }
      },
      "109": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 58
        }
      },
      "110": {
        start: {
          line: 212,
          column: 38
        },
        end: {
          line: 212,
          column: 83
        }
      },
      "111": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 46
        }
      },
      "112": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 52
        }
      },
      "113": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 31
        }
      },
      "114": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 30
        }
      },
      "115": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 234,
          column: 25
        }
      },
      "116": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "117": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 35
        }
      },
      "118": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 31
        }
      },
      "119": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 30
        }
      },
      "120": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 233,
          column: 10
        }
      },
      "121": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 37
        }
      },
      "122": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 235,
          column: 43
        }
      },
      "123": {
        start: {
          line: 239,
          column: 36
        },
        end: {
          line: 239,
          column: 61
        }
      },
      "124": {
        start: {
          line: 240,
          column: 34
        },
        end: {
          line: 240,
          column: 62
        }
      },
      "125": {
        start: {
          line: 241,
          column: 30
        },
        end: {
          line: 241,
          column: 57
        }
      },
      "126": {
        start: {
          line: 242,
          column: 25
        },
        end: {
          line: 255,
          column: 10
        }
      },
      "127": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 25
        }
      },
      "128": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 23
        }
      },
      "129": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "130": {
        start: {
          line: 246,
          column: 29
        },
        end: {
          line: 246,
          column: 62
        }
      },
      "131": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 42
        }
      },
      "132": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 71
        }
      },
      "133": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 30
        }
      },
      "134": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 258,
          column: 23
        }
      },
      "135": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 23
        }
      },
      "136": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 264,
          column: 6
        }
      },
      "137": {
        start: {
          line: 268,
          column: 48
        },
        end: {
          line: 268,
          column: 73
        }
      },
      "138": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 276,
          column: 17
        }
      },
      "139": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "140": {
        start: {
          line: 271,
          column: 27
        },
        end: {
          line: 271,
          column: 75
        }
      },
      "141": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 274,
          column: 13
        }
      },
      "142": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 273,
          column: 54
        }
      },
      "143": {
        start: {
          line: 277,
          column: 25
        },
        end: {
          line: 283,
          column: 5
        }
      },
      "144": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 279,
          column: 19
        }
      },
      "145": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 19
        }
      },
      "146": {
        start: {
          line: 280,
          column: 27
        },
        end: {
          line: 280,
          column: 91
        }
      },
      "147": {
        start: {
          line: 280,
          column: 65
        },
        end: {
          line: 280,
          column: 76
        }
      },
      "148": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 38
        }
      },
      "149": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 85
        }
      },
      "150": {
        start: {
          line: 284,
          column: 25
        },
        end: {
          line: 289,
          column: 5
        }
      },
      "151": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 286,
          column: 19
        }
      },
      "152": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 19
        }
      },
      "153": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 287,
          column: 30
        }
      },
      "154": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 60
        }
      },
      "155": {
        start: {
          line: 290,
          column: 4
        },
        end: {
          line: 290,
          column: 58
        }
      },
      "156": {
        start: {
          line: 293,
          column: 34
        },
        end: {
          line: 299,
          column: 6
        }
      },
      "157": {
        start: {
          line: 300,
          column: 25
        },
        end: {
          line: 302,
          column: 5
        }
      },
      "158": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 87
        }
      },
      "159": {
        start: {
          line: 301,
          column: 28
        },
        end: {
          line: 301,
          column: 84
        }
      },
      "160": {
        start: {
          line: 303,
          column: 25
        },
        end: {
          line: 311,
          column: 5
        }
      },
      "161": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 310,
          column: 11
        }
      },
      "162": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 312,
          column: 51
        }
      }
    },
    fnMap: {
      "0": {
        name: "debounce",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 17
          }
        },
        loc: {
          start: {
            line: 11,
            column: 31
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 27
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 15,
            column: 32
          }
        },
        loc: {
          start: {
            line: 15,
            column: 37
          },
          end: {
            line: 15,
            column: 50
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 17,
            column: 27
          },
          end: {
            line: 17,
            column: 28
          }
        },
        loc: {
          start: {
            line: 17,
            column: 33
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "4": {
        name: "useSearch",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 18
          }
        },
        loc: {
          start: {
            line: 35,
            column: 33
          },
          end: {
            line: 175,
            column: 1
          }
        },
        line: 35
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 53,
            column: 27
          },
          end: {
            line: 53,
            column: 28
          }
        },
        loc: {
          start: {
            line: 53,
            column: 33
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 53
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 54,
            column: 33
          },
          end: {
            line: 54,
            column: 34
          }
        },
        loc: {
          start: {
            line: 54,
            column: 39
          },
          end: {
            line: 56,
            column: 9
          }
        },
        line: 54
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 57,
            column: 15
          },
          end: {
            line: 57,
            column: 16
          }
        },
        loc: {
          start: {
            line: 57,
            column: 21
          },
          end: {
            line: 57,
            column: 40
          }
        },
        line: 57
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 60,
            column: 51
          },
          end: {
            line: 60,
            column: 52
          }
        },
        loc: {
          start: {
            line: 60,
            column: 89
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 60
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 81,
            column: 27
          },
          end: {
            line: 81,
            column: 28
          }
        },
        loc: {
          start: {
            line: 81,
            column: 35
          },
          end: {
            line: 81,
            column: 65
          }
        },
        line: 81
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 99,
            column: 46
          },
          end: {
            line: 99,
            column: 47
          }
        },
        loc: {
          start: {
            line: 99,
            column: 58
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 99
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 105,
            column: 53
          },
          end: {
            line: 105,
            column: 54
          }
        },
        loc: {
          start: {
            line: 105,
            column: 76
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 105
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 119,
            column: 27
          },
          end: {
            line: 119,
            column: 28
          }
        },
        loc: {
          start: {
            line: 119,
            column: 33
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 119
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 125,
            column: 27
          },
          end: {
            line: 125,
            column: 28
          }
        },
        loc: {
          start: {
            line: 125,
            column: 33
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 125
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 129,
            column: 49
          },
          end: {
            line: 129,
            column: 50
          }
        },
        loc: {
          start: {
            line: 129,
            column: 55
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 129
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 142,
            column: 48
          },
          end: {
            line: 142,
            column: 49
          }
        },
        loc: {
          start: {
            line: 142,
            column: 54
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 142
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 146,
            column: 41
          },
          end: {
            line: 146,
            column: 42
          }
        },
        loc: {
          start: {
            line: 146,
            column: 47
          },
          end: {
            line: 146,
            column: 67
          }
        },
        line: 146
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 147,
            column: 45
          },
          end: {
            line: 147,
            column: 46
          }
        },
        loc: {
          start: {
            line: 147,
            column: 51
          },
          end: {
            line: 147,
            column: 58
          }
        },
        line: 147
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 148,
            column: 44
          },
          end: {
            line: 148,
            column: 45
          }
        },
        loc: {
          start: {
            line: 148,
            column: 50
          },
          end: {
            line: 148,
            column: 68
          }
        },
        line: 148
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 166,
            column: 23
          },
          end: {
            line: 166,
            column: 24
          }
        },
        loc: {
          start: {
            line: 166,
            column: 29
          },
          end: {
            line: 166,
            column: 44
          }
        },
        line: 166
      },
      "20": {
        name: "useSearchSuggestions",
        decl: {
          start: {
            line: 177,
            column: 9
          },
          end: {
            line: 177,
            column: 29
          }
        },
        loc: {
          start: {
            line: 177,
            column: 53
          },
          end: {
            line: 236,
            column: 1
          }
        },
        line: 177
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 182,
            column: 37
          },
          end: {
            line: 182,
            column: 38
          }
        },
        loc: {
          start: {
            line: 182,
            column: 60
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 182
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 192,
            column: 30
          },
          end: {
            line: 192,
            column: 31
          }
        },
        loc: {
          start: {
            line: 192,
            column: 41
          },
          end: {
            line: 192,
            column: 65
          }
        },
        line: 192
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 197,
            column: 52
          },
          end: {
            line: 197,
            column: 53
          }
        },
        loc: {
          start: {
            line: 197,
            column: 71
          },
          end: {
            line: 201,
            column: 13
          }
        },
        line: 197
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 223,
            column: 27
          },
          end: {
            line: 223,
            column: 28
          }
        },
        loc: {
          start: {
            line: 223,
            column: 33
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 223
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 231,
            column: 15
          },
          end: {
            line: 231,
            column: 16
          }
        },
        loc: {
          start: {
            line: 231,
            column: 21
          },
          end: {
            line: 233,
            column: 9
          }
        },
        line: 231
      },
      "26": {
        name: "useTrending",
        decl: {
          start: {
            line: 238,
            column: 9
          },
          end: {
            line: 238,
            column: 20
          }
        },
        loc: {
          start: {
            line: 238,
            column: 23
          },
          end: {
            line: 265,
            column: 1
          }
        },
        line: 238
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 242,
            column: 50
          },
          end: {
            line: 242,
            column: 51
          }
        },
        loc: {
          start: {
            line: 242,
            column: 62
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 242
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 256,
            column: 27
          },
          end: {
            line: 256,
            column: 28
          }
        },
        loc: {
          start: {
            line: 256,
            column: 33
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 256
      },
      "29": {
        name: "useRecentSearches",
        decl: {
          start: {
            line: 267,
            column: 9
          },
          end: {
            line: 267,
            column: 26
          }
        },
        loc: {
          start: {
            line: 267,
            column: 35
          },
          end: {
            line: 291,
            column: 1
          }
        },
        line: 267
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 269,
            column: 27
          },
          end: {
            line: 269,
            column: 28
          }
        },
        loc: {
          start: {
            line: 269,
            column: 33
          },
          end: {
            line: 276,
            column: 5
          }
        },
        line: 269
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 277,
            column: 25
          },
          end: {
            line: 277,
            column: 26
          }
        },
        loc: {
          start: {
            line: 277,
            column: 36
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 277
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 280,
            column: 60
          },
          end: {
            line: 280,
            column: 61
          }
        },
        loc: {
          start: {
            line: 280,
            column: 65
          },
          end: {
            line: 280,
            column: 76
          }
        },
        line: 280
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 284,
            column: 25
          },
          end: {
            line: 284,
            column: 26
          }
        },
        loc: {
          start: {
            line: 284,
            column: 31
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 284
      },
      "34": {
        name: "useSearchFilters",
        decl: {
          start: {
            line: 292,
            column: 9
          },
          end: {
            line: 292,
            column: 25
          }
        },
        loc: {
          start: {
            line: 292,
            column: 28
          },
          end: {
            line: 313,
            column: 1
          }
        },
        line: 292
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 300,
            column: 25
          },
          end: {
            line: 300,
            column: 26
          }
        },
        loc: {
          start: {
            line: 300,
            column: 41
          },
          end: {
            line: 302,
            column: 5
          }
        },
        line: 300
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 301,
            column: 19
          },
          end: {
            line: 301,
            column: 20
          }
        },
        loc: {
          start: {
            line: 301,
            column: 28
          },
          end: {
            line: 301,
            column: 84
          }
        },
        line: 301
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 303,
            column: 25
          },
          end: {
            line: 303,
            column: 26
          }
        },
        loc: {
          start: {
            line: 303,
            column: 31
          },
          end: {
            line: 311,
            column: 5
          }
        },
        line: 303
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 19
          },
          end: {
            line: 35,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 35,
            column: 31
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 27
          },
          end: {
            line: 36,
            column: 29
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 36,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 45
          },
          end: {
            line: 36,
            column: 50
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 52
          },
          end: {
            line: 36,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 66
          },
          end: {
            line: 36,
            column: 77
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 79
          },
          end: {
            line: 36,
            column: 98
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 96
          },
          end: {
            line: 36,
            column: 98
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 100
          },
          end: {
            line: 36,
            column: 117
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 113
          },
          end: {
            line: 36,
            column: 117
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 119
          },
          end: {
            line: 36,
            column: 135
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 132
          },
          end: {
            line: 36,
            column: 135
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 60,
            column: 58
          },
          end: {
            line: 60,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 60,
            column: 67
          },
          end: {
            line: 60,
            column: 68
          }
        }],
        line: 60
      },
      "8": {
        loc: {
          start: {
            line: 60,
            column: 70
          },
          end: {
            line: 60,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 60,
            column: 79
          },
          end: {
            line: 60,
            column: 84
          }
        }],
        line: 60
      },
      "9": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        }, {
          start: {
            line: 69,
            column: 17
          },
          end: {
            line: 79,
            column: 13
          }
        }],
        line: 66
      },
      "10": {
        loc: {
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 66,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 66,
            column: 31
          }
        }, {
          start: {
            line: 66,
            column: 35
          },
          end: {
            line: 66,
            column: 55
          }
        }, {
          start: {
            line: 66,
            column: 59
          },
          end: {
            line: 66,
            column: 92
          }
        }],
        line: 66
      },
      "11": {
        loc: {
          start: {
            line: 72,
            column: 27
          },
          end: {
            line: 72,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 27
          },
          end: {
            line: 72,
            column: 41
          }
        }, {
          start: {
            line: 72,
            column: 45
          },
          end: {
            line: 72,
            column: 54
          }
        }],
        line: 72
      },
      "12": {
        loc: {
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 86,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 86,
            column: 13
          }
        }, {
          start: {
            line: 83,
            column: 17
          },
          end: {
            line: 86,
            column: 13
          }
        }],
        line: 80
      },
      "13": {
        loc: {
          start: {
            line: 92,
            column: 21
          },
          end: {
            line: 92,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 21
          },
          end: {
            line: 92,
            column: 32
          }
        }, {
          start: {
            line: 92,
            column: 36
          },
          end: {
            line: 92,
            column: 62
          }
        }],
        line: 92
      },
      "14": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 101,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 101,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "15": {
        loc: {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 100,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 100,
            column: 20
          }
        }, {
          start: {
            line: 100,
            column: 24
          },
          end: {
            line: 100,
            column: 31
          }
        }],
        line: 100
      },
      "16": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "17": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 106,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 106,
            column: 24
          }
        }, {
          start: {
            line: 106,
            column: 28
          },
          end: {
            line: 106,
            column: 50
          }
        }],
        line: 106
      },
      "18": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "19": {
        loc: {
          start: {
            line: 177,
            column: 37
          },
          end: {
            line: 177,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 177,
            column: 47
          },
          end: {
            line: 177,
            column: 51
          }
        }],
        line: 177
      },
      "20": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "21": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 183,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 183,
            column: 31
          }
        }, {
          start: {
            line: 183,
            column: 35
          },
          end: {
            line: 183,
            column: 43
          }
        }],
        line: 183
      },
      "22": {
        loc: {
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 200,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 200,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "23": {
        loc: {
          start: {
            line: 198,
            column: 20
          },
          end: {
            line: 198,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 20
          },
          end: {
            line: 198,
            column: 44
          }
        }, {
          start: {
            line: 198,
            column: 48
          },
          end: {
            line: 198,
            column: 72
          }
        }],
        line: 198
      },
      "24": {
        loc: {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "25": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        }, {
          start: {
            line: 227,
            column: 13
          },
          end: {
            line: 230,
            column: 9
          }
        }],
        line: 224
      },
      "26": {
        loc: {
          start: {
            line: 250,
            column: 21
          },
          end: {
            line: 250,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 21
          },
          end: {
            line: 250,
            column: 32
          }
        }, {
          start: {
            line: 250,
            column: 36
          },
          end: {
            line: 250,
            column: 69
          }
        }],
        line: 250
      },
      "27": {
        loc: {
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "28": {
        loc: {
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 274,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 274,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "29": {
        loc: {
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 279,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 279,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "30": {
        loc: {
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 278,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 278,
            column: 19
          }
        }, {
          start: {
            line: 278,
            column: 23
          },
          end: {
            line: 278,
            column: 36
          }
        }],
        line: 278
      },
      "31": {
        loc: {
          start: {
            line: 285,
            column: 8
          },
          end: {
            line: 286,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 8
          },
          end: {
            line: 286,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/hooks/useSearch.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/hooks/useSearch.ts"],
      sourcesContent: ["import { useState, useEffect, useCallback, useMemo } from 'react'\nimport { \n  search, \n  getTrending, \n  getSearchSuggestions,\n  SearchResult, \n  SearchType, \n  SortOption, \n  SearchFilters,\n  SearchResponse \n} from '@/services/search'\n\n// Custom debounce function to avoid lodash dependency\nfunction debounce<T extends (...args: any[]) => any>(\n  func: T,\n  delay: number\n): ((...args: Parameters<T>) => void) & { cancel: () => void } {\n  let timeoutId: NodeJS.Timeout\n  \n  const debouncedFunc = (...args: Parameters<T>) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => func(...args), delay)\n  }\n  \n  debouncedFunc.cancel = () => {\n    clearTimeout(timeoutId)\n  }\n  \n  return debouncedFunc\n}\n\ninterface UseSearchSuggestionsResult {\n  suggestions: string[]\n  loading: boolean\n  error: string | null\n}\n\n// Mock suggestions based on common search terms\nconst mockSuggestions = {\n  'bitcoin': ['Bitcoin Lightning Network', 'Bitcoin Education', 'Bitcoin Mining Projects'],\n  'open': ['Open Source Projects', 'Open Education Initiative', 'Open Data Campaign'],\n  'education': ['Education Initiatives', 'Educational Technology', 'Education for All'],\n  'environment': ['Environmental Campaigns', 'Environmental Protection', 'Environmental Research'],\n  'health': ['Healthcare Projects', 'Mental Health Awareness', 'Public Health Initiative'],\n  'art': ['Art Projects', 'Digital Art', 'Community Art'],\n  'tech': ['Technology Projects', 'Tech Education', 'Tech for Good'],\n  'community': ['Community Building', 'Community Gardens', 'Community Centers'],\n  'research': ['Research Projects', 'Scientific Research', 'Academic Research'],\n  'music': ['Music Projects', 'Music Education', 'Community Music']\n}\n\nexport interface UseSearchOptions {\n  initialQuery?: string\n  initialType?: SearchType\n  initialSort?: SortOption\n  initialFilters?: SearchFilters\n  autoSearch?: boolean\n  debounceMs?: number\n}\n\nexport interface UseSearchReturn {\n  // State\n  query: string\n  searchType: SearchType\n  sortBy: SortOption\n  filters: SearchFilters\n  results: SearchResult[]\n  loading: boolean\n  error: string | null\n  totalResults: number\n  hasMore: boolean\n  suggestions: string[]\n  \n  // Actions\n  setQuery: (query: string) => void\n  setSearchType: (type: SearchType) => void\n  setSortBy: (sort: SortOption) => void\n  setFilters: (filters: SearchFilters) => void\n  executeSearch: () => Promise<void>\n  loadMore: () => Promise<void>\n  clearSearch: () => void\n  clearError: () => void\n  \n  // Computed\n  isEmpty: boolean\n  isSearching: boolean\n  hasResults: boolean\n}\n\nexport function useSearch(options: UseSearchOptions = {}): UseSearchReturn {\n  const {\n    initialQuery = '',\n    initialType = 'all',\n    initialSort = 'relevance',\n    initialFilters = {},\n    autoSearch = true,\n    debounceMs = 300\n  } = options\n\n  // Core state\n  const [query, setQuery] = useState(initialQuery)\n  const [searchType, setSearchType] = useState<SearchType>(initialType)\n  const [sortBy, setSortBy] = useState<SortOption>(initialSort)\n  const [filters, setFilters] = useState<SearchFilters>(initialFilters)\n  \n  // Results state\n  const [results, setResults] = useState<SearchResult[]>([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [totalResults, setTotalResults] = useState(0)\n  const [hasMore, setHasMore] = useState(false)\n  const [currentOffset, setCurrentOffset] = useState(0)\n  \n  // Suggestions state\n  const [suggestions, setSuggestions] = useState<string[]>([])\n  \n  // Debounced query\n  const [debouncedQuery, setDebouncedQuery] = useState(query)\n  \n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedQuery(query)\n    }, debounceMs)\n    \n    return () => clearTimeout(timer)\n  }, [query, debounceMs])\n\n  // Execute search function\n  const executeSearch = useCallback(async (offset = 0, append = false) => {\n    try {\n      setLoading(true)\n      setError(null)\n      \n      let response: SearchResponse\n      \n      // Show trending content when no search query and no filters\n      if (!debouncedQuery && searchType === 'all' && Object.keys(filters).length === 0) {\n        response = await getTrending()\n      } else {\n        // Perform search\n        response = await search({\n          query: debouncedQuery || undefined,\n          type: searchType,\n          sortBy,\n          filters,\n          limit: 20,\n          offset\n        })\n      }\n      \n      if (append) {\n        setResults(prev => [...prev, ...response.results])\n      } else {\n        setResults(response.results)\n        setCurrentOffset(0)\n      }\n      \n      setTotalResults(response.totalCount)\n      setHasMore(response.hasMore)\n      setCurrentOffset(offset + response.results.length)\n      \n    } catch (err: any) {\n      setError(err.message || 'Failed to perform search')\n    } finally {\n      setLoading(false)\n    }\n  }, [debouncedQuery, searchType, sortBy, filters])\n\n  // Load more results\n  const loadMore = useCallback(async () => {\n    if (!hasMore || loading) return\n    await executeSearch(currentOffset, true)\n  }, [hasMore, loading, currentOffset, executeSearch])\n\n  // Get search suggestions\n  const loadSuggestions = useCallback(async (searchQuery: string) => {\n    if (!searchQuery || searchQuery.length < 2) {\n      setSuggestions([])\n      return\n    }\n    \n    try {\n      const newSuggestions = await getSearchSuggestions(searchQuery, 5)\n      setSuggestions(newSuggestions)\n    } catch (err) {\n      setSuggestions([])\n    }\n  }, [])\n\n  // Auto-search when dependencies change\n  useEffect(() => {\n    if (autoSearch) {\n      executeSearch()\n    }\n  }, [executeSearch, autoSearch])\n\n  // Load suggestions when query changes\n  useEffect(() => {\n    loadSuggestions(debouncedQuery)\n  }, [debouncedQuery, loadSuggestions])\n\n  // Clear search\n  const clearSearch = useCallback(() => {\n    setQuery('')\n    setSearchType('all')\n    setSortBy('relevance')\n    setFilters({})\n    setResults([])\n    setError(null)\n    setTotalResults(0)\n    setHasMore(false)\n    setCurrentOffset(0)\n    setSuggestions([])\n  }, [])\n\n  // Clear error\n  const clearError = useCallback(() => {\n    setError(null)\n  }, [])\n\n  // Computed values\n  const isEmpty = useMemo(() => results.length === 0, [results])\n  const isSearching = useMemo(() => loading, [loading])\n  const hasResults = useMemo(() => results.length > 0, [results])\n\n  return {\n    // State\n    query,\n    searchType,\n    sortBy,\n    filters,\n    results,\n    loading,\n    error,\n    totalResults,\n    hasMore,\n    suggestions,\n    \n    // Actions\n    setQuery,\n    setSearchType,\n    setSortBy,\n    setFilters,\n    executeSearch: () => executeSearch(),\n    loadMore,\n    clearSearch,\n    clearError,\n    \n    // Computed\n    isEmpty,\n    isSearching,\n    hasResults\n  }\n}\n\n// Hook for search suggestions only\nexport function useSearchSuggestions(query: string, enabled: boolean = true): UseSearchSuggestionsResult {\n  const [suggestions, setSuggestions] = useState<string[]>([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  // Debounced search function\n  const debouncedSearch = debounce(async (searchQuery: string) => {\n    if (!searchQuery.trim() || !enabled) {\n      setSuggestions([])\n      setLoading(false)\n      return\n    }\n\n    setLoading(true)\n    setError(null)\n\n    try {\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 200))\n\n      // Find matching suggestions\n      const lowerQuery = searchQuery.toLowerCase()\n      const matchingSuggestions: string[] = []\n\n      // Look for exact matches in our mock data\n      Object.entries(mockSuggestions).forEach(([key, values]) => {\n        if (key.includes(lowerQuery) || lowerQuery.includes(key)) {\n          matchingSuggestions.push(...values)\n        }\n      })\n\n      // Add fuzzy matches for any text\n      if (matchingSuggestions.length < 3) {\n        const fuzzyMatches = [\n          `${searchQuery} Projects`,\n          `${searchQuery} Initiative`,\n          `${searchQuery} Campaign`\n        ]\n        matchingSuggestions.push(...fuzzyMatches)\n      }\n\n      // Remove duplicates and limit to 5 suggestions\n      const uniqueSuggestions = [...new Set(matchingSuggestions)].slice(0, 5)\n      setSuggestions(uniqueSuggestions)\n    } catch (err) {\n      setError('Failed to fetch suggestions')\n      setSuggestions([])\n    } finally {\n      setLoading(false)\n    }\n  }, 300)\n\n  useEffect(() => {\n    if (enabled) {\n      debouncedSearch(query)\n    } else {\n      setSuggestions([])\n      setLoading(false)\n    }\n\n    return () => {\n      debouncedSearch.cancel()\n    }\n  }, [query, enabled])\n\n  return { suggestions, loading, error }\n}\n\n// Hook for trending content\nexport function useTrending() {\n  const [trending, setTrending] = useState<SearchResult[]>([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  \n  const loadTrending = useCallback(async () => {\n    setLoading(true)\n    setError(null)\n    try {\n      const response = await getTrending()\n      setTrending(response.results)\n    } catch (err: any) {\n      setError(err.message || 'Failed to load trending content')\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n  \n  useEffect(() => {\n    loadTrending()\n  }, [loadTrending])\n  \n  return {\n    trending,\n    loading,\n    error,\n    refresh: loadTrending\n  }\n}\n\n// Additional search utilities\nexport function useRecentSearches(userId?: string) {\n  const [recentSearches, setRecentSearches] = useState<string[]>([])\n\n  useEffect(() => {\n    if (userId) {\n      const stored = localStorage.getItem(`search-history-${userId}`)\n      if (stored) {\n        setRecentSearches(JSON.parse(stored))\n      }\n    }\n  }, [userId])\n\n  const addToHistory = (query: string) => {\n    if (!userId || !query.trim()) return\n\n    const newHistory = [query, ...recentSearches.filter(q => q !== query)].slice(0, 10)\n    setRecentSearches(newHistory)\n    localStorage.setItem(`search-history-${userId}`, JSON.stringify(newHistory))\n  }\n\n  const clearHistory = () => {\n    if (!userId) return\n    setRecentSearches([])\n    localStorage.removeItem(`search-history-${userId}`)\n  }\n\n  return { recentSearches, addToHistory, clearHistory }\n}\n\nexport function useSearchFilters() {\n  const [filters, setFilters] = useState({\n    type: 'all' as 'all' | 'campaigns' | 'profiles' | 'organizations',\n    category: 'all',\n    location: '',\n    dateRange: 'all' as 'all' | 'week' | 'month' | 'year',\n    sortBy: 'relevance' as 'relevance' | 'recent' | 'popular' | 'funding'\n  })\n\n  const updateFilter = (key: keyof typeof filters, value: any) => {\n    setFilters(prev => ({ ...prev, [key]: value }))\n  }\n\n  const resetFilters = () => {\n    setFilters({\n      type: 'all',\n      category: 'all',\n      location: '',\n      dateRange: 'all',\n      sortBy: 'relevance'\n    })\n  }\n\n  return { filters, updateFilter, resetFilters }\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6d23f506e2c561278a3d050b34695c78ee981120"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_66klm9org = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_66klm9org();
cov_66klm9org().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_66klm9org().s[1]++;
exports.useSearch = useSearch;
/* istanbul ignore next */
cov_66klm9org().s[2]++;
exports.useSearchSuggestions = useSearchSuggestions;
/* istanbul ignore next */
cov_66klm9org().s[3]++;
exports.useTrending = useTrending;
/* istanbul ignore next */
cov_66klm9org().s[4]++;
exports.useRecentSearches = useRecentSearches;
/* istanbul ignore next */
cov_66klm9org().s[5]++;
exports.useSearchFilters = useSearchFilters;
const react_1 =
/* istanbul ignore next */
(cov_66klm9org().s[6]++, require("react"));
const search_1 =
/* istanbul ignore next */
(cov_66klm9org().s[7]++, require("@/services/search"));
// Custom debounce function to avoid lodash dependency
function debounce(func, delay) {
  /* istanbul ignore next */
  cov_66klm9org().f[0]++;
  let timeoutId;
  /* istanbul ignore next */
  cov_66klm9org().s[8]++;
  const debouncedFunc = (...args) => {
    /* istanbul ignore next */
    cov_66klm9org().f[1]++;
    cov_66klm9org().s[9]++;
    clearTimeout(timeoutId);
    /* istanbul ignore next */
    cov_66klm9org().s[10]++;
    timeoutId = setTimeout(() => {
      /* istanbul ignore next */
      cov_66klm9org().f[2]++;
      cov_66klm9org().s[11]++;
      return func(...args);
    }, delay);
  };
  /* istanbul ignore next */
  cov_66klm9org().s[12]++;
  debouncedFunc.cancel = () => {
    /* istanbul ignore next */
    cov_66klm9org().f[3]++;
    cov_66klm9org().s[13]++;
    clearTimeout(timeoutId);
  };
  /* istanbul ignore next */
  cov_66klm9org().s[14]++;
  return debouncedFunc;
}
// Mock suggestions based on common search terms
const mockSuggestions =
/* istanbul ignore next */
(cov_66klm9org().s[15]++, {
  'bitcoin': ['Bitcoin Lightning Network', 'Bitcoin Education', 'Bitcoin Mining Projects'],
  'open': ['Open Source Projects', 'Open Education Initiative', 'Open Data Campaign'],
  'education': ['Education Initiatives', 'Educational Technology', 'Education for All'],
  'environment': ['Environmental Campaigns', 'Environmental Protection', 'Environmental Research'],
  'health': ['Healthcare Projects', 'Mental Health Awareness', 'Public Health Initiative'],
  'art': ['Art Projects', 'Digital Art', 'Community Art'],
  'tech': ['Technology Projects', 'Tech Education', 'Tech for Good'],
  'community': ['Community Building', 'Community Gardens', 'Community Centers'],
  'research': ['Research Projects', 'Scientific Research', 'Academic Research'],
  'music': ['Music Projects', 'Music Education', 'Community Music']
});
function useSearch(options =
/* istanbul ignore next */
(cov_66klm9org().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_66klm9org().f[4]++;
  const {
    initialQuery =
    /* istanbul ignore next */
    (cov_66klm9org().b[1][0]++, ''),
    initialType =
    /* istanbul ignore next */
    (cov_66klm9org().b[2][0]++, 'all'),
    initialSort =
    /* istanbul ignore next */
    (cov_66klm9org().b[3][0]++, 'relevance'),
    initialFilters =
    /* istanbul ignore next */
    (cov_66klm9org().b[4][0]++, {}),
    autoSearch =
    /* istanbul ignore next */
    (cov_66klm9org().b[5][0]++, true),
    debounceMs =
    /* istanbul ignore next */
    (cov_66klm9org().b[6][0]++, 300)
  } =
  /* istanbul ignore next */
  (cov_66klm9org().s[16]++, options);
  // Core state
  const [query, setQuery] =
  /* istanbul ignore next */
  (cov_66klm9org().s[17]++, (0, react_1.useState)(initialQuery));
  const [searchType, setSearchType] =
  /* istanbul ignore next */
  (cov_66klm9org().s[18]++, (0, react_1.useState)(initialType));
  const [sortBy, setSortBy] =
  /* istanbul ignore next */
  (cov_66klm9org().s[19]++, (0, react_1.useState)(initialSort));
  const [filters, setFilters] =
  /* istanbul ignore next */
  (cov_66klm9org().s[20]++, (0, react_1.useState)(initialFilters));
  // Results state
  const [results, setResults] =
  /* istanbul ignore next */
  (cov_66klm9org().s[21]++, (0, react_1.useState)([]));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_66klm9org().s[22]++, (0, react_1.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_66klm9org().s[23]++, (0, react_1.useState)(null));
  const [totalResults, setTotalResults] =
  /* istanbul ignore next */
  (cov_66klm9org().s[24]++, (0, react_1.useState)(0));
  const [hasMore, setHasMore] =
  /* istanbul ignore next */
  (cov_66klm9org().s[25]++, (0, react_1.useState)(false));
  const [currentOffset, setCurrentOffset] =
  /* istanbul ignore next */
  (cov_66klm9org().s[26]++, (0, react_1.useState)(0));
  // Suggestions state
  const [suggestions, setSuggestions] =
  /* istanbul ignore next */
  (cov_66klm9org().s[27]++, (0, react_1.useState)([]));
  // Debounced query
  const [debouncedQuery, setDebouncedQuery] =
  /* istanbul ignore next */
  (cov_66klm9org().s[28]++, (0, react_1.useState)(query));
  /* istanbul ignore next */
  cov_66klm9org().s[29]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_66klm9org().f[5]++;
    const timer =
    /* istanbul ignore next */
    (cov_66klm9org().s[30]++, setTimeout(() => {
      /* istanbul ignore next */
      cov_66klm9org().f[6]++;
      cov_66klm9org().s[31]++;
      setDebouncedQuery(query);
    }, debounceMs));
    /* istanbul ignore next */
    cov_66klm9org().s[32]++;
    return () => {
      /* istanbul ignore next */
      cov_66klm9org().f[7]++;
      cov_66klm9org().s[33]++;
      return clearTimeout(timer);
    };
  }, [query, debounceMs]);
  // Execute search function
  const executeSearch =
  /* istanbul ignore next */
  (cov_66klm9org().s[34]++, (0, react_1.useCallback)(async (offset =
  /* istanbul ignore next */
  (cov_66klm9org().b[7][0]++, 0), append =
  /* istanbul ignore next */
  (cov_66klm9org().b[8][0]++, false)) => {
    /* istanbul ignore next */
    cov_66klm9org().f[8]++;
    cov_66klm9org().s[35]++;
    try {
      /* istanbul ignore next */
      cov_66klm9org().s[36]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_66klm9org().s[37]++;
      setError(null);
      let response;
      // Show trending content when no search query and no filters
      /* istanbul ignore next */
      cov_66klm9org().s[38]++;
      if (
      /* istanbul ignore next */
      (cov_66klm9org().b[10][0]++, !debouncedQuery) &&
      /* istanbul ignore next */
      (cov_66klm9org().b[10][1]++, searchType === 'all') &&
      /* istanbul ignore next */
      (cov_66klm9org().b[10][2]++, Object.keys(filters).length === 0)) {
        /* istanbul ignore next */
        cov_66klm9org().b[9][0]++;
        cov_66klm9org().s[39]++;
        response = await (0, search_1.getTrending)();
      } else {
        /* istanbul ignore next */
        cov_66klm9org().b[9][1]++;
        cov_66klm9org().s[40]++;
        // Perform search
        response = await (0, search_1.search)({
          query:
          /* istanbul ignore next */
          (cov_66klm9org().b[11][0]++, debouncedQuery) ||
          /* istanbul ignore next */
          (cov_66klm9org().b[11][1]++, undefined),
          type: searchType,
          sortBy,
          filters,
          limit: 20,
          offset
        });
      }
      /* istanbul ignore next */
      cov_66klm9org().s[41]++;
      if (append) {
        /* istanbul ignore next */
        cov_66klm9org().b[12][0]++;
        cov_66klm9org().s[42]++;
        setResults(prev => {
          /* istanbul ignore next */
          cov_66klm9org().f[9]++;
          cov_66klm9org().s[43]++;
          return [...prev, ...response.results];
        });
      } else {
        /* istanbul ignore next */
        cov_66klm9org().b[12][1]++;
        cov_66klm9org().s[44]++;
        setResults(response.results);
        /* istanbul ignore next */
        cov_66klm9org().s[45]++;
        setCurrentOffset(0);
      }
      /* istanbul ignore next */
      cov_66klm9org().s[46]++;
      setTotalResults(response.totalCount);
      /* istanbul ignore next */
      cov_66klm9org().s[47]++;
      setHasMore(response.hasMore);
      /* istanbul ignore next */
      cov_66klm9org().s[48]++;
      setCurrentOffset(offset + response.results.length);
    } catch (err) {
      /* istanbul ignore next */
      cov_66klm9org().s[49]++;
      setError(
      /* istanbul ignore next */
      (cov_66klm9org().b[13][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_66klm9org().b[13][1]++, 'Failed to perform search'));
    } finally {
      /* istanbul ignore next */
      cov_66klm9org().s[50]++;
      setLoading(false);
    }
  }, [debouncedQuery, searchType, sortBy, filters]));
  // Load more results
  const loadMore =
  /* istanbul ignore next */
  (cov_66klm9org().s[51]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_66klm9org().f[10]++;
    cov_66klm9org().s[52]++;
    if (
    /* istanbul ignore next */
    (cov_66klm9org().b[15][0]++, !hasMore) ||
    /* istanbul ignore next */
    (cov_66klm9org().b[15][1]++, loading)) {
      /* istanbul ignore next */
      cov_66klm9org().b[14][0]++;
      cov_66klm9org().s[53]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_66klm9org().b[14][1]++;
    }
    cov_66klm9org().s[54]++;
    await executeSearch(currentOffset, true);
  }, [hasMore, loading, currentOffset, executeSearch]));
  // Get search suggestions
  const loadSuggestions =
  /* istanbul ignore next */
  (cov_66klm9org().s[55]++, (0, react_1.useCallback)(async searchQuery => {
    /* istanbul ignore next */
    cov_66klm9org().f[11]++;
    cov_66klm9org().s[56]++;
    if (
    /* istanbul ignore next */
    (cov_66klm9org().b[17][0]++, !searchQuery) ||
    /* istanbul ignore next */
    (cov_66klm9org().b[17][1]++, searchQuery.length < 2)) {
      /* istanbul ignore next */
      cov_66klm9org().b[16][0]++;
      cov_66klm9org().s[57]++;
      setSuggestions([]);
      /* istanbul ignore next */
      cov_66klm9org().s[58]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_66klm9org().b[16][1]++;
    }
    cov_66klm9org().s[59]++;
    try {
      const newSuggestions =
      /* istanbul ignore next */
      (cov_66klm9org().s[60]++, await (0, search_1.getSearchSuggestions)(searchQuery, 5));
      /* istanbul ignore next */
      cov_66klm9org().s[61]++;
      setSuggestions(newSuggestions);
    } catch (err) {
      /* istanbul ignore next */
      cov_66klm9org().s[62]++;
      setSuggestions([]);
    }
  }, []));
  // Auto-search when dependencies change
  /* istanbul ignore next */
  cov_66klm9org().s[63]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_66klm9org().f[12]++;
    cov_66klm9org().s[64]++;
    if (autoSearch) {
      /* istanbul ignore next */
      cov_66klm9org().b[18][0]++;
      cov_66klm9org().s[65]++;
      executeSearch();
    } else
    /* istanbul ignore next */
    {
      cov_66klm9org().b[18][1]++;
    }
  }, [executeSearch, autoSearch]);
  // Load suggestions when query changes
  /* istanbul ignore next */
  cov_66klm9org().s[66]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_66klm9org().f[13]++;
    cov_66klm9org().s[67]++;
    loadSuggestions(debouncedQuery);
  }, [debouncedQuery, loadSuggestions]);
  // Clear search
  const clearSearch =
  /* istanbul ignore next */
  (cov_66klm9org().s[68]++, (0, react_1.useCallback)(() => {
    /* istanbul ignore next */
    cov_66klm9org().f[14]++;
    cov_66klm9org().s[69]++;
    setQuery('');
    /* istanbul ignore next */
    cov_66klm9org().s[70]++;
    setSearchType('all');
    /* istanbul ignore next */
    cov_66klm9org().s[71]++;
    setSortBy('relevance');
    /* istanbul ignore next */
    cov_66klm9org().s[72]++;
    setFilters({});
    /* istanbul ignore next */
    cov_66klm9org().s[73]++;
    setResults([]);
    /* istanbul ignore next */
    cov_66klm9org().s[74]++;
    setError(null);
    /* istanbul ignore next */
    cov_66klm9org().s[75]++;
    setTotalResults(0);
    /* istanbul ignore next */
    cov_66klm9org().s[76]++;
    setHasMore(false);
    /* istanbul ignore next */
    cov_66klm9org().s[77]++;
    setCurrentOffset(0);
    /* istanbul ignore next */
    cov_66klm9org().s[78]++;
    setSuggestions([]);
  }, []));
  // Clear error
  const clearError =
  /* istanbul ignore next */
  (cov_66klm9org().s[79]++, (0, react_1.useCallback)(() => {
    /* istanbul ignore next */
    cov_66klm9org().f[15]++;
    cov_66klm9org().s[80]++;
    setError(null);
  }, []));
  // Computed values
  const isEmpty =
  /* istanbul ignore next */
  (cov_66klm9org().s[81]++, (0, react_1.useMemo)(() => {
    /* istanbul ignore next */
    cov_66klm9org().f[16]++;
    cov_66klm9org().s[82]++;
    return results.length === 0;
  }, [results]));
  const isSearching =
  /* istanbul ignore next */
  (cov_66klm9org().s[83]++, (0, react_1.useMemo)(() => {
    /* istanbul ignore next */
    cov_66klm9org().f[17]++;
    cov_66klm9org().s[84]++;
    return loading;
  }, [loading]));
  const hasResults =
  /* istanbul ignore next */
  (cov_66klm9org().s[85]++, (0, react_1.useMemo)(() => {
    /* istanbul ignore next */
    cov_66klm9org().f[18]++;
    cov_66klm9org().s[86]++;
    return results.length > 0;
  }, [results]));
  /* istanbul ignore next */
  cov_66klm9org().s[87]++;
  return {
    // State
    query,
    searchType,
    sortBy,
    filters,
    results,
    loading,
    error,
    totalResults,
    hasMore,
    suggestions,
    // Actions
    setQuery,
    setSearchType,
    setSortBy,
    setFilters,
    executeSearch: () => {
      /* istanbul ignore next */
      cov_66klm9org().f[19]++;
      cov_66klm9org().s[88]++;
      return executeSearch();
    },
    loadMore,
    clearSearch,
    clearError,
    // Computed
    isEmpty,
    isSearching,
    hasResults
  };
}
// Hook for search suggestions only
function useSearchSuggestions(query, enabled =
/* istanbul ignore next */
(cov_66klm9org().b[19][0]++, true)) {
  /* istanbul ignore next */
  cov_66klm9org().f[20]++;
  const [suggestions, setSuggestions] =
  /* istanbul ignore next */
  (cov_66klm9org().s[89]++, (0, react_1.useState)([]));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_66klm9org().s[90]++, (0, react_1.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_66klm9org().s[91]++, (0, react_1.useState)(null));
  // Debounced search function
  const debouncedSearch =
  /* istanbul ignore next */
  (cov_66klm9org().s[92]++, debounce(async searchQuery => {
    /* istanbul ignore next */
    cov_66klm9org().f[21]++;
    cov_66klm9org().s[93]++;
    if (
    /* istanbul ignore next */
    (cov_66klm9org().b[21][0]++, !searchQuery.trim()) ||
    /* istanbul ignore next */
    (cov_66klm9org().b[21][1]++, !enabled)) {
      /* istanbul ignore next */
      cov_66klm9org().b[20][0]++;
      cov_66klm9org().s[94]++;
      setSuggestions([]);
      /* istanbul ignore next */
      cov_66klm9org().s[95]++;
      setLoading(false);
      /* istanbul ignore next */
      cov_66klm9org().s[96]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_66klm9org().b[20][1]++;
    }
    cov_66klm9org().s[97]++;
    setLoading(true);
    /* istanbul ignore next */
    cov_66klm9org().s[98]++;
    setError(null);
    /* istanbul ignore next */
    cov_66klm9org().s[99]++;
    try {
      /* istanbul ignore next */
      cov_66klm9org().s[100]++;
      // Simulate API delay
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_66klm9org().f[22]++;
        cov_66klm9org().s[101]++;
        return setTimeout(resolve, 200);
      });
      // Find matching suggestions
      const lowerQuery =
      /* istanbul ignore next */
      (cov_66klm9org().s[102]++, searchQuery.toLowerCase());
      const matchingSuggestions =
      /* istanbul ignore next */
      (cov_66klm9org().s[103]++, []);
      // Look for exact matches in our mock data
      /* istanbul ignore next */
      cov_66klm9org().s[104]++;
      Object.entries(mockSuggestions).forEach(([key, values]) => {
        /* istanbul ignore next */
        cov_66klm9org().f[23]++;
        cov_66klm9org().s[105]++;
        if (
        /* istanbul ignore next */
        (cov_66klm9org().b[23][0]++, key.includes(lowerQuery)) ||
        /* istanbul ignore next */
        (cov_66klm9org().b[23][1]++, lowerQuery.includes(key))) {
          /* istanbul ignore next */
          cov_66klm9org().b[22][0]++;
          cov_66klm9org().s[106]++;
          matchingSuggestions.push(...values);
        } else
        /* istanbul ignore next */
        {
          cov_66klm9org().b[22][1]++;
        }
      });
      // Add fuzzy matches for any text
      /* istanbul ignore next */
      cov_66klm9org().s[107]++;
      if (matchingSuggestions.length < 3) {
        /* istanbul ignore next */
        cov_66klm9org().b[24][0]++;
        const fuzzyMatches =
        /* istanbul ignore next */
        (cov_66klm9org().s[108]++, [`${searchQuery} Projects`, `${searchQuery} Initiative`, `${searchQuery} Campaign`]);
        /* istanbul ignore next */
        cov_66klm9org().s[109]++;
        matchingSuggestions.push(...fuzzyMatches);
      } else
      /* istanbul ignore next */
      {
        cov_66klm9org().b[24][1]++;
      }
      // Remove duplicates and limit to 5 suggestions
      const uniqueSuggestions =
      /* istanbul ignore next */
      (cov_66klm9org().s[110]++, [...new Set(matchingSuggestions)].slice(0, 5));
      /* istanbul ignore next */
      cov_66klm9org().s[111]++;
      setSuggestions(uniqueSuggestions);
    } catch (err) {
      /* istanbul ignore next */
      cov_66klm9org().s[112]++;
      setError('Failed to fetch suggestions');
      /* istanbul ignore next */
      cov_66klm9org().s[113]++;
      setSuggestions([]);
    } finally {
      /* istanbul ignore next */
      cov_66klm9org().s[114]++;
      setLoading(false);
    }
  }, 300));
  /* istanbul ignore next */
  cov_66klm9org().s[115]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_66klm9org().f[24]++;
    cov_66klm9org().s[116]++;
    if (enabled) {
      /* istanbul ignore next */
      cov_66klm9org().b[25][0]++;
      cov_66klm9org().s[117]++;
      debouncedSearch(query);
    } else {
      /* istanbul ignore next */
      cov_66klm9org().b[25][1]++;
      cov_66klm9org().s[118]++;
      setSuggestions([]);
      /* istanbul ignore next */
      cov_66klm9org().s[119]++;
      setLoading(false);
    }
    /* istanbul ignore next */
    cov_66klm9org().s[120]++;
    return () => {
      /* istanbul ignore next */
      cov_66klm9org().f[25]++;
      cov_66klm9org().s[121]++;
      debouncedSearch.cancel();
    };
  }, [query, enabled]);
  /* istanbul ignore next */
  cov_66klm9org().s[122]++;
  return {
    suggestions,
    loading,
    error
  };
}
// Hook for trending content
function useTrending() {
  /* istanbul ignore next */
  cov_66klm9org().f[26]++;
  const [trending, setTrending] =
  /* istanbul ignore next */
  (cov_66klm9org().s[123]++, (0, react_1.useState)([]));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_66klm9org().s[124]++, (0, react_1.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_66klm9org().s[125]++, (0, react_1.useState)(null));
  const loadTrending =
  /* istanbul ignore next */
  (cov_66klm9org().s[126]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_66klm9org().f[27]++;
    cov_66klm9org().s[127]++;
    setLoading(true);
    /* istanbul ignore next */
    cov_66klm9org().s[128]++;
    setError(null);
    /* istanbul ignore next */
    cov_66klm9org().s[129]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_66klm9org().s[130]++, await (0, search_1.getTrending)());
      /* istanbul ignore next */
      cov_66klm9org().s[131]++;
      setTrending(response.results);
    } catch (err) {
      /* istanbul ignore next */
      cov_66klm9org().s[132]++;
      setError(
      /* istanbul ignore next */
      (cov_66klm9org().b[26][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_66klm9org().b[26][1]++, 'Failed to load trending content'));
    } finally {
      /* istanbul ignore next */
      cov_66klm9org().s[133]++;
      setLoading(false);
    }
  }, []));
  /* istanbul ignore next */
  cov_66klm9org().s[134]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_66klm9org().f[28]++;
    cov_66klm9org().s[135]++;
    loadTrending();
  }, [loadTrending]);
  /* istanbul ignore next */
  cov_66klm9org().s[136]++;
  return {
    trending,
    loading,
    error,
    refresh: loadTrending
  };
}
// Additional search utilities
function useRecentSearches(userId) {
  /* istanbul ignore next */
  cov_66klm9org().f[29]++;
  const [recentSearches, setRecentSearches] =
  /* istanbul ignore next */
  (cov_66klm9org().s[137]++, (0, react_1.useState)([]));
  /* istanbul ignore next */
  cov_66klm9org().s[138]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_66klm9org().f[30]++;
    cov_66klm9org().s[139]++;
    if (userId) {
      /* istanbul ignore next */
      cov_66klm9org().b[27][0]++;
      const stored =
      /* istanbul ignore next */
      (cov_66klm9org().s[140]++, localStorage.getItem(`search-history-${userId}`));
      /* istanbul ignore next */
      cov_66klm9org().s[141]++;
      if (stored) {
        /* istanbul ignore next */
        cov_66klm9org().b[28][0]++;
        cov_66klm9org().s[142]++;
        setRecentSearches(JSON.parse(stored));
      } else
      /* istanbul ignore next */
      {
        cov_66klm9org().b[28][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_66klm9org().b[27][1]++;
    }
  }, [userId]);
  /* istanbul ignore next */
  cov_66klm9org().s[143]++;
  const addToHistory = query => {
    /* istanbul ignore next */
    cov_66klm9org().f[31]++;
    cov_66klm9org().s[144]++;
    if (
    /* istanbul ignore next */
    (cov_66klm9org().b[30][0]++, !userId) ||
    /* istanbul ignore next */
    (cov_66klm9org().b[30][1]++, !query.trim())) {
      /* istanbul ignore next */
      cov_66klm9org().b[29][0]++;
      cov_66klm9org().s[145]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_66klm9org().b[29][1]++;
    }
    const newHistory =
    /* istanbul ignore next */
    (cov_66klm9org().s[146]++, [query, ...recentSearches.filter(q => {
      /* istanbul ignore next */
      cov_66klm9org().f[32]++;
      cov_66klm9org().s[147]++;
      return q !== query;
    })].slice(0, 10));
    /* istanbul ignore next */
    cov_66klm9org().s[148]++;
    setRecentSearches(newHistory);
    /* istanbul ignore next */
    cov_66klm9org().s[149]++;
    localStorage.setItem(`search-history-${userId}`, JSON.stringify(newHistory));
  };
  /* istanbul ignore next */
  cov_66klm9org().s[150]++;
  const clearHistory = () => {
    /* istanbul ignore next */
    cov_66klm9org().f[33]++;
    cov_66klm9org().s[151]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_66klm9org().b[31][0]++;
      cov_66klm9org().s[152]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_66klm9org().b[31][1]++;
    }
    cov_66klm9org().s[153]++;
    setRecentSearches([]);
    /* istanbul ignore next */
    cov_66klm9org().s[154]++;
    localStorage.removeItem(`search-history-${userId}`);
  };
  /* istanbul ignore next */
  cov_66klm9org().s[155]++;
  return {
    recentSearches,
    addToHistory,
    clearHistory
  };
}
function useSearchFilters() {
  /* istanbul ignore next */
  cov_66klm9org().f[34]++;
  const [filters, setFilters] =
  /* istanbul ignore next */
  (cov_66klm9org().s[156]++, (0, react_1.useState)({
    type: 'all',
    category: 'all',
    location: '',
    dateRange: 'all',
    sortBy: 'relevance'
  }));
  /* istanbul ignore next */
  cov_66klm9org().s[157]++;
  const updateFilter = (key, value) => {
    /* istanbul ignore next */
    cov_66klm9org().f[35]++;
    cov_66klm9org().s[158]++;
    setFilters(prev => {
      /* istanbul ignore next */
      cov_66klm9org().f[36]++;
      cov_66klm9org().s[159]++;
      return Object.assign(Object.assign({}, prev), {
        [key]: value
      });
    });
  };
  /* istanbul ignore next */
  cov_66klm9org().s[160]++;
  const resetFilters = () => {
    /* istanbul ignore next */
    cov_66klm9org().f[37]++;
    cov_66klm9org().s[161]++;
    setFilters({
      type: 'all',
      category: 'all',
      location: '',
      dateRange: 'all',
      sortBy: 'relevance'
    });
  };
  /* istanbul ignore next */
  cov_66klm9org().s[162]++;
  return {
    filters,
    updateFilter,
    resetFilters
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,