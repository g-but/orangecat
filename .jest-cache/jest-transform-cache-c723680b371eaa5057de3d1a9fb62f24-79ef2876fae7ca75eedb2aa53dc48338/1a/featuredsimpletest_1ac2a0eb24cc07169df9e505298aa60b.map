{"file":"/home/g/dev/orangecat/src/services/__tests__/featured.simple.test.ts","mappings":"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","names":[],"sources":["/home/g/dev/orangecat/src/services/__tests__/featured.simple.test.ts"],"sourcesContent":["/**\n * FEATURED SERVICE - SIMPLE TEST COVERAGE\n * \n * This test suite provides comprehensive coverage for the Featured Service,\n * testing different featured types, content curation, and functionality.\n * \n * Created: 2025-01-08\n * Last Modified: 2025-01-08\n * Last Modified Summary: Simple Featured Service tests for content curation\n */\n\n// Mock Supabase with minimal working implementation\njest.mock('@supabase/ssr', () => ({\n  createBrowserClient: jest.fn(() => ({\n    from: () => ({\n      select: () => ({\n        eq: () => ({\n          order: () => ({\n            limit: () => Promise.resolve({ \n              data: [], \n              error: null\n            })\n          })\n        }),\n        not: () => ({\n          order: () => ({\n            limit: () => Promise.resolve({ \n              data: [], \n              error: null\n            })\n          })\n        })\n      })\n    })\n  }))\n}))\n\n// Mock logger\njest.mock('@/utils/logger', () => ({\n  logger: {\n    info: jest.fn(),\n    error: jest.fn(),\n    warn: jest.fn(),\n    debug: jest.fn()\n  }\n}))\n\n// Import after mocking\nimport { \n  getFeaturedCampaigns, \n  getTrendingCampaigns, \n  getStaffPicks, \n  getNearlyFundedCampaigns, \n  getNewAndNoteworthy,\n  featureCampaign,\n  unfeatureCampaign\n} from '../featured'\nimport type { FeaturedType } from '../featured'\n\ndescribe('⭐ Featured Service - Simple Coverage', () => {\n\n  describe('🎯 Featured Campaign Functions', () => {\n    \n    test('should export getFeaturedCampaigns function', () => {\n      expect(typeof getFeaturedCampaigns).toBe('function')\n      expect(getFeaturedCampaigns).toBeDefined()\n    })\n\n    test('should export getTrendingCampaigns function', () => {\n      expect(typeof getTrendingCampaigns).toBe('function')\n      expect(getTrendingCampaigns).toBeDefined()\n    })\n\n    test('should export getStaffPicks function', () => {\n      expect(typeof getStaffPicks).toBe('function')\n      expect(getStaffPicks).toBeDefined()\n    })\n\n    test('should export getNearlyFundedCampaigns function', () => {\n      expect(typeof getNearlyFundedCampaigns).toBe('function')\n      expect(getNearlyFundedCampaigns).toBeDefined()\n    })\n\n    test('should export getNewAndNoteworthy function', () => {\n      expect(typeof getNewAndNoteworthy).toBe('function')\n      expect(getNewAndNoteworthy).toBeDefined()\n    })\n\n    test('should export featureCampaign function', () => {\n      expect(typeof featureCampaign).toBe('function')\n      expect(featureCampaign).toBeDefined()\n    })\n\n    test('should export unfeatureCampaign function', () => {\n      expect(typeof unfeatureCampaign).toBe('function')\n      expect(unfeatureCampaign).toBeDefined()\n    })\n\n  })\n\n  describe('🎬 Featured Campaigns', () => {\n    \n    test('should get featured campaigns with default limit', async () => {\n      const result = await getFeaturedCampaigns()\n\n      expect(Array.isArray(result)).toBe(true)\n      expect(result.length).toBeLessThanOrEqual(6) // Default limit\n    })\n\n    test('should get featured campaigns with custom limit', async () => {\n      const customLimit = 3\n      const result = await getFeaturedCampaigns(customLimit)\n\n      expect(Array.isArray(result)).toBe(true)\n      expect(result.length).toBeLessThanOrEqual(customLimit)\n    })\n\n    test('should handle zero limit', async () => {\n      const result = await getFeaturedCampaigns(0)\n\n      expect(Array.isArray(result)).toBe(true)\n      expect(result.length).toBe(0)\n    })\n\n    test('should handle large limit values', async () => {\n      const result = await getFeaturedCampaigns(100)\n\n      expect(Array.isArray(result)).toBe(true)\n      expect(result.length).toBeLessThanOrEqual(100)\n    })\n\n  })\n\n  describe('📈 Trending Campaigns', () => {\n    \n    test('should get trending campaigns with default limit', async () => {\n      const result = await getTrendingCampaigns()\n\n      expect(Array.isArray(result)).toBe(true)\n      expect(result.length).toBeLessThanOrEqual(3) // Default limit\n    })\n\n    test('should get trending campaigns with custom limit', async () => {\n      const customLimit = 5\n      const result = await getTrendingCampaigns(customLimit)\n\n      expect(Array.isArray(result)).toBe(true)\n      expect(result.length).toBeLessThanOrEqual(customLimit)\n    })\n\n    test('should return trending featured type', async () => {\n      const result = await getTrendingCampaigns(1)\n\n      // Even if empty, the function should work\n      expect(Array.isArray(result)).toBe(true)\n      \n      // If there are results, they should have trending type\n      if (result.length > 0) {\n        expect(result[0]).toHaveProperty('featured_type', 'trending')\n        expect(result[0]).toHaveProperty('featured_priority')\n      }\n    })\n\n  })\n\n  describe('👨‍💼 Staff Picks', () => {\n    \n    test('should get staff picks with default limit', async () => {\n      const result = await getStaffPicks()\n\n      expect(Array.isArray(result)).toBe(true)\n      expect(result.length).toBeLessThanOrEqual(3) // Default limit\n    })\n\n    test('should get staff picks with custom limit', async () => {\n      const customLimit = 2\n      const result = await getStaffPicks(customLimit)\n\n      expect(Array.isArray(result)).toBe(true)\n      expect(result.length).toBeLessThanOrEqual(customLimit)\n    })\n\n    test('should return staff_pick featured type', async () => {\n      const result = await getStaffPicks(1)\n\n      // Even if empty, the function should work\n      expect(Array.isArray(result)).toBe(true)\n      \n      // If there are results, they should have staff_pick type\n      if (result.length > 0) {\n        expect(result[0]).toHaveProperty('featured_type', 'staff_pick')\n        expect(result[0]).toHaveProperty('featured_priority')\n      }\n    })\n\n  })\n\n  describe('🎯 Nearly Funded Campaigns', () => {\n    \n    test('should get nearly funded campaigns with default limit', async () => {\n      const result = await getNearlyFundedCampaigns()\n\n      expect(Array.isArray(result)).toBe(true)\n      expect(result.length).toBeLessThanOrEqual(3) // Default limit\n    })\n\n    test('should get nearly funded campaigns with custom limit', async () => {\n      const customLimit = 4\n      const result = await getNearlyFundedCampaigns(customLimit)\n\n      expect(Array.isArray(result)).toBe(true)\n      expect(result.length).toBeLessThanOrEqual(customLimit)\n    })\n\n    test('should return nearly_funded featured type', async () => {\n      const result = await getNearlyFundedCampaigns(1)\n\n      // Even if empty, the function should work\n      expect(Array.isArray(result)).toBe(true)\n      \n      // If there are results, they should have nearly_funded type\n      if (result.length > 0) {\n        expect(result[0]).toHaveProperty('featured_type', 'nearly_funded')\n        expect(result[0]).toHaveProperty('featured_priority')\n      }\n    })\n\n  })\n\n  describe('🆕 New and Noteworthy', () => {\n    \n    test('should get new and noteworthy campaigns with default limit', async () => {\n      const result = await getNewAndNoteworthy()\n\n      expect(Array.isArray(result)).toBe(true)\n      expect(result.length).toBeLessThanOrEqual(3) // Default limit\n    })\n\n    test('should get new and noteworthy campaigns with custom limit', async () => {\n      const customLimit = 6\n      const result = await getNewAndNoteworthy(customLimit)\n\n      expect(Array.isArray(result)).toBe(true)\n      expect(result.length).toBeLessThanOrEqual(customLimit)\n    })\n\n    test('should return new_and_noteworthy featured type', async () => {\n      const result = await getNewAndNoteworthy(1)\n\n      // Even if empty, the function should work\n      expect(Array.isArray(result)).toBe(true)\n      \n      // If there are results, they should have new_and_noteworthy type\n      if (result.length > 0) {\n        expect(result[0]).toHaveProperty('featured_type', 'new_and_noteworthy')\n        expect(result[0]).toHaveProperty('featured_priority')\n      }\n    })\n\n  })\n\n  describe('🏷️ Featured Types Validation', () => {\n    \n    test('should handle all valid featured types', () => {\n      const validTypes: FeaturedType[] = [\n        'trending',\n        'staff_pick', \n        'community_choice',\n        'nearly_funded',\n        'new_and_noteworthy',\n        'featured'\n      ]\n\n      // This test validates that the types are properly defined\n      validTypes.forEach(type => {\n        expect(typeof type).toBe('string')\n        expect(type.length).toBeGreaterThan(0)\n      })\n    })\n\n  })\n\n  describe('⚙️ Campaign Management', () => {\n    \n    test('should attempt to feature a campaign', async () => {\n      const campaignId = 'test-campaign-id'\n      const featuredType: FeaturedType = 'staff_pick'\n      const priority = 1\n\n      const result = await featureCampaign(campaignId, featuredType, priority)\n\n      // Since we're using mocks, this should not throw\n      expect(typeof result).toBe('boolean')\n    })\n\n    test('should attempt to feature a campaign with featured_until date', async () => {\n      const campaignId = 'test-campaign-id'\n      const featuredType: FeaturedType = 'trending'\n      const priority = 2\n      const featuredUntil = '2024-12-31'\n\n      const result = await featureCampaign(campaignId, featuredType, priority, featuredUntil)\n\n      // Since we're using mocks, this should not throw\n      expect(typeof result).toBe('boolean')\n    })\n\n    test('should attempt to unfeature a campaign', async () => {\n      const campaignId = 'test-campaign-id'\n\n      const result = await unfeatureCampaign(campaignId)\n\n      // Since we're using mocks, this should not throw\n      expect(typeof result).toBe('boolean')\n    })\n\n    test('should handle different featured types in featureCampaign', async () => {\n      const campaignId = 'test-campaign-id'\n      const featuredTypes: FeaturedType[] = [\n        'trending',\n        'staff_pick',\n        'community_choice', \n        'nearly_funded',\n        'new_and_noteworthy',\n        'featured'\n      ]\n\n      for (const type of featuredTypes) {\n        const result = await featureCampaign(campaignId, type, 1)\n        expect(typeof result).toBe('boolean')\n      }\n    })\n\n  })\n\n  describe('🛡️ Error Handling', () => {\n    \n    test('should handle invalid campaign IDs gracefully', async () => {\n      const invalidId = ''\n      \n      const result = await featureCampaign(invalidId, 'featured', 1)\n      expect(typeof result).toBe('boolean')\n    })\n\n    test('should handle negative priorities', async () => {\n      const campaignId = 'test-campaign-id'\n      const negativePriority = -1\n      \n      const result = await featureCampaign(campaignId, 'featured', negativePriority)\n      expect(typeof result).toBe('boolean')\n    })\n\n    test('should handle very high priorities', async () => {\n      const campaignId = 'test-campaign-id'\n      const highPriority = 999999\n      \n      const result = await featureCampaign(campaignId, 'featured', highPriority)\n      expect(typeof result).toBe('boolean')\n    })\n\n    test('should handle null/undefined campaign IDs for unfeaturing', async () => {\n      // These should not throw, even if they fail silently\n      const result1 = await unfeatureCampaign('')\n      const result2 = await unfeatureCampaign('non-existent-id')\n      \n      expect(typeof result1).toBe('boolean')\n      expect(typeof result2).toBe('boolean')\n    })\n\n  })\n\n  describe('📊 Data Structure Validation', () => {\n    \n    test('should return consistent data structure for featured campaigns', async () => {\n      const result = await getFeaturedCampaigns(1)\n\n      expect(Array.isArray(result)).toBe(true)\n      \n      // If there are results, validate structure\n      if (result.length > 0) {\n        const campaign = result[0]\n        expect(campaign).toHaveProperty('featured_type')\n        expect(campaign).toHaveProperty('featured_priority')\n        expect(typeof campaign.featured_priority).toBe('number')\n      }\n    })\n\n    test('should return consistent data structure for trending campaigns', async () => {\n      const result = await getTrendingCampaigns(1)\n\n      expect(Array.isArray(result)).toBe(true)\n      \n      // If there are results, validate structure\n      if (result.length > 0) {\n        const campaign = result[0]\n        expect(campaign.featured_type).toBe('trending')\n        expect(typeof campaign.featured_priority).toBe('number')\n      }\n    })\n\n    test('should return consistent data structure for staff picks', async () => {\n      const result = await getStaffPicks(1)\n\n      expect(Array.isArray(result)).toBe(true)\n      \n      // If there are results, validate structure\n      if (result.length > 0) {\n        const campaign = result[0]\n        expect(campaign.featured_type).toBe('staff_pick')\n        expect(typeof campaign.featured_priority).toBe('number')\n      }\n    })\n\n  })\n\n  describe('🧪 Edge Cases', () => {\n    \n    test('should handle zero and negative limits gracefully', async () => {\n      const zeroResult = await getFeaturedCampaigns(0)\n      const negativeResult = await getFeaturedCampaigns(-1)\n\n      expect(Array.isArray(zeroResult)).toBe(true)\n      expect(Array.isArray(negativeResult)).toBe(true)\n      expect(zeroResult.length).toBe(0)\n    })\n\n    test('should handle very large limit values', async () => {\n      const result = await getFeaturedCampaigns(Number.MAX_SAFE_INTEGER)\n\n      expect(Array.isArray(result)).toBe(true)\n      // Should not crash, even with extreme values\n    })\n\n    test('should handle concurrent featured campaign requests', async () => {\n      const promises = [\n        getFeaturedCampaigns(2),\n        getTrendingCampaigns(2),\n        getStaffPicks(2),\n        getNearlyFundedCampaigns(2),\n        getNewAndNoteworthy(2)\n      ]\n\n      const results = await Promise.all(promises)\n\n      // All should resolve without errors\n      results.forEach(result => {\n        expect(Array.isArray(result)).toBe(true)\n      })\n    })\n\n    test('should handle special characters in campaign IDs', async () => {\n      const specialId = 'campaign-with-special-chars!@#$%'\n      \n      const result = await featureCampaign(specialId, 'featured', 1)\n      expect(typeof result).toBe('boolean')\n    })\n\n  })\n\n}) "],"version":3}