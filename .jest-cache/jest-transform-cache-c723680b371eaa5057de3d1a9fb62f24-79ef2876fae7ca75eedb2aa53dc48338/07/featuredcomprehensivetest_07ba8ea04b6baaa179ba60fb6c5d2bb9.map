{"file":"/home/g/dev/orangecat/src/services/__tests__/featured.comprehensive.test.ts","mappings":"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","names":[],"sources":["/home/g/dev/orangecat/src/services/__tests__/featured.comprehensive.test.ts"],"sourcesContent":["/**\n * FEATURED SERVICE - COMPREHENSIVE TEST COVERAGE\n * \n * This test suite provides comprehensive coverage for the FeaturedService,\n * testing all featured campaign types, data transformations, error handling,\n * and edge cases for the featured content system.\n * \n * Created: 2025-01-08\n * Last Modified: 2025-01-08\n * Last Modified Summary: Comprehensive FeaturedService tests for production readiness\n */\n\n// Mock Supabase client\njest.mock('@/services/supabase/client', () => ({\n  __esModule: true,\n  default: {\n    from: jest.fn(),\n    auth: { getUser: jest.fn() },\n    rpc: jest.fn()\n  }\n}))\n\n// Get the mocked client\nimport supabase from '@/services/supabase/client'\nconst mockSupabase = supabase as jest.Mocked<typeof supabase>\n\n// Mock logger\njest.mock('@/utils/logger', () => ({\n  logger: {\n    error: jest.fn(),\n    warn: jest.fn(),\n    info: jest.fn()\n  }\n}))\n\n// Enhanced helper function to create consistent mock chain for FeaturedService\nconst createMockQuery = (data: any[], error: any = null) => {\n  const mockChain = {\n    select: jest.fn().mockReturnThis(),\n    eq: jest.fn().mockReturnThis(),\n    or: jest.fn().mockReturnThis(),\n    order: jest.fn().mockReturnThis(),\n    range: jest.fn().mockResolvedValue({ data, error }),\n    limit: jest.fn().mockResolvedValue({ data, error }),\n    not: jest.fn().mockReturnThis(),\n    gte: jest.fn().mockReturnThis(),\n    lte: jest.fn().mockReturnThis(),\n    gt: jest.fn().mockReturnThis(),\n    in: jest.fn().mockReturnThis(),\n    is: jest.fn().mockReturnThis(),\n    insert: jest.fn().mockResolvedValue({ data, error }),\n    update: jest.fn().mockReturnThis(),\n    delete: jest.fn().mockResolvedValue({ data, error }),\n  }\n  \n  // Make all methods chainable and return the final data at the end\n  Object.keys(mockChain).forEach(key => {\n    if (key !== 'range' && key !== 'limit' && key !== 'insert' && key !== 'delete') {\n      mockChain[key] = jest.fn().mockReturnValue(mockChain)\n    }\n  })\n  \n  return mockChain\n}\n\n// Import after mocking\nimport { \n  getFeaturedCampaigns,\n  getTrendingCampaigns,\n  getStaffPicks,\n  getNearlyFundedCampaigns,\n  getNewAndNoteworthy,\n  featureCampaign,\n  unfeatureCampaign,\n  FeaturedCampaign,\n  FeaturedType\n} from '../featured'\n\ndescribe('⭐ Featured Service - Comprehensive Coverage', () => {\n\n  beforeEach(() => {\n    jest.clearAllMocks()\n    \n    // Reset console methods to avoid test noise\n    jest.spyOn(console, 'warn').mockImplementation(() => {})\n    jest.spyOn(console, 'error').mockImplementation(() => {})\n    \n    // Setup default mock responses using consistent helper\n    mockSupabase.from.mockReturnValue(createMockQuery([], null))\n  })\n\n  afterEach(() => {\n    jest.restoreAllMocks()\n  })\n\n  describe('🎯 Service Architecture', () => {\n    \n    test('should export all required functions', () => {\n      expect(typeof getFeaturedCampaigns).toBe('function')\n      expect(typeof getTrendingCampaigns).toBe('function')\n      expect(typeof getStaffPicks).toBe('function')\n      expect(typeof getNearlyFundedCampaigns).toBe('function')\n      expect(typeof getNewAndNoteworthy).toBe('function')\n      expect(typeof featureCampaign).toBe('function')\n      expect(typeof unfeatureCampaign).toBe('function')\n    })\n\n    test('should have proper TypeScript types', () => {\n      const featuredTypes: FeaturedType[] = [\n        'trending',\n        'staff_pick',\n        'community_choice',\n        'nearly_funded',\n        'new_and_noteworthy',\n        'featured'\n      ]\n      \n      featuredTypes.forEach(type => {\n        expect(typeof type).toBe('string')\n      })\n    })\n\n  })\n\n  describe('⭐ Get Featured Campaigns', () => {\n    \n    test('should get featured campaigns successfully', async () => {\n      const mockCampaigns = [\n        {\n          id: 'camp-1',\n          title: 'High Funding Campaign',\n          description: 'Well-funded campaign',\n          goal_amount: 10000,\n          total_funding: 8000,\n          contributor_count: 50,\n          is_active: true,\n          featured_image_url: 'image1.jpg',\n          slug: 'high-funding',\n          created_at: '2024-01-01T00:00:00.000Z',\n          profiles: [{\n            username: 'creator1',\n            display_name: 'Creator One',\n            avatar_url: 'avatar1.jpg'\n          }]\n        }\n      ]\n\n      // Use consistent mock pattern\n      mockSupabase.from.mockReturnValue(createMockQuery(mockCampaigns, null))\n\n      const result = await getFeaturedCampaigns(6)\n\n      expect(Array.isArray(result)).toBe(true)\n      expect(result).toHaveLength(1)\n      expect(result[0].featured_type).toBe('nearly_funded') // 80% funded\n      expect(result[0].featured_priority).toBe(1)\n    })\n\n    test('should handle empty featured campaigns', async () => {\n      mockSupabase.from.mockReturnValue(createMockQuery([], null))\n\n      const result = await getFeaturedCampaigns()\n\n      expect(result).toEqual([])\n    })\n\n    test('should handle database errors gracefully', async () => {\n      mockSupabase.from.mockReturnValue(createMockQuery(null, { message: 'Database error' }))\n\n      const result = await getFeaturedCampaigns()\n\n      expect(result).toEqual([])\n    })\n\n    test('should handle null profiles gracefully', async () => {\n      const mockCampaigns = [{\n        id: 'camp-1',\n        title: 'Campaign',\n        description: 'Description',\n        goal_amount: 1000,\n        total_funding: 500,\n        contributor_count: 10,\n        is_active: true,\n        featured_image_url: 'image.jpg',\n        slug: 'campaign',\n        created_at: '2024-01-01T00:00:00.000Z',\n        profiles: null\n      }]\n\n      mockSupabase.from.mockReturnValue(createMockQuery(mockCampaigns, null))\n\n      const result = await getFeaturedCampaigns()\n\n      expect(result).toHaveLength(1)\n      expect(result[0].profiles).toBeNull()\n    })\n\n    test('should limit results correctly', async () => {\n      const mockCampaigns = Array.from({ length: 10 }, (_, i) => ({\n        id: `camp-${i}`,\n        title: `Campaign ${i}`,\n        description: `Description ${i}`,\n        goal_amount: 1000,\n        total_funding: 500,\n        contributor_count: 10,\n        is_active: true,\n        featured_image_url: 'image.jpg',\n        slug: `campaign-${i}`,\n        created_at: '2024-01-01T00:00:00.000Z',\n        profiles: [{ username: 'creator', display_name: 'Creator', avatar_url: 'avatar.jpg' }]\n      }))\n\n      mockSupabase.from.mockReturnValue(createMockQuery(mockCampaigns.slice(0, 3), null))\n\n      const result = await getFeaturedCampaigns(3)\n\n      expect(result).toHaveLength(3)\n    })\n\n  })\n\n  describe('🔥 Trending Campaigns', () => {\n    \n    test('should get trending campaigns successfully', async () => {\n      const mockCampaigns = [\n        {\n          id: 'trend-1',\n          title: 'Trending Campaign 1',\n          description: 'Most popular',\n          goal_amount: 5000,\n          total_funding: 3000,\n          contributor_count: 100,\n          is_active: true,\n          featured_image_url: 'trend1.jpg',\n          slug: 'trending-1',\n          created_at: '2024-01-01T00:00:00.000Z',\n          profiles: [{ username: 'trendy1', display_name: 'Trendy One', avatar_url: 'trendy1.jpg' }]\n        }\n      ]\n\n      mockSupabase.from.mockReturnValue(createMockQuery(mockCampaigns, null))\n\n      const result = await getTrendingCampaigns(3)\n\n      expect(result).toHaveLength(1)\n      expect(result[0].featured_type).toBe('trending')\n      expect(result[0].featured_priority).toBe(1)\n    })\n\n    test('should handle trending campaigns error', async () => {\n      mockSupabase.from.mockReturnValue({\n        select: jest.fn(() => ({\n          eq: jest.fn(() => ({\n            order: jest.fn(() => ({\n              limit: jest.fn(() => Promise.reject(new Error('Database error')))\n            }))\n          }))\n        }))\n      })\n\n      const result = await getTrendingCampaigns()\n\n      expect(result).toEqual([])\n    })\n\n  })\n\n  describe('👨‍💼 Staff Picks', () => {\n    \n    test('should get staff picks successfully', async () => {\n      const mockCampaigns = [\n        {\n          id: 'staff-1',\n          title: 'Staff Pick 1',\n          description: 'Quality campaign with image',\n          goal_amount: 2000,\n          total_funding: 800,\n          contributor_count: 25,\n          is_active: true,\n          featured_image_url: 'staff1.jpg',\n          slug: 'staff-pick-1',\n          created_at: '2024-01-01T00:00:00.000Z',\n          profiles: [{ username: 'quality1', display_name: 'Quality One', avatar_url: 'quality1.jpg' }]\n        }\n      ]\n\n      mockSupabase.from.mockReturnValue(createMockQuery(mockCampaigns, null))\n\n      const result = await getStaffPicks(3)\n\n      expect(result).toHaveLength(1)\n      expect(result[0].featured_type).toBe('staff_pick')\n      expect(result[0].featured_priority).toBe(1)\n    })\n\n    test('should handle staff picks error', async () => {\n      mockSupabase.from.mockReturnValue({\n        select: jest.fn(() => ({\n          eq: jest.fn(() => ({\n            not: jest.fn(() => ({\n              order: jest.fn(() => ({\n                limit: jest.fn(() => Promise.reject(new Error('Database error')))\n              }))\n            }))\n          }))\n        }))\n      })\n\n      const result = await getStaffPicks()\n\n      expect(result).toEqual([])\n    })\n\n  })\n\n  describe('🎯 Nearly Funded Campaigns', () => {\n    \n    test('should get nearly funded campaigns successfully', async () => {\n      const mockCampaigns = [\n        {\n          id: 'nearly-1',\n          title: 'Nearly Funded 1',\n          description: '90% funded',\n          goal_amount: 1000,\n          total_funding: 900, // 90% funded\n          contributor_count: 45,\n          is_active: true,\n          featured_image_url: 'nearly1.jpg',\n          slug: 'nearly-funded-1',\n          created_at: '2024-01-01T00:00:00.000Z',\n          profiles: [{ username: 'almost1', display_name: 'Almost One', avatar_url: 'almost1.jpg' }]\n        }\n      ]\n\n      mockSupabase.from.mockReturnValue(createMockQuery(mockCampaigns, null))\n\n      const result = await getNearlyFundedCampaigns(3)\n\n      expect(result).toHaveLength(1) // Should include 90% funded campaign\n      expect(result[0].featured_type).toBe('nearly_funded')\n    })\n\n    test('should filter out campaigns below 70% funding', async () => {\n      const mockCampaigns = [\n        {\n          id: 'not-nearly',\n          title: 'Not Nearly Funded',\n          description: '50% funded',\n          goal_amount: 1000,\n          total_funding: 500, // 50% funded - should be filtered out\n          contributor_count: 20,\n          is_active: true,\n          featured_image_url: 'not-nearly.jpg',\n          slug: 'not-nearly',\n          created_at: '2024-01-03T00:00:00.000Z',\n          profiles: [{ username: 'not-almost', display_name: 'Not Almost', avatar_url: 'not-almost.jpg' }]\n        }\n      ]\n\n      mockSupabase.from.mockReturnValue({\n        select: jest.fn(() => ({\n          eq: jest.fn(() => ({\n            not: jest.fn(() => ({\n              order: jest.fn(() => ({\n                limit: jest.fn(() => Promise.resolve({ data: mockCampaigns, error: null }))\n              }))\n            }))\n          }))\n        }))\n      })\n\n      const result = await getNearlyFundedCampaigns()\n\n      expect(result).toEqual([]) // Should filter out 50% funded\n    })\n\n  })\n\n  describe('🆕 New and Noteworthy', () => {\n    \n    test('should get new and noteworthy campaigns successfully', async () => {\n      const mockCampaigns = [\n        {\n          id: 'new-1',\n          title: 'New Campaign 1',\n          description: 'Recently created with traction',\n          goal_amount: 1000,\n          total_funding: 200,\n          contributor_count: 15,\n          is_active: true,\n          featured_image_url: 'new1.jpg',\n          slug: 'new-1',\n          created_at: '2024-01-10T00:00:00.000Z', // Recent\n          profiles: [{ username: 'new1', display_name: 'New One', avatar_url: 'new1.jpg' }]\n        }\n      ]\n\n      mockSupabase.from.mockReturnValue(createMockQuery(mockCampaigns, null))\n\n      const result = await getNewAndNoteworthy(3)\n\n      expect(result).toHaveLength(1)\n      expect(result[0].featured_type).toBe('new_and_noteworthy')\n      expect(result[0].featured_priority).toBe(1)\n    })\n\n    test('should handle new and noteworthy error', async () => {\n      mockSupabase.from.mockReturnValue({\n        select: jest.fn(() => ({\n          eq: jest.fn(() => ({\n            gte: jest.fn(() => ({\n              order: jest.fn(() => ({\n                limit: jest.fn(() => Promise.reject(new Error('Database error')))\n              }))\n            }))\n          }))\n        }))\n      })\n\n      const result = await getNewAndNoteworthy()\n\n      expect(result).toEqual([])\n    })\n\n  })\n\n  describe('⚙️ Campaign Management', () => {\n    \n    test('should feature a campaign successfully', async () => {\n      // featureCampaign currently just returns true and logs (no database interaction)\n      const result = await featureCampaign('camp-1', 'staff_pick', 1)\n\n      expect(result).toBe(true)\n    })\n\n    test('should handle featuring campaign error', async () => {\n      // featureCampaign currently just returns true (no error handling implemented yet)\n      const result = await featureCampaign('camp-1', 'staff_pick')\n\n      expect(result).toBe(true) // Current implementation always returns true\n    })\n\n    test('should unfeature a campaign successfully', async () => {\n      // unfeatureCampaign currently just returns true and logs (no database interaction)\n      const result = await unfeatureCampaign('camp-1')\n\n      expect(result).toBe(true)\n    })\n\n    test('should handle unfeaturing campaign error', async () => {\n      // unfeatureCampaign currently just returns true (no error handling implemented yet)\n      const result = await unfeatureCampaign('camp-1')\n\n      expect(result).toBe(true) // Current implementation always returns true\n    })\n\n  })\n\n  describe('🏗️ Data Transformation', () => {\n    \n    test('should transform profiles array correctly', async () => {\n      const mockCampaigns = [{\n        id: 'camp-1',\n        title: 'Test Campaign',\n        description: 'Test',\n        goal_amount: 1000,\n        total_funding: 500,\n        contributor_count: 25,\n        is_active: true,\n        featured_image_url: 'image.jpg',\n        slug: 'test',\n        created_at: '2024-01-01T00:00:00.000Z',\n        profiles: [\n          { username: 'creator1', display_name: 'Creator One', avatar_url: 'avatar1.jpg' },\n          { username: 'creator2', display_name: 'Creator Two', avatar_url: 'avatar2.jpg' }\n        ]\n      }]\n\n      mockSupabase.from.mockReturnValue(createMockQuery(mockCampaigns, null))\n\n      const result = await getFeaturedCampaigns()\n\n      expect(result[0].profiles).toEqual(mockCampaigns[0].profiles[0]) // Should take first profile\n    })\n\n    test('should handle campaigns without goals correctly', async () => {\n      const mockCampaigns = [{\n        id: 'camp-1',\n        title: 'No Goal Campaign',\n        description: 'Campaign without goal',\n        goal_amount: null,\n        total_funding: 500,\n        contributor_count: 25,\n        is_active: true,\n        featured_image_url: 'image.jpg',\n        slug: 'no-goal',\n        created_at: '2024-01-01T00:00:00.000Z',\n        profiles: [{ username: 'creator', display_name: 'Creator', avatar_url: 'avatar.jpg' }]\n      }]\n\n      mockSupabase.from.mockReturnValue(createMockQuery(mockCampaigns, null))\n\n      const result = await getFeaturedCampaigns()\n\n      expect(result).toHaveLength(1)\n      expect(result[0].featured_type).toBe('staff_pick') // First campaign gets staff_pick (index < 2)\n    })\n\n  })\n\n  describe('🧪 Edge Cases', () => {\n    \n    test('should handle campaigns with zero values', async () => {\n      const mockCampaigns = [{\n        id: 'zero-camp',\n        title: 'Zero Campaign',\n        description: 'Zero values',\n        goal_amount: 0,\n        total_funding: 0,\n        contributor_count: 0,\n        is_active: true,\n        featured_image_url: 'zero.jpg',\n        slug: 'zero',\n        created_at: '2024-01-01T00:00:00.000Z',\n        profiles: [{ username: 'zero', display_name: 'Zero', avatar_url: 'zero.jpg' }]\n      }]\n\n      mockSupabase.from.mockReturnValue(createMockQuery(mockCampaigns, null))\n\n      const result = await getFeaturedCampaigns()\n\n      expect(result).toHaveLength(1)\n      expect(result[0].featured_type).toBe('staff_pick') // First campaign gets staff_pick (index < 2)\n    })\n\n    test('should handle very large numbers', async () => {\n      const mockCampaigns = [{\n        id: 'large-camp',\n        title: 'Large Campaign',\n        description: 'Very large numbers',\n        goal_amount: 1000000000,\n        total_funding: 999999999,\n        contributor_count: 999999,\n        is_active: true,\n        featured_image_url: 'large.jpg',\n        slug: 'large',\n        created_at: '2024-01-01T00:00:00.000Z',\n        profiles: [{ username: 'whale', display_name: 'Whale', avatar_url: 'whale.jpg' }]\n      }]\n\n      mockSupabase.from.mockReturnValue(createMockQuery(mockCampaigns, null))\n\n      const result = await getFeaturedCampaigns()\n\n      expect(result).toHaveLength(1)\n      expect(result[0].featured_type).toBe('nearly_funded') // Should handle large numbers\n    })\n\n    test('should handle concurrent requests', async () => {\n      const mockCampaigns = [{\n        id: 'concurrent',\n        title: 'Concurrent',\n        description: 'Concurrent test',\n        goal_amount: 1000,\n        total_funding: 500,\n        contributor_count: 25,\n        is_active: true,\n        featured_image_url: 'concurrent.jpg',\n        slug: 'concurrent',\n        created_at: '2024-01-01T00:00:00.000Z',\n        profiles: [{ username: 'concurrent', display_name: 'Concurrent', avatar_url: 'concurrent.jpg' }]\n      }]\n\n      mockSupabase.from.mockReturnValue(createMockQuery(mockCampaigns, null))\n\n      // Make multiple concurrent requests\n      const promises = [\n        getFeaturedCampaigns(),\n        getTrendingCampaigns(),\n        getStaffPicks(),\n        getNearlyFundedCampaigns(),\n        getNewAndNoteworthy()\n      ]\n\n      const results = await Promise.all(promises)\n\n      results.forEach(result => {\n        expect(Array.isArray(result)).toBe(true)\n      })\n    })\n\n  })\n\n  describe('🚨 Error Handling', () => {\n    \n    test('should handle complete database failure', async () => {\n      mockSupabase.from.mockImplementation(() => {\n        throw new Error('Complete database failure')\n      })\n\n      const result = await getFeaturedCampaigns()\n\n      expect(result).toEqual([])\n    })\n\n    test('should handle null responses gracefully', async () => {\n      mockSupabase.from.mockReturnValue({\n        select: jest.fn(() => ({\n          eq: jest.fn(() => ({\n            order: jest.fn(() => ({\n              limit: jest.fn(() => Promise.resolve({ data: null, error: null }))\n            }))\n          }))\n        }))\n      })\n\n      const result = await getFeaturedCampaigns()\n\n      expect(result).toEqual([])\n    })\n\n  })\n\n}) "],"version":3}