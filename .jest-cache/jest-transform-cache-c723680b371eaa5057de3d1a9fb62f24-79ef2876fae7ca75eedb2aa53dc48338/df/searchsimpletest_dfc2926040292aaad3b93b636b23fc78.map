{"file":"/home/g/dev/orangecat/src/services/__tests__/search.simple.test.ts","mappings":"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","names":[],"sources":["/home/g/dev/orangecat/src/services/__tests__/search.simple.test.ts"],"sourcesContent":["/**\n * SEARCH SERVICE - SIMPLE TEST COVERAGE\n * \n * This test suite provides focused coverage for Search Service utility functions\n * and basic functionality without complex Supabase mocking.\n * \n * Created: 2025-01-08\n * Last Modified: 2025-01-08\n * Last Modified Summary: Simple Search Service tests focusing on utility functions\n */\n\nimport { clearSearchCache } from '../search'\n\n// Mock Supabase with minimal working implementation\njest.mock('@supabase/ssr', () => ({\n  createBrowserClient: jest.fn(() => ({\n    from: () => ({\n      select: () => ({\n        or: () => ({\n          eq: () => ({\n            order: () => ({\n              range: () => Promise.resolve({ \n                data: [], \n                error: null, \n                count: 0 \n              })\n            })\n          })\n        })\n      })\n    })\n  }))\n}))\n\n// Import after mocking\nimport { search, getTrending, getSearchSuggestions } from '../search'\nimport type { SearchOptions } from '../search'\n\ndescribe('🔍 Search Service - Simple Coverage', () => {\n  \n  beforeEach(() => {\n    clearSearchCache()\n  })\n\n  describe('🎯 Basic Search Operations', () => {\n    \n    test('should export search function', () => {\n      expect(typeof search).toBe('function')\n      expect(search).toBeDefined()\n    })\n\n    test('should export getTrending function', () => {\n      expect(typeof getTrending).toBe('function')\n      expect(getTrending).toBeDefined()\n    })\n\n    test('should export getSearchSuggestions function', () => {\n      expect(typeof getSearchSuggestions).toBe('function')\n      expect(getSearchSuggestions).toBeDefined()\n    })\n\n    test('should export clearSearchCache function', () => {\n      expect(typeof clearSearchCache).toBe('function')\n      expect(clearSearchCache).toBeDefined()\n    })\n\n  })\n\n  describe('🔧 Search Configuration Validation', () => {\n    \n    test('should handle basic search options structure', async () => {\n      const options: SearchOptions = {\n        query: 'test',\n        type: 'profiles',\n        sortBy: 'relevance',\n        limit: 10\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(result).toHaveProperty('results')\n      expect(result).toHaveProperty('totalCount')\n      expect(result).toHaveProperty('hasMore')\n      expect(Array.isArray(result.results)).toBe(true)\n      expect(typeof result.totalCount).toBe('number')\n      expect(typeof result.hasMore).toBe('boolean')\n    })\n\n    test('should handle campaign search type', async () => {\n      const options: SearchOptions = {\n        query: 'bitcoin',\n        type: 'campaigns',\n        sortBy: 'recent'\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n      expect(result.totalCount).toBeGreaterThanOrEqual(0)\n    })\n\n    test('should handle \"all\" search type', async () => {\n      const options: SearchOptions = {\n        query: 'education',\n        type: 'all',\n        sortBy: 'relevance'\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n      expect(result.totalCount).toBeGreaterThanOrEqual(0)\n    })\n\n  })\n\n  describe('🔀 Sort Options Validation', () => {\n    \n    test('should handle relevance sorting', async () => {\n      const options: SearchOptions = {\n        query: 'test',\n        type: 'profiles',\n        sortBy: 'relevance'\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n    test('should handle recent sorting', async () => {\n      const options: SearchOptions = {\n        query: 'test',\n        type: 'campaigns',\n        sortBy: 'recent'\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n    test('should handle popular sorting', async () => {\n      const options: SearchOptions = {\n        query: 'test',\n        type: 'campaigns',\n        sortBy: 'popular'\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n    test('should handle funding sorting', async () => {\n      const options: SearchOptions = {\n        query: 'test',\n        type: 'campaigns',\n        sortBy: 'funding'\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n  })\n\n  describe('🔍 Filter Options', () => {\n    \n    test('should handle category filters', async () => {\n      const options: SearchOptions = {\n        query: 'test',\n        type: 'campaigns',\n        sortBy: 'relevance',\n        filters: {\n          categories: ['education', 'technology']\n        }\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n    test('should handle active status filter', async () => {\n      const options: SearchOptions = {\n        query: 'test',\n        type: 'campaigns',\n        sortBy: 'relevance',\n        filters: {\n          isActive: true\n        }\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n    test('should handle goal requirement filter', async () => {\n      const options: SearchOptions = {\n        query: 'test',\n        type: 'campaigns',\n        sortBy: 'relevance',\n        filters: {\n          hasGoal: true\n        }\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n    test('should handle funding range filters', async () => {\n      const options: SearchOptions = {\n        query: 'test',\n        type: 'campaigns',\n        sortBy: 'relevance',\n        filters: {\n          minFunding: 10000000, // 0.1 BTC in satoshis\n          maxFunding: 100000000 // 1 BTC in satoshis\n        }\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n    test('should handle date range filters', async () => {\n      const options: SearchOptions = {\n        query: 'test',\n        type: 'campaigns',\n        sortBy: 'relevance',\n        filters: {\n          dateRange: {\n            start: '2024-01-01',\n            end: '2024-12-31'\n          }\n        }\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n  })\n\n  describe('📄 Pagination Support', () => {\n    \n    test('should handle limit parameter', async () => {\n      const options: SearchOptions = {\n        query: 'test',\n        type: 'all',\n        sortBy: 'relevance',\n        limit: 5\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n      expect(result.results.length).toBeLessThanOrEqual(5)\n    })\n\n    test('should handle offset parameter', async () => {\n      const options: SearchOptions = {\n        query: 'test',\n        type: 'all',\n        sortBy: 'relevance',\n        limit: 10,\n        offset: 20\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n    test('should calculate hasMore correctly for small result sets', async () => {\n      const options: SearchOptions = {\n        query: 'veryspecificquerythatshouldhavenoorcampaigns',\n        type: 'all',\n        sortBy: 'relevance',\n        limit: 10\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(result.hasMore).toBe(false)\n    })\n\n  })\n\n  describe('📊 Trending and Suggestions', () => {\n    \n    test('should get trending campaigns', async () => {\n      const result = await getTrending()\n\n      expect(result).toBeDefined()\n      expect(result).toHaveProperty('results')\n      expect(result).toHaveProperty('totalCount')\n      expect(result).toHaveProperty('hasMore')\n      expect(Array.isArray(result.results)).toBe(true)\n      expect(typeof result.totalCount).toBe('number')\n      expect(typeof result.hasMore).toBe('boolean')\n    })\n\n    test('should get search suggestions', async () => {\n      const suggestions = await getSearchSuggestions('bit', 5)\n\n      expect(Array.isArray(suggestions)).toBe(true)\n      expect(suggestions.length).toBeLessThanOrEqual(5)\n    })\n\n    test('should handle empty suggestion query', async () => {\n      const suggestions = await getSearchSuggestions('', 5)\n\n      expect(Array.isArray(suggestions)).toBe(true)\n      expect(suggestions.length).toBeGreaterThanOrEqual(0)\n    })\n\n    test('should respect suggestion limit', async () => {\n      const suggestions = await getSearchSuggestions('bitcoin', 3)\n\n      expect(Array.isArray(suggestions)).toBe(true)\n      expect(suggestions.length).toBeLessThanOrEqual(3)\n    })\n\n  })\n\n  describe('💾 Cache Management', () => {\n    \n    test('should clear cache without errors', () => {\n      expect(() => {\n        clearSearchCache()\n      }).not.toThrow()\n    })\n\n    test('should work after cache clear', async () => {\n      clearSearchCache()\n\n      const options: SearchOptions = {\n        query: 'test',\n        type: 'all',\n        sortBy: 'relevance'\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n    test('should handle multiple cache clears', () => {\n      expect(() => {\n        clearSearchCache()\n        clearSearchCache()\n        clearSearchCache()\n      }).not.toThrow()\n    })\n\n  })\n\n  describe('🛡️ Error Resilience', () => {\n    \n    test('should handle empty query strings', async () => {\n      const options: SearchOptions = {\n        query: '',\n        type: 'all',\n        sortBy: 'relevance'\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n    test('should handle undefined query', async () => {\n      const options: SearchOptions = {\n        query: undefined,\n        type: 'profiles',\n        sortBy: 'relevance'\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n    test('should handle malformed search options gracefully', async () => {\n      const options: SearchOptions = {\n        query: 'test',\n        type: 'all',\n        sortBy: 'relevance',\n        limit: -1, // Invalid limit\n        offset: -5 // Invalid offset\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n  })\n\n  describe('🧪 Edge Cases', () => {\n    \n    test('should handle very long search queries', async () => {\n      const longQuery = 'a'.repeat(1000)\n      const options: SearchOptions = {\n        query: longQuery,\n        type: 'all',\n        sortBy: 'relevance',\n        limit: 5\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n    test('should handle special characters in search', async () => {\n      const options: SearchOptions = {\n        query: '!@#$%^&*()',\n        type: 'all',\n        sortBy: 'relevance'\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n    test('should handle Unicode characters', async () => {\n      const options: SearchOptions = {\n        query: '比特币 ビットコイン 🚀',\n        type: 'all',\n        sortBy: 'relevance'\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n    test('should handle very large limit values', async () => {\n      const options: SearchOptions = {\n        query: 'test',\n        type: 'all',\n        sortBy: 'relevance',\n        limit: Number.MAX_SAFE_INTEGER\n      }\n\n      const result = await search(options)\n\n      expect(result).toBeDefined()\n      expect(Array.isArray(result.results)).toBe(true)\n    })\n\n  })\n\n}) "],"version":3}