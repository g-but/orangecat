de7bb91870d5e0947db047018574d272
"use strict";

/**
 * INITIATIVES - CLEAN MODULAR ARCHITECTURE
 *
 * Created: 2025-01-08
 * Last Modified: 2025-01-09
 * Last Modified Summary: âœ… REFACTORED from 901-line monolith to modular architecture - Option A Phase 1 Complete
 *
 * BEFORE: 901 lines in single file (125% over 400-line limit)
 * AFTER: 6 modular files (~150 lines each) with clean imports
 *
 * Performance Impact: Improved tree-shaking, better code splitting, easier maintenance
 * Architecture: Follows DRY principles, single responsibility principle
 */
/* istanbul ignore next */
function cov_2o3kgggflf() {
  var path = "/home/g/dev/orangecat/src/data/initiatives.ts";
  var hash = "4da13c060d4c3bdfaafc44f1570ba793cb17f3fd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/data/initiatives.ts",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "1": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 196
        }
      },
      "2": {
        start: {
          line: 18,
          column: 14
        },
        end: {
          line: 18,
          column: 44
        }
      },
      "3": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 118
        }
      },
      "4": {
        start: {
          line: 19,
          column: 85
        },
        end: {
          line: 19,
          column: 112
        }
      },
      "5": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 128
        }
      },
      "6": {
        start: {
          line: 20,
          column: 90
        },
        end: {
          line: 20,
          column: 122
        }
      },
      "7": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 122
        }
      },
      "8": {
        start: {
          line: 21,
          column: 87
        },
        end: {
          line: 21,
          column: 116
        }
      },
      "9": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 130
        }
      },
      "10": {
        start: {
          line: 22,
          column: 91
        },
        end: {
          line: 22,
          column: 124
        }
      },
      "11": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 142
        }
      },
      "12": {
        start: {
          line: 23,
          column: 97
        },
        end: {
          line: 23,
          column: 136
        }
      },
      "13": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 144
        }
      },
      "14": {
        start: {
          line: 24,
          column: 98
        },
        end: {
          line: 24,
          column: 138
        }
      },
      "15": {
        start: {
          line: 26,
          column: 14
        },
        end: {
          line: 26,
          column: 49
        }
      },
      "16": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 112
        }
      },
      "17": {
        start: {
          line: 27,
          column: 82
        },
        end: {
          line: 27,
          column: 106
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 71
          },
          end: {
            line: 19,
            column: 72
          }
        },
        loc: {
          start: {
            line: 19,
            column: 83
          },
          end: {
            line: 19,
            column: 114
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 76
          },
          end: {
            line: 20,
            column: 77
          }
        },
        loc: {
          start: {
            line: 20,
            column: 88
          },
          end: {
            line: 20,
            column: 124
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 73
          },
          end: {
            line: 21,
            column: 74
          }
        },
        loc: {
          start: {
            line: 21,
            column: 85
          },
          end: {
            line: 21,
            column: 118
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 77
          },
          end: {
            line: 22,
            column: 78
          }
        },
        loc: {
          start: {
            line: 22,
            column: 89
          },
          end: {
            line: 22,
            column: 126
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 83
          },
          end: {
            line: 23,
            column: 84
          }
        },
        loc: {
          start: {
            line: 23,
            column: 95
          },
          end: {
            line: 23,
            column: 138
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 84
          },
          end: {
            line: 24,
            column: 85
          }
        },
        loc: {
          start: {
            line: 24,
            column: 96
          },
          end: {
            line: 24,
            column: 140
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 68
          },
          end: {
            line: 27,
            column: 69
          }
        },
        loc: {
          start: {
            line: 27,
            column: 80
          },
          end: {
            line: 27,
            column: 108
          }
        },
        line: 27
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {},
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/data/initiatives.ts",
      mappings: ";AAAA;;;;;;;;;;;;GAYG;;;AAMH,mDAAmD;AACnD,6CAO6B;AAN3B,oGAAA,WAAW,OAAA;AACX,yGAAA,gBAAgB,OAAA;AAChB,sGAAA,aAAa,OAAA;AACb,0GAAA,iBAAiB,OAAA;AACjB,gHAAA,uBAAuB,OAAA;AACvB,iHAAA,wBAAwB,OAAA;AAM1B,uEAAuE;AACvE,kDAAoD;AAA3C,iGAAA,QAAQ,OAAA",
      names: [],
      sources: ["/home/g/dev/orangecat/src/data/initiatives.ts"],
      sourcesContent: ["/**\n * INITIATIVES - CLEAN MODULAR ARCHITECTURE\n * \n * Created: 2025-01-08\n * Last Modified: 2025-01-09\n * Last Modified Summary: \u2705 REFACTORED from 901-line monolith to modular architecture - Option A Phase 1 Complete\n * \n * BEFORE: 901 lines in single file (125% over 400-line limit)\n * AFTER: 6 modular files (~150 lines each) with clean imports\n * \n * Performance Impact: Improved tree-shaking, better code splitting, easier maintenance\n * Architecture: Follows DRY principles, single responsibility principle\n */\n\nimport type { LucideIcon } from 'lucide-react';\nimport { Briefcase } from 'lucide-react';\nimport type { Initiative } from '@/types/initiative';\n\n// Import all modules from the modular architecture\nexport { \n  INITIATIVES, \n  getIconComponent, \n  getInitiative, \n  getAllInitiatives, \n  getAvailableInitiatives, \n  getComingSoonInitiatives \n} from './initiatives/index';\n\n// Re-export types for backward compatibility with existing imports\nexport type { Initiative } from '@/types/initiative';\n\n// Legacy compatibility - this can be removed after confirming no usage\nexport { ICON_MAP } from '@/data/initiatives/icons'; "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4da13c060d4c3bdfaafc44f1570ba793cb17f3fd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2o3kgggflf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2o3kgggflf();
cov_2o3kgggflf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2o3kgggflf().s[1]++;
exports.ICON_MAP = exports.getComingSoonInitiatives = exports.getAvailableInitiatives = exports.getAllInitiatives = exports.getInitiative = exports.getIconComponent = exports.INITIATIVES = void 0;
// Import all modules from the modular architecture
var index_1 =
/* istanbul ignore next */
(cov_2o3kgggflf().s[2]++, require("./initiatives/index"));
/* istanbul ignore next */
cov_2o3kgggflf().s[3]++;
Object.defineProperty(exports, "INITIATIVES", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2o3kgggflf().f[0]++;
    cov_2o3kgggflf().s[4]++;
    return index_1.INITIATIVES;
  }
});
/* istanbul ignore next */
cov_2o3kgggflf().s[5]++;
Object.defineProperty(exports, "getIconComponent", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2o3kgggflf().f[1]++;
    cov_2o3kgggflf().s[6]++;
    return index_1.getIconComponent;
  }
});
/* istanbul ignore next */
cov_2o3kgggflf().s[7]++;
Object.defineProperty(exports, "getInitiative", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2o3kgggflf().f[2]++;
    cov_2o3kgggflf().s[8]++;
    return index_1.getInitiative;
  }
});
/* istanbul ignore next */
cov_2o3kgggflf().s[9]++;
Object.defineProperty(exports, "getAllInitiatives", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2o3kgggflf().f[3]++;
    cov_2o3kgggflf().s[10]++;
    return index_1.getAllInitiatives;
  }
});
/* istanbul ignore next */
cov_2o3kgggflf().s[11]++;
Object.defineProperty(exports, "getAvailableInitiatives", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2o3kgggflf().f[4]++;
    cov_2o3kgggflf().s[12]++;
    return index_1.getAvailableInitiatives;
  }
});
/* istanbul ignore next */
cov_2o3kgggflf().s[13]++;
Object.defineProperty(exports, "getComingSoonInitiatives", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2o3kgggflf().f[5]++;
    cov_2o3kgggflf().s[14]++;
    return index_1.getComingSoonInitiatives;
  }
});
// Legacy compatibility - this can be removed after confirming no usage
var icons_1 =
/* istanbul ignore next */
(cov_2o3kgggflf().s[15]++, require("@/data/initiatives/icons"));
/* istanbul ignore next */
cov_2o3kgggflf().s[16]++;
Object.defineProperty(exports, "ICON_MAP", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2o3kgggflf().f[6]++;
    cov_2o3kgggflf().s[17]++;
    return icons_1.ICON_MAP;
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,