{"version":3,"names":["cov_1vtzu90uxh","actualCoverage","s","exports","useProfileForm","react_1","require","validation_1","initialData","b","f","formData","setFormData","useState","Object","assign","full_name","bio","website","bitcoin_address","lightning_address","errors","setErrors","loading","setLoading","error","setError","handleChange","useCallback","e","name","value","target","prev","undefined","validateForm","newErrors","trim","isValidUrl","btcValidation","isValidBitcoinAddress","valid","lightningValidation","isValidLightningAddress","bioValidation","isValidBio","keys","length","resetForm"],"sources":["/home/g/dev/orangecat/src/hooks/useProfileForm.ts"],"sourcesContent":["'use client'\n\nimport { useState, useCallback } from 'react'\nimport { Profile } from '@/types/profile'\nimport { \n  isValidBitcoinAddress, \n  isValidLightningAddress, \n  isValidUsername, \n  isValidBio, \n  isValidUrl \n} from '@/utils/validation'\n\ninterface FormData {\n  full_name: string\n  bio?: string\n  website?: string\n  bitcoin_address?: string\n  lightning_address?: string\n}\n\ninterface FormErrors {\n  full_name?: string\n  bio?: string\n  website?: string\n  bitcoin_address?: string\n  lightning_address?: string\n}\n\ninterface UseProfileFormReturn {\n  formData: FormData\n  errors: FormErrors\n  loading: boolean\n  error: string | null\n  handleChange: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n  validateForm: () => boolean\n  setLoading: (loading: boolean) => void\n  setError: (error: string | null) => void\n  resetForm: () => void\n}\n\nexport function useProfileForm(initialData: Partial<FormData> = {}): UseProfileFormReturn {\n  const [formData, setFormData] = useState<FormData>({\n    full_name: '',\n    bio: '',\n    website: '',\n    bitcoin_address: '',\n    lightning_address: '',\n    ...initialData\n  })\n\n  const [errors, setErrors] = useState<FormErrors>({})\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target\n    setFormData(prev => ({ ...prev, [name]: value }))\n    \n    // Clear error when user starts typing\n    if (errors[name as keyof FormErrors]) {\n      setErrors(prev => ({ ...prev, [name]: undefined }))\n    }\n  }, [errors])\n\n  const validateForm = useCallback((): boolean => {\n    const newErrors: FormErrors = {}\n    \n    // Validate full name\n    if (!formData.full_name.trim()) {\n      newErrors.full_name = 'Full name is required'\n    }\n\n    // Validate website if provided\n    if (formData.website && !isValidUrl(formData.website)) {\n      newErrors.website = 'Please enter a valid website URL'\n    }\n\n    // Enhanced Bitcoin address validation\n    if (formData.bitcoin_address) {\n      const btcValidation = isValidBitcoinAddress(formData.bitcoin_address)\n      if (!btcValidation.valid) {\n        newErrors.bitcoin_address = btcValidation.error || 'Invalid Bitcoin address'\n      }\n    }\n\n    // Enhanced Lightning address validation\n    if (formData.lightning_address) {\n      const lightningValidation = isValidLightningAddress(formData.lightning_address)\n      if (!lightningValidation.valid) {\n        newErrors.lightning_address = lightningValidation.error || 'Invalid Lightning address'\n      }\n    }\n\n    // Enhanced bio validation\n    if (formData.bio) {\n      const bioValidation = isValidBio(formData.bio)\n      if (!bioValidation.valid) {\n        newErrors.bio = bioValidation.error || 'Invalid bio content'\n      }\n    }\n\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }, [formData])\n\n  const resetForm = useCallback(() => {\n    setFormData({\n      full_name: '',\n      bio: '',\n      website: '',\n      bitcoin_address: '',\n      lightning_address: ''\n    })\n    setErrors({})\n    setError(null)\n  }, [])\n\n  return {\n    formData,\n    errors,\n    loading,\n    error,\n    handleChange,\n    validateForm,\n    setLoading,\n    setError,\n    resetForm\n  }\n} "],"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","ignoreList":[]}