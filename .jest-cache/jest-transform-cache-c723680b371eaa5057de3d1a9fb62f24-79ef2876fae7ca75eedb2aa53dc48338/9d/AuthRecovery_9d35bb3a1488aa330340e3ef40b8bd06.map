{"version":3,"names":["cov_m4xcrwy1h","actualCoverage","exports","default","AuthRecovery","react_1","s","require","lucide_react_1","Button_1","__importDefault","Card_1","client_1","error","email","onRetry","onClearError","f","isRecovering","setIsRecovering","useState","recoveryStep","setRecoveryStep","recoveryMessage","setRecoveryMessage","isInvalidCredentials","b","toLowerCase","includes","isUserExists","isNetworkError","isTimeout","handleClearAuthState","window","localStorage","clear","sessionStorage","document","cookie","split","forEach","eqPos","indexOf","name","substr","trim","location","hostname","auth","signOut","setTimeout","reload","handlePasswordReset","resetPasswordForEmail","redirectTo","origin","message","getSuggestions","getRecoveryActions","jsx_runtime_1","jsxs","className","children","onClick","variant","disabled","jsx","Mail","RefreshCw","AlertCircle","CheckCircle","map","suggestion","index"],"sources":["/home/g/dev/orangecat/src/components/AuthRecovery.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { AlertCircle, RefreshCw, Mail, Key, CheckCircle } from 'lucide-react'\nimport Button from '@/components/ui/Button'\nimport Card from '@/components/ui/Card'\nimport { useAuth } from '@/hooks/useAuth'\nimport supabase from '@/services/supabase/client'\n\ninterface AuthRecoveryProps {\n  error: string\n  email?: string\n  onRetry: () => void\n  onClearError: () => void\n}\n\nexport default function AuthRecovery({ error, email, onRetry, onClearError }: AuthRecoveryProps) {\n  const [isRecovering, setIsRecovering] = useState(false)\n  const [recoveryStep, setRecoveryStep] = useState<'idle' | 'clearing' | 'resetting' | 'success'>('idle')\n  const [recoveryMessage, setRecoveryMessage] = useState('')\n\n  const isInvalidCredentials = error.toLowerCase().includes('invalid') || error.toLowerCase().includes('credentials')\n  const isUserExists = error.toLowerCase().includes('already registered') || error.toLowerCase().includes('already exists')\n  const isNetworkError = error.toLowerCase().includes('network') || error.toLowerCase().includes('connection')\n  const isTimeout = error.toLowerCase().includes('timeout') || error.toLowerCase().includes('timed out')\n\n  const handleClearAuthState = async () => {\n    setIsRecovering(true)\n    setRecoveryStep('clearing')\n    setRecoveryMessage('Clearing authentication state...')\n\n    try {\n      // Clear all local storage\n      if (typeof window !== 'undefined') {\n        localStorage.clear()\n        sessionStorage.clear()\n        \n        // Clear cookies\n        document.cookie.split(';').forEach(cookie => {\n          const eqPos = cookie.indexOf('=')\n          const name = eqPos > -1 ? cookie.substr(0, eqPos).trim() : cookie.trim()\n          document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/;domain=${window.location.hostname}`\n          document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/;domain=.${window.location.hostname}`\n          document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/`\n        })\n      }\n\n      // Sign out from Supabase\n      await supabase.auth.signOut()\n\n      setRecoveryStep('success')\n      setRecoveryMessage('Authentication state cleared successfully! Please try logging in again.')\n      \n      setTimeout(() => {\n        onClearError()\n        window.location.reload()\n      }, 2000)\n\n    } catch (error) {\n      setRecoveryMessage('Failed to clear authentication state. Please refresh the page manually.')\n    } finally {\n      setIsRecovering(false)\n    }\n  }\n\n  const handlePasswordReset = async () => {\n    if (!email) {\n      setRecoveryMessage('Please enter your email address first')\n      return\n    }\n\n    setIsRecovering(true)\n    setRecoveryStep('resetting')\n    setRecoveryMessage('Sending password reset email...')\n\n    try {\n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/auth/reset-password`\n      })\n\n      if (error) {\n        setRecoveryMessage(`Failed to send reset email: ${error.message}`)\n      } else {\n        setRecoveryStep('success')\n        setRecoveryMessage('Password reset email sent! Check your inbox and follow the instructions.')\n      }\n    } catch (error) {\n      setRecoveryMessage('Failed to send password reset email. Please try again.')\n    } finally {\n      setIsRecovering(false)\n    }\n  }\n\n  const getSuggestions = () => {\n    if (isInvalidCredentials) {\n      return [\n        'Double-check your email address for typos',\n        'Verify your password is correct',\n        'Try using the \"Forgot Password\" option if you\\'re unsure',\n        'Make sure Caps Lock is not enabled'\n      ]\n    }\n\n    if (isUserExists) {\n      return [\n        'Use the \"Sign In\" tab instead of \"Register\"',\n        'If you forgot your password, use the password reset option',\n        'Check if you already have an account with this email'\n      ]\n    }\n\n    if (isNetworkError || isTimeout) {\n      return [\n        'Check your internet connection',\n        'Try refreshing the page',\n        'Wait a moment and try again',\n        'Disable any VPN or proxy services temporarily'\n      ]\n    }\n\n    return [\n      'Try refreshing the page',\n      'Clear your browser cache and cookies',\n      'Try using an incognito/private browsing window',\n      'Contact support if the problem persists'\n    ]\n  }\n\n  const getRecoveryActions = () => {\n    if (isInvalidCredentials) {\n      return (\n        <div className=\"space-y-3\">\n          <Button\n            onClick={handlePasswordReset}\n            variant=\"secondary\"\n            className=\"w-full\"\n            disabled={isRecovering || !email}\n          >\n            <Mail className=\"w-4 h-4 mr-2\" />\n            Send Password Reset Email\n          </Button>\n          <Button\n            onClick={handleClearAuthState}\n            variant=\"outline\"\n            className=\"w-full\"\n            disabled={isRecovering}\n          >\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\n            Clear Auth State & Retry\n          </Button>\n        </div>\n      )\n    }\n\n    if (isNetworkError || isTimeout) {\n      return (\n        <Button\n          onClick={onRetry}\n          variant=\"primary\"\n          className=\"w-full\"\n          disabled={isRecovering}\n        >\n          <RefreshCw className=\"w-4 h-4 mr-2\" />\n          Try Again\n        </Button>\n      )\n    }\n\n    return (\n      <div className=\"space-y-3\">\n        <Button\n          onClick={onRetry}\n          variant=\"primary\"\n          className=\"w-full\"\n          disabled={isRecovering}\n        >\n          <RefreshCw className=\"w-4 h-4 mr-2\" />\n          Try Again\n        </Button>\n        <Button\n          onClick={handleClearAuthState}\n          variant=\"outline\"\n          className=\"w-full\"\n          disabled={isRecovering}\n        >\n          <RefreshCw className=\"w-4 h-4 mr-2\" />\n          Clear Auth State\n        </Button>\n      </div>\n    )\n  }\n\n  return (\n    <Card className=\"max-w-md mx-auto mt-6 p-6\">\n      <div className=\"text-center\">\n        <div className=\"mx-auto flex h-12 w-12 items-center justify-center rounded-full bg-red-100 mb-4\">\n          <AlertCircle className=\"h-6 w-6 text-red-600\" />\n        </div>\n        \n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n          Authentication Issue\n        </h3>\n        \n        <p className=\"text-sm text-gray-600 mb-4\">\n          {error}\n        </p>\n\n        {recoveryMessage && (\n          <div className={`mb-4 p-3 rounded-md ${\n            recoveryStep === 'success' \n              ? 'bg-green-50 text-green-700 border border-green-200' \n              : 'bg-blue-50 text-blue-700 border border-blue-200'\n          }`}>\n            <div className=\"flex items-center\">\n              {recoveryStep === 'success' ? (\n                <CheckCircle className=\"w-4 h-4 mr-2\" />\n              ) : (\n                <RefreshCw className={`w-4 h-4 mr-2 ${isRecovering ? 'animate-spin' : ''}`} />\n              )}\n              <span className=\"text-sm\">{recoveryMessage}</span>\n            </div>\n          </div>\n        )}\n\n        <div className=\"text-left mb-6\">\n          <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Suggestions:</h4>\n          <ul className=\"text-sm text-gray-600 space-y-1\">\n            {getSuggestions().map((suggestion, index) => (\n              <li key={index} className=\"flex items-start\">\n                <span className=\"text-tiffany-500 mr-2\">â€¢</span>\n                {suggestion}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {getRecoveryActions()}\n\n        <button\n          onClick={onClearError}\n          className=\"mt-4 text-sm text-gray-500 hover:text-gray-700 underline\"\n          disabled={isRecovering}\n        >\n          Dismiss\n        </button>\n      </div>\n    </Card>\n  )\n} "],"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","ignoreList":[]}