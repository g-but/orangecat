{"version":3,"names":["cov_2g1brxzqtu","actualCoverage","s","exports","useUnifiedProfile","react_1","require","navigation_1","useAuth_1","profile_1","sonner_1","logger_1","username","initialProfile","autoFetch","b","f","router","useRouter","user","profile","currentUserProfile","useAuth","setProfile","useState","isLoading","setIsLoading","error","setError","mode","setMode","isOwnProfile","id","fetchProfile","useCallback","profileData","ProfileService","getProfile","profiles","searchProfiles","length","incrementProfileViews","err","errorMessage","Error","message","logger","handleSave","data","result","updateProfile","success","toast","refetch","useEffect","handleModeChange","newMode"],"sources":["/home/g/dev/orangecat/src/hooks/useUnifiedProfile.ts"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useCallback } from 'react'\nimport { useRouter } from 'next/navigation'\nimport { useAuth } from '@/hooks/useAuth'\nimport { ProfileService } from '@/services/profile'\nimport { ScalableProfile, ProfileFormData } from '@/types/database'\nimport { toast } from 'sonner'\nimport { logger } from '@/utils/logger'\n\nexport interface UseUnifiedProfileProps {\n  username?: string\n  initialProfile?: ScalableProfile\n  autoFetch?: boolean\n}\n\nexport interface UseUnifiedProfileReturn {\n  profile: ScalableProfile | null\n  isLoading: boolean\n  error: string | null\n  isOwnProfile: boolean\n  mode: 'view' | 'edit'\n  setMode: (mode: 'view' | 'edit') => void\n  handleSave: (data: ProfileFormData) => Promise<void>\n  refetch: () => Promise<void>\n}\n\nexport function useUnifiedProfile({\n  username,\n  initialProfile,\n  autoFetch = true\n}: UseUnifiedProfileProps = {}): UseUnifiedProfileReturn {\n  const router = useRouter()\n  const { user, profile: currentUserProfile } = useAuth()\n  \n  // State\n  const [profile, setProfile] = useState<ScalableProfile | null>(initialProfile || null)\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [mode, setMode] = useState<'view' | 'edit'>('view')\n\n  // Determine if this is the user's own profile\n  const isOwnProfile = profile?.id === user?.id\n\n  // Fetch profile data\n  const fetchProfile = useCallback(async () => {\n    if (!user) return\n\n    setIsLoading(true)\n    setError(null)\n\n    try {\n      let profileData: ScalableProfile | null = null\n\n      if (username === 'me' || !username) {\n        // Loading current user's profile\n        if (currentUserProfile) {\n          // Cast the basic Profile to ScalableProfile since ScalableProfile extends Profile\n          profileData = currentUserProfile as ScalableProfile\n        } else {\n          profileData = await ProfileService.getProfile(user.id)\n        }\n      } else {\n        // Loading specific user's profile by username\n        const profiles = await ProfileService.searchProfiles(username, 1, 0)\n        if (profiles.length > 0) {\n          profileData = profiles[0]\n        }\n      }\n\n      if (!profileData) {\n        setError('Profile not found')\n        return\n      }\n\n      setProfile(profileData)\n      \n      // Increment profile views (only for other users' profiles)\n      if (profileData.id !== user?.id) {\n        await ProfileService.incrementProfileViews(profileData.id)\n      }\n\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load profile'\n      setError(errorMessage)\n      logger.error('Profile fetch failed', err, 'useUnifiedProfile')\n    } finally {\n      setIsLoading(false)\n    }\n  }, [username, user, currentUserProfile])\n\n  // Handle profile save\n  const handleSave = useCallback(async (data: ProfileFormData) => {\n    if (!user?.id || !profile) {\n      throw new Error('User not authenticated')\n    }\n\n    try {\n      const result = await ProfileService.updateProfile(user.id, data)\n      \n      if (result.success && result.data) {\n        setProfile(result.data)\n        toast.success('Profile updated successfully!')\n        \n        // Refresh current user profile in auth store if updating own profile\n        if (isOwnProfile) {\n          // TODO: Trigger auth store profile refresh\n        }\n      } else {\n        throw new Error(result.error || 'Failed to update profile')\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to save profile'\n      logger.error('Profile save failed', err, 'useUnifiedProfile')\n      throw new Error(errorMessage)\n    }\n  }, [user, profile, isOwnProfile])\n\n  // Refetch profile data\n  const refetch = useCallback(async () => {\n    await fetchProfile()\n  }, [fetchProfile])\n\n  // Auto-fetch on mount if enabled\n  useEffect(() => {\n    if (autoFetch && !initialProfile) {\n      fetchProfile()\n    }\n  }, [autoFetch, initialProfile, fetchProfile])\n\n  // Handle mode changes\n  const handleModeChange = useCallback((newMode: 'view' | 'edit') => {\n    if (newMode === 'edit' && !isOwnProfile) {\n      toast.error('You can only edit your own profile')\n      return\n    }\n    setMode(newMode)\n  }, [isOwnProfile])\n\n  return {\n    profile,\n    isLoading,\n    error,\n    isOwnProfile,\n    mode,\n    setMode: handleModeChange,\n    handleSave,\n    refetch\n  }\n} "],"mappings":"AAAA,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}