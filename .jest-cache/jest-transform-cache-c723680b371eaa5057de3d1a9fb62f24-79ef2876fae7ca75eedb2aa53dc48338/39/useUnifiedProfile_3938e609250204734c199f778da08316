d31a214ed8b656adee00b81c17f8c7f0
'use client';
"use strict";

/* istanbul ignore next */
function cov_2g1brxzqtu() {
  var path = "/home/g/dev/orangecat/src/hooks/useUnifiedProfile.ts";
  var hash = "90072a390746b13afa0896084616d1d1aacef815";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/hooks/useUnifiedProfile.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 46
        }
      },
      "2": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 32
        }
      },
      "3": {
        start: {
          line: 6,
          column: 21
        },
        end: {
          line: 6,
          column: 47
        }
      },
      "4": {
        start: {
          line: 7,
          column: 18
        },
        end: {
          line: 7,
          column: 44
        }
      },
      "5": {
        start: {
          line: 8,
          column: 18
        },
        end: {
          line: 8,
          column: 47
        }
      },
      "6": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "7": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 42
        }
      },
      "8": {
        start: {
          line: 12,
          column: 19
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "9": {
        start: {
          line: 13,
          column: 50
        },
        end: {
          line: 13,
          column: 74
        }
      },
      "10": {
        start: {
          line: 15,
          column: 34
        },
        end: {
          line: 15,
          column: 79
        }
      },
      "11": {
        start: {
          line: 16,
          column: 38
        },
        end: {
          line: 16,
          column: 66
        }
      },
      "12": {
        start: {
          line: 17,
          column: 30
        },
        end: {
          line: 17,
          column: 57
        }
      },
      "13": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 57
        }
      },
      "14": {
        start: {
          line: 20,
          column: 25
        },
        end: {
          line: 20,
          column: 145
        }
      },
      "15": {
        start: {
          line: 22,
          column: 25
        },
        end: {
          line: 64,
          column: 44
        }
      },
      "16": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "17": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "18": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 27
        }
      },
      "19": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 23
        }
      },
      "20": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "21": {
        start: {
          line: 28,
          column: 30
        },
        end: {
          line: 28,
          column: 34
        }
      },
      "22": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "23": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 37,
          column: 17
        }
      },
      "24": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "25": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 36,
          column: 85
        }
      },
      "26": {
        start: {
          line: 41,
          column: 33
        },
        end: {
          line: 41,
          column: 94
        }
      },
      "27": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 44,
          column: 17
        }
      },
      "28": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 43,
          column: 46
        }
      },
      "29": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 49,
          column: 13
        }
      },
      "30": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 46
        }
      },
      "31": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 23
        }
      },
      "32": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 36
        }
      },
      "33": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "34": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 85
        }
      },
      "35": {
        start: {
          line: 57,
          column: 33
        },
        end: {
          line: 57,
          column: 94
        }
      },
      "36": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 35
        }
      },
      "37": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 84
        }
      },
      "38": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 32
        }
      },
      "39": {
        start: {
          line: 66,
          column: 23
        },
        end: {
          line: 89,
          column: 37
        }
      },
      "40": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "41": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 54
        }
      },
      "42": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "43": {
        start: {
          line: 71,
          column: 27
        },
        end: {
          line: 71,
          column: 86
        }
      },
      "44": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 82,
          column: 13
        }
      },
      "45": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 40
        }
      },
      "46": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 72
        }
      },
      "47": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 78,
          column: 17
        }
      },
      "48": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 76
        }
      },
      "49": {
        start: {
          line: 85,
          column: 33
        },
        end: {
          line: 85,
          column: 94
        }
      },
      "50": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 83
        }
      },
      "51": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 42
        }
      },
      "52": {
        start: {
          line: 91,
          column: 20
        },
        end: {
          line: 93,
          column: 22
        }
      },
      "53": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 29
        }
      },
      "54": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 99,
          column: 50
        }
      },
      "55": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "56": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 27
        }
      },
      "57": {
        start: {
          line: 101,
          column: 29
        },
        end: {
          line: 107,
          column: 22
        }
      },
      "58": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "59": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 71
        }
      },
      "60": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 19
        }
      },
      "61": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 25
        }
      },
      "62": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 117,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "useUnifiedProfile",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 26
          }
        },
        loc: {
          start: {
            line: 11,
            column: 80
          },
          end: {
            line: 118,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 50
          },
          end: {
            line: 22,
            column: 51
          }
        },
        loc: {
          start: {
            line: 22,
            column: 62
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 66,
            column: 48
          },
          end: {
            line: 66,
            column: 49
          }
        },
        loc: {
          start: {
            line: 66,
            column: 64
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 66
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 91,
            column: 45
          },
          end: {
            line: 91,
            column: 46
          }
        },
        loc: {
          start: {
            line: 91,
            column: 57
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 91
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 95,
            column: 27
          },
          end: {
            line: 95,
            column: 28
          }
        },
        loc: {
          start: {
            line: 95,
            column: 33
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 95
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 101,
            column: 54
          },
          end: {
            line: 101,
            column: 55
          }
        },
        loc: {
          start: {
            line: 101,
            column: 67
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 101
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 27
          },
          end: {
            line: 11,
            column: 78
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 76
          },
          end: {
            line: 11,
            column: 78
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 11,
            column: 55
          },
          end: {
            line: 11,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 67
          },
          end: {
            line: 11,
            column: 71
          }
        }],
        line: 11
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 56
          },
          end: {
            line: 15,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 56
          },
          end: {
            line: 15,
            column: 70
          }
        }, {
          start: {
            line: 15,
            column: 74
          },
          end: {
            line: 15,
            column: 78
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 67
          },
          end: {
            line: 20,
            column: 73
          }
        }, {
          start: {
            line: 20,
            column: 76
          },
          end: {
            line: 20,
            column: 86
          }
        }],
        line: 20
      },
      "4": {
        loc: {
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 42
          }
        }, {
          start: {
            line: 20,
            column: 46
          },
          end: {
            line: 20,
            column: 64
          }
        }],
        line: 20
      },
      "5": {
        loc: {
          start: {
            line: 20,
            column: 93
          },
          end: {
            line: 20,
            column: 144
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 128
          },
          end: {
            line: 20,
            column: 134
          }
        }, {
          start: {
            line: 20,
            column: 137
          },
          end: {
            line: 20,
            column: 144
          }
        }],
        line: 20
      },
      "6": {
        loc: {
          start: {
            line: 20,
            column: 93
          },
          end: {
            line: 20,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 93
          },
          end: {
            line: 20,
            column: 106
          }
        }, {
          start: {
            line: 20,
            column: 110
          },
          end: {
            line: 20,
            column: 125
          }
        }],
        line: 20
      },
      "7": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 24,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 24,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "8": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 45,
            column: 13
          }
        }],
        line: 29
      },
      "9": {
        loc: {
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 29,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 29,
            column: 33
          }
        }, {
          start: {
            line: 29,
            column: 37
          },
          end: {
            line: 29,
            column: 46
          }
        }],
        line: 29
      },
      "10": {
        loc: {
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 37,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 37,
            column: 17
          }
        }, {
          start: {
            line: 35,
            column: 21
          },
          end: {
            line: 37,
            column: 17
          }
        }],
        line: 31
      },
      "11": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "12": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "13": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "14": {
        loc: {
          start: {
            line: 52,
            column: 36
          },
          end: {
            line: 52,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 71
          },
          end: {
            line: 52,
            column: 77
          }
        }, {
          start: {
            line: 52,
            column: 80
          },
          end: {
            line: 52,
            column: 87
          }
        }],
        line: 52
      },
      "15": {
        loc: {
          start: {
            line: 52,
            column: 36
          },
          end: {
            line: 52,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 36
          },
          end: {
            line: 52,
            column: 49
          }
        }, {
          start: {
            line: 52,
            column: 53
          },
          end: {
            line: 52,
            column: 68
          }
        }],
        line: 52
      },
      "16": {
        loc: {
          start: {
            line: 57,
            column: 33
          },
          end: {
            line: 57,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 56
          },
          end: {
            line: 57,
            column: 67
          }
        }, {
          start: {
            line: 57,
            column: 70
          },
          end: {
            line: 57,
            column: 94
          }
        }],
        line: 57
      },
      "17": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "18": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 66
          }
        }, {
          start: {
            line: 67,
            column: 70
          },
          end: {
            line: 67,
            column: 78
          }
        }],
        line: 67
      },
      "19": {
        loc: {
          start: {
            line: 67,
            column: 14
          },
          end: {
            line: 67,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 49
          },
          end: {
            line: 67,
            column: 55
          }
        }, {
          start: {
            line: 67,
            column: 58
          },
          end: {
            line: 67,
            column: 65
          }
        }],
        line: 67
      },
      "20": {
        loc: {
          start: {
            line: 67,
            column: 14
          },
          end: {
            line: 67,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 14
          },
          end: {
            line: 67,
            column: 27
          }
        }, {
          start: {
            line: 67,
            column: 31
          },
          end: {
            line: 67,
            column: 46
          }
        }],
        line: 67
      },
      "21": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        }, {
          start: {
            line: 80,
            column: 17
          },
          end: {
            line: 82,
            column: 13
          }
        }],
        line: 72
      },
      "22": {
        loc: {
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 72,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 72,
            column: 30
          }
        }, {
          start: {
            line: 72,
            column: 34
          },
          end: {
            line: 72,
            column: 45
          }
        }],
        line: 72
      },
      "23": {
        loc: {
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 78,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 78,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "24": {
        loc: {
          start: {
            line: 81,
            column: 32
          },
          end: {
            line: 81,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 32
          },
          end: {
            line: 81,
            column: 44
          }
        }, {
          start: {
            line: 81,
            column: 48
          },
          end: {
            line: 81,
            column: 74
          }
        }],
        line: 81
      },
      "25": {
        loc: {
          start: {
            line: 85,
            column: 33
          },
          end: {
            line: 85,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 56
          },
          end: {
            line: 85,
            column: 67
          }
        }, {
          start: {
            line: 85,
            column: 70
          },
          end: {
            line: 85,
            column: 94
          }
        }],
        line: 85
      },
      "26": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "27": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 96,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 96,
            column: 21
          }
        }, {
          start: {
            line: 96,
            column: 25
          },
          end: {
            line: 96,
            column: 40
          }
        }],
        line: 96
      },
      "28": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "29": {
        loc: {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 102,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 102,
            column: 30
          }
        }, {
          start: {
            line: 102,
            column: 34
          },
          end: {
            line: 102,
            column: 47
          }
        }],
        line: 102
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/hooks/useUnifiedProfile.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/hooks/useUnifiedProfile.ts"],
      sourcesContent: ["'use client'\n\nimport { useState, useEffect, useCallback } from 'react'\nimport { useRouter } from 'next/navigation'\nimport { useAuth } from '@/hooks/useAuth'\nimport { ProfileService } from '@/services/profile'\nimport { ScalableProfile, ProfileFormData } from '@/types/database'\nimport { toast } from 'sonner'\nimport { logger } from '@/utils/logger'\n\nexport interface UseUnifiedProfileProps {\n  username?: string\n  initialProfile?: ScalableProfile\n  autoFetch?: boolean\n}\n\nexport interface UseUnifiedProfileReturn {\n  profile: ScalableProfile | null\n  isLoading: boolean\n  error: string | null\n  isOwnProfile: boolean\n  mode: 'view' | 'edit'\n  setMode: (mode: 'view' | 'edit') => void\n  handleSave: (data: ProfileFormData) => Promise<void>\n  refetch: () => Promise<void>\n}\n\nexport function useUnifiedProfile({\n  username,\n  initialProfile,\n  autoFetch = true\n}: UseUnifiedProfileProps = {}): UseUnifiedProfileReturn {\n  const router = useRouter()\n  const { user, profile: currentUserProfile } = useAuth()\n  \n  // State\n  const [profile, setProfile] = useState<ScalableProfile | null>(initialProfile || null)\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [mode, setMode] = useState<'view' | 'edit'>('view')\n\n  // Determine if this is the user's own profile\n  const isOwnProfile = profile?.id === user?.id\n\n  // Fetch profile data\n  const fetchProfile = useCallback(async () => {\n    if (!user) return\n\n    setIsLoading(true)\n    setError(null)\n\n    try {\n      let profileData: ScalableProfile | null = null\n\n      if (username === 'me' || !username) {\n        // Loading current user's profile\n        if (currentUserProfile) {\n          // Cast the basic Profile to ScalableProfile since ScalableProfile extends Profile\n          profileData = currentUserProfile as ScalableProfile\n        } else {\n          profileData = await ProfileService.getProfile(user.id)\n        }\n      } else {\n        // Loading specific user's profile by username\n        const profiles = await ProfileService.searchProfiles(username, 1, 0)\n        if (profiles.length > 0) {\n          profileData = profiles[0]\n        }\n      }\n\n      if (!profileData) {\n        setError('Profile not found')\n        return\n      }\n\n      setProfile(profileData)\n      \n      // Increment profile views (only for other users' profiles)\n      if (profileData.id !== user?.id) {\n        await ProfileService.incrementProfileViews(profileData.id)\n      }\n\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load profile'\n      setError(errorMessage)\n      logger.error('Profile fetch failed', err, 'useUnifiedProfile')\n    } finally {\n      setIsLoading(false)\n    }\n  }, [username, user, currentUserProfile])\n\n  // Handle profile save\n  const handleSave = useCallback(async (data: ProfileFormData) => {\n    if (!user?.id || !profile) {\n      throw new Error('User not authenticated')\n    }\n\n    try {\n      const result = await ProfileService.updateProfile(user.id, data)\n      \n      if (result.success && result.data) {\n        setProfile(result.data)\n        toast.success('Profile updated successfully!')\n        \n        // Refresh current user profile in auth store if updating own profile\n        if (isOwnProfile) {\n          // TODO: Trigger auth store profile refresh\n        }\n      } else {\n        throw new Error(result.error || 'Failed to update profile')\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to save profile'\n      logger.error('Profile save failed', err, 'useUnifiedProfile')\n      throw new Error(errorMessage)\n    }\n  }, [user, profile, isOwnProfile])\n\n  // Refetch profile data\n  const refetch = useCallback(async () => {\n    await fetchProfile()\n  }, [fetchProfile])\n\n  // Auto-fetch on mount if enabled\n  useEffect(() => {\n    if (autoFetch && !initialProfile) {\n      fetchProfile()\n    }\n  }, [autoFetch, initialProfile, fetchProfile])\n\n  // Handle mode changes\n  const handleModeChange = useCallback((newMode: 'view' | 'edit') => {\n    if (newMode === 'edit' && !isOwnProfile) {\n      toast.error('You can only edit your own profile')\n      return\n    }\n    setMode(newMode)\n  }, [isOwnProfile])\n\n  return {\n    profile,\n    isLoading,\n    error,\n    isOwnProfile,\n    mode,\n    setMode: handleModeChange,\n    handleSave,\n    refetch\n  }\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "90072a390746b13afa0896084616d1d1aacef815"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2g1brxzqtu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2g1brxzqtu();
cov_2g1brxzqtu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2g1brxzqtu().s[1]++;
exports.useUnifiedProfile = useUnifiedProfile;
const react_1 =
/* istanbul ignore next */
(cov_2g1brxzqtu().s[2]++, require("react"));
const navigation_1 =
/* istanbul ignore next */
(cov_2g1brxzqtu().s[3]++, require("next/navigation"));
const useAuth_1 =
/* istanbul ignore next */
(cov_2g1brxzqtu().s[4]++, require("@/hooks/useAuth"));
const profile_1 =
/* istanbul ignore next */
(cov_2g1brxzqtu().s[5]++, require("@/services/profile"));
const sonner_1 =
/* istanbul ignore next */
(cov_2g1brxzqtu().s[6]++, require("sonner"));
const logger_1 =
/* istanbul ignore next */
(cov_2g1brxzqtu().s[7]++, require("@/utils/logger"));
function useUnifiedProfile({
  username,
  initialProfile,
  autoFetch =
  /* istanbul ignore next */
  (cov_2g1brxzqtu().b[1][0]++, true)
} =
/* istanbul ignore next */
(cov_2g1brxzqtu().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_2g1brxzqtu().f[0]++;
  const router =
  /* istanbul ignore next */
  (cov_2g1brxzqtu().s[8]++, (0, navigation_1.useRouter)());
  const {
    user,
    profile: currentUserProfile
  } =
  /* istanbul ignore next */
  (cov_2g1brxzqtu().s[9]++, (0, useAuth_1.useAuth)());
  // State
  const [profile, setProfile] =
  /* istanbul ignore next */
  (cov_2g1brxzqtu().s[10]++, (0, react_1.useState)(
  /* istanbul ignore next */
  (cov_2g1brxzqtu().b[2][0]++, initialProfile) ||
  /* istanbul ignore next */
  (cov_2g1brxzqtu().b[2][1]++, null)));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_2g1brxzqtu().s[11]++, (0, react_1.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_2g1brxzqtu().s[12]++, (0, react_1.useState)(null));
  const [mode, setMode] =
  /* istanbul ignore next */
  (cov_2g1brxzqtu().s[13]++, (0, react_1.useState)('view'));
  // Determine if this is the user's own profile
  const isOwnProfile =
  /* istanbul ignore next */
  (cov_2g1brxzqtu().s[14]++, (
  /* istanbul ignore next */
  (cov_2g1brxzqtu().b[4][0]++, profile === null) ||
  /* istanbul ignore next */
  (cov_2g1brxzqtu().b[4][1]++, profile === void 0) ?
  /* istanbul ignore next */
  (cov_2g1brxzqtu().b[3][0]++, void 0) :
  /* istanbul ignore next */
  (cov_2g1brxzqtu().b[3][1]++, profile.id)) === (
  /* istanbul ignore next */
  (cov_2g1brxzqtu().b[6][0]++, user === null) ||
  /* istanbul ignore next */
  (cov_2g1brxzqtu().b[6][1]++, user === void 0) ?
  /* istanbul ignore next */
  (cov_2g1brxzqtu().b[5][0]++, void 0) :
  /* istanbul ignore next */
  (cov_2g1brxzqtu().b[5][1]++, user.id)));
  // Fetch profile data
  const fetchProfile =
  /* istanbul ignore next */
  (cov_2g1brxzqtu().s[15]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2g1brxzqtu().f[1]++;
    cov_2g1brxzqtu().s[16]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2g1brxzqtu().b[7][0]++;
      cov_2g1brxzqtu().s[17]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2g1brxzqtu().b[7][1]++;
    }
    cov_2g1brxzqtu().s[18]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_2g1brxzqtu().s[19]++;
    setError(null);
    /* istanbul ignore next */
    cov_2g1brxzqtu().s[20]++;
    try {
      let profileData =
      /* istanbul ignore next */
      (cov_2g1brxzqtu().s[21]++, null);
      /* istanbul ignore next */
      cov_2g1brxzqtu().s[22]++;
      if (
      /* istanbul ignore next */
      (cov_2g1brxzqtu().b[9][0]++, username === 'me') ||
      /* istanbul ignore next */
      (cov_2g1brxzqtu().b[9][1]++, !username)) {
        /* istanbul ignore next */
        cov_2g1brxzqtu().b[8][0]++;
        cov_2g1brxzqtu().s[23]++;
        // Loading current user's profile
        if (currentUserProfile) {
          /* istanbul ignore next */
          cov_2g1brxzqtu().b[10][0]++;
          cov_2g1brxzqtu().s[24]++;
          // Cast the basic Profile to ScalableProfile since ScalableProfile extends Profile
          profileData = currentUserProfile;
        } else {
          /* istanbul ignore next */
          cov_2g1brxzqtu().b[10][1]++;
          cov_2g1brxzqtu().s[25]++;
          profileData = await profile_1.ProfileService.getProfile(user.id);
        }
      } else {
        /* istanbul ignore next */
        cov_2g1brxzqtu().b[8][1]++;
        // Loading specific user's profile by username
        const profiles =
        /* istanbul ignore next */
        (cov_2g1brxzqtu().s[26]++, await profile_1.ProfileService.searchProfiles(username, 1, 0));
        /* istanbul ignore next */
        cov_2g1brxzqtu().s[27]++;
        if (profiles.length > 0) {
          /* istanbul ignore next */
          cov_2g1brxzqtu().b[11][0]++;
          cov_2g1brxzqtu().s[28]++;
          profileData = profiles[0];
        } else
        /* istanbul ignore next */
        {
          cov_2g1brxzqtu().b[11][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2g1brxzqtu().s[29]++;
      if (!profileData) {
        /* istanbul ignore next */
        cov_2g1brxzqtu().b[12][0]++;
        cov_2g1brxzqtu().s[30]++;
        setError('Profile not found');
        /* istanbul ignore next */
        cov_2g1brxzqtu().s[31]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2g1brxzqtu().b[12][1]++;
      }
      cov_2g1brxzqtu().s[32]++;
      setProfile(profileData);
      // Increment profile views (only for other users' profiles)
      /* istanbul ignore next */
      cov_2g1brxzqtu().s[33]++;
      if (profileData.id !== (
      /* istanbul ignore next */
      (cov_2g1brxzqtu().b[15][0]++, user === null) ||
      /* istanbul ignore next */
      (cov_2g1brxzqtu().b[15][1]++, user === void 0) ?
      /* istanbul ignore next */
      (cov_2g1brxzqtu().b[14][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2g1brxzqtu().b[14][1]++, user.id))) {
        /* istanbul ignore next */
        cov_2g1brxzqtu().b[13][0]++;
        cov_2g1brxzqtu().s[34]++;
        await profile_1.ProfileService.incrementProfileViews(profileData.id);
      } else
      /* istanbul ignore next */
      {
        cov_2g1brxzqtu().b[13][1]++;
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_2g1brxzqtu().s[35]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_2g1brxzqtu().b[16][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2g1brxzqtu().b[16][1]++, 'Failed to load profile'));
      /* istanbul ignore next */
      cov_2g1brxzqtu().s[36]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_2g1brxzqtu().s[37]++;
      logger_1.logger.error('Profile fetch failed', err, 'useUnifiedProfile');
    } finally {
      /* istanbul ignore next */
      cov_2g1brxzqtu().s[38]++;
      setIsLoading(false);
    }
  }, [username, user, currentUserProfile]));
  // Handle profile save
  const handleSave =
  /* istanbul ignore next */
  (cov_2g1brxzqtu().s[39]++, (0, react_1.useCallback)(async data => {
    /* istanbul ignore next */
    cov_2g1brxzqtu().f[2]++;
    cov_2g1brxzqtu().s[40]++;
    if (
    /* istanbul ignore next */
    (cov_2g1brxzqtu().b[18][0]++, !(
    /* istanbul ignore next */
    (cov_2g1brxzqtu().b[20][0]++, user === null) ||
    /* istanbul ignore next */
    (cov_2g1brxzqtu().b[20][1]++, user === void 0) ?
    /* istanbul ignore next */
    (cov_2g1brxzqtu().b[19][0]++, void 0) :
    /* istanbul ignore next */
    (cov_2g1brxzqtu().b[19][1]++, user.id))) ||
    /* istanbul ignore next */
    (cov_2g1brxzqtu().b[18][1]++, !profile)) {
      /* istanbul ignore next */
      cov_2g1brxzqtu().b[17][0]++;
      cov_2g1brxzqtu().s[41]++;
      throw new Error('User not authenticated');
    } else
    /* istanbul ignore next */
    {
      cov_2g1brxzqtu().b[17][1]++;
    }
    cov_2g1brxzqtu().s[42]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_2g1brxzqtu().s[43]++, await profile_1.ProfileService.updateProfile(user.id, data));
      /* istanbul ignore next */
      cov_2g1brxzqtu().s[44]++;
      if (
      /* istanbul ignore next */
      (cov_2g1brxzqtu().b[22][0]++, result.success) &&
      /* istanbul ignore next */
      (cov_2g1brxzqtu().b[22][1]++, result.data)) {
        /* istanbul ignore next */
        cov_2g1brxzqtu().b[21][0]++;
        cov_2g1brxzqtu().s[45]++;
        setProfile(result.data);
        /* istanbul ignore next */
        cov_2g1brxzqtu().s[46]++;
        sonner_1.toast.success('Profile updated successfully!');
        // Refresh current user profile in auth store if updating own profile
        /* istanbul ignore next */
        cov_2g1brxzqtu().s[47]++;
        if (isOwnProfile) {
          /* istanbul ignore next */
          cov_2g1brxzqtu().b[23][0]++;
        } // TODO: Trigger auth store profile refresh
        else
        /* istanbul ignore next */
        {
          cov_2g1brxzqtu().b[23][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_2g1brxzqtu().b[21][1]++;
        cov_2g1brxzqtu().s[48]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_2g1brxzqtu().b[24][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_2g1brxzqtu().b[24][1]++, 'Failed to update profile'));
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_2g1brxzqtu().s[49]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_2g1brxzqtu().b[25][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2g1brxzqtu().b[25][1]++, 'Failed to save profile'));
      /* istanbul ignore next */
      cov_2g1brxzqtu().s[50]++;
      logger_1.logger.error('Profile save failed', err, 'useUnifiedProfile');
      /* istanbul ignore next */
      cov_2g1brxzqtu().s[51]++;
      throw new Error(errorMessage);
    }
  }, [user, profile, isOwnProfile]));
  // Refetch profile data
  const refetch =
  /* istanbul ignore next */
  (cov_2g1brxzqtu().s[52]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2g1brxzqtu().f[3]++;
    cov_2g1brxzqtu().s[53]++;
    await fetchProfile();
  }, [fetchProfile]));
  // Auto-fetch on mount if enabled
  /* istanbul ignore next */
  cov_2g1brxzqtu().s[54]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_2g1brxzqtu().f[4]++;
    cov_2g1brxzqtu().s[55]++;
    if (
    /* istanbul ignore next */
    (cov_2g1brxzqtu().b[27][0]++, autoFetch) &&
    /* istanbul ignore next */
    (cov_2g1brxzqtu().b[27][1]++, !initialProfile)) {
      /* istanbul ignore next */
      cov_2g1brxzqtu().b[26][0]++;
      cov_2g1brxzqtu().s[56]++;
      fetchProfile();
    } else
    /* istanbul ignore next */
    {
      cov_2g1brxzqtu().b[26][1]++;
    }
  }, [autoFetch, initialProfile, fetchProfile]);
  // Handle mode changes
  const handleModeChange =
  /* istanbul ignore next */
  (cov_2g1brxzqtu().s[57]++, (0, react_1.useCallback)(newMode => {
    /* istanbul ignore next */
    cov_2g1brxzqtu().f[5]++;
    cov_2g1brxzqtu().s[58]++;
    if (
    /* istanbul ignore next */
    (cov_2g1brxzqtu().b[29][0]++, newMode === 'edit') &&
    /* istanbul ignore next */
    (cov_2g1brxzqtu().b[29][1]++, !isOwnProfile)) {
      /* istanbul ignore next */
      cov_2g1brxzqtu().b[28][0]++;
      cov_2g1brxzqtu().s[59]++;
      sonner_1.toast.error('You can only edit your own profile');
      /* istanbul ignore next */
      cov_2g1brxzqtu().s[60]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2g1brxzqtu().b[28][1]++;
    }
    cov_2g1brxzqtu().s[61]++;
    setMode(newMode);
  }, [isOwnProfile]));
  /* istanbul ignore next */
  cov_2g1brxzqtu().s[62]++;
  return {
    profile,
    isLoading,
    error,
    isOwnProfile,
    mode,
    setMode: handleModeChange,
    handleSave,
    refetch
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,