24b36125ce91ec6e32a564a6491aec66
"use strict";

/* istanbul ignore next */
function cov_2r3cjm4ntt() {
  var path = "/home/g/dev/orangecat/src/services/supabase/server.ts";
  var hash = "9a5d287301112ae5f361ceb96f0bf07a86a80d29";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/services/supabase/server.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 14
        },
        end: {
          line: 4,
          column: 38
        }
      },
      "3": {
        start: {
          line: 5,
          column: 18
        },
        end: {
          line: 5,
          column: 41
        }
      },
      "4": {
        start: {
          line: 7,
          column: 20
        },
        end: {
          line: 7,
          column: 102
        }
      },
      "5": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 8,
          column: 279
        }
      },
      "6": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 12,
          column: 1
        }
      },
      "7": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 157
        }
      },
      "8": {
        start: {
          line: 14,
          column: 27
        },
        end: {
          line: 40,
          column: 1
        }
      },
      "9": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 15,
          column: 54
        }
      },
      "10": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 39,
          column: 7
        }
      },
      "11": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 98
        }
      },
      "12": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 28,
          column: 17
        }
      },
      "13": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 58
        }
      },
      "14": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 36,
          column: 17
        }
      },
      "15": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 104
        }
      },
      "16": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 41,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 27
          },
          end: {
            line: 14,
            column: 28
          }
        },
        loc: {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 13
          }
        },
        loc: {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 21,
            column: 13
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 13
          }
        },
        loc: {
          start: {
            line: 22,
            column: 38
          },
          end: {
            line: 29,
            column: 13
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 13
          }
        },
        loc: {
          start: {
            line: 30,
            column: 34
          },
          end: {
            line: 37,
            column: 13
          }
        },
        line: 30
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 7,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 7,
            column: 56
          }
        }, {
          start: {
            line: 7,
            column: 60
          },
          end: {
            line: 7,
            column: 102
          }
        }],
        line: 7
      },
      "1": {
        loc: {
          start: {
            line: 8,
            column: 24
          },
          end: {
            line: 8,
            column: 279
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 24
          },
          end: {
            line: 8,
            column: 65
          }
        }, {
          start: {
            line: 8,
            column: 69
          },
          end: {
            line: 8,
            column: 279
          }
        }],
        line: 8
      },
      "2": {
        loc: {
          start: {
            line: 10,
            column: 0
          },
          end: {
            line: 12,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 0
          },
          end: {
            line: 12,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "3": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 5
          },
          end: {
            line: 10,
            column: 42
          }
        }, {
          start: {
            line: 10,
            column: 46
          },
          end: {
            line: 10,
            column: 88
          }
        }, {
          start: {
            line: 10,
            column: 93
          },
          end: {
            line: 10,
            column: 130
          }
        }],
        line: 10
      },
      "4": {
        loc: {
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 20,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 80
          },
          end: {
            line: 20,
            column: 86
          }
        }, {
          start: {
            line: 20,
            column: 89
          },
          end: {
            line: 20,
            column: 97
          }
        }],
        line: 20
      },
      "5": {
        loc: {
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 20,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 20,
            column: 60
          }
        }, {
          start: {
            line: 20,
            column: 64
          },
          end: {
            line: 20,
            column: 77
          }
        }],
        line: 20
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/services/supabase/server.ts",
      mappings: ";;;AAAA,uCAAoG;AACpG,0CAAwD;AAIxD,sDAAsD;AACtD,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,wBAAwB,IAAI,0CAA0C,CAAA;AACtG,MAAM,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,6BAA6B,IAAI,kNAAkN,CAAA;AAEvR,8CAA8C;AAC9C,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,wBAAwB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE,CAAC;IACnI,MAAM,CAAC,IAAI,CAAC,oHAAoH,EAAE,SAAS,EAAE,UAAU,CAAC,CAAA;AAC1J,CAAC;AAED,uCAAuC;AAChC,MAAM,kBAAkB,GAAG,KAAK,IAAI,EAAE;IAC3C,MAAM,WAAW,GAAG,MAAM,IAAA,iBAAc,GAAE,CAAA;IAE1C,OAAO,IAAA,wBAA0B,EAAW,WAAW,EAAE,eAAe,EAAE;QACxE,OAAO,EAAE;YACP,GAAG,CAAC,IAAY;;gBACd,OAAO,MAAA,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,0CAAE,KAAK,CAAA;YACrC,CAAC;YACD,GAAG,CAAC,IAAY,EAAE,KAAa,EAAE,OAAsB;gBACrD,IAAI,CAAC;oBACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;gBACvC,CAAC;gBAAC,WAAM,CAAC;oBACP,gCAAgC;gBAClC,CAAC;YACH,CAAC;YACD,MAAM,CAAC,IAAY,EAAE,OAAsB;gBACzC,IAAI,CAAC;oBACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,kCAAO,OAAO,KAAE,MAAM,EAAE,CAAC,IAAG,CAAA;gBACtD,CAAC;gBAAC,WAAM,CAAC;oBACP,gCAAgC;gBAClC,CAAC;YACH,CAAC;SACF;KACF,CAAC,CAAA;AACJ,CAAC,CAAA;AAxBY,QAAA,kBAAkB,sBAwB9B",
      names: [],
      sources: ["/home/g/dev/orangecat/src/services/supabase/server.ts"],
      sourcesContent: ["import { createServerClient as createSupabaseServerClient, type CookieOptions } from '@supabase/ssr'\nimport { cookies as getNextCookies } from 'next/headers'\nimport { Database } from '@/types/database'\nimport { SupabaseClient } from '@supabase/supabase-js'\n\n// Environment variables with fallbacks for build time\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://ohkueislstxomdjavyhs.supabase.co'\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9oa3VlaXNsc3R4b21kamF2eWhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ1NDc5NTAsImV4cCI6MjA2MDEyMzk1MH0.Qc6ahUbs_5BCa4csEYsBtyxNUDYb4h3Y4K_16N1DNaY'\n\n// Warn if using fallback values in production\nif ((!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) && process.env.NODE_ENV === 'production') {\n  logger.warn('Missing Supabase environment variables in production. Using fallback values. Some features may not work correctly.', undefined, 'Security')\n}\n\n// Create a server-side Supabase client\nexport const createServerClient = async () => {\n  const cookieStore = await getNextCookies()\n\n  return createSupabaseServerClient<Database>(supabaseUrl, supabaseAnonKey, {\n    cookies: {\n      get(name: string) {\n        return cookieStore.get(name)?.value\n      },\n      set(name: string, value: string, options: CookieOptions) {\n        try {\n          cookieStore.set(name, value, options)\n        } catch {\n          // no-op in unsupported contexts\n        }\n      },\n      remove(name: string, options: CookieOptions) {\n        try {\n          cookieStore.set(name, '', { ...options, maxAge: 0 })\n        } catch {\n          // no-op in unsupported contexts\n        }\n      },\n    },\n  })\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9a5d287301112ae5f361ceb96f0bf07a86a80d29"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2r3cjm4ntt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2r3cjm4ntt();
cov_2r3cjm4ntt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2r3cjm4ntt().s[1]++;
exports.createServerClient = void 0;
const ssr_1 =
/* istanbul ignore next */
(cov_2r3cjm4ntt().s[2]++, require("@supabase/ssr"));
const headers_1 =
/* istanbul ignore next */
(cov_2r3cjm4ntt().s[3]++, require("next/headers"));
// Environment variables with fallbacks for build time
const supabaseUrl =
/* istanbul ignore next */
(cov_2r3cjm4ntt().s[4]++,
/* istanbul ignore next */
(cov_2r3cjm4ntt().b[0][0]++, process.env.NEXT_PUBLIC_SUPABASE_URL) ||
/* istanbul ignore next */
(cov_2r3cjm4ntt().b[0][1]++, 'https://ohkueislstxomdjavyhs.supabase.co'));
const supabaseAnonKey =
/* istanbul ignore next */
(cov_2r3cjm4ntt().s[5]++,
/* istanbul ignore next */
(cov_2r3cjm4ntt().b[1][0]++, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) ||
/* istanbul ignore next */
(cov_2r3cjm4ntt().b[1][1]++, 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9oa3VlaXNsc3R4b21kamF2eWhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ1NDc5NTAsImV4cCI6MjA2MDEyMzk1MH0.Qc6ahUbs_5BCa4csEYsBtyxNUDYb4h3Y4K_16N1DNaY'));
// Warn if using fallback values in production
/* istanbul ignore next */
cov_2r3cjm4ntt().s[6]++;
if ((
/* istanbul ignore next */
(cov_2r3cjm4ntt().b[3][0]++, !process.env.NEXT_PUBLIC_SUPABASE_URL) ||
/* istanbul ignore next */
(cov_2r3cjm4ntt().b[3][1]++, !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY)) &&
/* istanbul ignore next */
(cov_2r3cjm4ntt().b[3][2]++, process.env.NODE_ENV === 'production')) {
  /* istanbul ignore next */
  cov_2r3cjm4ntt().b[2][0]++;
  cov_2r3cjm4ntt().s[7]++;
  logger.warn('Missing Supabase environment variables in production. Using fallback values. Some features may not work correctly.', undefined, 'Security');
} else
/* istanbul ignore next */
{
  cov_2r3cjm4ntt().b[2][1]++;
}
// Create a server-side Supabase client
cov_2r3cjm4ntt().s[8]++;
const createServerClient = async () => {
  /* istanbul ignore next */
  cov_2r3cjm4ntt().f[0]++;
  const cookieStore =
  /* istanbul ignore next */
  (cov_2r3cjm4ntt().s[9]++, await (0, headers_1.cookies)());
  /* istanbul ignore next */
  cov_2r3cjm4ntt().s[10]++;
  return (0, ssr_1.createServerClient)(supabaseUrl, supabaseAnonKey, {
    cookies: {
      get(name) {
        /* istanbul ignore next */
        cov_2r3cjm4ntt().f[1]++;
        var _a;
        /* istanbul ignore next */
        cov_2r3cjm4ntt().s[11]++;
        return /* istanbul ignore next */(cov_2r3cjm4ntt().b[5][0]++, (_a = cookieStore.get(name)) === null) ||
        /* istanbul ignore next */
        (cov_2r3cjm4ntt().b[5][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2r3cjm4ntt().b[4][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2r3cjm4ntt().b[4][1]++, _a.value);
      },
      set(name, value, options) {
        /* istanbul ignore next */
        cov_2r3cjm4ntt().f[2]++;
        cov_2r3cjm4ntt().s[12]++;
        try {
          /* istanbul ignore next */
          cov_2r3cjm4ntt().s[13]++;
          cookieStore.set(name, value, options);
        } catch (_a) {
          // no-op in unsupported contexts
        }
      },
      remove(name, options) {
        /* istanbul ignore next */
        cov_2r3cjm4ntt().f[3]++;
        cov_2r3cjm4ntt().s[14]++;
        try {
          /* istanbul ignore next */
          cov_2r3cjm4ntt().s[15]++;
          cookieStore.set(name, '', Object.assign(Object.assign({}, options), {
            maxAge: 0
          }));
        } catch (_a) {
          // no-op in unsupported contexts
        }
      }
    }
  });
};
/* istanbul ignore next */
cov_2r3cjm4ntt().s[16]++;
exports.createServerClient = createServerClient;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMnIzY2ptNG50dCIsImFjdHVhbENvdmVyYWdlIiwicyIsInNzcl8xIiwicmVxdWlyZSIsImhlYWRlcnNfMSIsInN1cGFiYXNlVXJsIiwiYiIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUFub25LZXkiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsIk5PREVfRU5WIiwibG9nZ2VyIiwid2FybiIsInVuZGVmaW5lZCIsImNyZWF0ZVNlcnZlckNsaWVudCIsImYiLCJjb29raWVTdG9yZSIsImNvb2tpZXMiLCJnZXQiLCJuYW1lIiwiX2EiLCJ2YWx1ZSIsInNldCIsIm9wdGlvbnMiLCJyZW1vdmUiLCJPYmplY3QiLCJhc3NpZ24iLCJtYXhBZ2UiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiL2hvbWUvZy9kZXYvb3JhbmdlY2F0L3NyYy9zZXJ2aWNlcy9zdXBhYmFzZS9zZXJ2ZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlU2VydmVyQ2xpZW50IGFzIGNyZWF0ZVN1cGFiYXNlU2VydmVyQ2xpZW50LCB0eXBlIENvb2tpZU9wdGlvbnMgfSBmcm9tICdAc3VwYWJhc2Uvc3NyJ1xuaW1wb3J0IHsgY29va2llcyBhcyBnZXROZXh0Q29va2llcyB9IGZyb20gJ25leHQvaGVhZGVycydcbmltcG9ydCB7IERhdGFiYXNlIH0gZnJvbSAnQC90eXBlcy9kYXRhYmFzZSdcbmltcG9ydCB7IFN1cGFiYXNlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJ1xuXG4vLyBFbnZpcm9ubWVudCB2YXJpYWJsZXMgd2l0aCBmYWxsYmFja3MgZm9yIGJ1aWxkIHRpbWVcbmNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIHx8ICdodHRwczovL29oa3VlaXNsc3R4b21kamF2eWhzLnN1cGFiYXNlLmNvJ1xuY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkgfHwgJ2V5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUpwYzNNaU9pSnpkWEJoWW1GelpTSXNJbkpsWmlJNkltOW9hM1ZsYVhOc2MzUjRiMjFrYW1GMmVXaHpJaXdpY205c1pTSTZJbUZ1YjI0aUxDSnBZWFFpT2pFM05EUTFORGM1TlRBc0ltVjRjQ0k2TWpBMk1ERXlNemsxTUgwLlFjNmFoVWJzXzVCQ2E0Y3NFWXNCdHl4TlVEWWI0aDNZNEtfMTZOMUROYVknXG5cbi8vIFdhcm4gaWYgdXNpbmcgZmFsbGJhY2sgdmFsdWVzIGluIHByb2R1Y3Rpb25cbmlmICgoIXByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCB8fCAhcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkpICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbG9nZ2VyLndhcm4oJ01pc3NpbmcgU3VwYWJhc2UgZW52aXJvbm1lbnQgdmFyaWFibGVzIGluIHByb2R1Y3Rpb24uIFVzaW5nIGZhbGxiYWNrIHZhbHVlcy4gU29tZSBmZWF0dXJlcyBtYXkgbm90IHdvcmsgY29ycmVjdGx5LicsIHVuZGVmaW5lZCwgJ1NlY3VyaXR5Jylcbn1cblxuLy8gQ3JlYXRlIGEgc2VydmVyLXNpZGUgU3VwYWJhc2UgY2xpZW50XG5leHBvcnQgY29uc3QgY3JlYXRlU2VydmVyQ2xpZW50ID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCBjb29raWVTdG9yZSA9IGF3YWl0IGdldE5leHRDb29raWVzKClcblxuICByZXR1cm4gY3JlYXRlU3VwYWJhc2VTZXJ2ZXJDbGllbnQ8RGF0YWJhc2U+KHN1cGFiYXNlVXJsLCBzdXBhYmFzZUFub25LZXksIHtcbiAgICBjb29raWVzOiB7XG4gICAgICBnZXQobmFtZTogc3RyaW5nKSB7XG4gICAgICAgIHJldHVybiBjb29raWVTdG9yZS5nZXQobmFtZSk/LnZhbHVlXG4gICAgICB9LFxuICAgICAgc2V0KG5hbWU6IHN0cmluZywgdmFsdWU6IHN0cmluZywgb3B0aW9uczogQ29va2llT3B0aW9ucykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvb2tpZVN0b3JlLnNldChuYW1lLCB2YWx1ZSwgb3B0aW9ucylcbiAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgLy8gbm8tb3AgaW4gdW5zdXBwb3J0ZWQgY29udGV4dHNcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHJlbW92ZShuYW1lOiBzdHJpbmcsIG9wdGlvbnM6IENvb2tpZU9wdGlvbnMpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb29raWVTdG9yZS5zZXQobmFtZSwgJycsIHsgLi4ub3B0aW9ucywgbWF4QWdlOiAwIH0pXG4gICAgICAgIH0gY2F0Y2gge1xuICAgICAgICAgIC8vIG5vLW9wIGluIHVuc3VwcG9ydGVkIGNvbnRleHRzXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgfSxcbiAgfSlcbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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