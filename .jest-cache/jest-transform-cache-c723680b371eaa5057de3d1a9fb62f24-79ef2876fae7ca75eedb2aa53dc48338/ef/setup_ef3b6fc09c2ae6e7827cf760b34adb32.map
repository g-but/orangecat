{"file":"/home/g/dev/orangecat/tests/setup.ts","mappings":";AAAA;;;;;;;GAOG;;AAMH,8BAgDC;AApDD;;;GAGG;AACY,KAAK,UAAU,WAAW;IACvC,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;IAEhD,IAAI,CAAC;QACH,oCAAoC;QACpC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,GAAG,CAAC;QAE/D,iCAAiC;QACjC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,sDAAsD,CAAC;YACnH,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACrE,CAAC;QAED,qCAAqC;QACrC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,OAAO,CAAC,GAAG,CAAC,wBAAwB,IAAI,0BAA0B,CAAC;YACnG,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACzE,CAAC;QAED,0BAA0B;QAC1B,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;QAE7B,MAAM,QAAQ,GAAG,CAAC,cAAc,EAAE,UAAU,EAAE,mBAAmB,CAAC,CAAC;QACnE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACrB,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC;YAC9C,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC;gBAC5B,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC3C,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,EAAE,CAAC,CAAC;YAChD,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,2BAA2B;QAC3B,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAC7C,yCAAyC;QAEzC,gCAAgC;QAChC,IAAI,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;YAC1C,mCAAmC;QACrC,CAAC;QAED,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;IAC5D,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACpD,MAAM,KAAK,CAAC;IACd,CAAC;AACH,CAAC","names":[],"sources":["/home/g/dev/orangecat/tests/setup.ts"],"sourcesContent":["/**\n * Global Test Setup for OrangeCat\n * Initialize test environment before any tests run\n *\n * Created: 2025-09-24\n * Last Modified: 2025-09-24\n * Last Modified Summary: Global test setup for comprehensive testing\n */\n\n/**\n * Global setup function\n * This runs before any tests start\n */\nexport default async function globalSetup() {\n  console.log('üöÄ Global test setup starting...');\n\n  try {\n    // Set up test environment variables\n    process.env.NODE_ENV = 'test';\n    process.env.JEST_WORKER_ID = process.env.JEST_WORKER_ID || '1';\n\n    // Set up test database if needed\n    if (!process.env.TEST_DATABASE_URL) {\n      process.env.TEST_DATABASE_URL = process.env.DATABASE_URL || 'postgresql://test:test@localhost:5432/orangecat_test';\n      console.log('Using test database:', process.env.TEST_DATABASE_URL);\n    }\n\n    // Set up test Supabase configuration\n    if (!process.env.TEST_SUPABASE_URL) {\n      process.env.TEST_SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://test.supabase.co';\n      console.log('Using test Supabase URL:', process.env.TEST_SUPABASE_URL);\n    }\n\n    // Set up test directories\n    const fs = require('fs');\n    const path = require('path');\n\n    const testDirs = ['test-results', 'coverage', 'playwright-report'];\n    testDirs.forEach(dir => {\n      const dirPath = path.join(process.cwd(), dir);\n      if (!fs.existsSync(dirPath)) {\n        fs.mkdirSync(dirPath, { recursive: true });\n        console.log(`Created test directory: ${dir}`);\n      }\n    });\n\n    // Initialize test database\n    console.log('Initializing test database...');\n    // Add database initialization logic here\n\n    // Set up mock servers if needed\n    if (process.env.USE_MOCK_SERVERS) {\n      console.log('Setting up mock servers...');\n      // Add mock server setup logic here\n    }\n\n    console.log('‚úÖ Global test setup completed successfully');\n  } catch (error) {\n    console.error('‚ùå Global test setup failed:', error);\n    throw error;\n  }\n}"],"version":3}