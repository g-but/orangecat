1b8f81d56c6bfce3462b4e2e13e2a86f
'use client';
"use strict";

/* istanbul ignore next */
function cov_1wh9afkzds() {
  var path = "/home/g/dev/orangecat/src/services/supabase/client.ts";
  var hash = "e04a4d661da48c0c005e3384e007ca3ad3ed793f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/services/supabase/client.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 57
        }
      },
      "2": {
        start: {
          line: 5,
          column: 14
        },
        end: {
          line: 5,
          column: 38
        }
      },
      "3": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 42
        }
      },
      "4": {
        start: {
          line: 8,
          column: 20
        },
        end: {
          line: 8,
          column: 102
        }
      },
      "5": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 9,
          column: 279
        }
      },
      "6": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 22,
          column: 1
        }
      },
      "7": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "8": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "9": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 142
        }
      },
      "10": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 26,
          column: 1
        }
      },
      "11": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 138
        }
      },
      "12": {
        start: {
          line: 28,
          column: 17
        },
        end: {
          line: 55,
          column: 2
        }
      },
      "13": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 42,
          column: 55
        }
      },
      "14": {
        start: {
          line: 56,
          column: 0
        },
        end: {
          line: 56,
          column: 28
        }
      },
      "15": {
        start: {
          line: 58,
          column: 0
        },
        end: {
          line: 75,
          column: 1
        }
      },
      "16": {
        start: {
          line: 59,
          column: 27
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "17": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "18": {
        start: {
          line: 61,
          column: 30
        },
        end: {
          line: 61,
          column: 86
        }
      },
      "19": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "20": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 117
        }
      },
      "21": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 99
        }
      },
      "22": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 37
        }
      },
      "23": {
        start: {
          line: 77,
          column: 0
        },
        end: {
          line: 77,
          column: 27
        }
      },
      "24": {
        start: {
          line: 79,
          column: 29
        },
        end: {
          line: 100,
          column: 2
        }
      },
      "25": {
        start: {
          line: 79,
          column: 35
        },
        end: {
          line: 100,
          column: 2
        }
      },
      "26": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 113
        }
      },
      "27": {
        start: {
          line: 101,
          column: 0
        },
        end: {
          line: 101,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 39,
            column: 15
          },
          end: {
            line: 39,
            column: 16
          }
        },
        loc: {
          start: {
            line: 39,
            column: 38
          },
          end: {
            line: 43,
            column: 9
          }
        },
        line: 39
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 59,
            column: 27
          },
          end: {
            line: 59,
            column: 28
          }
        },
        loc: {
          start: {
            line: 59,
            column: 39
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 59
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 79,
            column: 29
          },
          end: {
            line: 79,
            column: 30
          }
        },
        loc: {
          start: {
            line: 79,
            column: 35
          },
          end: {
            line: 100,
            column: 2
          }
        },
        line: 79
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 88,
            column: 15
          },
          end: {
            line: 88,
            column: 16
          }
        },
        loc: {
          start: {
            line: 88,
            column: 38
          },
          end: {
            line: 90,
            column: 9
          }
        },
        line: 88
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 8,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 8,
            column: 56
          }
        }, {
          start: {
            line: 8,
            column: 60
          },
          end: {
            line: 8,
            column: 102
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 24
          },
          end: {
            line: 9,
            column: 279
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 24
          },
          end: {
            line: 9,
            column: 65
          }
        }, {
          start: {
            line: 9,
            column: 69
          },
          end: {
            line: 9,
            column: 279
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 11,
            column: 0
          },
          end: {
            line: 22,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 0
          },
          end: {
            line: 22,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "3": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 142
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 41
          }
        }, {
          start: {
            line: 11,
            column: 46
          },
          end: {
            line: 11,
            column: 95
          }
        }, {
          start: {
            line: 11,
            column: 99
          },
          end: {
            line: 11,
            column: 141
          }
        }],
        line: 11
      },
      "4": {
        loc: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        }, {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 21,
            column: 5
          }
        }],
        line: 12
      },
      "5": {
        loc: {
          start: {
            line: 14,
            column: 25
          },
          end: {
            line: 14,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 64
          },
          end: {
            line: 14,
            column: 69
          }
        }, {
          start: {
            line: 14,
            column: 72
          },
          end: {
            line: 14,
            column: 81
          }
        }],
        line: 14
      },
      "6": {
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 15,
            column: 170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 76
          },
          end: {
            line: 15,
            column: 97
          }
        }, {
          start: {
            line: 15,
            column: 100
          },
          end: {
            line: 15,
            column: 170
          }
        }],
        line: 15
      },
      "7": {
        loc: {
          start: {
            line: 15,
            column: 100
          },
          end: {
            line: 15,
            column: 170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 144
          },
          end: {
            line: 15,
            column: 158
          }
        }, {
          start: {
            line: 15,
            column: 161
          },
          end: {
            line: 15,
            column: 170
          }
        }],
        line: 15
      },
      "8": {
        loc: {
          start: {
            line: 24,
            column: 0
          },
          end: {
            line: 26,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 0
          },
          end: {
            line: 26,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "9": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 39
          }
        }, {
          start: {
            line: 24,
            column: 43
          },
          end: {
            line: 24,
            column: 80
          }
        }],
        line: 24
      },
      "10": {
        loc: {
          start: {
            line: 39,
            column: 21
          },
          end: {
            line: 39,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 39,
            column: 31
          },
          end: {
            line: 39,
            column: 33
          }
        }],
        line: 39
      },
      "11": {
        loc: {
          start: {
            line: 58,
            column: 0
          },
          end: {
            line: 75,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 0
          },
          end: {
            line: 75,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "12": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: 65,
            column: 17
          },
          end: {
            line: 67,
            column: 13
          }
        }],
        line: 62
      },
      "13": {
        loc: {
          start: {
            line: 88,
            column: 21
          },
          end: {
            line: 88,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 88,
            column: 31
          },
          end: {
            line: 88,
            column: 33
          }
        }],
        line: 88
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/services/supabase/client.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/services/supabase/client.ts"],
      sourcesContent: ["'use client'\n\nimport { createBrowserClient } from '@supabase/ssr'\nimport { Database } from '@/types/database'\nimport { logger } from '@/utils/logger'\n\n// Environment variables with fallbacks for production builds\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://ohkueislstxomdjavyhs.supabase.co'\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9oa3VlaXNsc3R4b21kamF2eWhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ1NDc5NTAsImV4cCI6MjA2MDEyMzk1MH0.Qc6ahUbs_5BCa4csEYsBtyxNUDYb4h3Y4K_16N1DNaY'\n\n// Log warning if using fallback values\nif (!process.env.NEXT_PUBLIC_SUPABASE_URL || (!process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY && !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY)) {\n  if (process.env.NODE_ENV === 'development') {\n    logger.error('Supabase configuration error', {\n      supabaseUrl: process.env.NEXT_PUBLIC_SUPABASE_URL ? 'Set' : 'Missing',\n      supabaseKey: process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY ? 'Publishable Key Set' : process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY ? 'Anon Key Set' : 'Missing',\n      message: 'Missing required environment variables. Check .env.local file.'\n    }, 'Supabase')\n  } else {\n    logger.warn('Using fallback Supabase configuration. Authentication features may not work correctly.', undefined, 'Supabase')\n  }\n}\n\n// Validate URL format\nif (!supabaseUrl.startsWith('https://') || !supabaseUrl.includes('.supabase.co')) {\n      logger.warn('Supabase URL format looks incorrect. Expected format: https://your-project.supabase.co', undefined, 'Supabase')\n}\n\n// Create the browser client with optimized configuration for authentication\nconst supabase = createBrowserClient<Database>(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    autoRefreshToken: true,\n    detectSessionInUrl: true,\n    // Fixed: Aligned timeout with auth operations\n    flowType: 'pkce',\n    debug: process.env.NODE_ENV === 'development',\n  },\n  // Fixed: Increased timeout to match auth operations (20s)\n  global: {\n    fetch: (url, options = {}) => {\n      return fetch(url, {\n        ...options,\n        // Fixed: Set timeout to 20 seconds to match auth operations\n        signal: AbortSignal.timeout(20000),\n      });\n    },\n  },\n  // Add database configuration\n  db: {\n    schema: 'public',\n  },\n  // Realtime configuration (disable if not needed to reduce connection overhead)\n  realtime: {\n    params: {\n      eventsPerSecond: 2,\n    },\n  },\n})\n\n// Add connection test in development (non-blocking)\nif (process.env.NODE_ENV === 'development') {\n  const testConnection = async () => {\n    try {\n      const { error } = await supabase.from('profiles').select('count').limit(1);\n      if (error) {\n        logger.warn('Supabase connection test failed', { errorMessage: error.message }, 'Supabase');\n      } else {\n        logger.info('Supabase connection test successful', undefined, 'Supabase');\n      }\n    } catch {\n      // Silently fail connection test - don't block app startup\n    }\n  };\n  // Run test after a delay to avoid blocking initialization\n  setTimeout(testConnection, 1000);\n}\n\n// Export the client instance directly - createBrowserClient handles internal caching\nexport default supabase\n\n// Provide a factory function for testing/mocking purposes\nexport const createSupabaseClient = () => \n  createBrowserClient<Database>(supabaseUrl, supabaseAnonKey, {\n    auth: {\n      persistSession: true,\n      autoRefreshToken: true,\n      detectSessionInUrl: true,\n      flowType: 'pkce',\n      debug: process.env.NODE_ENV === 'development',\n    },\n    global: {\n      fetch: (url, options = {}) => {\n        return fetch(url, {\n          ...options,\n          signal: AbortSignal.timeout(20000),\n        });\n      },\n    },\n    db: {\n      schema: 'public',\n    },\n    realtime: {\n      params: {\n        eventsPerSecond: 2,\n      },\n    },\n  })\n\nexport { supabase } // Legacy named export for backward compatibility "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e04a4d661da48c0c005e3384e007ca3ad3ed793f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wh9afkzds = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wh9afkzds();
cov_1wh9afkzds().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1wh9afkzds().s[1]++;
exports.supabase = exports.createSupabaseClient = void 0;
const ssr_1 =
/* istanbul ignore next */
(cov_1wh9afkzds().s[2]++, require("@supabase/ssr"));
const logger_1 =
/* istanbul ignore next */
(cov_1wh9afkzds().s[3]++, require("@/utils/logger"));
// Environment variables with fallbacks for production builds
const supabaseUrl =
/* istanbul ignore next */
(cov_1wh9afkzds().s[4]++,
/* istanbul ignore next */
(cov_1wh9afkzds().b[0][0]++, process.env.NEXT_PUBLIC_SUPABASE_URL) ||
/* istanbul ignore next */
(cov_1wh9afkzds().b[0][1]++, 'https://ohkueislstxomdjavyhs.supabase.co'));
const supabaseAnonKey =
/* istanbul ignore next */
(cov_1wh9afkzds().s[5]++,
/* istanbul ignore next */
(cov_1wh9afkzds().b[1][0]++, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) ||
/* istanbul ignore next */
(cov_1wh9afkzds().b[1][1]++, 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9oa3VlaXNsc3R4b21kamF2eWhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ1NDc5NTAsImV4cCI6MjA2MDEyMzk1MH0.Qc6ahUbs_5BCa4csEYsBtyxNUDYb4h3Y4K_16N1DNaY'));
// Log warning if using fallback values
/* istanbul ignore next */
cov_1wh9afkzds().s[6]++;
if (
/* istanbul ignore next */
(cov_1wh9afkzds().b[3][0]++, !process.env.NEXT_PUBLIC_SUPABASE_URL) ||
/* istanbul ignore next */
(cov_1wh9afkzds().b[3][1]++, !process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY) &&
/* istanbul ignore next */
(cov_1wh9afkzds().b[3][2]++, !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY)) {
  /* istanbul ignore next */
  cov_1wh9afkzds().b[2][0]++;
  cov_1wh9afkzds().s[7]++;
  if (process.env.NODE_ENV === 'development') {
    /* istanbul ignore next */
    cov_1wh9afkzds().b[4][0]++;
    cov_1wh9afkzds().s[8]++;
    logger_1.logger.error('Supabase configuration error', {
      supabaseUrl: process.env.NEXT_PUBLIC_SUPABASE_URL ?
      /* istanbul ignore next */
      (cov_1wh9afkzds().b[5][0]++, 'Set') :
      /* istanbul ignore next */
      (cov_1wh9afkzds().b[5][1]++, 'Missing'),
      supabaseKey: process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY ?
      /* istanbul ignore next */
      (cov_1wh9afkzds().b[6][0]++, 'Publishable Key Set') :
      /* istanbul ignore next */
      (cov_1wh9afkzds().b[6][1]++, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY ?
      /* istanbul ignore next */
      (cov_1wh9afkzds().b[7][0]++, 'Anon Key Set') :
      /* istanbul ignore next */
      (cov_1wh9afkzds().b[7][1]++, 'Missing')),
      message: 'Missing required environment variables. Check .env.local file.'
    }, 'Supabase');
  } else {
    /* istanbul ignore next */
    cov_1wh9afkzds().b[4][1]++;
    cov_1wh9afkzds().s[9]++;
    logger_1.logger.warn('Using fallback Supabase configuration. Authentication features may not work correctly.', undefined, 'Supabase');
  }
} else
/* istanbul ignore next */
{
  cov_1wh9afkzds().b[2][1]++;
}
// Validate URL format
cov_1wh9afkzds().s[10]++;
if (
/* istanbul ignore next */
(cov_1wh9afkzds().b[9][0]++, !supabaseUrl.startsWith('https://')) ||
/* istanbul ignore next */
(cov_1wh9afkzds().b[9][1]++, !supabaseUrl.includes('.supabase.co'))) {
  /* istanbul ignore next */
  cov_1wh9afkzds().b[8][0]++;
  cov_1wh9afkzds().s[11]++;
  logger_1.logger.warn('Supabase URL format looks incorrect. Expected format: https://your-project.supabase.co', undefined, 'Supabase');
} else
/* istanbul ignore next */
{
  cov_1wh9afkzds().b[8][1]++;
}
// Create the browser client with optimized configuration for authentication
const supabase =
/* istanbul ignore next */
(cov_1wh9afkzds().s[12]++, (0, ssr_1.createBrowserClient)(supabaseUrl, supabaseAnonKey, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    // Fixed: Aligned timeout with auth operations
    flowType: 'pkce',
    debug: process.env.NODE_ENV === 'development'
  },
  // Fixed: Increased timeout to match auth operations (20s)
  global: {
    fetch: (url, options =
    /* istanbul ignore next */
    (cov_1wh9afkzds().b[10][0]++, {})) => {
      /* istanbul ignore next */
      cov_1wh9afkzds().f[0]++;
      cov_1wh9afkzds().s[13]++;
      return fetch(url, Object.assign(Object.assign({}, options), {
        // Fixed: Set timeout to 20 seconds to match auth operations
        signal: AbortSignal.timeout(20000)
      }));
    }
  },
  // Add database configuration
  db: {
    schema: 'public'
  },
  // Realtime configuration (disable if not needed to reduce connection overhead)
  realtime: {
    params: {
      eventsPerSecond: 2
    }
  }
}));
/* istanbul ignore next */
cov_1wh9afkzds().s[14]++;
exports.supabase = supabase;
// Add connection test in development (non-blocking)
/* istanbul ignore next */
cov_1wh9afkzds().s[15]++;
if (process.env.NODE_ENV === 'development') {
  /* istanbul ignore next */
  cov_1wh9afkzds().b[11][0]++;
  cov_1wh9afkzds().s[16]++;
  const testConnection = async () => {
    /* istanbul ignore next */
    cov_1wh9afkzds().f[1]++;
    cov_1wh9afkzds().s[17]++;
    try {
      const {
        error
      } =
      /* istanbul ignore next */
      (cov_1wh9afkzds().s[18]++, await supabase.from('profiles').select('count').limit(1));
      /* istanbul ignore next */
      cov_1wh9afkzds().s[19]++;
      if (error) {
        /* istanbul ignore next */
        cov_1wh9afkzds().b[12][0]++;
        cov_1wh9afkzds().s[20]++;
        logger_1.logger.warn('Supabase connection test failed', {
          errorMessage: error.message
        }, 'Supabase');
      } else {
        /* istanbul ignore next */
        cov_1wh9afkzds().b[12][1]++;
        cov_1wh9afkzds().s[21]++;
        logger_1.logger.info('Supabase connection test successful', undefined, 'Supabase');
      }
    } catch (_a) {
      // Silently fail connection test - don't block app startup
    }
  };
  // Run test after a delay to avoid blocking initialization
  /* istanbul ignore next */
  cov_1wh9afkzds().s[22]++;
  setTimeout(testConnection, 1000);
} else
/* istanbul ignore next */
{
  cov_1wh9afkzds().b[11][1]++;
}
// Export the client instance directly - createBrowserClient handles internal caching
cov_1wh9afkzds().s[23]++;
exports.default = supabase;
// Provide a factory function for testing/mocking purposes
/* istanbul ignore next */
cov_1wh9afkzds().s[24]++;
const createSupabaseClient = () => {
  /* istanbul ignore next */
  cov_1wh9afkzds().f[2]++;
  cov_1wh9afkzds().s[25]++;
  return (0, ssr_1.createBrowserClient)(supabaseUrl, supabaseAnonKey, {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true,
      flowType: 'pkce',
      debug: process.env.NODE_ENV === 'development'
    },
    global: {
      fetch: (url, options =
      /* istanbul ignore next */
      (cov_1wh9afkzds().b[13][0]++, {})) => {
        /* istanbul ignore next */
        cov_1wh9afkzds().f[3]++;
        cov_1wh9afkzds().s[26]++;
        return fetch(url, Object.assign(Object.assign({}, options), {
          signal: AbortSignal.timeout(20000)
        }));
      }
    },
    db: {
      schema: 'public'
    },
    realtime: {
      params: {
        eventsPerSecond: 2
      }
    }
  });
};
/* istanbul ignore next */
cov_1wh9afkzds().s[27]++;
exports.createSupabaseClient = createSupabaseClient;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,