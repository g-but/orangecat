{"version":3,"names":["cov_1wh9afkzds","actualCoverage","s","ssr_1","require","logger_1","supabaseUrl","b","process","env","NEXT_PUBLIC_SUPABASE_URL","supabaseAnonKey","NEXT_PUBLIC_SUPABASE_ANON_KEY","NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY","NODE_ENV","logger","error","supabaseKey","message","warn","undefined","startsWith","includes","supabase","createBrowserClient","auth","persistSession","autoRefreshToken","detectSessionInUrl","flowType","debug","global","fetch","url","options","f","Object","assign","signal","AbortSignal","timeout","db","schema","realtime","params","eventsPerSecond","exports","testConnection","from","select","limit","errorMessage","info","_a","setTimeout","default","createSupabaseClient"],"sources":["/home/g/dev/orangecat/src/services/supabase/client.ts"],"sourcesContent":["'use client'\n\nimport { createBrowserClient } from '@supabase/ssr'\nimport { Database } from '@/types/database'\nimport { logger } from '@/utils/logger'\n\n// Environment variables with fallbacks for production builds\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://ohkueislstxomdjavyhs.supabase.co'\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9oa3VlaXNsc3R4b21kamF2eWhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ1NDc5NTAsImV4cCI6MjA2MDEyMzk1MH0.Qc6ahUbs_5BCa4csEYsBtyxNUDYb4h3Y4K_16N1DNaY'\n\n// Log warning if using fallback values\nif (!process.env.NEXT_PUBLIC_SUPABASE_URL || (!process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY && !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY)) {\n  if (process.env.NODE_ENV === 'development') {\n    logger.error('Supabase configuration error', {\n      supabaseUrl: process.env.NEXT_PUBLIC_SUPABASE_URL ? 'Set' : 'Missing',\n      supabaseKey: process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY ? 'Publishable Key Set' : process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY ? 'Anon Key Set' : 'Missing',\n      message: 'Missing required environment variables. Check .env.local file.'\n    }, 'Supabase')\n  } else {\n    logger.warn('Using fallback Supabase configuration. Authentication features may not work correctly.', undefined, 'Supabase')\n  }\n}\n\n// Validate URL format\nif (!supabaseUrl.startsWith('https://') || !supabaseUrl.includes('.supabase.co')) {\n      logger.warn('Supabase URL format looks incorrect. Expected format: https://your-project.supabase.co', undefined, 'Supabase')\n}\n\n// Create the browser client with optimized configuration for authentication\nconst supabase = createBrowserClient<Database>(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    autoRefreshToken: true,\n    detectSessionInUrl: true,\n    // Fixed: Aligned timeout with auth operations\n    flowType: 'pkce',\n    debug: process.env.NODE_ENV === 'development',\n  },\n  // Fixed: Increased timeout to match auth operations (20s)\n  global: {\n    fetch: (url, options = {}) => {\n      return fetch(url, {\n        ...options,\n        // Fixed: Set timeout to 20 seconds to match auth operations\n        signal: AbortSignal.timeout(20000),\n      });\n    },\n  },\n  // Add database configuration\n  db: {\n    schema: 'public',\n  },\n  // Realtime configuration (disable if not needed to reduce connection overhead)\n  realtime: {\n    params: {\n      eventsPerSecond: 2,\n    },\n  },\n})\n\n// Add connection test in development (non-blocking)\nif (process.env.NODE_ENV === 'development') {\n  const testConnection = async () => {\n    try {\n      const { error } = await supabase.from('profiles').select('count').limit(1);\n      if (error) {\n        logger.warn('Supabase connection test failed', { errorMessage: error.message }, 'Supabase');\n      } else {\n        logger.info('Supabase connection test successful', undefined, 'Supabase');\n      }\n    } catch {\n      // Silently fail connection test - don't block app startup\n    }\n  };\n  // Run test after a delay to avoid blocking initialization\n  setTimeout(testConnection, 1000);\n}\n\n// Export the client instance directly - createBrowserClient handles internal caching\nexport default supabase\n\n// Provide a factory function for testing/mocking purposes\nexport const createSupabaseClient = () => \n  createBrowserClient<Database>(supabaseUrl, supabaseAnonKey, {\n    auth: {\n      persistSession: true,\n      autoRefreshToken: true,\n      detectSessionInUrl: true,\n      flowType: 'pkce',\n      debug: process.env.NODE_ENV === 'development',\n    },\n    global: {\n      fetch: (url, options = {}) => {\n        return fetch(url, {\n          ...options,\n          signal: AbortSignal.timeout(20000),\n        });\n      },\n    },\n    db: {\n      schema: 'public',\n    },\n    realtime: {\n      params: {\n        eventsPerSecond: 2,\n      },\n    },\n  })\n\nexport { supabase } // Legacy named export for backward compatibility "],"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","ignoreList":[]}