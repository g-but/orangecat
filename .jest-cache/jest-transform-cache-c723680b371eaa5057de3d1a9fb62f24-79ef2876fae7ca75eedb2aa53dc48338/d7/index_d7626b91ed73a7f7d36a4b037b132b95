fa06a0e7cd5c1e35a1319834568d6bf4
"use strict";

/* istanbul ignore next */
function cov_mvcxdfbbb() {
  var path = "/home/g/dev/orangecat/src/services/bitcoin/index.ts";
  var hash = "7cea154b3fe6ce62efe92e8884ca4f562753ca8a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/services/bitcoin/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 197
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 42
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 42
        }
      },
      "4": {
        start: {
          line: 15,
          column: 23
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "6": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 59
        }
      },
      "7": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 39
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 12
        }
      },
      "9": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 84
        }
      },
      "10": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 48
        }
      },
      "11": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 150,
          column: 10
        }
      },
      "12": {
        start: {
          line: 35,
          column: 46
        },
        end: {
          line: 35,
          column: 67
        }
      },
      "13": {
        start: {
          line: 36,
          column: 42
        },
        end: {
          line: 36,
          column: 67
        }
      },
      "14": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 40,
          column: 21
        }
      },
      "15": {
        start: {
          line: 39,
          column: 24
        },
        end: {
          line: 39,
          column: 33
        }
      },
      "16": {
        start: {
          line: 41,
          column: 35
        },
        end: {
          line: 41,
          column: 79
        }
      },
      "17": {
        start: {
          line: 42,
          column: 34
        },
        end: {
          line: 42,
          column: 77
        }
      },
      "18": {
        start: {
          line: 44,
          column: 44
        },
        end: {
          line: 44,
          column: 73
        }
      },
      "19": {
        start: {
          line: 45,
          column: 43
        },
        end: {
          line: 45,
          column: 70
        }
      },
      "20": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 73
        }
      },
      "21": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 51,
          column: 21
        }
      },
      "22": {
        start: {
          line: 50,
          column: 24
        },
        end: {
          line: 50,
          column: 34
        }
      },
      "23": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 88,
          column: 23
        }
      },
      "24": {
        start: {
          line: 54,
          column: 37
        },
        end: {
          line: 54,
          column: 47
        }
      },
      "25": {
        start: {
          line: 55,
          column: 46
        },
        end: {
          line: 55,
          column: 47
        }
      },
      "26": {
        start: {
          line: 56,
          column: 50
        },
        end: {
          line: 56,
          column: 194
        }
      },
      "27": {
        start: {
          line: 56,
          column: 123
        },
        end: {
          line: 56,
          column: 186
        }
      },
      "28": {
        start: {
          line: 57,
          column: 49
        },
        end: {
          line: 57,
          column: 171
        }
      },
      "29": {
        start: {
          line: 57,
          column: 124
        },
        end: {
          line: 57,
          column: 163
        }
      },
      "30": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 80,
          column: 25
        }
      },
      "31": {
        start: {
          line: 59,
          column: 28
        },
        end: {
          line: 59,
          column: 48
        }
      },
      "32": {
        start: {
          line: 60,
          column: 53
        },
        end: {
          line: 60,
          column: 54
        }
      },
      "33": {
        start: {
          line: 61,
          column: 28
        },
        end: {
          line: 65,
          column: 29
        }
      },
      "34": {
        start: {
          line: 62,
          column: 32
        },
        end: {
          line: 64,
          column: 33
        }
      },
      "35": {
        start: {
          line: 63,
          column: 36
        },
        end: {
          line: 63,
          column: 84
        }
      },
      "36": {
        start: {
          line: 66,
          column: 28
        },
        end: {
          line: 72,
          column: 29
        }
      },
      "37": {
        start: {
          line: 67,
          column: 32
        },
        end: {
          line: 67,
          column: 69
        }
      },
      "38": {
        start: {
          line: 70,
          column: 61
        },
        end: {
          line: 70,
          column: 213
        }
      },
      "39": {
        start: {
          line: 70,
          column: 112
        },
        end: {
          line: 70,
          column: 207
        }
      },
      "40": {
        start: {
          line: 71,
          column: 32
        },
        end: {
          line: 71,
          column: 71
        }
      },
      "41": {
        start: {
          line: 74,
          column: 29
        },
        end: {
          line: 80,
          column: 25
        }
      },
      "42": {
        start: {
          line: 75,
          column: 28
        },
        end: {
          line: 75,
          column: 48
        }
      },
      "43": {
        start: {
          line: 76,
          column: 28
        },
        end: {
          line: 76,
          column: 125
        }
      },
      "44": {
        start: {
          line: 76,
          column: 87
        },
        end: {
          line: 76,
          column: 120
        }
      },
      "45": {
        start: {
          line: 79,
          column: 28
        },
        end: {
          line: 79,
          column: 48
        }
      },
      "46": {
        start: {
          line: 81,
          column: 24
        },
        end: {
          line: 87,
          column: 26
        }
      },
      "47": {
        start: {
          line: 94,
          column: 46
        },
        end: {
          line: 94,
          column: 67
        }
      },
      "48": {
        start: {
          line: 95,
          column: 42
        },
        end: {
          line: 95,
          column: 67
        }
      },
      "49": {
        start: {
          line: 97,
          column: 20
        },
        end: {
          line: 99,
          column: 21
        }
      },
      "50": {
        start: {
          line: 98,
          column: 24
        },
        end: {
          line: 98,
          column: 33
        }
      },
      "51": {
        start: {
          line: 100,
          column: 35
        },
        end: {
          line: 100,
          column: 79
        }
      },
      "52": {
        start: {
          line: 101,
          column: 34
        },
        end: {
          line: 101,
          column: 77
        }
      },
      "53": {
        start: {
          line: 103,
          column: 44
        },
        end: {
          line: 103,
          column: 73
        }
      },
      "54": {
        start: {
          line: 104,
          column: 43
        },
        end: {
          line: 104,
          column: 70
        }
      },
      "55": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 73
        }
      },
      "56": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 110,
          column: 21
        }
      },
      "57": {
        start: {
          line: 109,
          column: 24
        },
        end: {
          line: 109,
          column: 34
        }
      },
      "58": {
        start: {
          line: 111,
          column: 20
        },
        end: {
          line: 147,
          column: 23
        }
      },
      "59": {
        start: {
          line: 113,
          column: 37
        },
        end: {
          line: 113,
          column: 47
        }
      },
      "60": {
        start: {
          line: 114,
          column: 46
        },
        end: {
          line: 114,
          column: 47
        }
      },
      "61": {
        start: {
          line: 115,
          column: 50
        },
        end: {
          line: 115,
          column: 194
        }
      },
      "62": {
        start: {
          line: 115,
          column: 123
        },
        end: {
          line: 115,
          column: 186
        }
      },
      "63": {
        start: {
          line: 116,
          column: 49
        },
        end: {
          line: 116,
          column: 171
        }
      },
      "64": {
        start: {
          line: 116,
          column: 124
        },
        end: {
          line: 116,
          column: 163
        }
      },
      "65": {
        start: {
          line: 117,
          column: 24
        },
        end: {
          line: 139,
          column: 25
        }
      },
      "66": {
        start: {
          line: 118,
          column: 28
        },
        end: {
          line: 118,
          column: 48
        }
      },
      "67": {
        start: {
          line: 119,
          column: 53
        },
        end: {
          line: 119,
          column: 54
        }
      },
      "68": {
        start: {
          line: 120,
          column: 28
        },
        end: {
          line: 124,
          column: 29
        }
      },
      "69": {
        start: {
          line: 121,
          column: 32
        },
        end: {
          line: 123,
          column: 33
        }
      },
      "70": {
        start: {
          line: 122,
          column: 36
        },
        end: {
          line: 122,
          column: 84
        }
      },
      "71": {
        start: {
          line: 125,
          column: 28
        },
        end: {
          line: 131,
          column: 29
        }
      },
      "72": {
        start: {
          line: 126,
          column: 32
        },
        end: {
          line: 126,
          column: 69
        }
      },
      "73": {
        start: {
          line: 129,
          column: 61
        },
        end: {
          line: 129,
          column: 213
        }
      },
      "74": {
        start: {
          line: 129,
          column: 112
        },
        end: {
          line: 129,
          column: 207
        }
      },
      "75": {
        start: {
          line: 130,
          column: 32
        },
        end: {
          line: 130,
          column: 71
        }
      },
      "76": {
        start: {
          line: 133,
          column: 29
        },
        end: {
          line: 139,
          column: 25
        }
      },
      "77": {
        start: {
          line: 134,
          column: 28
        },
        end: {
          line: 134,
          column: 48
        }
      },
      "78": {
        start: {
          line: 135,
          column: 28
        },
        end: {
          line: 135,
          column: 125
        }
      },
      "79": {
        start: {
          line: 135,
          column: 87
        },
        end: {
          line: 135,
          column: 120
        }
      },
      "80": {
        start: {
          line: 138,
          column: 28
        },
        end: {
          line: 138,
          column: 48
        }
      },
      "81": {
        start: {
          line: 140,
          column: 24
        },
        end: {
          line: 146,
          column: 26
        }
      },
      "82": {
        start: {
          line: 154,
          column: 27
        },
        end: {
          line: 154,
          column: 48
        }
      },
      "83": {
        start: {
          line: 155,
          column: 19
        },
        end: {
          line: 155,
          column: 64
        }
      },
      "84": {
        start: {
          line: 155,
          column: 36
        },
        end: {
          line: 155,
          column: 54
        }
      },
      "85": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "86": {
        start: {
          line: 157,
          column: 29
        },
        end: {
          line: 157,
          column: 83
        }
      },
      "87": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 29
        }
      },
      "88": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 28
        }
      },
      "89": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 29
        }
      },
      "90": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 24
        }
      },
      "91": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 169,
          column: 22
        }
      },
      "92": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 22
        }
      },
      "93": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 172,
          column: 22
        }
      },
      "94": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "95": {
        start: {
          line: 177,
          column: 31
        },
        end: {
          line: 177,
          column: 73
        }
      },
      "96": {
        start: {
          line: 178,
          column: 30
        },
        end: {
          line: 178,
          column: 61
        }
      },
      "97": {
        start: {
          line: 179,
          column: 32
        },
        end: {
          line: 179,
          column: 33
        }
      },
      "98": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 184,
          column: 14
        }
      },
      "99": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 192,
          column: 14
        }
      },
      "100": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "101": {
        start: {
          line: 198,
          column: 31
        },
        end: {
          line: 198,
          column: 73
        }
      },
      "102": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 43
        }
      },
      "103": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 115
        }
      },
      "104": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 22
        }
      },
      "105": {
        start: {
          line: 208,
          column: 29
        },
        end: {
          line: 208,
          column: 62
        }
      },
      "106": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 212,
          column: 9
        }
      },
      "107": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 64
        }
      },
      "108": {
        start: {
          line: 214,
          column: 36
        },
        end: {
          line: 214,
          column: 74
        }
      },
      "109": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "110": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 62
        }
      },
      "111": {
        start: {
          line: 218,
          column: 24
        },
        end: {
          line: 218,
          column: 28
        }
      },
      "112": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "113": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 254,
          column: 13
        }
      },
      "114": {
        start: {
          line: 221,
          column: 35
        },
        end: {
          line: 221,
          column: 97
        }
      },
      "115": {
        start: {
          line: 222,
          column: 40
        },
        end: {
          line: 222,
          column: 95
        }
      },
      "116": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 228,
          column: 17
        }
      },
      "117": {
        start: {
          line: 224,
          column: 38
        },
        end: {
          line: 224,
          column: 100
        }
      },
      "118": {
        start: {
          line: 225,
          column: 20
        },
        end: {
          line: 225,
          column: 231
        }
      },
      "119": {
        start: {
          line: 226,
          column: 20
        },
        end: {
          line: 226,
          column: 200
        }
      },
      "120": {
        start: {
          line: 227,
          column: 20
        },
        end: {
          line: 227,
          column: 29
        }
      },
      "121": {
        start: {
          line: 229,
          column: 36
        },
        end: {
          line: 229,
          column: 64
        }
      },
      "122": {
        start: {
          line: 230,
          column: 42
        },
        end: {
          line: 230,
          column: 78
        }
      },
      "123": {
        start: {
          line: 231,
          column: 31
        },
        end: {
          line: 231,
          column: 89
        }
      },
      "124": {
        start: {
          line: 232,
          column: 36
        },
        end: {
          line: 232,
          column: 87
        }
      },
      "125": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 238,
          column: 17
        }
      },
      "126": {
        start: {
          line: 234,
          column: 38
        },
        end: {
          line: 234,
          column: 92
        }
      },
      "127": {
        start: {
          line: 235,
          column: 20
        },
        end: {
          line: 235,
          column: 224
        }
      },
      "128": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 236,
          column: 193
        }
      },
      "129": {
        start: {
          line: 237,
          column: 20
        },
        end: {
          line: 237,
          column: 29
        }
      },
      "130": {
        start: {
          line: 239,
          column: 32
        },
        end: {
          line: 239,
          column: 56
        }
      },
      "131": {
        start: {
          line: 240,
          column: 37
        },
        end: {
          line: 240,
          column: 88
        }
      },
      "132": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 247,
          column: 18
        }
      },
      "133": {
        start: {
          line: 250,
          column: 37
        },
        end: {
          line: 250,
          column: 73
        }
      },
      "134": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 251,
          column: 104
        }
      },
      "135": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 252,
          column: 85
        }
      },
      "136": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 164
        }
      },
      "137": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 115
        }
      },
      "138": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 50
        }
      },
      "139": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 84
        }
      },
      "140": {
        start: {
          line: 268,
          column: 0
        },
        end: {
          line: 268,
          column: 40
        }
      },
      "141": {
        start: {
          line: 270,
          column: 0
        },
        end: {
          line: 270,
          column: 54
        }
      },
      "142": {
        start: {
          line: 272,
          column: 28
        },
        end: {
          line: 272,
          column: 92
        }
      },
      "143": {
        start: {
          line: 272,
          column: 41
        },
        end: {
          line: 272,
          column: 92
        }
      },
      "144": {
        start: {
          line: 273,
          column: 0
        },
        end: {
          line: 273,
          column: 50
        }
      },
      "145": {
        start: {
          line: 274,
          column: 31
        },
        end: {
          line: 274,
          column: 98
        }
      },
      "146": {
        start: {
          line: 274,
          column: 44
        },
        end: {
          line: 274,
          column: 98
        }
      },
      "147": {
        start: {
          line: 275,
          column: 0
        },
        end: {
          line: 275,
          column: 56
        }
      },
      "148": {
        start: {
          line: 276,
          column: 26
        },
        end: {
          line: 276,
          column: 82
        }
      },
      "149": {
        start: {
          line: 276,
          column: 36
        },
        end: {
          line: 276,
          column: 82
        }
      },
      "150": {
        start: {
          line: 277,
          column: 0
        },
        end: {
          line: 277,
          column: 46
        }
      },
      "151": {
        start: {
          line: 278,
          column: 22
        },
        end: {
          line: 278,
          column: 80
        }
      },
      "152": {
        start: {
          line: 278,
          column: 35
        },
        end: {
          line: 278,
          column: 80
        }
      },
      "153": {
        start: {
          line: 279,
          column: 0
        },
        end: {
          line: 279,
          column: 38
        }
      },
      "154": {
        start: {
          line: 281,
          column: 23
        },
        end: {
          line: 288,
          column: 1
        }
      },
      "155": {
        start: {
          line: 282,
          column: 4
        },
        end: {
          line: 284,
          column: 5
        }
      },
      "156": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 283,
          column: 28
        }
      },
      "157": {
        start: {
          line: 286,
          column: 28
        },
        end: {
          line: 286,
          column: 62
        }
      },
      "158": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 287,
          column: 42
        }
      },
      "159": {
        start: {
          line: 289,
          column: 0
        },
        end: {
          line: 289,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 37
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 104
          },
          end: {
            line: 25,
            column: 105
          }
        },
        loc: {
          start: {
            line: 25,
            column: 110
          },
          end: {
            line: 27,
            column: 9
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 22
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 33
          },
          end: {
            line: 35,
            column: 34
          }
        },
        loc: {
          start: {
            line: 35,
            column: 46
          },
          end: {
            line: 35,
            column: 67
          }
        },
        line: 35
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 36,
            column: 30
          }
        },
        loc: {
          start: {
            line: 36,
            column: 42
          },
          end: {
            line: 36,
            column: 67
          }
        },
        line: 36
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 33
          }
        },
        loc: {
          start: {
            line: 37,
            column: 42
          },
          end: {
            line: 47,
            column: 17
          }
        },
        line: 37
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 48,
            column: 37
          },
          end: {
            line: 48,
            column: 38
          }
        },
        loc: {
          start: {
            line: 48,
            column: 56
          },
          end: {
            line: 89,
            column: 17
          }
        },
        line: 48
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 52,
            column: 49
          },
          end: {
            line: 52,
            column: 50
          }
        },
        loc: {
          start: {
            line: 52,
            column: 57
          },
          end: {
            line: 88,
            column: 21
          }
        },
        line: 52
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 56,
            column: 112
          },
          end: {
            line: 56,
            column: 113
          }
        },
        loc: {
          start: {
            line: 56,
            column: 123
          },
          end: {
            line: 56,
            column: 186
          }
        },
        line: 56
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 57,
            column: 112
          },
          end: {
            line: 57,
            column: 113
          }
        },
        loc: {
          start: {
            line: 57,
            column: 124
          },
          end: {
            line: 57,
            column: 163
          }
        },
        line: 57
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 70,
            column: 86
          },
          end: {
            line: 70,
            column: 87
          }
        },
        loc: {
          start: {
            line: 70,
            column: 102
          },
          end: {
            line: 70,
            column: 209
          }
        },
        line: 70
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 76,
            column: 70
          },
          end: {
            line: 76,
            column: 71
          }
        },
        loc: {
          start: {
            line: 76,
            column: 87
          },
          end: {
            line: 76,
            column: 120
          }
        },
        line: 76
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 94,
            column: 33
          },
          end: {
            line: 94,
            column: 34
          }
        },
        loc: {
          start: {
            line: 94,
            column: 46
          },
          end: {
            line: 94,
            column: 67
          }
        },
        line: 94
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 95,
            column: 29
          },
          end: {
            line: 95,
            column: 30
          }
        },
        loc: {
          start: {
            line: 95,
            column: 42
          },
          end: {
            line: 95,
            column: 67
          }
        },
        line: 95
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 96,
            column: 32
          },
          end: {
            line: 96,
            column: 33
          }
        },
        loc: {
          start: {
            line: 96,
            column: 42
          },
          end: {
            line: 106,
            column: 17
          }
        },
        line: 96
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 107,
            column: 37
          },
          end: {
            line: 107,
            column: 38
          }
        },
        loc: {
          start: {
            line: 107,
            column: 56
          },
          end: {
            line: 148,
            column: 17
          }
        },
        line: 107
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 111,
            column: 49
          },
          end: {
            line: 111,
            column: 50
          }
        },
        loc: {
          start: {
            line: 111,
            column: 57
          },
          end: {
            line: 147,
            column: 21
          }
        },
        line: 111
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 115,
            column: 112
          },
          end: {
            line: 115,
            column: 113
          }
        },
        loc: {
          start: {
            line: 115,
            column: 123
          },
          end: {
            line: 115,
            column: 186
          }
        },
        line: 115
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 116,
            column: 112
          },
          end: {
            line: 116,
            column: 113
          }
        },
        loc: {
          start: {
            line: 116,
            column: 124
          },
          end: {
            line: 116,
            column: 163
          }
        },
        line: 116
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 129,
            column: 86
          },
          end: {
            line: 129,
            column: 87
          }
        },
        loc: {
          start: {
            line: 129,
            column: 102
          },
          end: {
            line: 129,
            column: 209
          }
        },
        line: 129
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 135,
            column: 70
          },
          end: {
            line: 135,
            column: 71
          }
        },
        loc: {
          start: {
            line: 135,
            column: 87
          },
          end: {
            line: 135,
            column: 120
          }
        },
        line: 135
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        loc: {
          start: {
            line: 153,
            column: 41
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 153
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 155,
            column: 30
          },
          end: {
            line: 155,
            column: 31
          }
        },
        loc: {
          start: {
            line: 155,
            column: 36
          },
          end: {
            line: 155,
            column: 54
          }
        },
        line: 155
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        loc: {
          start: {
            line: 167,
            column: 33
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 167
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        loc: {
          start: {
            line: 175,
            column: 30
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 175
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        loc: {
          start: {
            line: 196,
            column: 35
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 196
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        loc: {
          start: {
            line: 207,
            column: 42
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 207
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        },
        loc: {
          start: {
            line: 260,
            column: 28
          },
          end: {
            line: 262,
            column: 5
          }
        },
        line: 260
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 264,
            column: 4
          },
          end: {
            line: 264,
            column: 5
          }
        },
        loc: {
          start: {
            line: 264,
            column: 27
          },
          end: {
            line: 266,
            column: 5
          }
        },
        line: 264
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 272,
            column: 28
          },
          end: {
            line: 272,
            column: 29
          }
        },
        loc: {
          start: {
            line: 272,
            column: 41
          },
          end: {
            line: 272,
            column: 92
          }
        },
        line: 272
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 274,
            column: 31
          },
          end: {
            line: 274,
            column: 32
          }
        },
        loc: {
          start: {
            line: 274,
            column: 44
          },
          end: {
            line: 274,
            column: 98
          }
        },
        line: 274
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 276,
            column: 26
          },
          end: {
            line: 276,
            column: 27
          }
        },
        loc: {
          start: {
            line: 276,
            column: 36
          },
          end: {
            line: 276,
            column: 82
          }
        },
        line: 276
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 278,
            column: 22
          },
          end: {
            line: 278,
            column: 23
          }
        },
        loc: {
          start: {
            line: 278,
            column: 35
          },
          end: {
            line: 278,
            column: 80
          }
        },
        line: 278
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 281,
            column: 23
          },
          end: {
            line: 281,
            column: 24
          }
        },
        loc: {
          start: {
            line: 281,
            column: 48
          },
          end: {
            line: 288,
            column: 1
          }
        },
        line: 281
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 23
          },
          end: {
            line: 27,
            column: 11
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 23
          },
          end: {
            line: 25,
            column: 42
          }
        }, {
          start: {
            line: 25,
            column: 47
          },
          end: {
            line: 27,
            column: 10
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 47
          },
          end: {
            line: 27,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 78
          },
          end: {
            line: 25,
            column: 100
          }
        }, {
          start: {
            line: 25,
            column: 104
          },
          end: {
            line: 27,
            column: 9
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 20
          },
          end: {
            line: 40,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 20
          },
          end: {
            line: 40,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 29
          }
        }, {
          start: {
            line: 38,
            column: 33
          },
          end: {
            line: 38,
            column: 50
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 35
          },
          end: {
            line: 41,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 35
          },
          end: {
            line: 41,
            column: 74
          }
        }, {
          start: {
            line: 41,
            column: 78
          },
          end: {
            line: 41,
            column: 79
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 34
          },
          end: {
            line: 42,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 34
          },
          end: {
            line: 42,
            column: 72
          }
        }, {
          start: {
            line: 42,
            column: 76
          },
          end: {
            line: 42,
            column: 77
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 44
          },
          end: {
            line: 44,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 63
          },
          end: {
            line: 44,
            column: 69
          }
        }, {
          start: {
            line: 44,
            column: 72
          },
          end: {
            line: 44,
            column: 73
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 45,
            column: 43
          },
          end: {
            line: 45,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 61
          },
          end: {
            line: 45,
            column: 66
          }
        }, {
          start: {
            line: 45,
            column: 69
          },
          end: {
            line: 45,
            column: 70
          }
        }],
        line: 45
      },
      "9": {
        loc: {
          start: {
            line: 49,
            column: 20
          },
          end: {
            line: 51,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 20
          },
          end: {
            line: 51,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "10": {
        loc: {
          start: {
            line: 56,
            column: 50
          },
          end: {
            line: 56,
            column: 194
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 51
          },
          end: {
            line: 56,
            column: 187
          }
        }, {
          start: {
            line: 56,
            column: 192
          },
          end: {
            line: 56,
            column: 194
          }
        }],
        line: 56
      },
      "11": {
        loc: {
          start: {
            line: 56,
            column: 51
          },
          end: {
            line: 56,
            column: 187
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 93
          },
          end: {
            line: 56,
            column: 99
          }
        }, {
          start: {
            line: 56,
            column: 102
          },
          end: {
            line: 56,
            column: 187
          }
        }],
        line: 56
      },
      "12": {
        loc: {
          start: {
            line: 56,
            column: 51
          },
          end: {
            line: 56,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 51
          },
          end: {
            line: 56,
            column: 73
          }
        }, {
          start: {
            line: 56,
            column: 77
          },
          end: {
            line: 56,
            column: 90
          }
        }],
        line: 56
      },
      "13": {
        loc: {
          start: {
            line: 56,
            column: 123
          },
          end: {
            line: 56,
            column: 186
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 123
          },
          end: {
            line: 56,
            column: 136
          }
        }, {
          start: {
            line: 56,
            column: 140
          },
          end: {
            line: 56,
            column: 186
          }
        }],
        line: 56
      },
      "14": {
        loc: {
          start: {
            line: 57,
            column: 49
          },
          end: {
            line: 57,
            column: 171
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 50
          },
          end: {
            line: 57,
            column: 164
          }
        }, {
          start: {
            line: 57,
            column: 169
          },
          end: {
            line: 57,
            column: 171
          }
        }],
        line: 57
      },
      "15": {
        loc: {
          start: {
            line: 57,
            column: 50
          },
          end: {
            line: 57,
            column: 164
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 93
          },
          end: {
            line: 57,
            column: 99
          }
        }, {
          start: {
            line: 57,
            column: 102
          },
          end: {
            line: 57,
            column: 164
          }
        }],
        line: 57
      },
      "16": {
        loc: {
          start: {
            line: 57,
            column: 50
          },
          end: {
            line: 57,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 50
          },
          end: {
            line: 57,
            column: 73
          }
        }, {
          start: {
            line: 57,
            column: 77
          },
          end: {
            line: 57,
            column: 90
          }
        }],
        line: 57
      },
      "17": {
        loc: {
          start: {
            line: 58,
            column: 24
          },
          end: {
            line: 80,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 24
          },
          end: {
            line: 80,
            column: 25
          }
        }, {
          start: {
            line: 74,
            column: 29
          },
          end: {
            line: 80,
            column: 25
          }
        }],
        line: 58
      },
      "18": {
        loc: {
          start: {
            line: 61,
            column: 49
          },
          end: {
            line: 61,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 49
          },
          end: {
            line: 61,
            column: 56
          }
        }, {
          start: {
            line: 61,
            column: 60
          },
          end: {
            line: 61,
            column: 62
          }
        }],
        line: 61
      },
      "19": {
        loc: {
          start: {
            line: 62,
            column: 32
          },
          end: {
            line: 64,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 32
          },
          end: {
            line: 64,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "20": {
        loc: {
          start: {
            line: 63,
            column: 58
          },
          end: {
            line: 63,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 58
          },
          end: {
            line: 63,
            column: 78
          }
        }, {
          start: {
            line: 63,
            column: 82
          },
          end: {
            line: 63,
            column: 83
          }
        }],
        line: 63
      },
      "21": {
        loc: {
          start: {
            line: 66,
            column: 28
          },
          end: {
            line: 72,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 28
          },
          end: {
            line: 72,
            column: 29
          }
        }, {
          start: {
            line: 69,
            column: 33
          },
          end: {
            line: 72,
            column: 29
          }
        }],
        line: 66
      },
      "22": {
        loc: {
          start: {
            line: 70,
            column: 126
          },
          end: {
            line: 70,
            column: 205
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 126
          },
          end: {
            line: 70,
            column: 200
          }
        }, {
          start: {
            line: 70,
            column: 204
          },
          end: {
            line: 70,
            column: 205
          }
        }],
        line: 70
      },
      "23": {
        loc: {
          start: {
            line: 70,
            column: 133
          },
          end: {
            line: 70,
            column: 199
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 182
          },
          end: {
            line: 70,
            column: 188
          }
        }, {
          start: {
            line: 70,
            column: 191
          },
          end: {
            line: 70,
            column: 199
          }
        }],
        line: 70
      },
      "24": {
        loc: {
          start: {
            line: 70,
            column: 133
          },
          end: {
            line: 70,
            column: 179
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 133
          },
          end: {
            line: 70,
            column: 162
          }
        }, {
          start: {
            line: 70,
            column: 166
          },
          end: {
            line: 70,
            column: 179
          }
        }],
        line: 70
      },
      "25": {
        loc: {
          start: {
            line: 74,
            column: 29
          },
          end: {
            line: 80,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 29
          },
          end: {
            line: 80,
            column: 25
          }
        }, {
          start: {
            line: 78,
            column: 29
          },
          end: {
            line: 80,
            column: 25
          }
        }],
        line: 74
      },
      "26": {
        loc: {
          start: {
            line: 76,
            column: 94
          },
          end: {
            line: 76,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 94
          },
          end: {
            line: 76,
            column: 114
          }
        }, {
          start: {
            line: 76,
            column: 118
          },
          end: {
            line: 76,
            column: 119
          }
        }],
        line: 76
      },
      "27": {
        loc: {
          start: {
            line: 82,
            column: 34
          },
          end: {
            line: 82,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 34
          },
          end: {
            line: 82,
            column: 41
          }
        }, {
          start: {
            line: 82,
            column: 45
          },
          end: {
            line: 82,
            column: 54
          }
        }],
        line: 82
      },
      "28": {
        loc: {
          start: {
            line: 84,
            column: 36
          },
          end: {
            line: 84,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 107
          },
          end: {
            line: 84,
            column: 118
          }
        }, {
          start: {
            line: 84,
            column: 121
          },
          end: {
            line: 84,
            column: 130
          }
        }],
        line: 84
      },
      "29": {
        loc: {
          start: {
            line: 84,
            column: 37
          },
          end: {
            line: 84,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 82
          },
          end: {
            line: 84,
            column: 88
          }
        }, {
          start: {
            line: 84,
            column: 91
          },
          end: {
            line: 84,
            column: 103
          }
        }],
        line: 84
      },
      "30": {
        loc: {
          start: {
            line: 84,
            column: 37
          },
          end: {
            line: 84,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 37
          },
          end: {
            line: 84,
            column: 62
          }
        }, {
          start: {
            line: 84,
            column: 66
          },
          end: {
            line: 84,
            column: 79
          }
        }],
        line: 84
      },
      "31": {
        loc: {
          start: {
            line: 85,
            column: 39
          },
          end: {
            line: 85,
            column: 151
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 111
          },
          end: {
            line: 85,
            column: 138
          }
        }, {
          start: {
            line: 85,
            column: 141
          },
          end: {
            line: 85,
            column: 151
          }
        }],
        line: 85
      },
      "32": {
        loc: {
          start: {
            line: 85,
            column: 40
          },
          end: {
            line: 85,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 85
          },
          end: {
            line: 85,
            column: 91
          }
        }, {
          start: {
            line: 85,
            column: 94
          },
          end: {
            line: 85,
            column: 107
          }
        }],
        line: 85
      },
      "33": {
        loc: {
          start: {
            line: 85,
            column: 40
          },
          end: {
            line: 85,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 40
          },
          end: {
            line: 85,
            column: 65
          }
        }, {
          start: {
            line: 85,
            column: 69
          },
          end: {
            line: 85,
            column: 82
          }
        }],
        line: 85
      },
      "34": {
        loc: {
          start: {
            line: 97,
            column: 20
          },
          end: {
            line: 99,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 20
          },
          end: {
            line: 99,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "35": {
        loc: {
          start: {
            line: 97,
            column: 24
          },
          end: {
            line: 97,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 24
          },
          end: {
            line: 97,
            column: 29
          }
        }, {
          start: {
            line: 97,
            column: 33
          },
          end: {
            line: 97,
            column: 50
          }
        }],
        line: 97
      },
      "36": {
        loc: {
          start: {
            line: 100,
            column: 35
          },
          end: {
            line: 100,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 35
          },
          end: {
            line: 100,
            column: 74
          }
        }, {
          start: {
            line: 100,
            column: 78
          },
          end: {
            line: 100,
            column: 79
          }
        }],
        line: 100
      },
      "37": {
        loc: {
          start: {
            line: 101,
            column: 34
          },
          end: {
            line: 101,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 34
          },
          end: {
            line: 101,
            column: 72
          }
        }, {
          start: {
            line: 101,
            column: 76
          },
          end: {
            line: 101,
            column: 77
          }
        }],
        line: 101
      },
      "38": {
        loc: {
          start: {
            line: 103,
            column: 44
          },
          end: {
            line: 103,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 63
          },
          end: {
            line: 103,
            column: 69
          }
        }, {
          start: {
            line: 103,
            column: 72
          },
          end: {
            line: 103,
            column: 73
          }
        }],
        line: 103
      },
      "39": {
        loc: {
          start: {
            line: 104,
            column: 43
          },
          end: {
            line: 104,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 104,
            column: 61
          },
          end: {
            line: 104,
            column: 66
          }
        }, {
          start: {
            line: 104,
            column: 69
          },
          end: {
            line: 104,
            column: 70
          }
        }],
        line: 104
      },
      "40": {
        loc: {
          start: {
            line: 108,
            column: 20
          },
          end: {
            line: 110,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 20
          },
          end: {
            line: 110,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "41": {
        loc: {
          start: {
            line: 115,
            column: 50
          },
          end: {
            line: 115,
            column: 194
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 51
          },
          end: {
            line: 115,
            column: 187
          }
        }, {
          start: {
            line: 115,
            column: 192
          },
          end: {
            line: 115,
            column: 194
          }
        }],
        line: 115
      },
      "42": {
        loc: {
          start: {
            line: 115,
            column: 51
          },
          end: {
            line: 115,
            column: 187
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 93
          },
          end: {
            line: 115,
            column: 99
          }
        }, {
          start: {
            line: 115,
            column: 102
          },
          end: {
            line: 115,
            column: 187
          }
        }],
        line: 115
      },
      "43": {
        loc: {
          start: {
            line: 115,
            column: 51
          },
          end: {
            line: 115,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 51
          },
          end: {
            line: 115,
            column: 73
          }
        }, {
          start: {
            line: 115,
            column: 77
          },
          end: {
            line: 115,
            column: 90
          }
        }],
        line: 115
      },
      "44": {
        loc: {
          start: {
            line: 115,
            column: 123
          },
          end: {
            line: 115,
            column: 186
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 123
          },
          end: {
            line: 115,
            column: 136
          }
        }, {
          start: {
            line: 115,
            column: 140
          },
          end: {
            line: 115,
            column: 186
          }
        }],
        line: 115
      },
      "45": {
        loc: {
          start: {
            line: 116,
            column: 49
          },
          end: {
            line: 116,
            column: 171
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 50
          },
          end: {
            line: 116,
            column: 164
          }
        }, {
          start: {
            line: 116,
            column: 169
          },
          end: {
            line: 116,
            column: 171
          }
        }],
        line: 116
      },
      "46": {
        loc: {
          start: {
            line: 116,
            column: 50
          },
          end: {
            line: 116,
            column: 164
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 116,
            column: 93
          },
          end: {
            line: 116,
            column: 99
          }
        }, {
          start: {
            line: 116,
            column: 102
          },
          end: {
            line: 116,
            column: 164
          }
        }],
        line: 116
      },
      "47": {
        loc: {
          start: {
            line: 116,
            column: 50
          },
          end: {
            line: 116,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 50
          },
          end: {
            line: 116,
            column: 73
          }
        }, {
          start: {
            line: 116,
            column: 77
          },
          end: {
            line: 116,
            column: 90
          }
        }],
        line: 116
      },
      "48": {
        loc: {
          start: {
            line: 117,
            column: 24
          },
          end: {
            line: 139,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 24
          },
          end: {
            line: 139,
            column: 25
          }
        }, {
          start: {
            line: 133,
            column: 29
          },
          end: {
            line: 139,
            column: 25
          }
        }],
        line: 117
      },
      "49": {
        loc: {
          start: {
            line: 120,
            column: 49
          },
          end: {
            line: 120,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 49
          },
          end: {
            line: 120,
            column: 56
          }
        }, {
          start: {
            line: 120,
            column: 60
          },
          end: {
            line: 120,
            column: 62
          }
        }],
        line: 120
      },
      "50": {
        loc: {
          start: {
            line: 121,
            column: 32
          },
          end: {
            line: 123,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 32
          },
          end: {
            line: 123,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "51": {
        loc: {
          start: {
            line: 122,
            column: 58
          },
          end: {
            line: 122,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 58
          },
          end: {
            line: 122,
            column: 78
          }
        }, {
          start: {
            line: 122,
            column: 82
          },
          end: {
            line: 122,
            column: 83
          }
        }],
        line: 122
      },
      "52": {
        loc: {
          start: {
            line: 125,
            column: 28
          },
          end: {
            line: 131,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 28
          },
          end: {
            line: 131,
            column: 29
          }
        }, {
          start: {
            line: 128,
            column: 33
          },
          end: {
            line: 131,
            column: 29
          }
        }],
        line: 125
      },
      "53": {
        loc: {
          start: {
            line: 129,
            column: 126
          },
          end: {
            line: 129,
            column: 205
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 126
          },
          end: {
            line: 129,
            column: 200
          }
        }, {
          start: {
            line: 129,
            column: 204
          },
          end: {
            line: 129,
            column: 205
          }
        }],
        line: 129
      },
      "54": {
        loc: {
          start: {
            line: 129,
            column: 133
          },
          end: {
            line: 129,
            column: 199
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 182
          },
          end: {
            line: 129,
            column: 188
          }
        }, {
          start: {
            line: 129,
            column: 191
          },
          end: {
            line: 129,
            column: 199
          }
        }],
        line: 129
      },
      "55": {
        loc: {
          start: {
            line: 129,
            column: 133
          },
          end: {
            line: 129,
            column: 179
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 133
          },
          end: {
            line: 129,
            column: 162
          }
        }, {
          start: {
            line: 129,
            column: 166
          },
          end: {
            line: 129,
            column: 179
          }
        }],
        line: 129
      },
      "56": {
        loc: {
          start: {
            line: 133,
            column: 29
          },
          end: {
            line: 139,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 29
          },
          end: {
            line: 139,
            column: 25
          }
        }, {
          start: {
            line: 137,
            column: 29
          },
          end: {
            line: 139,
            column: 25
          }
        }],
        line: 133
      },
      "57": {
        loc: {
          start: {
            line: 135,
            column: 94
          },
          end: {
            line: 135,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 94
          },
          end: {
            line: 135,
            column: 114
          }
        }, {
          start: {
            line: 135,
            column: 118
          },
          end: {
            line: 135,
            column: 119
          }
        }],
        line: 135
      },
      "58": {
        loc: {
          start: {
            line: 141,
            column: 34
          },
          end: {
            line: 141,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 34
          },
          end: {
            line: 141,
            column: 41
          }
        }, {
          start: {
            line: 141,
            column: 45
          },
          end: {
            line: 141,
            column: 54
          }
        }],
        line: 141
      },
      "59": {
        loc: {
          start: {
            line: 143,
            column: 36
          },
          end: {
            line: 143,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 107
          },
          end: {
            line: 143,
            column: 118
          }
        }, {
          start: {
            line: 143,
            column: 121
          },
          end: {
            line: 143,
            column: 130
          }
        }],
        line: 143
      },
      "60": {
        loc: {
          start: {
            line: 143,
            column: 37
          },
          end: {
            line: 143,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 82
          },
          end: {
            line: 143,
            column: 88
          }
        }, {
          start: {
            line: 143,
            column: 91
          },
          end: {
            line: 143,
            column: 103
          }
        }],
        line: 143
      },
      "61": {
        loc: {
          start: {
            line: 143,
            column: 37
          },
          end: {
            line: 143,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 37
          },
          end: {
            line: 143,
            column: 62
          }
        }, {
          start: {
            line: 143,
            column: 66
          },
          end: {
            line: 143,
            column: 79
          }
        }],
        line: 143
      },
      "62": {
        loc: {
          start: {
            line: 144,
            column: 39
          },
          end: {
            line: 144,
            column: 151
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 144,
            column: 111
          },
          end: {
            line: 144,
            column: 138
          }
        }, {
          start: {
            line: 144,
            column: 141
          },
          end: {
            line: 144,
            column: 151
          }
        }],
        line: 144
      },
      "63": {
        loc: {
          start: {
            line: 144,
            column: 40
          },
          end: {
            line: 144,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 144,
            column: 85
          },
          end: {
            line: 144,
            column: 91
          }
        }, {
          start: {
            line: 144,
            column: 94
          },
          end: {
            line: 144,
            column: 107
          }
        }],
        line: 144
      },
      "64": {
        loc: {
          start: {
            line: 144,
            column: 40
          },
          end: {
            line: 144,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 40
          },
          end: {
            line: 144,
            column: 65
          }
        }, {
          start: {
            line: 144,
            column: 69
          },
          end: {
            line: 144,
            column: 82
          }
        }],
        line: 144
      },
      "65": {
        loc: {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 169,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 169,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "66": {
        loc: {
          start: {
            line: 170,
            column: 15
          },
          end: {
            line: 172,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 14
          },
          end: {
            line: 171,
            column: 59
          }
        }, {
          start: {
            line: 172,
            column: 14
          },
          end: {
            line: 172,
            column: 21
          }
        }],
        line: 170
      },
      "67": {
        loc: {
          start: {
            line: 178,
            column: 30
          },
          end: {
            line: 178,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 30
          },
          end: {
            line: 178,
            column: 56
          }
        }, {
          start: {
            line: 178,
            column: 60
          },
          end: {
            line: 178,
            column: 61
          }
        }],
        line: 178
      },
      "68": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "69": {
        loc: {
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "70": {
        loc: {
          start: {
            line: 223,
            column: 16
          },
          end: {
            line: 228,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 16
          },
          end: {
            line: 228,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "71": {
        loc: {
          start: {
            line: 223,
            column: 20
          },
          end: {
            line: 223,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 223,
            column: 20
          },
          end: {
            line: 223,
            column: 36
          }
        }, {
          start: {
            line: 223,
            column: 40
          },
          end: {
            line: 223,
            column: 59
          }
        }],
        line: 223
      },
      "72": {
        loc: {
          start: {
            line: 224,
            column: 38
          },
          end: {
            line: 224,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 224,
            column: 56
          },
          end: {
            line: 224,
            column: 84
          }
        }, {
          start: {
            line: 224,
            column: 87
          },
          end: {
            line: 224,
            column: 100
          }
        }],
        line: 224
      },
      "73": {
        loc: {
          start: {
            line: 225,
            column: 87
          },
          end: {
            line: 225,
            column: 190
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 88
          },
          end: {
            line: 225,
            column: 176
          }
        }, {
          start: {
            line: 225,
            column: 181
          },
          end: {
            line: 225,
            column: 190
          }
        }],
        line: 225
      },
      "74": {
        loc: {
          start: {
            line: 225,
            column: 88
          },
          end: {
            line: 225,
            column: 176
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 225,
            column: 145
          },
          end: {
            line: 225,
            column: 151
          }
        }, {
          start: {
            line: 225,
            column: 154
          },
          end: {
            line: 225,
            column: 176
          }
        }],
        line: 225
      },
      "75": {
        loc: {
          start: {
            line: 225,
            column: 88
          },
          end: {
            line: 225,
            column: 142
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 88
          },
          end: {
            line: 225,
            column: 112
          }
        }, {
          start: {
            line: 225,
            column: 116
          },
          end: {
            line: 225,
            column: 142
          }
        }],
        line: 225
      },
      "76": {
        loc: {
          start: {
            line: 226,
            column: 93
          },
          end: {
            line: 226,
            column: 196
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 94
          },
          end: {
            line: 226,
            column: 182
          }
        }, {
          start: {
            line: 226,
            column: 187
          },
          end: {
            line: 226,
            column: 196
          }
        }],
        line: 226
      },
      "77": {
        loc: {
          start: {
            line: 226,
            column: 94
          },
          end: {
            line: 226,
            column: 182
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 226,
            column: 151
          },
          end: {
            line: 226,
            column: 157
          }
        }, {
          start: {
            line: 226,
            column: 160
          },
          end: {
            line: 226,
            column: 182
          }
        }],
        line: 226
      },
      "78": {
        loc: {
          start: {
            line: 226,
            column: 94
          },
          end: {
            line: 226,
            column: 148
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 94
          },
          end: {
            line: 226,
            column: 118
          }
        }, {
          start: {
            line: 226,
            column: 122
          },
          end: {
            line: 226,
            column: 148
          }
        }],
        line: 226
      },
      "79": {
        loc: {
          start: {
            line: 233,
            column: 16
          },
          end: {
            line: 238,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 16
          },
          end: {
            line: 238,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "80": {
        loc: {
          start: {
            line: 233,
            column: 20
          },
          end: {
            line: 233,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 20
          },
          end: {
            line: 233,
            column: 32
          }
        }, {
          start: {
            line: 233,
            column: 36
          },
          end: {
            line: 233,
            column: 51
          }
        }],
        line: 233
      },
      "81": {
        loc: {
          start: {
            line: 234,
            column: 38
          },
          end: {
            line: 234,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 234,
            column: 52
          },
          end: {
            line: 234,
            column: 76
          }
        }, {
          start: {
            line: 234,
            column: 79
          },
          end: {
            line: 234,
            column: 92
          }
        }],
        line: 234
      },
      "82": {
        loc: {
          start: {
            line: 235,
            column: 92
          },
          end: {
            line: 235,
            column: 183
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 93
          },
          end: {
            line: 235,
            column: 169
          }
        }, {
          start: {
            line: 235,
            column: 174
          },
          end: {
            line: 235,
            column: 183
          }
        }],
        line: 235
      },
      "83": {
        loc: {
          start: {
            line: 235,
            column: 93
          },
          end: {
            line: 235,
            column: 169
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 235,
            column: 142
          },
          end: {
            line: 235,
            column: 148
          }
        }, {
          start: {
            line: 235,
            column: 151
          },
          end: {
            line: 235,
            column: 169
          }
        }],
        line: 235
      },
      "84": {
        loc: {
          start: {
            line: 235,
            column: 93
          },
          end: {
            line: 235,
            column: 139
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 93
          },
          end: {
            line: 235,
            column: 113
          }
        }, {
          start: {
            line: 235,
            column: 117
          },
          end: {
            line: 235,
            column: 139
          }
        }],
        line: 235
      },
      "85": {
        loc: {
          start: {
            line: 236,
            column: 98
          },
          end: {
            line: 236,
            column: 189
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 99
          },
          end: {
            line: 236,
            column: 175
          }
        }, {
          start: {
            line: 236,
            column: 180
          },
          end: {
            line: 236,
            column: 189
          }
        }],
        line: 236
      },
      "86": {
        loc: {
          start: {
            line: 236,
            column: 99
          },
          end: {
            line: 236,
            column: 175
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 236,
            column: 148
          },
          end: {
            line: 236,
            column: 154
          }
        }, {
          start: {
            line: 236,
            column: 157
          },
          end: {
            line: 236,
            column: 175
          }
        }],
        line: 236
      },
      "87": {
        loc: {
          start: {
            line: 236,
            column: 99
          },
          end: {
            line: 236,
            column: 145
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 99
          },
          end: {
            line: 236,
            column: 119
          }
        }, {
          start: {
            line: 236,
            column: 123
          },
          end: {
            line: 236,
            column: 145
          }
        }],
        line: 236
      },
      "88": {
        loc: {
          start: {
            line: 252,
            column: 28
          },
          end: {
            line: 252,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 252,
            column: 53
          },
          end: {
            line: 252,
            column: 58
          }
        }, {
          start: {
            line: 252,
            column: 61
          },
          end: {
            line: 252,
            column: 84
          }
        }],
        line: 252
      },
      "89": {
        loc: {
          start: {
            line: 257,
            column: 14
          },
          end: {
            line: 257,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 14
          },
          end: {
            line: 257,
            column: 23
          }
        }, {
          start: {
            line: 257,
            column: 27
          },
          end: {
            line: 257,
            column: 114
          }
        }],
        line: 257
      },
      "90": {
        loc: {
          start: {
            line: 281,
            column: 31
          },
          end: {
            line: 281,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 281,
            column: 42
          },
          end: {
            line: 281,
            column: 43
          }
        }],
        line: 281
      },
      "91": {
        loc: {
          start: {
            line: 282,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "92": {
        loc: {
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 282,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 282,
            column: 33
          }
        }, {
          start: {
            line: 282,
            column: 37
          },
          end: {
            line: 282,
            column: 53
          }
        }],
        line: 282
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0],
      "91": [0, 0],
      "92": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/services/bitcoin/index.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/services/bitcoin/index.ts"],
      sourcesContent: ["import { BitcoinTransaction, BitcoinWalletData } from '@/types/bitcoin/index';\nimport type { \n  MempoolAddressInfo, \n  BlockstreamAddressInfo, \n  MempoolTransaction, \n  BlockstreamTransaction\n} from '@/types/bitcoin';\nimport { getErrorMessage, type CatchError } from '@/types/common';\nimport { logger } from '@/utils/logger';\n\n/**\n * BITCOIN SERVICE - CLASS-BASED ARCHITECTURE WITH DEPENDENCY INJECTION\n * \n * CRITICAL FOR FINANCIAL PLATFORM:\n * - Handles Bitcoin address validation and wallet data fetching\n * - Supports multiple API providers with fallback\n * - Proper error handling for financial data\n * - Dependency injection for testability\n */\n\nconst API_TIMEOUT_MS = 10000; // 10 seconds timeout for API calls\n\n// Types for provider configuration\ninterface APIProvider {\n  name: string;\n  baseUrl: string;\n  addressEndpoint: (address: string) => string;\n  txsEndpoint: (address: string) => string;\n  processBalance: (data: MempoolAddressInfo | BlockstreamAddressInfo) => number;\n  processTransactions: (data: MempoolTransaction[] | BlockstreamTransaction[], address: string) => BitcoinTransaction[];\n}\n\n// Types for fetch interface (for dependency injection)\ninterface FetchInterface {\n  (url: string, options?: RequestInit): Promise<Response>;\n}\n\nexport class BitcoinService {\n  private static instance: BitcoinService;\n  private fetchFn: FetchInterface;\n  private providers: APIProvider[];\n\n  static getInstance(): BitcoinService {\n    if (!BitcoinService.instance) {\n      BitcoinService.instance = new BitcoinService();\n    }\n    return BitcoinService.instance;\n  }\n\n  constructor(fetchImplementation?: FetchInterface) {\n    // Only use global fetch if it's available and no implementation is provided\n    this.fetchFn = fetchImplementation || (typeof fetch !== 'undefined' ? fetch.bind(globalThis) : (() => {\n      throw new Error('Fetch implementation is required in this environment');\n    }) as FetchInterface);\n    this.providers = this.getAPIProviders();\n  }\n\n  private getAPIProviders(): APIProvider[] {\n    return [\n      {\n        name: 'mempool.space',\n        baseUrl: 'https://mempool.space/api',\n        addressEndpoint: (address: string) => `/address/${address}`,\n        txsEndpoint: (address: string) => `/address/${address}/txs`,\n        processBalance: (data: MempoolAddressInfo) => {\n          if (!data || !data.chain_stats) {\n            return 0;\n          }\n          const funded = Number(data.chain_stats.funded_txo_sum) || 0;\n          const spent = Number(data.chain_stats.spent_txo_sum) || 0;\n          \n          // Sanitize numbers to prevent Infinity/NaN\n          const sanitizedFunded = isFinite(funded) ? funded : 0;\n          const sanitizedSpent = isFinite(spent) ? spent : 0;\n          \n          return Math.max(0, sanitizedFunded - sanitizedSpent);\n        },\n        processTransactions: (data: MempoolTransaction[], address: string): BitcoinTransaction[] => {\n          if (!Array.isArray(data)) {\n            return [];\n          }\n          return data.slice(0, 10).map((tx: any): BitcoinTransaction => {\n            let txType: 'incoming' | 'outgoing' = 'incoming';\n            let valueInSatoshis = 0;\n\n            const inputsFromAddress = tx.vin?.filter((input: any) => \n              input.prevout && input.prevout.scriptpubkey_address === address) || [];\n            const outputsToAddress = tx.vout?.filter((output: any) => \n              output.scriptpubkey_address === address) || [];\n\n            if (inputsFromAddress.length > 0) {\n              txType = 'outgoing';\n              let amountSentToOthers = 0;\n              for (const output of tx.vout || []) {\n                if (output.scriptpubkey_address !== address) {\n                  amountSentToOthers += Number(output.value) || 0;\n                }\n              }\n              if (amountSentToOthers > 0) {\n                valueInSatoshis = amountSentToOthers;\n              } else {\n                const totalValueFromInputs = inputsFromAddress.reduce(\n                  (sum: number, input: any) => sum + (Number(input.prevout?.value) || 0), 0);\n                valueInSatoshis = totalValueFromInputs;\n              }\n            } else if (outputsToAddress.length > 0) {\n              txType = 'incoming';\n              valueInSatoshis = outputsToAddress.reduce(\n                (sum: number, output: any) => sum + (Number(output.value) || 0), 0);\n            } else {\n              valueInSatoshis = 0;\n            }\n\n            return {\n              txid: tx.txid || 'unknown',\n              value: valueInSatoshis / 100000000, // Convert satoshis to BTC\n              status: (tx.status?.confirmed) ? 'confirmed' : 'pending',\n              timestamp: tx.status?.block_time ? tx.status.block_time * 1000 : Date.now(),\n              type: txType,\n            };\n          });\n        },\n      },\n      {\n        name: 'blockstream.info',\n        baseUrl: 'https://blockstream.info/api',\n        addressEndpoint: (address: string) => `/address/${address}`,\n        txsEndpoint: (address: string) => `/address/${address}/txs`,\n        processBalance: (data: BlockstreamAddressInfo) => {\n          if (!data || !data.chain_stats) {\n            return 0;\n          }\n          const funded = Number(data.chain_stats.funded_txo_sum) || 0;\n          const spent = Number(data.chain_stats.spent_txo_sum) || 0;\n          \n          // Sanitize numbers to prevent Infinity/NaN\n          const sanitizedFunded = isFinite(funded) ? funded : 0;\n          const sanitizedSpent = isFinite(spent) ? spent : 0;\n          \n          return Math.max(0, sanitizedFunded - sanitizedSpent);\n        },\n        processTransactions: (data: BlockstreamTransaction[], address: string): BitcoinTransaction[] => {\n          if (!Array.isArray(data)) {\n            return [];\n          }\n          return data.slice(0, 10).map((tx: any): BitcoinTransaction => {\n            let txType: 'incoming' | 'outgoing' = 'incoming';\n            let valueInSatoshis = 0;\n\n            const inputsFromAddress = tx.vin?.filter((input: any) => \n              input.prevout && input.prevout.scriptpubkey_address === address) || [];\n            const outputsToAddress = tx.vout?.filter((output: any) => \n              output.scriptpubkey_address === address) || [];\n\n            if (inputsFromAddress.length > 0) {\n              txType = 'outgoing';\n              let amountSentToOthers = 0;\n              for (const output of tx.vout || []) {\n                if (output.scriptpubkey_address !== address) {\n                  amountSentToOthers += Number(output.value) || 0;\n                }\n              }\n              if (amountSentToOthers > 0) {\n                valueInSatoshis = amountSentToOthers;\n              } else {\n                const totalValueFromInputs = inputsFromAddress.reduce(\n                  (sum: number, input: any) => sum + (Number(input.prevout?.value) || 0), 0);\n                valueInSatoshis = totalValueFromInputs;\n              }\n            } else if (outputsToAddress.length > 0) {\n              txType = 'incoming';\n              valueInSatoshis = outputsToAddress.reduce(\n                (sum: number, output: any) => sum + (Number(output.value) || 0), 0);\n            } else {\n              valueInSatoshis = 0;\n            }\n\n            return {\n              txid: tx.txid || 'unknown',\n              value: valueInSatoshis / 100000000, // Convert satoshis to BTC\n              status: (tx.status?.confirmed) ? 'confirmed' : 'pending',\n              timestamp: tx.status?.block_time ? tx.status.block_time * 1000 : Date.now(),\n              type: txType,\n            };\n          });\n        },\n      },\n    ];\n  }\n\n  // Helper function to fetch with timeout\n  private async fetchWithTimeout(url: string, timeout: number): Promise<Response> {\n    const controller = new AbortController();\n    const id = setTimeout(() => controller.abort(), timeout);\n\n    try {\n      const response = await this.fetchFn(url, { signal: controller.signal });\n      clearTimeout(id);\n      return response;\n    } catch (error) {\n      clearTimeout(id);\n      throw error;\n    }\n  }\n\n  // Clean Bitcoin address from URI if needed\n  cleanBitcoinAddress(address: string): string {\n    if (!address) return '';\n    return address.startsWith('bitcoin:') \n      ? address.split('?')[0].replace('bitcoin:', '')\n      : address;\n  }\n\n  // Get balance for a Bitcoin address\n  async getBalance(address: string): Promise<{ confirmed: number; unconfirmed: number; total: number; error?: string }> {\n    try {\n      const walletData = await this.fetchBitcoinWalletData(address);\n      const confirmed = Number(walletData.balance) || 0;\n      const unconfirmed = 0; // TODO: Add unconfirmed balance tracking\n      return {\n        confirmed,\n        unconfirmed,\n        total: confirmed + unconfirmed\n      };\n    } catch (error: CatchError) {\n      return {\n        confirmed: 0,\n        unconfirmed: 0,\n        total: 0,\n        error: getErrorMessage(error)\n      };\n    }\n  }\n\n  // Get transactions for a Bitcoin address\n  async getTransactions(address: string): Promise<BitcoinTransaction[]> {\n    try {\n      const walletData = await this.fetchBitcoinWalletData(address);\n      return walletData.transactions;\n    } catch (error: CatchError) {\n      logger.error('Error fetching transactions:', getErrorMessage(error), 'Bitcoin');\n      return [];\n    }\n  }\n\n  // Fetch wallet data with failover between different providers\n  async fetchBitcoinWalletData(address: string): Promise<BitcoinWalletData> {\n    const cleanAddress = this.cleanBitcoinAddress(address);\n    \n    // Validate address before making API calls\n    if (!cleanAddress) {\n      throw new Error('Invalid or empty Bitcoin address');\n    }\n    \n    // Basic Bitcoin address validation\n    const bitcoinAddressRegex = /^(bc1|[13])[a-zA-HJ-NP-Z0-9]{25,87}$/;\n    if (!bitcoinAddressRegex.test(cleanAddress)) {\n      throw new Error('Invalid Bitcoin address format');\n    }\n    \n    let lastError: Error | null = null;\n    \n    for (const provider of this.providers) {\n      try {\n        const addressUrl = `${provider.baseUrl}${provider.addressEndpoint(cleanAddress)}`;\n        const addressResponse = await this.fetchWithTimeout(addressUrl, API_TIMEOUT_MS);\n        \n        if (!addressResponse || !addressResponse.ok) {\n          const errorText = addressResponse ? await addressResponse.text() : 'No response';\n          logger.warn(`API Error from ${provider.name} (Address - ${addressResponse?.status || 'unknown'}): ${errorText}`, undefined, 'Bitcoin');\n          lastError = new Error(`Provider ${provider.name} address fetch failed: ${addressResponse?.status || 'unknown'}`);\n          continue;\n        }\n        \n        const addressData = await addressResponse.json();\n        const balanceInSatoshis = provider.processBalance(addressData);\n        \n        const txsUrl = `${provider.baseUrl}${provider.txsEndpoint(cleanAddress)}`;\n        const txsResponse = await this.fetchWithTimeout(txsUrl, API_TIMEOUT_MS);\n        \n        if (!txsResponse || !txsResponse.ok) {\n          const errorText = txsResponse ? await txsResponse.text() : 'No response';\n          logger.warn(`API Error from ${provider.name} (Transactions - ${txsResponse?.status || 'unknown'}): ${errorText}`, undefined, 'Bitcoin');\n          lastError = new Error(`Provider ${provider.name} transactions fetch failed: ${txsResponse?.status || 'unknown'}`);\n          continue;\n        }\n        \n        const txsData = await txsResponse.json();\n        const transactions = provider.processTransactions(txsData, cleanAddress);\n        \n        return {\n          balance: balanceInSatoshis / 100000000, // Convert balance to BTC here\n          address: cleanAddress,\n          transactions,\n          network: 'mainnet' as const,\n          lastUpdated: new Date().toISOString()\n        };\n      } catch (error: CatchError) {\n        const errorMessage = getErrorMessage(error);\n        logger.error(`Error with provider ${provider.name}:`, errorMessage, 'Bitcoin');\n        lastError = error instanceof Error ? error : new Error(errorMessage);\n        // Continue to next provider\n      }\n    }\n    \n    logger.error(`Failed to fetch wallet data for ${cleanAddress} from all providers`, { error: getErrorMessage(lastError) }, 'Bitcoin');\n    throw lastError || new Error('Failed to fetch wallet data from any provider for address: ' + cleanAddress);\n  }\n\n  // Get mempool.space transaction URL\n  getTransactionUrl(txid: string): string {\n    return `https://mempool.space/tx/${txid}`;\n  }\n\n  // Get mempool.space address URL\n  getAddressUrl(address: string): string {\n    return `https://mempool.space/address/${this.cleanBitcoinAddress(address)}`;\n  }\n}\n\n// Export singleton instance and convenience functions for backward compatibility\nexport const bitcoinService = BitcoinService.getInstance();\n\n// Legacy function exports for backward compatibility\nexport const cleanBitcoinAddress = (address: string) => bitcoinService.cleanBitcoinAddress(address);\nexport const fetchBitcoinWalletData = (address: string) => bitcoinService.fetchBitcoinWalletData(address);\nexport const getTransactionUrl = (txid: string) => bitcoinService.getTransactionUrl(txid);\nexport const getAddressUrl = (address: string) => bitcoinService.getAddressUrl(address);\n\n// Add missing formatBtcValue function\nexport const formatBtcValue = (value: number, decimals: number = 8): string => {\n  if (typeof value !== 'number' || !isFinite(value)) {\n    return '0.00000000';\n  }\n  \n  // Ensure we don't show more than 8 decimal places for BTC\n  const clampedDecimals = Math.min(Math.max(0, decimals), 8);\n  return value.toFixed(clampedDecimals);\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7cea154b3fe6ce62efe92e8884ca4f562753ca8a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_mvcxdfbbb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_mvcxdfbbb();
cov_mvcxdfbbb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_mvcxdfbbb().s[1]++;
exports.formatBtcValue = exports.getAddressUrl = exports.getTransactionUrl = exports.fetchBitcoinWalletData = exports.cleanBitcoinAddress = exports.bitcoinService = exports.BitcoinService = void 0;
const common_1 =
/* istanbul ignore next */
(cov_mvcxdfbbb().s[2]++, require("@/types/common"));
const logger_1 =
/* istanbul ignore next */
(cov_mvcxdfbbb().s[3]++, require("@/utils/logger"));
/**
 * BITCOIN SERVICE - CLASS-BASED ARCHITECTURE WITH DEPENDENCY INJECTION
 *
 * CRITICAL FOR FINANCIAL PLATFORM:
 * - Handles Bitcoin address validation and wallet data fetching
 * - Supports multiple API providers with fallback
 * - Proper error handling for financial data
 * - Dependency injection for testability
 */
const API_TIMEOUT_MS =
/* istanbul ignore next */
(cov_mvcxdfbbb().s[4]++, 10000); // 10 seconds timeout for API calls
class BitcoinService {
  static getInstance() {
    /* istanbul ignore next */
    cov_mvcxdfbbb().f[0]++;
    cov_mvcxdfbbb().s[5]++;
    if (!BitcoinService.instance) {
      /* istanbul ignore next */
      cov_mvcxdfbbb().b[0][0]++;
      cov_mvcxdfbbb().s[6]++;
      BitcoinService.instance = new BitcoinService();
    } else
    /* istanbul ignore next */
    {
      cov_mvcxdfbbb().b[0][1]++;
    }
    cov_mvcxdfbbb().s[7]++;
    return BitcoinService.instance;
  }
  constructor(fetchImplementation) {
    /* istanbul ignore next */
    cov_mvcxdfbbb().f[1]++;
    cov_mvcxdfbbb().s[8]++;
    // Only use global fetch if it's available and no implementation is provided
    this.fetchFn =
    /* istanbul ignore next */
    (cov_mvcxdfbbb().b[1][0]++, fetchImplementation) ||
    /* istanbul ignore next */
    (cov_mvcxdfbbb().b[1][1]++, typeof fetch !== 'undefined' ?
    /* istanbul ignore next */
    (cov_mvcxdfbbb().b[2][0]++, fetch.bind(globalThis)) :
    /* istanbul ignore next */
    (cov_mvcxdfbbb().b[2][1]++, () => {
      /* istanbul ignore next */
      cov_mvcxdfbbb().f[2]++;
      cov_mvcxdfbbb().s[9]++;
      throw new Error('Fetch implementation is required in this environment');
    }));
    /* istanbul ignore next */
    cov_mvcxdfbbb().s[10]++;
    this.providers = this.getAPIProviders();
  }
  getAPIProviders() {
    /* istanbul ignore next */
    cov_mvcxdfbbb().f[3]++;
    cov_mvcxdfbbb().s[11]++;
    return [{
      name: 'mempool.space',
      baseUrl: 'https://mempool.space/api',
      addressEndpoint: address => {
        /* istanbul ignore next */
        cov_mvcxdfbbb().f[4]++;
        cov_mvcxdfbbb().s[12]++;
        return `/address/${address}`;
      },
      txsEndpoint: address => {
        /* istanbul ignore next */
        cov_mvcxdfbbb().f[5]++;
        cov_mvcxdfbbb().s[13]++;
        return `/address/${address}/txs`;
      },
      processBalance: data => {
        /* istanbul ignore next */
        cov_mvcxdfbbb().f[6]++;
        cov_mvcxdfbbb().s[14]++;
        if (
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[4][0]++, !data) ||
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[4][1]++, !data.chain_stats)) {
          /* istanbul ignore next */
          cov_mvcxdfbbb().b[3][0]++;
          cov_mvcxdfbbb().s[15]++;
          return 0;
        } else
        /* istanbul ignore next */
        {
          cov_mvcxdfbbb().b[3][1]++;
        }
        const funded =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[16]++,
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[5][0]++, Number(data.chain_stats.funded_txo_sum)) ||
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[5][1]++, 0));
        const spent =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[17]++,
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[6][0]++, Number(data.chain_stats.spent_txo_sum)) ||
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[6][1]++, 0));
        // Sanitize numbers to prevent Infinity/NaN
        const sanitizedFunded =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[18]++, isFinite(funded) ?
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[7][0]++, funded) :
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[7][1]++, 0));
        const sanitizedSpent =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[19]++, isFinite(spent) ?
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[8][0]++, spent) :
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[8][1]++, 0));
        /* istanbul ignore next */
        cov_mvcxdfbbb().s[20]++;
        return Math.max(0, sanitizedFunded - sanitizedSpent);
      },
      processTransactions: (data, address) => {
        /* istanbul ignore next */
        cov_mvcxdfbbb().f[7]++;
        cov_mvcxdfbbb().s[21]++;
        if (!Array.isArray(data)) {
          /* istanbul ignore next */
          cov_mvcxdfbbb().b[9][0]++;
          cov_mvcxdfbbb().s[22]++;
          return [];
        } else
        /* istanbul ignore next */
        {
          cov_mvcxdfbbb().b[9][1]++;
        }
        cov_mvcxdfbbb().s[23]++;
        return data.slice(0, 10).map(tx => {
          /* istanbul ignore next */
          cov_mvcxdfbbb().f[8]++;
          var _a, _b, _c, _d;
          let txType =
          /* istanbul ignore next */
          (cov_mvcxdfbbb().s[24]++, 'incoming');
          let valueInSatoshis =
          /* istanbul ignore next */
          (cov_mvcxdfbbb().s[25]++, 0);
          const inputsFromAddress =
          /* istanbul ignore next */
          (cov_mvcxdfbbb().s[26]++,
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[10][0]++,
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[12][0]++, (_a = tx.vin) === null) ||
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[12][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[11][0]++, void 0) :
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[11][1]++, _a.filter(input => {
            /* istanbul ignore next */
            cov_mvcxdfbbb().f[9]++;
            cov_mvcxdfbbb().s[27]++;
            return /* istanbul ignore next */(cov_mvcxdfbbb().b[13][0]++, input.prevout) &&
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[13][1]++, input.prevout.scriptpubkey_address === address);
          }))) ||
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[10][1]++, []));
          const outputsToAddress =
          /* istanbul ignore next */
          (cov_mvcxdfbbb().s[28]++,
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[14][0]++,
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[16][0]++, (_b = tx.vout) === null) ||
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[16][1]++, _b === void 0) ?
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[15][0]++, void 0) :
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[15][1]++, _b.filter(output => {
            /* istanbul ignore next */
            cov_mvcxdfbbb().f[10]++;
            cov_mvcxdfbbb().s[29]++;
            return output.scriptpubkey_address === address;
          }))) ||
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[14][1]++, []));
          /* istanbul ignore next */
          cov_mvcxdfbbb().s[30]++;
          if (inputsFromAddress.length > 0) {
            /* istanbul ignore next */
            cov_mvcxdfbbb().b[17][0]++;
            cov_mvcxdfbbb().s[31]++;
            txType = 'outgoing';
            let amountSentToOthers =
            /* istanbul ignore next */
            (cov_mvcxdfbbb().s[32]++, 0);
            /* istanbul ignore next */
            cov_mvcxdfbbb().s[33]++;
            for (const output of
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[18][0]++, tx.vout) ||
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[18][1]++, [])) {
              /* istanbul ignore next */
              cov_mvcxdfbbb().s[34]++;
              if (output.scriptpubkey_address !== address) {
                /* istanbul ignore next */
                cov_mvcxdfbbb().b[19][0]++;
                cov_mvcxdfbbb().s[35]++;
                amountSentToOthers +=
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[20][0]++, Number(output.value)) ||
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[20][1]++, 0);
              } else
              /* istanbul ignore next */
              {
                cov_mvcxdfbbb().b[19][1]++;
              }
            }
            /* istanbul ignore next */
            cov_mvcxdfbbb().s[36]++;
            if (amountSentToOthers > 0) {
              /* istanbul ignore next */
              cov_mvcxdfbbb().b[21][0]++;
              cov_mvcxdfbbb().s[37]++;
              valueInSatoshis = amountSentToOthers;
            } else {
              /* istanbul ignore next */
              cov_mvcxdfbbb().b[21][1]++;
              const totalValueFromInputs =
              /* istanbul ignore next */
              (cov_mvcxdfbbb().s[38]++, inputsFromAddress.reduce((sum, input) => {
                /* istanbul ignore next */
                cov_mvcxdfbbb().f[11]++;
                var _a;
                /* istanbul ignore next */
                cov_mvcxdfbbb().s[39]++;
                return sum + (
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[22][0]++, Number(
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[24][0]++, (_a = input.prevout) === null) ||
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[24][1]++, _a === void 0) ?
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[23][0]++, void 0) :
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[23][1]++, _a.value))) ||
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[22][1]++, 0));
              }, 0));
              /* istanbul ignore next */
              cov_mvcxdfbbb().s[40]++;
              valueInSatoshis = totalValueFromInputs;
            }
          } else {
            /* istanbul ignore next */
            cov_mvcxdfbbb().b[17][1]++;
            cov_mvcxdfbbb().s[41]++;
            if (outputsToAddress.length > 0) {
              /* istanbul ignore next */
              cov_mvcxdfbbb().b[25][0]++;
              cov_mvcxdfbbb().s[42]++;
              txType = 'incoming';
              /* istanbul ignore next */
              cov_mvcxdfbbb().s[43]++;
              valueInSatoshis = outputsToAddress.reduce((sum, output) => {
                /* istanbul ignore next */
                cov_mvcxdfbbb().f[12]++;
                cov_mvcxdfbbb().s[44]++;
                return sum + (
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[26][0]++, Number(output.value)) ||
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[26][1]++, 0));
              }, 0);
            } else {
              /* istanbul ignore next */
              cov_mvcxdfbbb().b[25][1]++;
              cov_mvcxdfbbb().s[45]++;
              valueInSatoshis = 0;
            }
          }
          /* istanbul ignore next */
          cov_mvcxdfbbb().s[46]++;
          return {
            txid:
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[27][0]++, tx.txid) ||
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[27][1]++, 'unknown'),
            value: valueInSatoshis / 100000000,
            // Convert satoshis to BTC
            status: (
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[30][0]++, (_c = tx.status) === null) ||
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[30][1]++, _c === void 0) ?
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[29][0]++, void 0) :
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[29][1]++, _c.confirmed)) ?
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[28][0]++, 'confirmed') :
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[28][1]++, 'pending'),
            timestamp: (
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[33][0]++, (_d = tx.status) === null) ||
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[33][1]++, _d === void 0) ?
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[32][0]++, void 0) :
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[32][1]++, _d.block_time)) ?
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[31][0]++, tx.status.block_time * 1000) :
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[31][1]++, Date.now()),
            type: txType
          };
        });
      }
    }, {
      name: 'blockstream.info',
      baseUrl: 'https://blockstream.info/api',
      addressEndpoint: address => {
        /* istanbul ignore next */
        cov_mvcxdfbbb().f[13]++;
        cov_mvcxdfbbb().s[47]++;
        return `/address/${address}`;
      },
      txsEndpoint: address => {
        /* istanbul ignore next */
        cov_mvcxdfbbb().f[14]++;
        cov_mvcxdfbbb().s[48]++;
        return `/address/${address}/txs`;
      },
      processBalance: data => {
        /* istanbul ignore next */
        cov_mvcxdfbbb().f[15]++;
        cov_mvcxdfbbb().s[49]++;
        if (
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[35][0]++, !data) ||
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[35][1]++, !data.chain_stats)) {
          /* istanbul ignore next */
          cov_mvcxdfbbb().b[34][0]++;
          cov_mvcxdfbbb().s[50]++;
          return 0;
        } else
        /* istanbul ignore next */
        {
          cov_mvcxdfbbb().b[34][1]++;
        }
        const funded =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[51]++,
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[36][0]++, Number(data.chain_stats.funded_txo_sum)) ||
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[36][1]++, 0));
        const spent =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[52]++,
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[37][0]++, Number(data.chain_stats.spent_txo_sum)) ||
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[37][1]++, 0));
        // Sanitize numbers to prevent Infinity/NaN
        const sanitizedFunded =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[53]++, isFinite(funded) ?
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[38][0]++, funded) :
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[38][1]++, 0));
        const sanitizedSpent =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[54]++, isFinite(spent) ?
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[39][0]++, spent) :
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[39][1]++, 0));
        /* istanbul ignore next */
        cov_mvcxdfbbb().s[55]++;
        return Math.max(0, sanitizedFunded - sanitizedSpent);
      },
      processTransactions: (data, address) => {
        /* istanbul ignore next */
        cov_mvcxdfbbb().f[16]++;
        cov_mvcxdfbbb().s[56]++;
        if (!Array.isArray(data)) {
          /* istanbul ignore next */
          cov_mvcxdfbbb().b[40][0]++;
          cov_mvcxdfbbb().s[57]++;
          return [];
        } else
        /* istanbul ignore next */
        {
          cov_mvcxdfbbb().b[40][1]++;
        }
        cov_mvcxdfbbb().s[58]++;
        return data.slice(0, 10).map(tx => {
          /* istanbul ignore next */
          cov_mvcxdfbbb().f[17]++;
          var _a, _b, _c, _d;
          let txType =
          /* istanbul ignore next */
          (cov_mvcxdfbbb().s[59]++, 'incoming');
          let valueInSatoshis =
          /* istanbul ignore next */
          (cov_mvcxdfbbb().s[60]++, 0);
          const inputsFromAddress =
          /* istanbul ignore next */
          (cov_mvcxdfbbb().s[61]++,
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[41][0]++,
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[43][0]++, (_a = tx.vin) === null) ||
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[43][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[42][0]++, void 0) :
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[42][1]++, _a.filter(input => {
            /* istanbul ignore next */
            cov_mvcxdfbbb().f[18]++;
            cov_mvcxdfbbb().s[62]++;
            return /* istanbul ignore next */(cov_mvcxdfbbb().b[44][0]++, input.prevout) &&
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[44][1]++, input.prevout.scriptpubkey_address === address);
          }))) ||
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[41][1]++, []));
          const outputsToAddress =
          /* istanbul ignore next */
          (cov_mvcxdfbbb().s[63]++,
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[45][0]++,
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[47][0]++, (_b = tx.vout) === null) ||
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[47][1]++, _b === void 0) ?
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[46][0]++, void 0) :
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[46][1]++, _b.filter(output => {
            /* istanbul ignore next */
            cov_mvcxdfbbb().f[19]++;
            cov_mvcxdfbbb().s[64]++;
            return output.scriptpubkey_address === address;
          }))) ||
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[45][1]++, []));
          /* istanbul ignore next */
          cov_mvcxdfbbb().s[65]++;
          if (inputsFromAddress.length > 0) {
            /* istanbul ignore next */
            cov_mvcxdfbbb().b[48][0]++;
            cov_mvcxdfbbb().s[66]++;
            txType = 'outgoing';
            let amountSentToOthers =
            /* istanbul ignore next */
            (cov_mvcxdfbbb().s[67]++, 0);
            /* istanbul ignore next */
            cov_mvcxdfbbb().s[68]++;
            for (const output of
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[49][0]++, tx.vout) ||
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[49][1]++, [])) {
              /* istanbul ignore next */
              cov_mvcxdfbbb().s[69]++;
              if (output.scriptpubkey_address !== address) {
                /* istanbul ignore next */
                cov_mvcxdfbbb().b[50][0]++;
                cov_mvcxdfbbb().s[70]++;
                amountSentToOthers +=
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[51][0]++, Number(output.value)) ||
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[51][1]++, 0);
              } else
              /* istanbul ignore next */
              {
                cov_mvcxdfbbb().b[50][1]++;
              }
            }
            /* istanbul ignore next */
            cov_mvcxdfbbb().s[71]++;
            if (amountSentToOthers > 0) {
              /* istanbul ignore next */
              cov_mvcxdfbbb().b[52][0]++;
              cov_mvcxdfbbb().s[72]++;
              valueInSatoshis = amountSentToOthers;
            } else {
              /* istanbul ignore next */
              cov_mvcxdfbbb().b[52][1]++;
              const totalValueFromInputs =
              /* istanbul ignore next */
              (cov_mvcxdfbbb().s[73]++, inputsFromAddress.reduce((sum, input) => {
                /* istanbul ignore next */
                cov_mvcxdfbbb().f[20]++;
                var _a;
                /* istanbul ignore next */
                cov_mvcxdfbbb().s[74]++;
                return sum + (
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[53][0]++, Number(
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[55][0]++, (_a = input.prevout) === null) ||
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[55][1]++, _a === void 0) ?
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[54][0]++, void 0) :
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[54][1]++, _a.value))) ||
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[53][1]++, 0));
              }, 0));
              /* istanbul ignore next */
              cov_mvcxdfbbb().s[75]++;
              valueInSatoshis = totalValueFromInputs;
            }
          } else {
            /* istanbul ignore next */
            cov_mvcxdfbbb().b[48][1]++;
            cov_mvcxdfbbb().s[76]++;
            if (outputsToAddress.length > 0) {
              /* istanbul ignore next */
              cov_mvcxdfbbb().b[56][0]++;
              cov_mvcxdfbbb().s[77]++;
              txType = 'incoming';
              /* istanbul ignore next */
              cov_mvcxdfbbb().s[78]++;
              valueInSatoshis = outputsToAddress.reduce((sum, output) => {
                /* istanbul ignore next */
                cov_mvcxdfbbb().f[21]++;
                cov_mvcxdfbbb().s[79]++;
                return sum + (
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[57][0]++, Number(output.value)) ||
                /* istanbul ignore next */
                (cov_mvcxdfbbb().b[57][1]++, 0));
              }, 0);
            } else {
              /* istanbul ignore next */
              cov_mvcxdfbbb().b[56][1]++;
              cov_mvcxdfbbb().s[80]++;
              valueInSatoshis = 0;
            }
          }
          /* istanbul ignore next */
          cov_mvcxdfbbb().s[81]++;
          return {
            txid:
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[58][0]++, tx.txid) ||
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[58][1]++, 'unknown'),
            value: valueInSatoshis / 100000000,
            // Convert satoshis to BTC
            status: (
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[61][0]++, (_c = tx.status) === null) ||
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[61][1]++, _c === void 0) ?
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[60][0]++, void 0) :
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[60][1]++, _c.confirmed)) ?
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[59][0]++, 'confirmed') :
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[59][1]++, 'pending'),
            timestamp: (
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[64][0]++, (_d = tx.status) === null) ||
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[64][1]++, _d === void 0) ?
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[63][0]++, void 0) :
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[63][1]++, _d.block_time)) ?
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[62][0]++, tx.status.block_time * 1000) :
            /* istanbul ignore next */
            (cov_mvcxdfbbb().b[62][1]++, Date.now()),
            type: txType
          };
        });
      }
    }];
  }
  // Helper function to fetch with timeout
  async fetchWithTimeout(url, timeout) {
    /* istanbul ignore next */
    cov_mvcxdfbbb().f[22]++;
    const controller =
    /* istanbul ignore next */
    (cov_mvcxdfbbb().s[82]++, new AbortController());
    const id =
    /* istanbul ignore next */
    (cov_mvcxdfbbb().s[83]++, setTimeout(() => {
      /* istanbul ignore next */
      cov_mvcxdfbbb().f[23]++;
      cov_mvcxdfbbb().s[84]++;
      return controller.abort();
    }, timeout));
    /* istanbul ignore next */
    cov_mvcxdfbbb().s[85]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_mvcxdfbbb().s[86]++, await this.fetchFn(url, {
        signal: controller.signal
      }));
      /* istanbul ignore next */
      cov_mvcxdfbbb().s[87]++;
      clearTimeout(id);
      /* istanbul ignore next */
      cov_mvcxdfbbb().s[88]++;
      return response;
    } catch (error) {
      /* istanbul ignore next */
      cov_mvcxdfbbb().s[89]++;
      clearTimeout(id);
      /* istanbul ignore next */
      cov_mvcxdfbbb().s[90]++;
      throw error;
    }
  }
  // Clean Bitcoin address from URI if needed
  cleanBitcoinAddress(address) {
    /* istanbul ignore next */
    cov_mvcxdfbbb().f[24]++;
    cov_mvcxdfbbb().s[91]++;
    if (!address) {
      /* istanbul ignore next */
      cov_mvcxdfbbb().b[65][0]++;
      cov_mvcxdfbbb().s[92]++;
      return '';
    } else
    /* istanbul ignore next */
    {
      cov_mvcxdfbbb().b[65][1]++;
    }
    cov_mvcxdfbbb().s[93]++;
    return address.startsWith('bitcoin:') ?
    /* istanbul ignore next */
    (cov_mvcxdfbbb().b[66][0]++, address.split('?')[0].replace('bitcoin:', '')) :
    /* istanbul ignore next */
    (cov_mvcxdfbbb().b[66][1]++, address);
  }
  // Get balance for a Bitcoin address
  async getBalance(address) {
    /* istanbul ignore next */
    cov_mvcxdfbbb().f[25]++;
    cov_mvcxdfbbb().s[94]++;
    try {
      const walletData =
      /* istanbul ignore next */
      (cov_mvcxdfbbb().s[95]++, await this.fetchBitcoinWalletData(address));
      const confirmed =
      /* istanbul ignore next */
      (cov_mvcxdfbbb().s[96]++,
      /* istanbul ignore next */
      (cov_mvcxdfbbb().b[67][0]++, Number(walletData.balance)) ||
      /* istanbul ignore next */
      (cov_mvcxdfbbb().b[67][1]++, 0));
      const unconfirmed =
      /* istanbul ignore next */
      (cov_mvcxdfbbb().s[97]++, 0); // TODO: Add unconfirmed balance tracking
      /* istanbul ignore next */
      cov_mvcxdfbbb().s[98]++;
      return {
        confirmed,
        unconfirmed,
        total: confirmed + unconfirmed
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_mvcxdfbbb().s[99]++;
      return {
        confirmed: 0,
        unconfirmed: 0,
        total: 0,
        error: (0, common_1.getErrorMessage)(error)
      };
    }
  }
  // Get transactions for a Bitcoin address
  async getTransactions(address) {
    /* istanbul ignore next */
    cov_mvcxdfbbb().f[26]++;
    cov_mvcxdfbbb().s[100]++;
    try {
      const walletData =
      /* istanbul ignore next */
      (cov_mvcxdfbbb().s[101]++, await this.fetchBitcoinWalletData(address));
      /* istanbul ignore next */
      cov_mvcxdfbbb().s[102]++;
      return walletData.transactions;
    } catch (error) {
      /* istanbul ignore next */
      cov_mvcxdfbbb().s[103]++;
      logger_1.logger.error('Error fetching transactions:', (0, common_1.getErrorMessage)(error), 'Bitcoin');
      /* istanbul ignore next */
      cov_mvcxdfbbb().s[104]++;
      return [];
    }
  }
  // Fetch wallet data with failover between different providers
  async fetchBitcoinWalletData(address) {
    /* istanbul ignore next */
    cov_mvcxdfbbb().f[27]++;
    const cleanAddress =
    /* istanbul ignore next */
    (cov_mvcxdfbbb().s[105]++, this.cleanBitcoinAddress(address));
    // Validate address before making API calls
    /* istanbul ignore next */
    cov_mvcxdfbbb().s[106]++;
    if (!cleanAddress) {
      /* istanbul ignore next */
      cov_mvcxdfbbb().b[68][0]++;
      cov_mvcxdfbbb().s[107]++;
      throw new Error('Invalid or empty Bitcoin address');
    } else
    /* istanbul ignore next */
    {
      cov_mvcxdfbbb().b[68][1]++;
    }
    // Basic Bitcoin address validation
    const bitcoinAddressRegex =
    /* istanbul ignore next */
    (cov_mvcxdfbbb().s[108]++, /^(bc1|[13])[a-zA-HJ-NP-Z0-9]{25,87}$/);
    /* istanbul ignore next */
    cov_mvcxdfbbb().s[109]++;
    if (!bitcoinAddressRegex.test(cleanAddress)) {
      /* istanbul ignore next */
      cov_mvcxdfbbb().b[69][0]++;
      cov_mvcxdfbbb().s[110]++;
      throw new Error('Invalid Bitcoin address format');
    } else
    /* istanbul ignore next */
    {
      cov_mvcxdfbbb().b[69][1]++;
    }
    let lastError =
    /* istanbul ignore next */
    (cov_mvcxdfbbb().s[111]++, null);
    /* istanbul ignore next */
    cov_mvcxdfbbb().s[112]++;
    for (const provider of this.providers) {
      /* istanbul ignore next */
      cov_mvcxdfbbb().s[113]++;
      try {
        const addressUrl =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[114]++, `${provider.baseUrl}${provider.addressEndpoint(cleanAddress)}`);
        const addressResponse =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[115]++, await this.fetchWithTimeout(addressUrl, API_TIMEOUT_MS));
        /* istanbul ignore next */
        cov_mvcxdfbbb().s[116]++;
        if (
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[71][0]++, !addressResponse) ||
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[71][1]++, !addressResponse.ok)) {
          /* istanbul ignore next */
          cov_mvcxdfbbb().b[70][0]++;
          const errorText =
          /* istanbul ignore next */
          (cov_mvcxdfbbb().s[117]++, addressResponse ?
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[72][0]++, await addressResponse.text()) :
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[72][1]++, 'No response'));
          /* istanbul ignore next */
          cov_mvcxdfbbb().s[118]++;
          logger_1.logger.warn(`API Error from ${provider.name} (Address - ${
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[73][0]++,
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[75][0]++, addressResponse === null) ||
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[75][1]++, addressResponse === void 0) ?
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[74][0]++, void 0) :
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[74][1]++, addressResponse.status)) ||
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[73][1]++, 'unknown')}): ${errorText}`, undefined, 'Bitcoin');
          /* istanbul ignore next */
          cov_mvcxdfbbb().s[119]++;
          lastError = new Error(`Provider ${provider.name} address fetch failed: ${
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[76][0]++,
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[78][0]++, addressResponse === null) ||
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[78][1]++, addressResponse === void 0) ?
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[77][0]++, void 0) :
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[77][1]++, addressResponse.status)) ||
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[76][1]++, 'unknown')}`);
          /* istanbul ignore next */
          cov_mvcxdfbbb().s[120]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_mvcxdfbbb().b[70][1]++;
        }
        const addressData =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[121]++, await addressResponse.json());
        const balanceInSatoshis =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[122]++, provider.processBalance(addressData));
        const txsUrl =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[123]++, `${provider.baseUrl}${provider.txsEndpoint(cleanAddress)}`);
        const txsResponse =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[124]++, await this.fetchWithTimeout(txsUrl, API_TIMEOUT_MS));
        /* istanbul ignore next */
        cov_mvcxdfbbb().s[125]++;
        if (
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[80][0]++, !txsResponse) ||
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[80][1]++, !txsResponse.ok)) {
          /* istanbul ignore next */
          cov_mvcxdfbbb().b[79][0]++;
          const errorText =
          /* istanbul ignore next */
          (cov_mvcxdfbbb().s[126]++, txsResponse ?
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[81][0]++, await txsResponse.text()) :
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[81][1]++, 'No response'));
          /* istanbul ignore next */
          cov_mvcxdfbbb().s[127]++;
          logger_1.logger.warn(`API Error from ${provider.name} (Transactions - ${
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[82][0]++,
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[84][0]++, txsResponse === null) ||
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[84][1]++, txsResponse === void 0) ?
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[83][0]++, void 0) :
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[83][1]++, txsResponse.status)) ||
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[82][1]++, 'unknown')}): ${errorText}`, undefined, 'Bitcoin');
          /* istanbul ignore next */
          cov_mvcxdfbbb().s[128]++;
          lastError = new Error(`Provider ${provider.name} transactions fetch failed: ${
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[85][0]++,
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[87][0]++, txsResponse === null) ||
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[87][1]++, txsResponse === void 0) ?
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[86][0]++, void 0) :
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[86][1]++, txsResponse.status)) ||
          /* istanbul ignore next */
          (cov_mvcxdfbbb().b[85][1]++, 'unknown')}`);
          /* istanbul ignore next */
          cov_mvcxdfbbb().s[129]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_mvcxdfbbb().b[79][1]++;
        }
        const txsData =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[130]++, await txsResponse.json());
        const transactions =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[131]++, provider.processTransactions(txsData, cleanAddress));
        /* istanbul ignore next */
        cov_mvcxdfbbb().s[132]++;
        return {
          balance: balanceInSatoshis / 100000000,
          // Convert balance to BTC here
          address: cleanAddress,
          transactions,
          network: 'mainnet',
          lastUpdated: new Date().toISOString()
        };
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_mvcxdfbbb().s[133]++, (0, common_1.getErrorMessage)(error));
        /* istanbul ignore next */
        cov_mvcxdfbbb().s[134]++;
        logger_1.logger.error(`Error with provider ${provider.name}:`, errorMessage, 'Bitcoin');
        /* istanbul ignore next */
        cov_mvcxdfbbb().s[135]++;
        lastError = error instanceof Error ?
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[88][0]++, error) :
        /* istanbul ignore next */
        (cov_mvcxdfbbb().b[88][1]++, new Error(errorMessage));
        // Continue to next provider
      }
    }
    /* istanbul ignore next */
    cov_mvcxdfbbb().s[136]++;
    logger_1.logger.error(`Failed to fetch wallet data for ${cleanAddress} from all providers`, {
      error: (0, common_1.getErrorMessage)(lastError)
    }, 'Bitcoin');
    /* istanbul ignore next */
    cov_mvcxdfbbb().s[137]++;
    throw /* istanbul ignore next */(cov_mvcxdfbbb().b[89][0]++, lastError) ||
    /* istanbul ignore next */
    (cov_mvcxdfbbb().b[89][1]++, new Error('Failed to fetch wallet data from any provider for address: ' + cleanAddress));
  }
  // Get mempool.space transaction URL
  getTransactionUrl(txid) {
    /* istanbul ignore next */
    cov_mvcxdfbbb().f[28]++;
    cov_mvcxdfbbb().s[138]++;
    return `https://mempool.space/tx/${txid}`;
  }
  // Get mempool.space address URL
  getAddressUrl(address) {
    /* istanbul ignore next */
    cov_mvcxdfbbb().f[29]++;
    cov_mvcxdfbbb().s[139]++;
    return `https://mempool.space/address/${this.cleanBitcoinAddress(address)}`;
  }
}
/* istanbul ignore next */
cov_mvcxdfbbb().s[140]++;
exports.BitcoinService = BitcoinService;
// Export singleton instance and convenience functions for backward compatibility
/* istanbul ignore next */
cov_mvcxdfbbb().s[141]++;
exports.bitcoinService = BitcoinService.getInstance();
// Legacy function exports for backward compatibility
/* istanbul ignore next */
cov_mvcxdfbbb().s[142]++;
const cleanBitcoinAddress = address => {
  /* istanbul ignore next */
  cov_mvcxdfbbb().f[30]++;
  cov_mvcxdfbbb().s[143]++;
  return exports.bitcoinService.cleanBitcoinAddress(address);
};
/* istanbul ignore next */
cov_mvcxdfbbb().s[144]++;
exports.cleanBitcoinAddress = cleanBitcoinAddress;
/* istanbul ignore next */
cov_mvcxdfbbb().s[145]++;
const fetchBitcoinWalletData = address => {
  /* istanbul ignore next */
  cov_mvcxdfbbb().f[31]++;
  cov_mvcxdfbbb().s[146]++;
  return exports.bitcoinService.fetchBitcoinWalletData(address);
};
/* istanbul ignore next */
cov_mvcxdfbbb().s[147]++;
exports.fetchBitcoinWalletData = fetchBitcoinWalletData;
/* istanbul ignore next */
cov_mvcxdfbbb().s[148]++;
const getTransactionUrl = txid => {
  /* istanbul ignore next */
  cov_mvcxdfbbb().f[32]++;
  cov_mvcxdfbbb().s[149]++;
  return exports.bitcoinService.getTransactionUrl(txid);
};
/* istanbul ignore next */
cov_mvcxdfbbb().s[150]++;
exports.getTransactionUrl = getTransactionUrl;
/* istanbul ignore next */
cov_mvcxdfbbb().s[151]++;
const getAddressUrl = address => {
  /* istanbul ignore next */
  cov_mvcxdfbbb().f[33]++;
  cov_mvcxdfbbb().s[152]++;
  return exports.bitcoinService.getAddressUrl(address);
};
/* istanbul ignore next */
cov_mvcxdfbbb().s[153]++;
exports.getAddressUrl = getAddressUrl;
// Add missing formatBtcValue function
/* istanbul ignore next */
cov_mvcxdfbbb().s[154]++;
const formatBtcValue = (value, decimals =
/* istanbul ignore next */
(cov_mvcxdfbbb().b[90][0]++, 8)) => {
  /* istanbul ignore next */
  cov_mvcxdfbbb().f[34]++;
  cov_mvcxdfbbb().s[155]++;
  if (
  /* istanbul ignore next */
  (cov_mvcxdfbbb().b[92][0]++, typeof value !== 'number') ||
  /* istanbul ignore next */
  (cov_mvcxdfbbb().b[92][1]++, !isFinite(value))) {
    /* istanbul ignore next */
    cov_mvcxdfbbb().b[91][0]++;
    cov_mvcxdfbbb().s[156]++;
    return '0.00000000';
  } else
  /* istanbul ignore next */
  {
    cov_mvcxdfbbb().b[91][1]++;
  }
  // Ensure we don't show more than 8 decimal places for BTC
  const clampedDecimals =
  /* istanbul ignore next */
  (cov_mvcxdfbbb().s[157]++, Math.min(Math.max(0, decimals), 8));
  /* istanbul ignore next */
  cov_mvcxdfbbb().s[158]++;
  return value.toFixed(clampedDecimals);
};
/* istanbul ignore next */
cov_mvcxdfbbb().s[159]++;
exports.formatBtcValue = formatBtcValue;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,