080e9fa839e30550efe065bd588f922f
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
// Mock next/navigation
jest.mock('next/navigation', () => ({
    usePathname: jest.fn()
}));
// Mock next/link
jest.mock('next/link', () => {
    return function MockLink({ children, href, className }) {
        return (0, jsx_runtime_1.jsx)("a", { href: href, className: className, children: children });
    };
});
// Mock Logo component
jest.mock('../Logo', () => {
    return function MockLogo({ className }) {
        return (0, jsx_runtime_1.jsx)("div", { "data-testid": "logo", className: className, children: "OrangeCat Logo" });
    };
});
// Mock Lucide React icons
jest.mock('lucide-react', () => ({
    ArrowUp: ({ className }) => ((0, jsx_runtime_1.jsx)("div", { "data-testid": "arrow-up-icon", className: className, children: "ArrowUp" })),
    Github: ({ className }) => ((0, jsx_runtime_1.jsx)("div", { "data-testid": "github-icon", className: className, children: "Github" })),
    Twitter: ({ className }) => ((0, jsx_runtime_1.jsx)("div", { "data-testid": "twitter-icon", className: className, children: "Twitter" }))
}));
// Mock navigation config
jest.mock('@/config/navigation', () => ({
    navigation: {
        main: [
            { name: 'Fund Yourself', href: '/create' },
            { name: 'Discover', href: '/discover' },
            { name: 'Fund Us', href: '/fund-us' },
            { name: 'About', href: '/about' },
            { name: 'Blog', href: '/blog' }
        ],
        footer: {
            legal: [
                { name: 'Privacy', href: '/privacy' },
                { name: 'Terms', href: '/terms' },
                { name: 'Security', href: '/security' }
            ],
            social: [
                { name: 'Twitter', href: 'https://twitter.com/orangecat', icon: () => (0, jsx_runtime_1.jsx)("div", { "data-testid": "twitter-icon", children: "Twitter" }) },
                { name: 'GitHub', href: 'https://github.com/g-but/orangecat', icon: () => (0, jsx_runtime_1.jsx)("div", { "data-testid": "github-icon", children: "Github" }) }
            ]
        }
    }
}));
/**
 * Footer Component Tests
 *
 * Testing critical footer component used throughout the Bitcoin platform
 * Essential for navigation, branding, social links, and responsive design
 */
const react_1 = __importDefault(require("react"));
const react_2 = require("@testing-library/react");
require("@testing-library/jest-dom");
const navigation_1 = require("next/navigation");
const Footer_1 = __importDefault(require("../Footer"));
// Mock window.scrollTo
const mockScrollTo = jest.fn();
Object.defineProperty(window, 'scrollTo', {
    value: mockScrollTo,
    writable: true
});
const mockUsePathname = navigation_1.usePathname;
describe('ü¶∂ Footer Component - Platform Foundation Tests', () => {
    beforeEach(() => {
        mockUsePathname.mockReturnValue('/');
        mockScrollTo.mockClear();
    });
    describe('‚úÖ Basic Rendering & Visibility', () => {
        test('should render footer successfully on public pages', () => {
            mockUsePathname.mockReturnValue('/');
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByRole('contentinfo')).toBeInTheDocument();
            expect(react_2.screen.getByTestId('logo')).toBeInTheDocument();
            expect(react_2.screen.getByText('Making Bitcoin donations simple and accessible for everyone.')).toBeInTheDocument();
        });
        test('should not render footer on authenticated dashboard pages', () => {
            mockUsePathname.mockReturnValue('/dashboard');
            const { container } = (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(container.firstChild).toBeNull();
            expect(react_2.screen.queryByRole('contentinfo')).not.toBeInTheDocument();
        });
        test('should not render footer on profile pages', () => {
            mockUsePathname.mockReturnValue('/profile/testuser');
            const { container } = (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(container.firstChild).toBeNull();
        });
        test('should not render footer on settings pages', () => {
            mockUsePathname.mockReturnValue('/settings/account');
            const { container } = (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(container.firstChild).toBeNull();
        });
        test('should not render footer on assets pages', () => {
            mockUsePathname.mockReturnValue('/assets/bitcoin');
            const { container } = (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(container.firstChild).toBeNull();
        });
        test('should not render footer on people pages', () => {
            mockUsePathname.mockReturnValue('/people/contributors');
            const { container } = (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(container.firstChild).toBeNull();
        });
        test('should not render footer on events pages', () => {
            mockUsePathname.mockReturnValue('/events/conference');
            const { container } = (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(container.firstChild).toBeNull();
        });
        test('should not render footer on organizations pages', () => {
            mockUsePathname.mockReturnValue('/organizations/nonprofits');
            const { container } = (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(container.firstChild).toBeNull();
        });
        test('should not render footer on projects pages', () => {
            mockUsePathname.mockReturnValue('/projects/development');
            const { container } = (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(container.firstChild).toBeNull();
        });
        test('should not render footer on fundraising pages', () => {
            mockUsePathname.mockReturnValue('/fundraising/campaigns');
            const { container } = (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(container.firstChild).toBeNull();
        });
        test('should render footer on public home page', () => {
            mockUsePathname.mockReturnValue('/');
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByRole('contentinfo')).toBeInTheDocument();
        });
        test('should render footer on public discover page', () => {
            mockUsePathname.mockReturnValue('/discover');
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByRole('contentinfo')).toBeInTheDocument();
        });
        test('should render footer on public about page', () => {
            mockUsePathname.mockReturnValue('/about');
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByRole('contentinfo')).toBeInTheDocument();
        });
        test('should render footer on auth pages', () => {
            mockUsePathname.mockReturnValue('/auth');
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByRole('contentinfo')).toBeInTheDocument();
        });
    });
    describe('üöÄ Back to Top Button', () => {
        test('should render back to top button with correct styling', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const backToTopButton = react_2.screen.getByLabelText('Back to top');
            expect(backToTopButton).toBeInTheDocument();
            expect(backToTopButton).toHaveClass('bg-gradient-to-r', 'from-orange-500', 'to-tiffany-500');
            expect(react_2.screen.getByTestId('arrow-up-icon')).toBeInTheDocument();
        });
        test('should call scrollTo when back to top button is clicked', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const backToTopButton = react_2.screen.getByLabelText('Back to top');
            react_2.fireEvent.click(backToTopButton);
            expect(mockScrollTo).toHaveBeenCalledWith({ top: 0, behavior: 'smooth' });
        });
        test('should handle multiple clicks on back to top button', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const backToTopButton = react_2.screen.getByLabelText('Back to top');
            react_2.fireEvent.click(backToTopButton);
            react_2.fireEvent.click(backToTopButton);
            react_2.fireEvent.click(backToTopButton);
            expect(mockScrollTo).toHaveBeenCalledTimes(3);
            expect(mockScrollTo).toHaveBeenCalledWith({ top: 0, behavior: 'smooth' });
        });
        test('should have proper accessibility attributes for back to top button', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const backToTopButton = react_2.screen.getByLabelText('Back to top');
            expect(backToTopButton).toHaveAttribute('aria-label', 'Back to top');
            expect(backToTopButton.tagName).toBe('BUTTON');
        });
        test('should have hover and interaction classes for back to top button', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const backToTopButton = react_2.screen.getByLabelText('Back to top');
            expect(backToTopButton).toHaveClass('hover:shadow-xl', 'hover:scale-110', 'active:scale-95');
        });
    });
    describe('üè¢ Brand Section & Logo', () => {
        test('should render logo with correct props', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const logo = react_2.screen.getByTestId('logo');
            expect(logo).toBeInTheDocument();
            expect(logo).toHaveClass('mb-2');
        });
        test('should render brand description', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const description = react_2.screen.getByText('Making Bitcoin donations simple and accessible for everyone.');
            expect(description).toBeInTheDocument();
            expect(description).toHaveClass('text-slate-600', 'text-base', 'leading-relaxed', 'max-w-xs');
        });
        test('should maintain brand consistency across the page', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByTestId('logo')).toBeInTheDocument();
            expect(react_2.screen.getByText('Making Bitcoin donations simple and accessible for everyone.')).toBeInTheDocument();
        });
    });
    describe('üåê Social Media Links', () => {
        test('should render all social media links', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const twitterLink = react_2.screen.getByLabelText('Follow us on Twitter');
            const githubLink = react_2.screen.getByLabelText('Follow us on GitHub');
            expect(twitterLink).toBeInTheDocument();
            expect(githubLink).toBeInTheDocument();
        });
        test('should have correct href attributes for social links', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const twitterLink = react_2.screen.getByLabelText('Follow us on Twitter');
            const githubLink = react_2.screen.getByLabelText('Follow us on GitHub');
            expect(twitterLink.closest('a')).toHaveAttribute('href', 'https://twitter.com/orangecat');
            expect(githubLink.closest('a')).toHaveAttribute('href', 'https://github.com/g-but/orangecat');
        });
        test('should have correct target and rel attributes for social links', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const socialLinks = react_2.screen.getAllByRole('link');
            const externalLinks = socialLinks.filter(link => { var _a; return (_a = link.getAttribute('href')) === null || _a === void 0 ? void 0 : _a.startsWith('http'); });
            externalLinks.forEach(link => {
                expect(link).toHaveAttribute('target', '_blank');
                expect(link).toHaveAttribute('rel', 'noopener noreferrer');
            });
        });
        test('should render social media icons', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getAllByTestId('twitter-icon')).toHaveLength(1);
            expect(react_2.screen.getAllByTestId('github-icon')).toHaveLength(1);
        });
        test('should have proper styling for social media links', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const twitterLink = react_2.screen.getByLabelText('Follow us on Twitter');
            expect(twitterLink).toHaveClass('group', 'w-10', 'h-10', 'bg-gray-100', 'rounded-lg');
        });
    });
    describe('üß≠ Navigation Links', () => {
        test('should render all main navigation links', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByText('Fund Yourself')).toBeInTheDocument();
            expect(react_2.screen.getByText('Discover')).toBeInTheDocument();
            expect(react_2.screen.getByText('Fund Us')).toBeInTheDocument();
            expect(react_2.screen.getByText('About')).toBeInTheDocument();
            expect(react_2.screen.getByText('Blog')).toBeInTheDocument();
        });
        test('should have correct href attributes for navigation links', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByText('Fund Yourself').closest('a')).toHaveAttribute('href', '/create');
            expect(react_2.screen.getByText('Discover').closest('a')).toHaveAttribute('href', '/discover');
            expect(react_2.screen.getByText('Fund Us').closest('a')).toHaveAttribute('href', '/fund-us');
            expect(react_2.screen.getByText('About').closest('a')).toHaveAttribute('href', '/about');
            expect(react_2.screen.getByText('Blog').closest('a')).toHaveAttribute('href', '/blog');
        });
        test('should render navigation section title with gradient styling', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const navTitle = react_2.screen.getByText('Navigation');
            expect(navTitle).toBeInTheDocument();
            expect(navTitle).toHaveClass('bg-gradient-to-r', 'from-orange-500', 'to-tiffany-500', 'bg-clip-text', 'text-transparent');
        });
        test('should have proper hover effects for navigation links', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const navLink = react_2.screen.getByText('Fund Yourself');
            expect(navLink.closest('a')).toHaveClass('group', 'flex', 'items-center', 'text-base', 'text-slate-600', 'hover:text-orange-600');
        });
        test('should have minimum touch target size for navigation links', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const navLinks = react_2.screen.getAllByText(/Fund Yourself|Discover|Fund Us|About|Blog/);
            navLinks.forEach(link => {
                expect(link.closest('a')).toHaveClass('min-h-[44px]');
            });
        });
    });
    describe('‚öñÔ∏è Legal Links', () => {
        test('should render all legal links', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByText('Privacy')).toBeInTheDocument();
            expect(react_2.screen.getByText('Terms')).toBeInTheDocument();
            expect(react_2.screen.getByText('Security')).toBeInTheDocument();
        });
        test('should have correct href attributes for legal links', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByText('Privacy').closest('a')).toHaveAttribute('href', '/privacy');
            expect(react_2.screen.getByText('Terms').closest('a')).toHaveAttribute('href', '/terms');
            expect(react_2.screen.getByText('Security').closest('a')).toHaveAttribute('href', '/security');
        });
        test('should render legal section title with gradient styling', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const legalTitle = react_2.screen.getByText('Legal');
            expect(legalTitle).toBeInTheDocument();
            expect(legalTitle).toHaveClass('bg-gradient-to-r', 'from-orange-500', 'to-tiffany-500', 'bg-clip-text', 'text-transparent');
        });
        test('should have proper styling for legal links', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const legalLink = react_2.screen.getByText('Privacy');
            expect(legalLink.closest('a')).toHaveClass('group', 'flex', 'items-center', 'text-base', 'text-slate-600', 'hover:text-orange-600');
        });
        test('should have minimum touch target size for legal links', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const legalLinks = react_2.screen.getAllByText(/Privacy|Terms|Security/);
            legalLinks.forEach(link => {
                expect(link.closest('a')).toHaveClass('min-h-[44px]');
            });
        });
    });
    describe('üìß Newsletter/CTA Section', () => {
        test('should render newsletter section with correct title', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const stayUpdatedTitle = react_2.screen.getByText('Stay Updated');
            expect(stayUpdatedTitle).toBeInTheDocument();
            expect(stayUpdatedTitle).toHaveClass('bg-gradient-to-r', 'from-orange-500', 'to-tiffany-500', 'bg-clip-text', 'text-transparent');
        });
        test('should render newsletter description', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const description = react_2.screen.getByText('Get the latest updates on Bitcoin fundraising and community building.');
            expect(description).toBeInTheDocument();
            expect(description).toHaveClass('text-sm', 'text-slate-600', 'leading-relaxed');
        });
        test('should render get started CTA button', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const ctaButton = react_2.screen.getByText('Get Started Today');
            expect(ctaButton).toBeInTheDocument();
            expect(ctaButton.closest('a')).toHaveAttribute('href', '/auth?mode=register');
        });
        test('should have proper styling for CTA button', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const ctaButton = react_2.screen.getByText('Get Started Today');
            expect(ctaButton).toHaveClass('inline-flex', 'items-center', 'justify-center', 'bg-gradient-to-r', 'from-orange-500', 'to-tiffany-500');
        });
        test('should have minimum touch target size for CTA button', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const ctaButton = react_2.screen.getByText('Get Started Today');
            expect(ctaButton).toHaveClass('min-h-[44px]');
        });
        test('should have responsive width classes for CTA button', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const ctaButton = react_2.screen.getByText('Get Started Today');
            expect(ctaButton).toHaveClass('w-full', 'sm:w-auto');
        });
    });
    describe('üìÑ Bottom Section & Copyright', () => {
        test('should render current year in copyright', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const currentYear = new Date().getFullYear();
            const copyright = react_2.screen.getByText(`¬© ${currentYear} OrangeCat. All rights reserved.`);
            expect(copyright).toBeInTheDocument();
        });
        test('should render additional bottom links', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByText('Documentation')).toBeInTheDocument();
            expect(react_2.screen.getByText('API')).toBeInTheDocument();
            expect(react_2.screen.getByText('Status')).toBeInTheDocument();
        });
        test('should have correct href attributes for bottom links', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            // Get the bottom section documentation link (different from navigation section)
            const bottomLinks = react_2.screen.getAllByText('Documentation');
            const bottomDocLink = bottomLinks.find(link => { var _a; return ((_a = link.closest('a')) === null || _a === void 0 ? void 0 : _a.getAttribute('href')) === '/docs'; });
            expect(bottomDocLink === null || bottomDocLink === void 0 ? void 0 : bottomDocLink.closest('a')).toHaveAttribute('href', '/docs');
            expect(react_2.screen.getByText('API').closest('a')).toHaveAttribute('href', '/api');
            expect(react_2.screen.getByText('Status').closest('a')).toHaveAttribute('href', '/status');
        });
        test('should have proper responsive layout for bottom section', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const copyright = react_2.screen.getByText(/¬© \d{4} OrangeCat/);
            const bottomSection = copyright.closest('div');
            expect(bottomSection).toHaveClass('flex', 'flex-col', 'sm:flex-row', 'items-center', 'justify-between');
        });
        test('should have proper styling for bottom links', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const apiLink = react_2.screen.getByText('API');
            expect(apiLink).toHaveClass('text-slate-500', 'hover:text-orange-600', 'transition-colors', 'duration-300', 'hover:underline');
        });
    });
    describe('üì± Responsive Design', () => {
        test('should have responsive grid layout', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const footerContent = react_2.screen.getByRole('contentinfo');
            const gridContainer = footerContent.querySelector('.grid');
            expect(gridContainer).toHaveClass('grid', 'grid-cols-1', 'sm:grid-cols-2', 'lg:grid-cols-4');
        });
        test('should have responsive padding', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const footerContent = react_2.screen.getByRole('contentinfo');
            const paddingContainer = footerContent.querySelector('.py-8');
            expect(paddingContainer).toHaveClass('py-8', 'sm:py-12', 'px-4', 'sm:px-6', 'lg:px-8');
        });
        test('should have responsive max width container', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const footerContent = react_2.screen.getByRole('contentinfo');
            const maxWidthContainer = footerContent.querySelector('.max-w-7xl');
            expect(maxWidthContainer).toHaveClass('max-w-7xl', 'mx-auto');
        });
        test('should have responsive gap spacing', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const footerContent = react_2.screen.getByRole('contentinfo');
            const gridContainer = footerContent.querySelector('.grid');
            expect(gridContainer).toHaveClass('gap-8', 'lg:gap-12');
        });
        test('should have responsive spacing for social links', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const socialContainer = react_2.screen.getByLabelText('Follow us on Twitter').closest('div');
            expect(socialContainer).toHaveClass('flex', 'space-x-4');
        });
    });
    describe('üé® Theme & Styling', () => {
        test('should use Bitcoin Orange in gradient themes', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const backToTopButton = react_2.screen.getByLabelText('Back to top');
            expect(backToTopButton).toHaveClass('bg-gradient-to-r', 'from-orange-500', 'to-tiffany-500');
            const ctaButton = react_2.screen.getByText('Get Started Today');
            expect(ctaButton).toHaveClass('bg-gradient-to-r', 'from-orange-500', 'to-tiffany-500');
        });
        test('should have consistent gradient styling for section titles', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const navTitle = react_2.screen.getByText('Navigation');
            const legalTitle = react_2.screen.getByText('Legal');
            const stayUpdatedTitle = react_2.screen.getByText('Stay Updated');
            [navTitle, legalTitle, stayUpdatedTitle].forEach(title => {
                expect(title).toHaveClass('bg-gradient-to-r', 'from-orange-500', 'to-tiffany-500', 'bg-clip-text', 'text-transparent');
            });
        });
        test('should have consistent hover colors using Bitcoin Orange', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const navLink = react_2.screen.getByText('Fund Yourself');
            const legalLink = react_2.screen.getByText('Privacy');
            const bottomLink = react_2.screen.getByText('API');
            expect(navLink.closest('a')).toHaveClass('hover:text-orange-600');
            expect(legalLink.closest('a')).toHaveClass('hover:text-orange-600');
            expect(bottomLink).toHaveClass('hover:text-orange-600');
        });
        test('should have proper border styling', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const footer = react_2.screen.getByRole('contentinfo');
            expect(footer).toHaveClass('bg-white', 'border-t', 'border-gray-200/50', 'mt-auto', 'relative');
        });
        test('should have proper gradient decorative elements', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            // Check for gradient underlines under section titles
            const footer = react_2.screen.getByRole('contentinfo');
            const gradientUnderlines = footer.querySelectorAll('.bg-gradient-to-r.from-orange-500.to-tiffany-500.rounded-full');
            expect(gradientUnderlines.length).toBeGreaterThan(0);
        });
    });
    describe('‚ôø Accessibility', () => {
        test('should have proper semantic HTML structure', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByRole('contentinfo')).toBeInTheDocument();
            const buttons = react_2.screen.getAllByRole('button');
            expect(buttons.length).toBeGreaterThan(0);
            const links = react_2.screen.getAllByRole('link');
            expect(links.length).toBeGreaterThan(0);
        });
        test('should have proper aria-labels for interactive elements', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByLabelText('Back to top')).toBeInTheDocument();
            expect(react_2.screen.getByLabelText('Follow us on Twitter')).toBeInTheDocument();
            expect(react_2.screen.getByLabelText('Follow us on GitHub')).toBeInTheDocument();
        });
        test('should have minimum touch target sizes for all interactive elements', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            // Back to top button
            const backToTopButton = react_2.screen.getByLabelText('Back to top');
            expect(backToTopButton).toHaveClass('w-12', 'h-12');
            // Social media links
            const socialLinks = [
                react_2.screen.getByLabelText('Follow us on Twitter'),
                react_2.screen.getByLabelText('Follow us on GitHub')
            ];
            socialLinks.forEach(link => {
                expect(link).toHaveClass('w-10', 'h-10');
            });
            // Navigation and legal links
            const navLinks = react_2.screen.getAllByText(/Fund Yourself|Discover|Fund Us|About|Blog|Privacy|Terms|Security/);
            navLinks.forEach(link => {
                expect(link.closest('a')).toHaveClass('min-h-[44px]');
            });
            // CTA button
            const ctaButton = react_2.screen.getByText('Get Started Today');
            expect(ctaButton).toHaveClass('min-h-[44px]');
        });
        test('should have proper color contrast for text elements', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            // Check for proper text color classes that ensure good contrast
            const description = react_2.screen.getByText('Making Bitcoin donations simple and accessible for everyone.');
            expect(description).toHaveClass('text-slate-600');
            const copyright = react_2.screen.getByText(/¬© \d{4} OrangeCat/);
            expect(copyright).toHaveClass('text-slate-500');
        });
        test('should handle keyboard navigation properly', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const backToTopButton = react_2.screen.getByLabelText('Back to top');
            backToTopButton.focus();
            expect(backToTopButton).toHaveFocus();
            // All links should be focusable
            const links = react_2.screen.getAllByRole('link');
            links.forEach(link => {
                expect(link).not.toHaveAttribute('tabindex', '-1');
            });
        });
    });
    describe('üéØ Bitcoin Platform Integration', () => {
        test('should emphasize Bitcoin-related content in description', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const description = react_2.screen.getByText('Making Bitcoin donations simple and accessible for everyone.');
            expect(description).toBeInTheDocument();
            expect(description.textContent).toContain('Bitcoin');
        });
        test('should provide clear Bitcoin onboarding path in CTA', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const ctaButton = react_2.screen.getByText('Get Started Today');
            expect(ctaButton.closest('a')).toHaveAttribute('href', '/auth?mode=register');
            const ctaDescription = react_2.screen.getByText('Get the latest updates on Bitcoin fundraising and community building.');
            expect(ctaDescription.textContent).toContain('Bitcoin fundraising');
        });
        test('should maintain platform branding consistency', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByTestId('logo')).toBeInTheDocument();
            expect(react_2.screen.getByText(/¬© \d{4} OrangeCat/)).toBeInTheDocument();
        });
        test('should link to platform-specific pages', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByText('Fund Yourself').closest('a')).toHaveAttribute('href', '/create');
            expect(react_2.screen.getByText('Discover').closest('a')).toHaveAttribute('href', '/discover');
            expect(react_2.screen.getByText('Fund Us').closest('a')).toHaveAttribute('href', '/fund-us');
        });
        test('should provide security and trust signals', () => {
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByText('Security')).toBeInTheDocument();
            expect(react_2.screen.getByText('Privacy')).toBeInTheDocument();
            expect(react_2.screen.getByText('Terms')).toBeInTheDocument();
        });
    });
    describe('üîß Edge Cases & Error Handling', () => {
        test('should handle undefined pathname gracefully', () => {
            mockUsePathname.mockReturnValue(undefined);
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByRole('contentinfo')).toBeInTheDocument();
        });
        test('should handle null pathname gracefully', () => {
            mockUsePathname.mockReturnValue(null);
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByRole('contentinfo')).toBeInTheDocument();
        });
        test('should handle scrollTo not being available', () => {
            const originalScrollTo = window.scrollTo;
            delete window.scrollTo;
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            const backToTopButton = react_2.screen.getByLabelText('Back to top');
            react_2.fireEvent.click(backToTopButton);
            // Should not throw and button should still be interactive
            expect(backToTopButton).toBeInTheDocument();
            window.scrollTo = originalScrollTo;
        });
        test('should handle missing navigation config gracefully', () => {
            // This test ensures the component doesn't break if navigation config is malformed
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            // Should still render basic structure
            expect(react_2.screen.getByRole('contentinfo')).toBeInTheDocument();
            expect(react_2.screen.getByTestId('logo')).toBeInTheDocument();
        });
        test('should handle empty pathname string', () => {
            mockUsePathname.mockReturnValue('');
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(react_2.screen.getByRole('contentinfo')).toBeInTheDocument();
        });
        test('should handle pathname with trailing slashes', () => {
            mockUsePathname.mockReturnValue('/dashboard/');
            const { container } = (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(container.firstChild).toBeNull();
        });
        test('should handle complex nested authenticated paths', () => {
            mockUsePathname.mockReturnValue('/dashboard/analytics/bitcoin/trends');
            const { container } = (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            expect(container.firstChild).toBeNull();
        });
        test('should handle case sensitivity in pathname checking', () => {
            mockUsePathname.mockReturnValue('/Dashboard');
            (0, react_2.render)((0, jsx_runtime_1.jsx)(Footer_1.default, {}));
            // Should render footer as it doesn't match exact case
            expect(react_2.screen.getByRole('contentinfo')).toBeInTheDocument();
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,