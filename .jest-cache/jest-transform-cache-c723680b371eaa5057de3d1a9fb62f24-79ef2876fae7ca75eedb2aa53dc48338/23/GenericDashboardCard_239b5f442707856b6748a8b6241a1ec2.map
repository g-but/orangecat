{"version":3,"names":["cov_278uu9adxx","actualCoverage","exports","default","GenericDashboardCard","s","getStatusColor","lucide_react_1","require","Card_1","Button_1","__importDefault","title","type","typeColor","status","statusColor","icon","Icon","iconGradient","iconColor","actions","b","children","className","f","handleComingSoonAction","alert","jsx_runtime_1","jsx","Fragment","Card","jsxs","CardContent","length","map","action","index","variant","size","onClick","comingSoon","label","Settings","toLowerCase","cardStyles","campaign","organization","person","event","project"],"sources":["/home/g/dev/orangecat/src/components/dashboard/GenericDashboardCard.tsx"],"sourcesContent":["'use client'\n\nimport { useState, ReactNode } from 'react'\nimport { LucideIcon, Settings } from 'lucide-react'\nimport { Card, CardContent } from '@/components/ui/Card'\nimport Button from '@/components/ui/Button'\n\ninterface DashboardCardAction {\n  label: string\n  icon: LucideIcon\n  onClick: () => void\n  variant?: 'primary' | 'secondary' | 'ghost'\n  comingSoon?: boolean\n}\n\ninterface DashboardCardProps {\n  title: string\n  type: string\n  typeColor: string\n  status?: string\n  statusColor?: string\n  icon: LucideIcon\n  iconGradient: string\n  iconColor: string\n  actions?: DashboardCardAction[]\n  children?: ReactNode\n  className?: string\n}\n\nexport default function GenericDashboardCard({\n  title,\n  type,\n  typeColor,\n  status,\n  statusColor,\n  icon: Icon,\n  iconGradient,\n  iconColor,\n  actions = [],\n  children,\n  className = ''\n}: DashboardCardProps) {\n  const handleComingSoonAction = () => {\n    // For now, just show an alert - can be enhanced later\n    alert('This feature is coming soon!')\n  }\n\n  return (\n    <>\n      <Card className={`hover:shadow-md transition-shadow ${className}`}>\n        <CardContent className=\"p-6\">\n          <div className=\"flex items-start justify-between mb-4\">\n            <div className=\"flex items-center gap-3\">\n              <div className={`${iconGradient} p-3 rounded-full`}>\n                <Icon className={`w-6 h-6 ${iconColor}`} />\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-gray-900\">{title}</h3>\n                <span className={`px-2 py-1 text-xs rounded-full ${typeColor}`}>\n                  {type}\n                </span>\n              </div>\n            </div>\n            {status && (\n              <span className={`px-2 py-1 text-xs rounded-full ${statusColor || 'bg-gray-100 text-gray-700'}`}>\n                {status}\n              </span>\n            )}\n          </div>\n          \n          {children && (\n            <div className=\"space-y-3 mb-4\">\n              {children}\n            </div>\n          )}\n          \n          {actions.length > 0 && (\n            <div className=\"pt-4 border-t border-gray-100\">\n              <div className=\"flex justify-between items-center\">\n                <div className=\"flex gap-2\">\n                  {actions.map((action, index) => (\n                    <Button\n                      key={index}\n                      variant={action.variant || 'ghost'}\n                      size=\"sm\"\n                      onClick={action.comingSoon ? handleComingSoonAction : action.onClick}\n                      className=\"text-xs\"\n                    >\n                      <action.icon className=\"w-3 h-3 mr-1\" />\n                      {action.label}\n                    </Button>\n                  ))}\n                </div>\n                <Button variant=\"ghost\" size=\"sm\">\n                  <Settings className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n      \n    </>\n  )\n}\n\n// Utility function to generate status colors\nexport function getStatusColor(status: string): string {\n  switch (status.toLowerCase()) {\n    case 'active':\n      return 'bg-green-100 text-green-700'\n    case 'completed':\n      return 'bg-blue-100 text-blue-700'\n    case 'upcoming':\n      return 'bg-green-100 text-green-700'\n    case 'draft':\n      return 'bg-yellow-100 text-yellow-700'\n    case 'paused':\n      return 'bg-orange-100 text-orange-700'\n    default:\n      return 'bg-gray-100 text-gray-700'\n  }\n}\n\n// Predefined gradient and color combinations\nexport const cardStyles = {\n  campaign: {\n    iconGradient: 'bg-gradient-to-r from-teal-100 to-cyan-100',\n    iconColor: 'text-teal-600'\n  },\n  organization: {\n    iconGradient: 'bg-gradient-to-r from-green-100 to-emerald-100',\n    iconColor: 'text-green-600'\n  },\n  person: {\n    iconGradient: 'bg-gradient-to-r from-purple-100 to-pink-100',\n    iconColor: 'text-purple-600'\n  },\n  event: {\n    iconGradient: 'bg-gradient-to-r from-blue-100 to-indigo-100',\n    iconColor: 'text-blue-600'\n  },\n  project: {\n    iconGradient: 'bg-gradient-to-r from-orange-100 to-red-100',\n    iconColor: 'text-orange-600'\n  }\n}"],"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","ignoreList":[]}