d2dd5bf026e94a87940cbbb19d5debb6
'use client';
"use strict";

/* istanbul ignore next */
function cov_4b15i3tav() {
  var path = "/home/g/dev/orangecat/src/components/pages/TypesGrid.tsx";
  var hash = "de043728c5f910862a55e2f2b2553e3b7e0d9727";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/components/pages/TypesGrid.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 28
        }
      },
      "2": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 50
        }
      },
      "3": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "4": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 1396
        }
      },
      "5": {
        start: {
          line: 8,
          column: 465
        },
        end: {
          line: 8,
          column: 1385
        }
      }
    },
    fnMap: {
      "0": {
        name: "TypesGrid",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 18
          }
        },
        loc: {
          start: {
            line: 7,
            column: 47
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 447
          },
          end: {
            line: 8,
            column: 448
          }
        },
        loc: {
          start: {
            line: 8,
            column: 465
          },
          end: {
            line: 8,
            column: 1385
          }
        },
        line: 8
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/components/pages/TypesGrid.tsx",
      mappings: "AAAA,YAAY,CAAA;;;AAmBZ,4BA8BC;;AA9CD,+CAAwD;AAgBxD,SAAwB,SAAS,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAkB;IAC1E,OAAO,CACL,4CACE,iCAAK,SAAS,EAAC,mBAAmB,aAChC,+BAAI,SAAS,EAAC,uCAAuC,YAAE,KAAK,GAAM,EAClE,8BAAG,SAAS,EAAC,uBAAuB,YACjC,QAAQ,GACP,IACA,EAEN,gCAAK,SAAS,EAAC,sDAAsD,YAClE,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CAC1B,uBAAC,WAAI,IAAa,SAAS,EAAE,wDAAwD,IAAI,CAAC,KAAK,EAAE,YAC/F,uBAAC,kBAAW,IAAC,SAAS,EAAC,KAAK,YAC1B,iCAAK,SAAS,EAAC,wBAAwB,aACrC,gCAAK,SAAS,EAAE,kBAAkB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,YACtH,uBAAC,IAAI,CAAC,IAAI,IAAC,SAAS,EAAC,SAAS,GAAG,GAC7B,EACN,iCAAK,SAAS,EAAC,QAAQ,aACrB,+BAAI,SAAS,EAAC,0CAA0C,YAAE,IAAI,CAAC,IAAI,GAAM,EACzE,8BAAG,SAAS,EAAC,4BAA4B,YAAE,IAAI,CAAC,WAAW,GAAK,EAChE,iCAAK,SAAS,EAAC,8BAA8B,0BAAW,IAAI,CAAC,OAAO,IAAO,IACvE,IACF,GACM,IAZL,KAAK,CAaT,CACR,CAAC,GACE,IACF,CACP,CAAA;AACH,CAAC",
      names: [],
      sources: ["/home/g/dev/orangecat/src/components/pages/TypesGrid.tsx"],
      sourcesContent: ["'use client'\n\nimport { LucideIcon } from 'lucide-react'\nimport { Card, CardContent } from '@/components/ui/Card'\n\ninterface Type {\n  name: string\n  icon: LucideIcon\n  description: string\n  example: string\n  color: string\n}\n\ninterface TypesGridProps {\n  title: string\n  subtitle: string\n  types: Type[]\n}\n\nexport default function TypesGrid({ title, subtitle, types }: TypesGridProps) {\n  return (\n    <div>\n      <div className=\"text-center mb-10\">\n        <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">{title}</h2>\n        <p className=\"text-lg text-gray-600\">\n          {subtitle}\n        </p>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {types.map((type, index) => (\n          <Card key={index} className={`hover:shadow-lg transition-all duration-300 border-2 ${type.color}`}>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-start gap-4\">\n                <div className={`p-3 rounded-xl ${type.color.replace('text-', 'bg-').replace('border-', 'bg-').replace('-700', '-100')}`}>\n                  <type.icon className=\"w-6 h-6\" />\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-1\">{type.name}</h3>\n                  <p className=\"text-gray-600 text-sm mb-2\">{type.description}</p>\n                  <div className=\"text-xs text-gray-500 italic\">Example: {type.example}</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    </div>\n  )\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "de043728c5f910862a55e2f2b2553e3b7e0d9727"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4b15i3tav = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_4b15i3tav();
cov_4b15i3tav().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_4b15i3tav().s[1]++;
exports.default = TypesGrid;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_4b15i3tav().s[2]++, require("react/jsx-runtime"));
const Card_1 =
/* istanbul ignore next */
(cov_4b15i3tav().s[3]++, require("@/components/ui/Card"));
function TypesGrid({
  title,
  subtitle,
  types
}) {
  /* istanbul ignore next */
  cov_4b15i3tav().f[0]++;
  cov_4b15i3tav().s[4]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    children: [(0, jsx_runtime_1.jsxs)("div", {
      className: "text-center mb-10",
      children: [(0, jsx_runtime_1.jsx)("h2", {
        className: "text-3xl font-bold text-gray-900 mb-4",
        children: title
      }), (0, jsx_runtime_1.jsx)("p", {
        className: "text-lg text-gray-600",
        children: subtitle
      })]
    }), (0, jsx_runtime_1.jsx)("div", {
      className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6",
      children: types.map((type, index) => {
        /* istanbul ignore next */
        cov_4b15i3tav().f[1]++;
        cov_4b15i3tav().s[5]++;
        return (0, jsx_runtime_1.jsx)(Card_1.Card, {
          className: `hover:shadow-lg transition-all duration-300 border-2 ${type.color}`,
          children: (0, jsx_runtime_1.jsx)(Card_1.CardContent, {
            className: "p-6",
            children: (0, jsx_runtime_1.jsxs)("div", {
              className: "flex items-start gap-4",
              children: [(0, jsx_runtime_1.jsx)("div", {
                className: `p-3 rounded-xl ${type.color.replace('text-', 'bg-').replace('border-', 'bg-').replace('-700', '-100')}`,
                children: (0, jsx_runtime_1.jsx)(type.icon, {
                  className: "w-6 h-6"
                })
              }), (0, jsx_runtime_1.jsxs)("div", {
                className: "flex-1",
                children: [(0, jsx_runtime_1.jsx)("h3", {
                  className: "text-lg font-semibold text-gray-900 mb-1",
                  children: type.name
                }), (0, jsx_runtime_1.jsx)("p", {
                  className: "text-gray-600 text-sm mb-2",
                  children: type.description
                }), (0, jsx_runtime_1.jsxs)("div", {
                  className: "text-xs text-gray-500 italic",
                  children: ["Example: ", type.example]
                })]
              })]
            })
          })
        }, index);
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwiZGVmYXVsdCIsIlR5cGVzR3JpZCIsIkNhcmRfMSIsImNvdl80YjE1aTN0YXYiLCJzIiwicmVxdWlyZSIsInRpdGxlIiwic3VidGl0bGUiLCJ0eXBlcyIsImYiLCJqc3hfcnVudGltZV8xIiwianN4cyIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwianN4IiwibWFwIiwidHlwZSIsImluZGV4IiwiQ2FyZCIsImNvbG9yIiwiQ2FyZENvbnRlbnQiLCJyZXBsYWNlIiwiaWNvbiIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsImV4YW1wbGUiXSwic291cmNlcyI6WyIvaG9tZS9nL2Rldi9vcmFuZ2VjYXQvc3JjL2NvbXBvbmVudHMvcGFnZXMvVHlwZXNHcmlkLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCdcblxuaW1wb3J0IHsgTHVjaWRlSWNvbiB9IGZyb20gJ2x1Y2lkZS1yZWFjdCdcbmltcG9ydCB7IENhcmQsIENhcmRDb250ZW50IH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL0NhcmQnXG5cbmludGVyZmFjZSBUeXBlIHtcbiAgbmFtZTogc3RyaW5nXG4gIGljb246IEx1Y2lkZUljb25cbiAgZGVzY3JpcHRpb246IHN0cmluZ1xuICBleGFtcGxlOiBzdHJpbmdcbiAgY29sb3I6IHN0cmluZ1xufVxuXG5pbnRlcmZhY2UgVHlwZXNHcmlkUHJvcHMge1xuICB0aXRsZTogc3RyaW5nXG4gIHN1YnRpdGxlOiBzdHJpbmdcbiAgdHlwZXM6IFR5cGVbXVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUeXBlc0dyaWQoeyB0aXRsZSwgc3VidGl0bGUsIHR5cGVzIH06IFR5cGVzR3JpZFByb3BzKSB7XG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXIgbWItMTBcIj5cbiAgICAgICAgPGgyIGNsYXNzTmFtZT1cInRleHQtM3hsIGZvbnQtYm9sZCB0ZXh0LWdyYXktOTAwIG1iLTRcIj57dGl0bGV9PC9oMj5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1sZyB0ZXh0LWdyYXktNjAwXCI+XG4gICAgICAgICAge3N1YnRpdGxlfVxuICAgICAgICA8L3A+XG4gICAgICA8L2Rpdj5cbiAgICAgIFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdyaWQtY29scy0xIG1kOmdyaWQtY29scy0yIGxnOmdyaWQtY29scy0zIGdhcC02XCI+XG4gICAgICAgIHt0eXBlcy5tYXAoKHR5cGUsIGluZGV4KSA9PiAoXG4gICAgICAgICAgPENhcmQga2V5PXtpbmRleH0gY2xhc3NOYW1lPXtgaG92ZXI6c2hhZG93LWxnIHRyYW5zaXRpb24tYWxsIGR1cmF0aW9uLTMwMCBib3JkZXItMiAke3R5cGUuY29sb3J9YH0+XG4gICAgICAgICAgICA8Q2FyZENvbnRlbnQgY2xhc3NOYW1lPVwicC02XCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1zdGFydCBnYXAtNFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgcC0zIHJvdW5kZWQteGwgJHt0eXBlLmNvbG9yLnJlcGxhY2UoJ3RleHQtJywgJ2JnLScpLnJlcGxhY2UoJ2JvcmRlci0nLCAnYmctJykucmVwbGFjZSgnLTcwMCcsICctMTAwJyl9YH0+XG4gICAgICAgICAgICAgICAgICA8dHlwZS5pY29uIGNsYXNzTmFtZT1cInctNiBoLTZcIiAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleC0xXCI+XG4gICAgICAgICAgICAgICAgICA8aDMgY2xhc3NOYW1lPVwidGV4dC1sZyBmb250LXNlbWlib2xkIHRleHQtZ3JheS05MDAgbWItMVwiPnt0eXBlLm5hbWV9PC9oMz5cbiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtZ3JheS02MDAgdGV4dC1zbSBtYi0yXCI+e3R5cGUuZGVzY3JpcHRpb259PC9wPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXhzIHRleHQtZ3JheS01MDAgaXRhbGljXCI+RXhhbXBsZToge3R5cGUuZXhhbXBsZX08L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L0NhcmRDb250ZW50PlxuICAgICAgICAgIDwvQ2FyZD5cbiAgICAgICAgKSl9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKVxufSAiXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CWkEsT0FBQSxDQUFBQyxPQUFBLEdBQUFDLFNBQUE7Ozs7QUFoQkEsTUFBQUMsTUFBQTtBQUFBO0FBQUEsQ0FBQUMsYUFBQSxHQUFBQyxDQUFBLE9BQUFDLE9BQUE7QUFnQkEsU0FBd0JKLFNBQVNBLENBQUM7RUFBRUssS0FBSztFQUFFQyxRQUFRO0VBQUVDO0FBQUssQ0FBa0I7RUFBQTtFQUFBTCxhQUFBLEdBQUFNLENBQUE7RUFBQU4sYUFBQSxHQUFBQyxDQUFBO0VBQzFFLE9BQ0UsSUFBQU0sYUFBQSxDQUFBQyxJQUFBO0lBQUFDLFFBQUEsR0FDRSxJQUFBRixhQUFBLENBQUFDLElBQUE7TUFBS0UsU0FBUyxFQUFDLG1CQUFtQjtNQUFBRCxRQUFBLEdBQ2hDLElBQUFGLGFBQUEsQ0FBQUksR0FBQTtRQUFJRCxTQUFTLEVBQUMsdUNBQXVDO1FBQUFELFFBQUEsRUFBRU47TUFBSyxFQUFNLEVBQ2xFLElBQUFJLGFBQUEsQ0FBQUksR0FBQTtRQUFHRCxTQUFTLEVBQUMsdUJBQXVCO1FBQUFELFFBQUEsRUFDakNMO01BQVEsRUFDUDtJQUFBLEVBQ0EsRUFFTixJQUFBRyxhQUFBLENBQUFJLEdBQUE7TUFBS0QsU0FBUyxFQUFDLHNEQUFzRDtNQUFBRCxRQUFBLEVBQ2xFSixLQUFLLENBQUNPLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLEVBQUVDLEtBQUssS0FDckI7UUFBQTtRQUFBZCxhQUFBLEdBQUFNLENBQUE7UUFBQU4sYUFBQSxHQUFBQyxDQUFBO1FBQUEsV0FBQU0sYUFBQSxDQUFBSSxHQUFBLEVBQUNaLE1BQUEsQ0FBQWdCLElBQUk7VUFBYUwsU0FBUyxFQUFFLHdEQUF3REcsSUFBSSxDQUFDRyxLQUFLLEVBQUU7VUFBQVAsUUFBQSxFQUMvRixJQUFBRixhQUFBLENBQUFJLEdBQUEsRUFBQ1osTUFBQSxDQUFBa0IsV0FBVztZQUFDUCxTQUFTLEVBQUMsS0FBSztZQUFBRCxRQUFBLEVBQzFCLElBQUFGLGFBQUEsQ0FBQUMsSUFBQTtjQUFLRSxTQUFTLEVBQUMsd0JBQXdCO2NBQUFELFFBQUEsR0FDckMsSUFBQUYsYUFBQSxDQUFBSSxHQUFBO2dCQUFLRCxTQUFTLEVBQUUsa0JBQWtCRyxJQUFJLENBQUNHLEtBQUssQ0FBQ0UsT0FBTyxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsQ0FBQ0EsT0FBTyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQ0EsT0FBTyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsRUFBRTtnQkFBQVQsUUFBQSxFQUN0SCxJQUFBRixhQUFBLENBQUFJLEdBQUEsRUFBQ0UsSUFBSSxDQUFDTSxJQUFJO2tCQUFDVCxTQUFTLEVBQUM7Z0JBQVM7Y0FBRyxFQUM3QixFQUNOLElBQUFILGFBQUEsQ0FBQUMsSUFBQTtnQkFBS0UsU0FBUyxFQUFDLFFBQVE7Z0JBQUFELFFBQUEsR0FDckIsSUFBQUYsYUFBQSxDQUFBSSxHQUFBO2tCQUFJRCxTQUFTLEVBQUMsMENBQTBDO2tCQUFBRCxRQUFBLEVBQUVJLElBQUksQ0FBQ087Z0JBQUksRUFBTSxFQUN6RSxJQUFBYixhQUFBLENBQUFJLEdBQUE7a0JBQUdELFNBQVMsRUFBQyw0QkFBNEI7a0JBQUFELFFBQUEsRUFBRUksSUFBSSxDQUFDUTtnQkFBVyxFQUFLLEVBQ2hFLElBQUFkLGFBQUEsQ0FBQUMsSUFBQTtrQkFBS0UsU0FBUyxFQUFDLDhCQUE4QjtrQkFBQUQsUUFBQSxnQkFBV0ksSUFBSSxDQUFDUyxPQUFPO2dCQUFBLEVBQU87Y0FBQSxFQUN2RTtZQUFBO1VBQ0Y7UUFDTSxHQVpMUixLQUFLLENBYVQ7TUFiUyxDQWNqQjtJQUFDLEVBQ0U7RUFBQSxFQUNGO0FBRVYiLCJpZ25vcmVMaXN0IjpbXX0=