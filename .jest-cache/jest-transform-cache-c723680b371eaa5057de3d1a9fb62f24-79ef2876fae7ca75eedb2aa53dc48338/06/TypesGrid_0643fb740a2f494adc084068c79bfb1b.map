{"version":3,"names":["exports","default","TypesGrid","Card_1","cov_4b15i3tav","s","require","title","subtitle","types","f","jsx_runtime_1","jsxs","children","className","jsx","map","type","index","Card","color","CardContent","replace","icon","name","description","example"],"sources":["/home/g/dev/orangecat/src/components/pages/TypesGrid.tsx"],"sourcesContent":["'use client'\n\nimport { LucideIcon } from 'lucide-react'\nimport { Card, CardContent } from '@/components/ui/Card'\n\ninterface Type {\n  name: string\n  icon: LucideIcon\n  description: string\n  example: string\n  color: string\n}\n\ninterface TypesGridProps {\n  title: string\n  subtitle: string\n  types: Type[]\n}\n\nexport default function TypesGrid({ title, subtitle, types }: TypesGridProps) {\n  return (\n    <div>\n      <div className=\"text-center mb-10\">\n        <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">{title}</h2>\n        <p className=\"text-lg text-gray-600\">\n          {subtitle}\n        </p>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {types.map((type, index) => (\n          <Card key={index} className={`hover:shadow-lg transition-all duration-300 border-2 ${type.color}`}>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-start gap-4\">\n                <div className={`p-3 rounded-xl ${type.color.replace('text-', 'bg-').replace('border-', 'bg-').replace('-700', '-100')}`}>\n                  <type.icon className=\"w-6 h-6\" />\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-1\">{type.name}</h3>\n                  <p className=\"text-gray-600 text-sm mb-2\">{type.description}</p>\n                  <div className=\"text-xs text-gray-500 italic\">Example: {type.example}</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    </div>\n  )\n} "],"mappings":"AAAA,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBZA,OAAA,CAAAC,OAAA,GAAAC,SAAA;;;;AAhBA,MAAAC,MAAA;AAAA;AAAA,CAAAC,aAAA,GAAAC,CAAA,OAAAC,OAAA;AAgBA,SAAwBJ,SAASA,CAAC;EAAEK,KAAK;EAAEC,QAAQ;EAAEC;AAAK,CAAkB;EAAA;EAAAL,aAAA,GAAAM,CAAA;EAAAN,aAAA,GAAAC,CAAA;EAC1E,OACE,IAAAM,aAAA,CAAAC,IAAA;IAAAC,QAAA,GACE,IAAAF,aAAA,CAAAC,IAAA;MAAKE,SAAS,EAAC,mBAAmB;MAAAD,QAAA,GAChC,IAAAF,aAAA,CAAAI,GAAA;QAAID,SAAS,EAAC,uCAAuC;QAAAD,QAAA,EAAEN;MAAK,EAAM,EAClE,IAAAI,aAAA,CAAAI,GAAA;QAAGD,SAAS,EAAC,uBAAuB;QAAAD,QAAA,EACjCL;MAAQ,EACP;IAAA,EACA,EAEN,IAAAG,aAAA,CAAAI,GAAA;MAAKD,SAAS,EAAC,sDAAsD;MAAAD,QAAA,EAClEJ,KAAK,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KACrB;QAAA;QAAAd,aAAA,GAAAM,CAAA;QAAAN,aAAA,GAAAC,CAAA;QAAA,WAAAM,aAAA,CAAAI,GAAA,EAACZ,MAAA,CAAAgB,IAAI;UAAaL,SAAS,EAAE,wDAAwDG,IAAI,CAACG,KAAK,EAAE;UAAAP,QAAA,EAC/F,IAAAF,aAAA,CAAAI,GAAA,EAACZ,MAAA,CAAAkB,WAAW;YAACP,SAAS,EAAC,KAAK;YAAAD,QAAA,EAC1B,IAAAF,aAAA,CAAAC,IAAA;cAAKE,SAAS,EAAC,wBAAwB;cAAAD,QAAA,GACrC,IAAAF,aAAA,CAAAI,GAAA;gBAAKD,SAAS,EAAE,kBAAkBG,IAAI,CAACG,KAAK,CAACE,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAACA,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAACA,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;gBAAAT,QAAA,EACtH,IAAAF,aAAA,CAAAI,GAAA,EAACE,IAAI,CAACM,IAAI;kBAACT,SAAS,EAAC;gBAAS;cAAG,EAC7B,EACN,IAAAH,aAAA,CAAAC,IAAA;gBAAKE,SAAS,EAAC,QAAQ;gBAAAD,QAAA,GACrB,IAAAF,aAAA,CAAAI,GAAA;kBAAID,SAAS,EAAC,0CAA0C;kBAAAD,QAAA,EAAEI,IAAI,CAACO;gBAAI,EAAM,EACzE,IAAAb,aAAA,CAAAI,GAAA;kBAAGD,SAAS,EAAC,4BAA4B;kBAAAD,QAAA,EAAEI,IAAI,CAACQ;gBAAW,EAAK,EAChE,IAAAd,aAAA,CAAAC,IAAA;kBAAKE,SAAS,EAAC,8BAA8B;kBAAAD,QAAA,gBAAWI,IAAI,CAACS,OAAO;gBAAA,EAAO;cAAA,EACvE;YAAA;UACF;QACM,GAZLR,KAAK,CAaT;MAbS,CAcjB;IAAC,EACE;EAAA,EACF;AAEV","ignoreList":[]}