9a005ec043c41c621615a0324bd7fab8
"use strict";

/* istanbul ignore next */
function cov_b6hy1py43() {
  var path = "/home/g/dev/orangecat/src/utils/debugUtils.ts";
  var hash = "1779f1cd0b9a1cbf042cbfe8ea202e5d54bbe88a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/utils/debugUtils.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 40
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 26
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 50
        }
      },
      "4": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "5": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 22,
          column: 5
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "7": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 46
        }
      },
      "8": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "9": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 44
        }
      },
      "10": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 46
        }
      },
      "11": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 24,
          column: 36
        }
      },
      "12": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "14": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 41
        }
      },
      "15": {
        start: {
          line: 33,
          column: 27
        },
        end: {
          line: 33,
          column: 56
        }
      },
      "16": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 46,
          column: 8
        }
      },
      "17": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 129
        }
      },
      "18": {
        start: {
          line: 47,
          column: 49
        },
        end: {
          line: 47,
          column: 117
        }
      },
      "19": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 46
        }
      },
      "20": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 52,
          column: 21
        }
      },
      "21": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 50
        }
      },
      "22": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 59,
          column: 21
        }
      },
      "23": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 21
        }
      },
      "24": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 63,
          column: 43
        }
      },
      "25": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 72,
          column: 1
        }
      },
      "26": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "27": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 114
        }
      },
      "28": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "restoreConsole",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 23
          }
        },
        loc: {
          start: {
            line: 15,
            column: 26
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "safeLog",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 16
          }
        },
        loc: {
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 47,
            column: 42
          },
          end: {
            line: 47,
            column: 43
          }
        },
        loc: {
          start: {
            line: 47,
            column: 49
          },
          end: {
            line: 47,
            column: 117
          }
        },
        line: 47
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 50,
            column: 24
          }
        },
        loc: {
          start: {
            line: 50,
            column: 29
          },
          end: {
            line: 52,
            column: 13
          }
        },
        line: 50
      },
      "4": {
        name: "isConsoleOverridden",
        decl: {
          start: {
            line: 57,
            column: 9
          },
          end: {
            line: 57,
            column: 28
          }
        },
        loc: {
          start: {
            line: 57,
            column: 31
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 57
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 49
          },
          end: {
            line: 47,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 75
          },
          end: {
            line: 47,
            column: 103
          }
        }, {
          start: {
            line: 47,
            column: 106
          },
          end: {
            line: 47,
            column: 117
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 59,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 59,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "4": {
        loc: {
          start: {
            line: 61,
            column: 11
          },
          end: {
            line: 63,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 11
          },
          end: {
            line: 61,
            column: 60
          }
        }, {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 62,
            column: 50
          }
        }, {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 63,
            column: 42
          }
        }],
        line: 61
      },
      "5": {
        loc: {
          start: {
            line: 66,
            column: 0
          },
          end: {
            line: 72,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 0
          },
          end: {
            line: 72,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "6": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 33
          }
        }, {
          start: {
            line: 66,
            column: 37
          },
          end: {
            line: 66,
            column: 75
          }
        }],
        line: 66
      },
      "7": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/utils/debugUtils.ts",
      mappings: ";;AAUA,wCAQC;AAMD,0BAiCC;AAGD,kDAOC;AAnED,4DAA4D;AAC5D,MAAM,eAAe,GAAG;IACtB,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAC9B,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;IAClC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAChC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAChC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;CACnC,CAAC;AAEF,+CAA+C;AAC/C,SAAgB,cAAc;IAC5B,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE,CAAC;QAClC,OAAO,CAAC,GAAG,GAAG,eAAe,CAAC,GAAG,CAAC;QAClC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC,KAAK,CAAC;QACtC,OAAO,CAAC,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC;QACpC,OAAO,CAAC,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC;QACpC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC,KAAK,CAAC;IACxC,CAAC;AACH,CAAC;AAID,qCAAiC;AAEjC,SAAgB,OAAO,CAAC,GAAG,IAAsB;IAC/C,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE,CAAC;QAClC,yCAAyC;QACzC,IAAI,CAAC;YACH,eAAe,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;QAC/B,CAAC;QAAC,WAAM,CAAC;YACP,oCAAoC;YACpC,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC7C,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG;;;;;;;;;;;;OAYtB,CAAC;YACF,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAClC,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CACrE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEZ,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAElC,yBAAyB;YACzB,UAAU,CAAC,GAAG,EAAE;gBACd,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACpC,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC;IACH,CAAC;AACH,CAAC;AAED,mDAAmD;AACnD,SAAgB,mBAAmB;IACjC,IAAI,OAAO,MAAM,KAAK,WAAW;QAAE,OAAO,KAAK,CAAC;IAEhD,6DAA6D;IAC7D,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,gBAAgB,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,qCAAqC;AAClF,CAAC;AAED,gDAAgD;AAChD,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,EAAE,CAAC;IAC5E,sDAAsD;IACtD,IAAI,mBAAmB,EAAE,EAAE,CAAC;QAC1B,eAAM,CAAC,IAAI,CAAC,0DAA0D,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;QACjG,cAAc,EAAE,CAAC;IACnB,CAAC;AACH,CAAC",
      names: [],
      sources: ["/home/g/dev/orangecat/src/utils/debugUtils.ts"],
      sourcesContent: ["// Store original console methods before they get overridden\nconst originalConsole = {\n  log: console.log.bind(console),\n  error: console.error.bind(console),\n  warn: console.warn.bind(console),\n  info: console.info.bind(console),\n  debug: console.debug.bind(console)\n};\n\n// Function to restore original console methods\nexport function restoreConsole() {\n  if (typeof window !== 'undefined') {\n    console.log = originalConsole.log;\n    console.error = originalConsole.error;\n    console.warn = originalConsole.warn;\n    console.info = originalConsole.info;\n    console.debug = originalConsole.debug;\n  }\n}\n\n// Function to safely log without browser extension interference\nimport type { EventHandlerArgs } from '@/types/common'\nimport { logger } from './logger'\n\nexport function safeLog(...args: EventHandlerArgs) {\n  if (typeof window !== 'undefined') {\n    // Try to use the original console method\n    try {\n      originalConsole.log(...args);\n    } catch {\n      // Fallback to creating a visual log\n      const logDiv = document.createElement('div');\n      logDiv.style.cssText = `\n        position: fixed; \n        top: 10px; \n        left: 10px; \n        background: black; \n        color: lime; \n        padding: 5px; \n        font-family: monospace; \n        font-size: 12px; \n        z-index: 10000;\n        max-width: 500px;\n        word-wrap: break-word;\n      `;\n      logDiv.textContent = args.map(arg => \n        typeof arg === 'object' ? JSON.stringify(arg, null, 2) : String(arg)\n      ).join(' ');\n      \n      document.body.appendChild(logDiv);\n      \n      // Remove after 5 seconds\n      setTimeout(() => {\n        document.body.removeChild(logDiv);\n      }, 5000);\n    }\n  }\n}\n\n// Function to check if console has been overridden\nexport function isConsoleOverridden(): boolean {\n  if (typeof window === 'undefined') return false;\n  \n  // Check if console.log has been replaced with something else\n  return console.log.toString().includes('overrideMethod') || \n         console.log.toString().includes('hook.js') ||\n         console.log.toString().length < 50; // Original console.log is quite long\n}\n\n// Auto-restore console on import in development\nif (typeof window !== 'undefined' && process.env.NODE_ENV === 'development') {\n  // Check if console has been overridden and restore it\n  if (isConsoleOverridden()) {\n    logger.warn('Console override detected! Restoring original console...', undefined, 'DebugUtils');\n    restoreConsole();\n  }\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1779f1cd0b9a1cbf042cbfe8ea202e5d54bbe88a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_b6hy1py43 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_b6hy1py43();
cov_b6hy1py43().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_b6hy1py43().s[1]++;
exports.restoreConsole = restoreConsole;
/* istanbul ignore next */
cov_b6hy1py43().s[2]++;
exports.safeLog = safeLog;
/* istanbul ignore next */
cov_b6hy1py43().s[3]++;
exports.isConsoleOverridden = isConsoleOverridden;
// Store original console methods before they get overridden
const originalConsole =
/* istanbul ignore next */
(cov_b6hy1py43().s[4]++, {
  log: console.log.bind(console),
  error: console.error.bind(console),
  warn: console.warn.bind(console),
  info: console.info.bind(console),
  debug: console.debug.bind(console)
});
// Function to restore original console methods
function restoreConsole() {
  /* istanbul ignore next */
  cov_b6hy1py43().f[0]++;
  cov_b6hy1py43().s[5]++;
  if (typeof window !== 'undefined') {
    /* istanbul ignore next */
    cov_b6hy1py43().b[0][0]++;
    cov_b6hy1py43().s[6]++;
    console.log = originalConsole.log;
    /* istanbul ignore next */
    cov_b6hy1py43().s[7]++;
    console.error = originalConsole.error;
    /* istanbul ignore next */
    cov_b6hy1py43().s[8]++;
    console.warn = originalConsole.warn;
    /* istanbul ignore next */
    cov_b6hy1py43().s[9]++;
    console.info = originalConsole.info;
    /* istanbul ignore next */
    cov_b6hy1py43().s[10]++;
    console.debug = originalConsole.debug;
  } else
  /* istanbul ignore next */
  {
    cov_b6hy1py43().b[0][1]++;
  }
}
const logger_1 =
/* istanbul ignore next */
(cov_b6hy1py43().s[11]++, require("./logger"));
function safeLog(...args) {
  /* istanbul ignore next */
  cov_b6hy1py43().f[1]++;
  cov_b6hy1py43().s[12]++;
  if (typeof window !== 'undefined') {
    /* istanbul ignore next */
    cov_b6hy1py43().b[1][0]++;
    cov_b6hy1py43().s[13]++;
    // Try to use the original console method
    try {
      /* istanbul ignore next */
      cov_b6hy1py43().s[14]++;
      originalConsole.log(...args);
    } catch (_a) {
      // Fallback to creating a visual log
      const logDiv =
      /* istanbul ignore next */
      (cov_b6hy1py43().s[15]++, document.createElement('div'));
      /* istanbul ignore next */
      cov_b6hy1py43().s[16]++;
      logDiv.style.cssText = `
        position: fixed; 
        top: 10px; 
        left: 10px; 
        background: black; 
        color: lime; 
        padding: 5px; 
        font-family: monospace; 
        font-size: 12px; 
        z-index: 10000;
        max-width: 500px;
        word-wrap: break-word;
      `;
      /* istanbul ignore next */
      cov_b6hy1py43().s[17]++;
      logDiv.textContent = args.map(arg => {
        /* istanbul ignore next */
        cov_b6hy1py43().f[2]++;
        cov_b6hy1py43().s[18]++;
        return typeof arg === 'object' ?
        /* istanbul ignore next */
        (cov_b6hy1py43().b[2][0]++, JSON.stringify(arg, null, 2)) :
        /* istanbul ignore next */
        (cov_b6hy1py43().b[2][1]++, String(arg));
      }).join(' ');
      /* istanbul ignore next */
      cov_b6hy1py43().s[19]++;
      document.body.appendChild(logDiv);
      // Remove after 5 seconds
      /* istanbul ignore next */
      cov_b6hy1py43().s[20]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_b6hy1py43().f[3]++;
        cov_b6hy1py43().s[21]++;
        document.body.removeChild(logDiv);
      }, 5000);
    }
  } else
  /* istanbul ignore next */
  {
    cov_b6hy1py43().b[1][1]++;
  }
}
// Function to check if console has been overridden
function isConsoleOverridden() {
  /* istanbul ignore next */
  cov_b6hy1py43().f[4]++;
  cov_b6hy1py43().s[22]++;
  if (typeof window === 'undefined') {
    /* istanbul ignore next */
    cov_b6hy1py43().b[3][0]++;
    cov_b6hy1py43().s[23]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_b6hy1py43().b[3][1]++;
  }
  // Check if console.log has been replaced with something else
  cov_b6hy1py43().s[24]++;
  return /* istanbul ignore next */(cov_b6hy1py43().b[4][0]++, console.log.toString().includes('overrideMethod')) ||
  /* istanbul ignore next */
  (cov_b6hy1py43().b[4][1]++, console.log.toString().includes('hook.js')) ||
  /* istanbul ignore next */
  (cov_b6hy1py43().b[4][2]++, console.log.toString().length < 50); // Original console.log is quite long
}
// Auto-restore console on import in development
/* istanbul ignore next */
cov_b6hy1py43().s[25]++;
if (
/* istanbul ignore next */
(cov_b6hy1py43().b[6][0]++, typeof window !== 'undefined') &&
/* istanbul ignore next */
(cov_b6hy1py43().b[6][1]++, process.env.NODE_ENV === 'development')) {
  /* istanbul ignore next */
  cov_b6hy1py43().b[5][0]++;
  cov_b6hy1py43().s[26]++;
  // Check if console has been overridden and restore it
  if (isConsoleOverridden()) {
    /* istanbul ignore next */
    cov_b6hy1py43().b[7][0]++;
    cov_b6hy1py43().s[27]++;
    logger_1.logger.warn('Console override detected! Restoring original console...', undefined, 'DebugUtils');
    /* istanbul ignore next */
    cov_b6hy1py43().s[28]++;
    restoreConsole();
  } else
  /* istanbul ignore next */
  {
    cov_b6hy1py43().b[7][1]++;
  }
} else
/* istanbul ignore next */
{
  cov_b6hy1py43().b[5][1]++;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,