2f1e58a6232832ca861ed0ef44396f86
"use strict";

/**
 * NORMALIZED PROFILE SERVICE
 *
 * New service layer designed for the normalized database schema.
 * Provides clean, type-safe operations across multiple tables.
 *
 * ✅ Single Responsibility: Each method does one thing well
 * ✅ Type Safety: Full TypeScript support with proper interfaces
 * ✅ Error Handling: Structured error responses with correlation IDs
 * ✅ Performance: Optimized queries with proper indexing
 * ✅ Security: Row Level Security compliance
 *
 * Created: 2025-01-24
 * Last Modified: 2025-01-24
 * Last Modified Summary: New service for normalized schema - replaces old monolithic approach
 */
/* istanbul ignore next */
function cov_163vlng9vx() {
  var path = "/home/g/dev/orangecat/src/services/profile/normalizedProfileService.ts";
  var hash = "eab4b79bc96061c53e131147db4b6beaff428a8b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/services/profile/normalizedProfileService.ts",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 20,
          column: 1
        }
      },
      "1": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 62
        }
      },
      "2": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 62
        }
      },
      "3": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 42
        }
      },
      "4": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 23,
          column: 71
        }
      },
      "5": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 24,
          column: 58
        }
      },
      "6": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 53,
          column: 11
        }
      },
      "7": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 36,
          column: 13
        }
      },
      "8": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 100
        }
      },
      "9": {
        start: {
          line: 38,
          column: 94
        },
        end: {
          line: 45,
          column: 14
        }
      },
      "10": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "11": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 28
        }
      },
      "12": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 235
        }
      },
      "13": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 78,
          column: 11
        }
      },
      "14": {
        start: {
          line: 60,
          column: 36
        },
        end: {
          line: 64,
          column: 25
        }
      },
      "15": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "16": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 68,
          column: 17
        }
      },
      "17": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 67,
          column: 32
        }
      },
      "18": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 72,
          column: 19
        }
      },
      "19": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 24
        }
      },
      "20": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 144,
          column: 11
        }
      },
      "21": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "22": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 100
        }
      },
      "23": {
        start: {
          line: 89,
          column: 57
        },
        end: {
          line: 89,
          column: 94
        }
      },
      "24": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "25": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 76
        }
      },
      "26": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "27": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 97,
          column: 19
        }
      },
      "28": {
        start: {
          line: 100,
          column: 35
        },
        end: {
          line: 100,
          column: 37
        }
      },
      "29": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "30": {
        start: {
          line: 102,
          column: 52
        },
        end: {
          line: 102,
          column: 187
        }
      },
      "31": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 108,
          column: 31
        }
      },
      "32": {
        start: {
          line: 111,
          column: 37
        },
        end: {
          line: 111,
          column: 144
        }
      },
      "33": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "34": {
        start: {
          line: 112,
          column: 52
        },
        end: {
          line: 112,
          column: 82
        }
      },
      "35": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 117,
          column: 31
        }
      },
      "36": {
        start: {
          line: 120,
          column: 34
        },
        end: {
          line: 120,
          column: 117
        }
      },
      "37": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 127,
          column: 13
        }
      },
      "38": {
        start: {
          line: 121,
          column: 52
        },
        end: {
          line: 121,
          column: 79
        }
      },
      "39": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 126,
          column: 31
        }
      },
      "40": {
        start: {
          line: 129,
          column: 28
        },
        end: {
          line: 129,
          column: 61
        }
      },
      "41": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "42": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 137,
          column: 17
        }
      },
      "43": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 136,
          column: 23
        }
      },
      "44": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 57
        }
      },
      "45": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 181,
          column: 11
        }
      },
      "46": {
        start: {
          line: 151,
          column: 76
        },
        end: {
          line: 151,
          column: 83
        }
      },
      "47": {
        start: {
          line: 152,
          column: 24
        },
        end: {
          line: 158,
          column: 50
        }
      },
      "48": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 161,
          column: 13
        }
      },
      "49": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 86
        }
      },
      "50": {
        start: {
          line: 162,
          column: 43
        },
        end: {
          line: 162,
          column: 54
        }
      },
      "51": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 169,
          column: 13
        }
      },
      "52": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 168,
          column: 19
        }
      },
      "53": {
        start: {
          line: 170,
          column: 29
        },
        end: {
          line: 170,
          column: 39
        }
      },
      "54": {
        start: {
          line: 171,
          column: 31
        },
        end: {
          line: 171,
          column: 41
        }
      },
      "55": {
        start: {
          line: 172,
          column: 28
        },
        end: {
          line: 172,
          column: 57
        }
      },
      "56": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 177,
          column: 14
        }
      },
      "57": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 206,
          column: 11
        }
      },
      "58": {
        start: {
          line: 188,
          column: 36
        },
        end: {
          line: 192,
          column: 25
        }
      },
      "59": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 201,
          column: 13
        }
      },
      "60": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 196,
          column: 17
        }
      },
      "61": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 195,
          column: 32
        }
      },
      "62": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 200,
          column: 19
        }
      },
      "63": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 24
        }
      },
      "64": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 231,
          column: 11
        }
      },
      "65": {
        start: {
          line: 213,
          column: 36
        },
        end: {
          line: 217,
          column: 25
        }
      },
      "66": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 226,
          column: 13
        }
      },
      "67": {
        start: {
          line: 219,
          column: 16
        },
        end: {
          line: 221,
          column: 17
        }
      },
      "68": {
        start: {
          line: 220,
          column: 20
        },
        end: {
          line: 220,
          column: 32
        }
      },
      "69": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 225,
          column: 19
        }
      },
      "70": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 24
        }
      },
      "71": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 256,
          column: 11
        }
      },
      "72": {
        start: {
          line: 238,
          column: 36
        },
        end: {
          line: 242,
          column: 25
        }
      },
      "73": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 251,
          column: 13
        }
      },
      "74": {
        start: {
          line: 244,
          column: 16
        },
        end: {
          line: 246,
          column: 17
        }
      },
      "75": {
        start: {
          line: 245,
          column: 20
        },
        end: {
          line: 245,
          column: 32
        }
      },
      "76": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 250,
          column: 19
        }
      },
      "77": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 24
        }
      },
      "78": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 281,
          column: 11
        }
      },
      "79": {
        start: {
          line: 263,
          column: 36
        },
        end: {
          line: 267,
          column: 25
        }
      },
      "80": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 276,
          column: 13
        }
      },
      "81": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 271,
          column: 17
        }
      },
      "82": {
        start: {
          line: 270,
          column: 20
        },
        end: {
          line: 270,
          column: 32
        }
      },
      "83": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 275,
          column: 19
        }
      },
      "84": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 24
        }
      },
      "85": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "86": {
        start: {
          line: 288,
          column: 36
        },
        end: {
          line: 292,
          column: 34
        }
      },
      "87": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 298,
          column: 13
        }
      },
      "88": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 297,
          column: 19
        }
      },
      "89": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 30
        }
      },
      "90": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 326,
          column: 11
        }
      },
      "91": {
        start: {
          line: 310,
          column: 30
        },
        end: {
          line: 316,
          column: 38
        }
      },
      "92": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 322,
          column: 13
        }
      },
      "93": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 321,
          column: 19
        }
      },
      "94": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 361,
          column: 11
        }
      },
      "95": {
        start: {
          line: 334,
          column: 57
        },
        end: {
          line: 334,
          column: 94
        }
      },
      "96": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 337,
          column: 13
        }
      },
      "97": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 336,
          column: 76
        }
      },
      "98": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 343,
          column: 13
        }
      },
      "99": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 342,
          column: 19
        }
      },
      "100": {
        start: {
          line: 345,
          column: 30
        },
        end: {
          line: 351,
          column: 33
        }
      },
      "101": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 357,
          column: 13
        }
      },
      "102": {
        start: {
          line: 353,
          column: 16
        },
        end: {
          line: 356,
          column: 19
        }
      },
      "103": {
        start: {
          line: 364,
          column: 0
        },
        end: {
          line: 364,
          column: 60
        }
      },
      "104": {
        start: {
          line: 365,
          column: 0
        },
        end: {
          line: 365,
          column: 43
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 56
          },
          end: {
            line: 18,
            column: 57
          }
        },
        loc: {
          start: {
            line: 18,
            column: 71
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 44
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 54
          },
          end: {
            line: 33,
            column: 55
          }
        },
        loc: {
          start: {
            line: 33,
            column: 66
          },
          end: {
            line: 50,
            column: 9
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 40
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 58
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 59,
            column: 54
          },
          end: {
            line: 59,
            column: 55
          }
        },
        loc: {
          start: {
            line: 59,
            column: 66
          },
          end: {
            line: 75,
            column: 9
          }
        },
        line: 59
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 51
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 83
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 84,
            column: 54
          },
          end: {
            line: 84,
            column: 55
          }
        },
        loc: {
          start: {
            line: 84,
            column: 66
          },
          end: {
            line: 141,
            column: 9
          }
        },
        line: 84
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 102,
            column: 45
          },
          end: {
            line: 102,
            column: 46
          }
        },
        loc: {
          start: {
            line: 102,
            column: 52
          },
          end: {
            line: 102,
            column: 187
          }
        },
        line: 102
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 112,
            column: 45
          },
          end: {
            line: 112,
            column: 46
          }
        },
        loc: {
          start: {
            line: 112,
            column: 52
          },
          end: {
            line: 112,
            column: 82
          }
        },
        line: 112
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 121,
            column: 45
          },
          end: {
            line: 121,
            column: 46
          }
        },
        loc: {
          start: {
            line: 121,
            column: 52
          },
          end: {
            line: 121,
            column: 79
          }
        },
        line: 121
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        loc: {
          start: {
            line: 149,
            column: 59
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 149
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 150,
            column: 54
          },
          end: {
            line: 150,
            column: 55
          }
        },
        loc: {
          start: {
            line: 150,
            column: 66
          },
          end: {
            line: 178,
            column: 9
          }
        },
        line: 150
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        },
        loc: {
          start: {
            line: 186,
            column: 44
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 186
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 187,
            column: 54
          },
          end: {
            line: 187,
            column: 55
          }
        },
        loc: {
          start: {
            line: 187,
            column: 66
          },
          end: {
            line: 203,
            column: 9
          }
        },
        line: 187
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 40
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 211
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 212,
            column: 54
          },
          end: {
            line: 212,
            column: 55
          }
        },
        loc: {
          start: {
            line: 212,
            column: 66
          },
          end: {
            line: 228,
            column: 9
          }
        },
        line: 212
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        loc: {
          start: {
            line: 236,
            column: 42
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 236
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 237,
            column: 54
          },
          end: {
            line: 237,
            column: 55
          }
        },
        loc: {
          start: {
            line: 237,
            column: 66
          },
          end: {
            line: 253,
            column: 9
          }
        },
        line: 237
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        loc: {
          start: {
            line: 261,
            column: 45
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 261
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 262,
            column: 54
          },
          end: {
            line: 262,
            column: 55
          }
        },
        loc: {
          start: {
            line: 262,
            column: 66
          },
          end: {
            line: 278,
            column: 9
          }
        },
        line: 262
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 286,
            column: 5
          }
        },
        loc: {
          start: {
            line: 286,
            column: 44
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 286
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 287,
            column: 54
          },
          end: {
            line: 287,
            column: 55
          }
        },
        loc: {
          start: {
            line: 287,
            column: 66
          },
          end: {
            line: 300,
            column: 9
          }
        },
        line: 287
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 308,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        },
        loc: {
          start: {
            line: 308,
            column: 47
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 308
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 309,
            column: 54
          },
          end: {
            line: 309,
            column: 55
          }
        },
        loc: {
          start: {
            line: 309,
            column: 66
          },
          end: {
            line: 323,
            column: 9
          }
        },
        line: 309
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 331,
            column: 5
          }
        },
        loc: {
          start: {
            line: 331,
            column: 39
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 331
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 332,
            column: 54
          },
          end: {
            line: 332,
            column: 55
          }
        },
        loc: {
          start: {
            line: 332,
            column: 66
          },
          end: {
            line: 358,
            column: 9
          }
        },
        line: 332
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 20,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 18,
            column: 27
          }
        }, {
          start: {
            line: 18,
            column: 31
          },
          end: {
            line: 18,
            column: 51
          }
        }, {
          start: {
            line: 18,
            column: 56
          },
          end: {
            line: 20,
            column: 1
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 11
          },
          end: {
            line: 19,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 37
          },
          end: {
            line: 19,
            column: 40
          }
        }, {
          start: {
            line: 19,
            column: 43
          },
          end: {
            line: 19,
            column: 61
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 15
          }
        }, {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 19,
            column: 33
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 36,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 36,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 18
          },
          end: {
            line: 34,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 57
          },
          end: {
            line: 34,
            column: 63
          }
        }, {
          start: {
            line: 34,
            column: 66
          },
          end: {
            line: 34,
            column: 79
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 18
          },
          end: {
            line: 34,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 18
          },
          end: {
            line: 34,
            column: 33
          }
        }, {
          start: {
            line: 34,
            column: 37
          },
          end: {
            line: 34,
            column: 54
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "7": {
        loc: {
          start: {
            line: 49,
            column: 76
          },
          end: {
            line: 49,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 76
          },
          end: {
            line: 49,
            column: 87
          }
        }, {
          start: {
            line: 49,
            column: 91
          },
          end: {
            line: 49,
            column: 95
          }
        }],
        line: 49
      },
      "8": {
        loc: {
          start: {
            line: 49,
            column: 111
          },
          end: {
            line: 49,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 111
          },
          end: {
            line: 49,
            column: 122
          }
        }, {
          start: {
            line: 49,
            column: 126
          },
          end: {
            line: 49,
            column: 130
          }
        }],
        line: 49
      },
      "9": {
        loc: {
          start: {
            line: 49,
            column: 143
          },
          end: {
            line: 49,
            column: 160
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 143
          },
          end: {
            line: 49,
            column: 152
          }
        }, {
          start: {
            line: 49,
            column: 156
          },
          end: {
            line: 49,
            column: 160
          }
        }],
        line: 49
      },
      "10": {
        loc: {
          start: {
            line: 49,
            column: 176
          },
          end: {
            line: 49,
            column: 196
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 176
          },
          end: {
            line: 49,
            column: 188
          }
        }, {
          start: {
            line: 49,
            column: 192
          },
          end: {
            line: 49,
            column: 196
          }
        }],
        line: 49
      },
      "11": {
        loc: {
          start: {
            line: 49,
            column: 212
          },
          end: {
            line: 49,
            column: 231
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 212
          },
          end: {
            line: 49,
            column: 223
          }
        }, {
          start: {
            line: 49,
            column: 227
          },
          end: {
            line: 49,
            column: 231
          }
        }],
        line: 49
      },
      "12": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "13": {
        loc: {
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 68,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 68,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "14": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "15": {
        loc: {
          start: {
            line: 85,
            column: 18
          },
          end: {
            line: 85,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 57
          },
          end: {
            line: 85,
            column: 63
          }
        }, {
          start: {
            line: 85,
            column: 66
          },
          end: {
            line: 85,
            column: 79
          }
        }],
        line: 85
      },
      "16": {
        loc: {
          start: {
            line: 85,
            column: 18
          },
          end: {
            line: 85,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 18
          },
          end: {
            line: 85,
            column: 33
          }
        }, {
          start: {
            line: 85,
            column: 37
          },
          end: {
            line: 85,
            column: 54
          }
        }],
        line: 85
      },
      "17": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "18": {
        loc: {
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 90,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 90,
            column: 25
          }
        }, {
          start: {
            line: 90,
            column: 29
          },
          end: {
            line: 90,
            column: 34
          }
        }],
        line: 90
      },
      "19": {
        loc: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "20": {
        loc: {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "21": {
        loc: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "22": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 127,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 127,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "23": {
        loc: {
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 137,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 137,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "24": {
        loc: {
          start: {
            line: 149,
            column: 45
          },
          end: {
            line: 149,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 149,
            column: 55
          },
          end: {
            line: 149,
            column: 57
          }
        }],
        line: 149
      },
      "25": {
        loc: {
          start: {
            line: 151,
            column: 20
          },
          end: {
            line: 151,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 151,
            column: 28
          },
          end: {
            line: 151,
            column: 30
          }
        }],
        line: 151
      },
      "26": {
        loc: {
          start: {
            line: 151,
            column: 32
          },
          end: {
            line: 151,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 151,
            column: 41
          },
          end: {
            line: 151,
            column: 42
          }
        }],
        line: 151
      },
      "27": {
        loc: {
          start: {
            line: 151,
            column: 44
          },
          end: {
            line: 151,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 151,
            column: 53
          },
          end: {
            line: 151,
            column: 61
          }
        }],
        line: 151
      },
      "28": {
        loc: {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 161,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 161,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "29": {
        loc: {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 169,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 169,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "30": {
        loc: {
          start: {
            line: 170,
            column: 29
          },
          end: {
            line: 170,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 29
          },
          end: {
            line: 170,
            column: 33
          }
        }, {
          start: {
            line: 170,
            column: 37
          },
          end: {
            line: 170,
            column: 39
          }
        }],
        line: 170
      },
      "31": {
        loc: {
          start: {
            line: 171,
            column: 31
          },
          end: {
            line: 171,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 31
          },
          end: {
            line: 171,
            column: 36
          }
        }, {
          start: {
            line: 171,
            column: 40
          },
          end: {
            line: 171,
            column: 41
          }
        }],
        line: 171
      },
      "32": {
        loc: {
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "33": {
        loc: {
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 196,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 196,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "34": {
        loc: {
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 226,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 226,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "35": {
        loc: {
          start: {
            line: 219,
            column: 16
          },
          end: {
            line: 221,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 16
          },
          end: {
            line: 221,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "36": {
        loc: {
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "37": {
        loc: {
          start: {
            line: 244,
            column: 16
          },
          end: {
            line: 246,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 16
          },
          end: {
            line: 246,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "38": {
        loc: {
          start: {
            line: 268,
            column: 12
          },
          end: {
            line: 276,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 12
          },
          end: {
            line: 276,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "39": {
        loc: {
          start: {
            line: 269,
            column: 16
          },
          end: {
            line: 271,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 16
          },
          end: {
            line: 271,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "40": {
        loc: {
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "41": {
        loc: {
          start: {
            line: 299,
            column: 19
          },
          end: {
            line: 299,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 299,
            column: 19
          },
          end: {
            line: 299,
            column: 23
          }
        }, {
          start: {
            line: 299,
            column: 27
          },
          end: {
            line: 299,
            column: 29
          }
        }],
        line: 299
      },
      "42": {
        loc: {
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "43": {
        loc: {
          start: {
            line: 335,
            column: 12
          },
          end: {
            line: 337,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 12
          },
          end: {
            line: 337,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "44": {
        loc: {
          start: {
            line: 335,
            column: 16
          },
          end: {
            line: 335,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 335,
            column: 16
          },
          end: {
            line: 335,
            column: 25
          }
        }, {
          start: {
            line: 335,
            column: 29
          },
          end: {
            line: 335,
            column: 34
          }
        }],
        line: 335
      },
      "45": {
        loc: {
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 343,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 343,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "46": {
        loc: {
          start: {
            line: 352,
            column: 12
          },
          end: {
            line: 357,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 12
          },
          end: {
            line: 357,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0],
      "25": [0],
      "26": [0],
      "27": [0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/services/profile/normalizedProfileService.ts",
      mappings: ";AAAA;;;;;;;;;;;;;;;GAeG;;;;;;AAEH,wEAAiD;AACjD,2DAA8F;AA8H9F,wEAAwE;AACxE,qBAAqB;AACrB,wEAAwE;AAExE,MAAa,wBAAwB;IAEnC;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,MAAc;QAC5C,OAAO,IAAA,iCAAiB,EAAC,KAAK,IAAI,EAAE;YAClC,IAAI,CAAC,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,EAAE,CAAA,EAAE,CAAC;gBACpB,MAAM,4BAAY,CAAC,eAAe,CAAC,QAAQ,EAAE,qBAAqB,CAAC,CAAA;YACrE,CAAC;YAED,+CAA+C;YAC/C,MAAM,CAAC,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;gBAClG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;gBAC3B,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;gBAC/B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;gBAC3B,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;gBAC7B,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;gBAChC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;aAChC,CAAC,CAAA;YAEF,IAAI,CAAC,OAAO,EAAE,CAAC;gBACb,OAAO,IAAI,CAAA;YACb,CAAC;YAED,uCACK,OAAO,KACV,WAAW,EAAE,WAAW,IAAI,IAAI,EAChC,YAAY,EAAE,WAAW,IAAI,IAAI,EACjC,SAAS,EAAE,SAAS,IAAI,IAAI,EAC5B,YAAY,EAAE,YAAY,IAAI,IAAI,EAClC,YAAY,EAAE,WAAW,IAAI,IAAI,IAClC;QACH,CAAC,EAAE;YACD,SAAS,EAAE,sBAAsB;YACjC,iBAAiB,EAAE,yBAAS,CAAC,qBAAqB;SACnD,CAAC,CAAA;IACJ,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,MAAc;QACxC,OAAO,IAAA,iCAAiB,EAAC,KAAK,IAAI,EAAE;YAClC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,gBAAQ;iBACnC,IAAI,CAAC,UAAU,CAAC;iBAChB,MAAM,CAAC,GAAG,CAAC;iBACX,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC;iBAChB,MAAM,EAAE,CAAA;YAEX,IAAI,KAAK,EAAE,CAAC;gBACV,IAAI,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE,CAAC,CAAC,mBAAmB;oBAClD,OAAO,IAAI,CAAA;gBACb,CAAC;gBACD,MAAM,4BAAY,CAAC,aAAa,CAAC,kBAAkB,EAAE;oBACnD,MAAM;oBACN,KAAK,EAAE,KAAK,CAAC,OAAO;iBACrB,CAAC,CAAA;YACJ,CAAC;YAED,OAAO,IAAI,CAAA;QACb,CAAC,EAAE;YACD,SAAS,EAAE,kBAAkB;YAC7B,iBAAiB,EAAE,yBAAS,CAAC,cAAc;SAC5C,CAAC,CAAA;IACJ,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAAc,EAAE,UAA6B;QACtE,OAAO,IAAA,iCAAiB,EAAC,KAAK,IAAI,EAAE;YAClC,IAAI,CAAC,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,EAAE,CAAA,EAAE,CAAC;gBACpB,MAAM,4BAAY,CAAC,eAAe,CAAC,QAAQ,EAAE,qBAAqB,CAAC,CAAA;YACrE,CAAC;YAED,+CAA+C;YAC/C,MAAM,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,MAAM,gBAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,CAAA;YAE1E,IAAI,SAAS,IAAI,CAAC,IAAI,EAAE,CAAC;gBACvB,MAAM,4BAAY,CAAC,sBAAsB,EAAE,CAAA;YAC7C,CAAC;YAED,IAAI,IAAI,CAAC,EAAE,KAAK,MAAM,EAAE,CAAC;gBACvB,MAAM,4BAAY,CAAC,uBAAuB,CAAC,SAAS,EAAE;oBACpD,eAAe,EAAE,MAAM;oBACvB,mBAAmB,EAAE,IAAI,CAAC,EAAE;iBAC7B,CAAC,CAAA;YACJ,CAAC;YAED,8BAA8B;YAC9B,MAAM,cAAc,GAAG,EAAE,CAAA;YAEzB,uBAAuB;YACvB,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,WAAW,EAAE,cAAc,EAAE,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,SAAS,EAAE,QAAQ,EAAE,sBAAsB,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACjL,cAAc,CAAC,IAAI,CACjB,gBAAQ;qBACL,IAAI,CAAC,UAAU,CAAC;qBAChB,MAAM,iCACF,UAAU,KACb,UAAU,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,IACpC;qBACD,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC;qBAChB,MAAM,CAAC,GAAG,CAAC;qBACX,MAAM,EAAE,CACZ,CAAA;YACH,CAAC;YAED,sBAAsB;YACtB,MAAM,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,mBAAmB,EAAE,kBAAkB,CAAC,CAAA;YACpI,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACxE,cAAc,CAAC,IAAI,CACjB,gBAAQ;qBACL,IAAI,CAAC,kBAAkB,CAAC;qBACxB,MAAM,+BACL,OAAO,EAAE,MAAM,IACZ,UAAU,KACb,UAAU,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,IACpC;qBACD,MAAM,CAAC,GAAG,CAAC;qBACX,MAAM,EAAE,CACZ,CAAA;YACH,CAAC;YAED,uBAAuB;YACvB,MAAM,aAAa,GAAG,CAAC,iBAAiB,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,mBAAmB,CAAC,CAAA;YACzG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACrE,cAAc,CAAC,IAAI,CACjB,gBAAQ;qBACL,IAAI,CAAC,mBAAmB,CAAC;qBACzB,MAAM,+BACL,OAAO,EAAE,MAAM,IACZ,UAAU,KACb,UAAU,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,IACpC;qBACD,MAAM,CAAC,GAAG,CAAC;qBACX,MAAM,EAAE,CACZ,CAAA;YACH,CAAC;YAED,sBAAsB;YACtB,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAA;YAEjD,mBAAmB;YACnB,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE,CAAC;gBAC7B,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;oBACjB,MAAM,4BAAY,CAAC,aAAa,CAAC,gBAAgB,EAAE;wBACjD,MAAM;wBACN,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO;qBAC5B,CAAC,CAAA;gBACJ,CAAC;YACH,CAAC;YAED,kCAAkC;YAClC,OAAO,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAA;QAE9C,CAAC,EAAE;YACD,SAAS,EAAE,gBAAgB;YAC3B,iBAAiB,EAAE,yBAAS,CAAC,qBAAqB;SACnD,CAAC,CAAA;IACJ,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,cAAc,CACzB,WAAmB,EACnB,UAKI,EAAE;QAMN,OAAO,IAAA,iCAAiB,EAAC,KAAK,IAAI,EAAE;YAClC,MAAM,EAAE,KAAK,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,QAAQ,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAA;YAEvE,IAAI,KAAK,GAAG,gBAAQ;iBACjB,IAAI,CAAC,UAAU,CAAC;iBAChB,MAAM,CAAC,iDAAiD,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;iBAC7E,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC;iBACpB,EAAE,CAAC,mBAAmB,WAAW,sBAAsB,WAAW,gBAAgB,WAAW,GAAG,CAAC;iBACjG,KAAK,CAAC,YAAY,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;iBACzC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,CAAA;YAEpC,IAAI,QAAQ,KAAK,SAAS,EAAE,CAAC;gBAC3B,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,uCAAuC,EAAE,UAAU,CAAC,CAAA;YACvE,CAAC;YAED,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM,KAAK,CAAA;YAE1C,IAAI,KAAK,EAAE,CAAC;gBACV,MAAM,4BAAY,CAAC,aAAa,CAAC,iBAAiB,EAAE;oBAClD,WAAW;oBACX,OAAO;oBACP,KAAK,EAAE,KAAK,CAAC,OAAO;iBACrB,CAAC,CAAA;YACJ,CAAC;YAED,MAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAA;YAC3B,MAAM,UAAU,GAAG,KAAK,IAAI,CAAC,CAAA;YAC7B,MAAM,OAAO,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,UAAU,CAAA;YAE7C,OAAO;gBACL,QAAQ,EAAE,QAA+B;gBACzC,UAAU;gBACV,OAAO;aACR,CAAA;QACH,CAAC,EAAE;YACD,SAAS,EAAE,iBAAiB;YAC5B,iBAAiB,EAAE,yBAAS,CAAC,cAAc;SAC5C,CAAC,CAAA;IACJ,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,MAAc;QAC5C,OAAO,IAAA,iCAAiB,EAAC,KAAK,IAAI,EAAE;YAClC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,gBAAQ;iBACnC,IAAI,CAAC,kBAAkB,CAAC;iBACxB,MAAM,CAAC,GAAG,CAAC;iBACX,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;iBACrB,MAAM,EAAE,CAAA;YAEX,IAAI,KAAK,EAAE,CAAC;gBACV,IAAI,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE,CAAC,CAAC,mBAAmB;oBAClD,OAAO,IAAI,CAAA;gBACb,CAAC;gBACD,MAAM,4BAAY,CAAC,aAAa,CAAC,sBAAsB,EAAE;oBACvD,MAAM;oBACN,KAAK,EAAE,KAAK,CAAC,OAAO;iBACrB,CAAC,CAAA;YACJ,CAAC;YAED,OAAO,IAAI,CAAA;QACb,CAAC,EAAE;YACD,SAAS,EAAE,sBAAsB;YACjC,iBAAiB,EAAE,yBAAS,CAAC,cAAc;SAC5C,CAAC,CAAA;IACJ,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,MAAc;QACxC,OAAO,IAAA,iCAAiB,EAAC,KAAK,IAAI,EAAE;YAClC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,gBAAQ;iBACnC,IAAI,CAAC,mBAAmB,CAAC;iBACzB,MAAM,CAAC,GAAG,CAAC;iBACX,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;iBACrB,MAAM,EAAE,CAAA;YAEX,IAAI,KAAK,EAAE,CAAC;gBACV,IAAI,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE,CAAC,CAAC,mBAAmB;oBAClD,OAAO,IAAI,CAAA;gBACb,CAAC;gBACD,MAAM,4BAAY,CAAC,aAAa,CAAC,kBAAkB,EAAE;oBACnD,MAAM;oBACN,KAAK,EAAE,KAAK,CAAC,OAAO;iBACrB,CAAC,CAAA;YACJ,CAAC;YAED,OAAO,IAAI,CAAA;QACb,CAAC,EAAE;YACD,SAAS,EAAE,kBAAkB;YAC7B,iBAAiB,EAAE,yBAAS,CAAC,cAAc;SAC5C,CAAC,CAAA;IACJ,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAc;QAC1C,OAAO,IAAA,iCAAiB,EAAC,KAAK,IAAI,EAAE;YAClC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,gBAAQ;iBACnC,IAAI,CAAC,gBAAgB,CAAC;iBACtB,MAAM,CAAC,GAAG,CAAC;iBACX,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;iBACrB,MAAM,EAAE,CAAA;YAEX,IAAI,KAAK,EAAE,CAAC;gBACV,IAAI,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE,CAAC,CAAC,mBAAmB;oBAClD,OAAO,IAAI,CAAA;gBACb,CAAC;gBACD,MAAM,4BAAY,CAAC,aAAa,CAAC,oBAAoB,EAAE;oBACrD,MAAM;oBACN,KAAK,EAAE,KAAK,CAAC,OAAO;iBACrB,CAAC,CAAA;YACJ,CAAC;YAED,OAAO,IAAI,CAAA;QACb,CAAC,EAAE;YACD,SAAS,EAAE,oBAAoB;YAC/B,iBAAiB,EAAE,yBAAS,CAAC,cAAc;SAC5C,CAAC,CAAA;IACJ,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,MAAc;QAC7C,OAAO,IAAA,iCAAiB,EAAC,KAAK,IAAI,EAAE;YAClC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,gBAAQ;iBACnC,IAAI,CAAC,mBAAmB,CAAC;iBACzB,MAAM,CAAC,GAAG,CAAC;iBACX,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;iBACrB,MAAM,EAAE,CAAA;YAEX,IAAI,KAAK,EAAE,CAAC;gBACV,IAAI,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE,CAAC,CAAC,mBAAmB;oBAClD,OAAO,IAAI,CAAA;gBACb,CAAC;gBACD,MAAM,4BAAY,CAAC,aAAa,CAAC,uBAAuB,EAAE;oBACxD,MAAM;oBACN,KAAK,EAAE,KAAK,CAAC,OAAO;iBACrB,CAAC,CAAA;YACJ,CAAC;YAED,OAAO,IAAI,CAAA;QACb,CAAC,EAAE;YACD,SAAS,EAAE,uBAAuB;YAClC,iBAAiB,EAAE,yBAAS,CAAC,cAAc;SAC5C,CAAC,CAAA;IACJ,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,MAAc;QAC5C,OAAO,IAAA,iCAAiB,EAAC,KAAK,IAAI,EAAE;YAClC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,gBAAQ;iBACnC,IAAI,CAAC,mBAAmB,CAAC;iBACzB,MAAM,CAAC,GAAG,CAAC;iBACX,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;iBACrB,KAAK,CAAC,UAAU,CAAC,CAAA;YAEpB,IAAI,KAAK,EAAE,CAAC;gBACV,MAAM,4BAAY,CAAC,aAAa,CAAC,uBAAuB,EAAE;oBACxD,MAAM;oBACN,KAAK,EAAE,KAAK,CAAC,OAAO;iBACrB,CAAC,CAAA;YACJ,CAAC;YAED,OAAO,IAAI,IAAI,EAAE,CAAA;QACnB,CAAC,EAAE;YACD,SAAS,EAAE,uBAAuB;YAClC,iBAAiB,EAAE,yBAAS,CAAC,cAAc;SAC5C,CAAC,CAAA;IACJ,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,qBAAqB,CAAC,MAAc;QAC/C,OAAO,IAAA,iCAAiB,EAAC,KAAK,IAAI,EAAE;YAClC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,gBAAQ;iBAC7B,IAAI,CAAC,gBAAgB,CAAC;iBACtB,MAAM,CAAC;gBACN,aAAa,EAAE,gBAAQ,CAAC,GAAG,CAAC,gCAAgC,CAAC;gBAC7D,UAAU,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;aACrC,CAAC;iBACD,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC,CAAA;YAExB,IAAI,KAAK,EAAE,CAAC;gBACV,MAAM,4BAAY,CAAC,aAAa,CAAC,yBAAyB,EAAE;oBAC1D,MAAM;oBACN,KAAK,EAAE,KAAK,CAAC,OAAO;iBACrB,CAAC,CAAA;YACJ,CAAC;QACH,CAAC,EAAE;YACD,SAAS,EAAE,yBAAyB;YACpC,iBAAiB,EAAE,yBAAS,CAAC,cAAc;SAC5C,CAAC,CAAA;IACJ,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAAc;QACvC,OAAO,IAAA,iCAAiB,EAAC,KAAK,IAAI,EAAE;YAClC,+CAA+C;YAC/C,MAAM,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,MAAM,gBAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,CAAA;YAE1E,IAAI,SAAS,IAAI,CAAC,IAAI,EAAE,CAAC;gBACvB,MAAM,4BAAY,CAAC,sBAAsB,EAAE,CAAA;YAC7C,CAAC;YAED,IAAI,IAAI,CAAC,EAAE,KAAK,MAAM,EAAE,CAAC;gBACvB,MAAM,4BAAY,CAAC,uBAAuB,CAAC,SAAS,EAAE;oBACpD,eAAe,EAAE,MAAM;oBACvB,mBAAmB,EAAE,IAAI,CAAC,EAAE;iBAC7B,CAAC,CAAA;YACJ,CAAC;YAED,6CAA6C;YAC7C,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,gBAAQ;iBAC7B,IAAI,CAAC,UAAU,CAAC;iBAChB,MAAM,CAAC;gBACN,MAAM,EAAE,SAAS;gBACjB,UAAU,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;aACrC,CAAC;iBACD,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;YAEnB,IAAI,KAAK,EAAE,CAAC;gBACV,MAAM,4BAAY,CAAC,aAAa,CAAC,gBAAgB,EAAE;oBACjD,MAAM;oBACN,KAAK,EAAE,KAAK,CAAC,OAAO;iBACrB,CAAC,CAAA;YACJ,CAAC;QACH,CAAC,EAAE;YACD,SAAS,EAAE,gBAAgB;YAC3B,iBAAiB,EAAE,yBAAS,CAAC,cAAc;SAC5C,CAAC,CAAA;IACJ,CAAC;CACF;AAnaD,4DAmaC;AAED,kBAAe,wBAAwB,CAAA",
      names: [],
      sources: ["/home/g/dev/orangecat/src/services/profile/normalizedProfileService.ts"],
      sourcesContent: ["/**\n * NORMALIZED PROFILE SERVICE\n *\n * New service layer designed for the normalized database schema.\n * Provides clean, type-safe operations across multiple tables.\n *\n * \u2705 Single Responsibility: Each method does one thing well\n * \u2705 Type Safety: Full TypeScript support with proper interfaces\n * \u2705 Error Handling: Structured error responses with correlation IDs\n * \u2705 Performance: Optimized queries with proper indexing\n * \u2705 Security: Row Level Security compliance\n *\n * Created: 2025-01-24\n * Last Modified: 2025-01-24\n * Last Modified Summary: New service for normalized schema - replaces old monolithic approach\n */\n\nimport supabase from '@/services/supabase/client'\nimport { ApiError, ErrorCode, ErrorHelpers, withErrorHandling } from '@/lib/api/errorHandling'\nimport { logger } from '@/utils/logger'\n\n// =====================================================================\n// TYPE DEFINITIONS\n// =====================================================================\n\nexport interface NormalizedProfile {\n  // Core profile data\n  id: string\n  username: string | null\n  full_name: string | null\n  display_name: string | null\n  bio: string | null\n  avatar_url: string | null\n  banner_url: string | null\n  website: string | null\n  status: 'active' | 'inactive' | 'suspended' | 'deleted'\n  last_active_at: string | null\n  profile_completed_at: string | null\n  onboarding_completed: boolean | null\n  created_at: string\n  updated_at: string\n\n  // Related data from other tables\n  preferences?: UserPreferences | null\n  bitcoin_data?: BitcoinData | null\n  analytics?: UserAnalytics | null\n  verification?: UserVerification | null\n  social_links?: SocialLink[] | null\n}\n\nexport interface UserPreferences {\n  user_id: string\n  email: string | null\n  phone: string | null\n  location: string | null\n  timezone: string | null\n  language: string | null\n  currency: string | null\n  theme_preferences: Record<string, any> | null\n  custom_css: string | null\n  profile_color: string | null\n  cover_image_url: string | null\n  privacy_settings: Record<string, any> | null\n  preferences: Record<string, any> | null\n  created_at: string\n  updated_at: string\n}\n\nexport interface BitcoinData {\n  user_id: string\n  bitcoin_address: string | null\n  lightning_address: string | null\n  bitcoin_public_key: string | null\n  lightning_node_id: string | null\n  bitcoin_balance: number | null\n  lightning_balance: number | null\n  created_at: string\n  updated_at: string\n}\n\nexport interface UserAnalytics {\n  user_id: string\n  profile_views: number | null\n  follower_count: number | null\n  following_count: number | null\n  campaign_count: number | null\n  total_raised: number | null\n  total_donated: number | null\n  login_count: number | null\n  last_login_at: string | null\n  created_at: string\n  updated_at: string\n}\n\nexport interface UserVerification {\n  user_id: string\n  verification_status: 'unverified' | 'pending' | 'verified' | 'rejected'\n  verification_level: number | null\n  kyc_status: 'none' | 'pending' | 'approved' | 'rejected' | null\n  two_factor_enabled: boolean | null\n  verification_data: Record<string, any> | null\n  created_at: string\n  updated_at: string\n}\n\nexport interface SocialLink {\n  id: string\n  user_id: string\n  platform: string\n  username: string | null\n  url: string | null\n  is_verified: boolean\n  created_at: string\n  updated_at: string\n}\n\nexport interface ProfileUpdateData {\n  username?: string\n  full_name?: string\n  display_name?: string\n  bio?: string\n  avatar_url?: string\n  banner_url?: string\n  website?: string\n  status?: 'active' | 'inactive' | 'suspended' | 'deleted'\n  onboarding_completed?: boolean\n\n  // Preferences\n  email?: string\n  phone?: string\n  location?: string\n  timezone?: string\n  language?: string\n  currency?: string\n  theme_preferences?: Record<string, any>\n  privacy_settings?: Record<string, any>\n\n  // Bitcoin data\n  bitcoin_address?: string\n  lightning_address?: string\n  bitcoin_public_key?: string\n  lightning_node_id?: string\n}\n\n// =====================================================================\n// MAIN SERVICE CLASS\n// =====================================================================\n\nexport class NormalizedProfileService {\n\n  /**\n   * Get complete profile with all related data\n   */\n  static async getCompleteProfile(userId: string): Promise<NormalizedProfile | null> {\n    return withErrorHandling(async () => {\n      if (!userId?.trim()) {\n        throw ErrorHelpers.validationError('userId', 'User ID is required')\n      }\n\n      // Use parallel queries for optimal performance\n      const [profile, preferences, bitcoinData, analytics, verification, socialLinks] = await Promise.all([\n        this.getCoreProfile(userId),\n        this.getUserPreferences(userId),\n        this.getBitcoinData(userId),\n        this.getUserAnalytics(userId),\n        this.getUserVerification(userId),\n        this.getUserSocialLinks(userId)\n      ])\n\n      if (!profile) {\n        return null\n      }\n\n      return {\n        ...profile,\n        preferences: preferences || null,\n        bitcoin_data: bitcoinData || null,\n        analytics: analytics || null,\n        verification: verification || null,\n        social_links: socialLinks || null\n      }\n    }, {\n      operation: 'get_complete_profile',\n      fallbackErrorCode: ErrorCode.INTERNAL_SERVER_ERROR\n    })\n  }\n\n  /**\n   * Get core profile data only\n   */\n  static async getCoreProfile(userId: string) {\n    return withErrorHandling(async () => {\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', userId)\n        .single()\n\n      if (error) {\n        if (error.code === 'PGRST116') { // No rows returned\n          return null\n        }\n        throw ErrorHelpers.databaseError('get_core_profile', {\n          userId,\n          error: error.message\n        })\n      }\n\n      return data\n    }, {\n      operation: 'get_core_profile',\n      fallbackErrorCode: ErrorCode.DATABASE_ERROR\n    })\n  }\n\n  /**\n   * Update profile across multiple tables\n   */\n  static async updateProfile(userId: string, updateData: ProfileUpdateData): Promise<NormalizedProfile> {\n    return withErrorHandling(async () => {\n      if (!userId?.trim()) {\n        throw ErrorHelpers.validationError('userId', 'User ID is required')\n      }\n\n      // Verify user authentication and authorization\n      const { data: { user }, error: authError } = await supabase.auth.getUser()\n\n      if (authError || !user) {\n        throw ErrorHelpers.authenticationRequired()\n      }\n\n      if (user.id !== userId) {\n        throw ErrorHelpers.insufficientPermissions('profile', {\n          requestedUserId: userId,\n          authenticatedUserId: user.id\n        })\n      }\n\n      // Perform updates in parallel\n      const updatePromises = []\n\n      // Core profile updates\n      if (Object.keys(updateData).some(key => ['username', 'full_name', 'display_name', 'bio', 'avatar_url', 'banner_url', 'website', 'status', 'onboarding_completed'].includes(key))) {\n        updatePromises.push(\n          supabase\n            .from('profiles')\n            .update({\n              ...updateData,\n              updated_at: new Date().toISOString()\n            })\n            .eq('id', userId)\n            .select('*')\n            .single()\n        )\n      }\n\n      // Preferences updates\n      const preferenceFields = ['email', 'phone', 'location', 'timezone', 'language', 'currency', 'theme_preferences', 'privacy_settings']\n      if (Object.keys(updateData).some(key => preferenceFields.includes(key))) {\n        updatePromises.push(\n          supabase\n            .from('user_preferences')\n            .upsert({\n              user_id: userId,\n              ...updateData,\n              updated_at: new Date().toISOString()\n            })\n            .select('*')\n            .single()\n        )\n      }\n\n      // Bitcoin data updates\n      const bitcoinFields = ['bitcoin_address', 'lightning_address', 'bitcoin_public_key', 'lightning_node_id']\n      if (Object.keys(updateData).some(key => bitcoinFields.includes(key))) {\n        updatePromises.push(\n          supabase\n            .from('user_bitcoin_data')\n            .upsert({\n              user_id: userId,\n              ...updateData,\n              updated_at: new Date().toISOString()\n            })\n            .select('*')\n            .single()\n        )\n      }\n\n      // Execute all updates\n      const results = await Promise.all(updatePromises)\n\n      // Check for errors\n      for (const result of results) {\n        if (result.error) {\n          throw ErrorHelpers.databaseError('update_profile', {\n            userId,\n            error: result.error.message\n          })\n        }\n      }\n\n      // Return complete updated profile\n      return await this.getCompleteProfile(userId)\n\n    }, {\n      operation: 'update_profile',\n      fallbackErrorCode: ErrorCode.INTERNAL_SERVER_ERROR\n    })\n  }\n\n  /**\n   * Search profiles with filtering and pagination\n   */\n  static async searchProfiles(\n    searchQuery: string,\n    options: {\n      limit?: number\n      offset?: number\n      status?: 'active' | 'inactive' | 'suspended' | 'deleted'\n      verified?: boolean\n    } = {}\n  ): Promise<{\n    profiles: NormalizedProfile[]\n    totalCount: number\n    hasMore: boolean\n  }> {\n    return withErrorHandling(async () => {\n      const { limit = 20, offset = 0, status = 'active', verified } = options\n\n      let query = supabase\n        .from('profiles')\n        .select('*, user_verification!inner(verification_status)', { count: 'exact' })\n        .eq('status', status)\n        .or(`username.ilike.%${searchQuery}%,full_name.ilike.%${searchQuery}%,bio.ilike.%${searchQuery}%`)\n        .order('created_at', { ascending: false })\n        .range(offset, offset + limit - 1)\n\n      if (verified !== undefined) {\n        query = query.eq('user_verification.verification_status', 'verified')\n      }\n\n      const { data, error, count } = await query\n\n      if (error) {\n        throw ErrorHelpers.databaseError('search_profiles', {\n          searchQuery,\n          options,\n          error: error.message\n        })\n      }\n\n      const profiles = data || []\n      const totalCount = count || 0\n      const hasMore = (offset + limit) < totalCount\n\n      return {\n        profiles: profiles as NormalizedProfile[],\n        totalCount,\n        hasMore\n      }\n    }, {\n      operation: 'search_profiles',\n      fallbackErrorCode: ErrorCode.DATABASE_ERROR\n    })\n  }\n\n  /**\n   * Get user preferences\n   */\n  static async getUserPreferences(userId: string): Promise<UserPreferences | null> {\n    return withErrorHandling(async () => {\n      const { data, error } = await supabase\n        .from('user_preferences')\n        .select('*')\n        .eq('user_id', userId)\n        .single()\n\n      if (error) {\n        if (error.code === 'PGRST116') { // No rows returned\n          return null\n        }\n        throw ErrorHelpers.databaseError('get_user_preferences', {\n          userId,\n          error: error.message\n        })\n      }\n\n      return data\n    }, {\n      operation: 'get_user_preferences',\n      fallbackErrorCode: ErrorCode.DATABASE_ERROR\n    })\n  }\n\n  /**\n   * Get bitcoin data\n   */\n  static async getBitcoinData(userId: string): Promise<BitcoinData | null> {\n    return withErrorHandling(async () => {\n      const { data, error } = await supabase\n        .from('user_bitcoin_data')\n        .select('*')\n        .eq('user_id', userId)\n        .single()\n\n      if (error) {\n        if (error.code === 'PGRST116') { // No rows returned\n          return null\n        }\n        throw ErrorHelpers.databaseError('get_bitcoin_data', {\n          userId,\n          error: error.message\n        })\n      }\n\n      return data\n    }, {\n      operation: 'get_bitcoin_data',\n      fallbackErrorCode: ErrorCode.DATABASE_ERROR\n    })\n  }\n\n  /**\n   * Get user analytics\n   */\n  static async getUserAnalytics(userId: string): Promise<UserAnalytics | null> {\n    return withErrorHandling(async () => {\n      const { data, error } = await supabase\n        .from('user_analytics')\n        .select('*')\n        .eq('user_id', userId)\n        .single()\n\n      if (error) {\n        if (error.code === 'PGRST116') { // No rows returned\n          return null\n        }\n        throw ErrorHelpers.databaseError('get_user_analytics', {\n          userId,\n          error: error.message\n        })\n      }\n\n      return data\n    }, {\n      operation: 'get_user_analytics',\n      fallbackErrorCode: ErrorCode.DATABASE_ERROR\n    })\n  }\n\n  /**\n   * Get user verification data\n   */\n  static async getUserVerification(userId: string): Promise<UserVerification | null> {\n    return withErrorHandling(async () => {\n      const { data, error } = await supabase\n        .from('user_verification')\n        .select('*')\n        .eq('user_id', userId)\n        .single()\n\n      if (error) {\n        if (error.code === 'PGRST116') { // No rows returned\n          return null\n        }\n        throw ErrorHelpers.databaseError('get_user_verification', {\n          userId,\n          error: error.message\n        })\n      }\n\n      return data\n    }, {\n      operation: 'get_user_verification',\n      fallbackErrorCode: ErrorCode.DATABASE_ERROR\n    })\n  }\n\n  /**\n   * Get user social links\n   */\n  static async getUserSocialLinks(userId: string): Promise<SocialLink[]> {\n    return withErrorHandling(async () => {\n      const { data, error } = await supabase\n        .from('user_social_links')\n        .select('*')\n        .eq('user_id', userId)\n        .order('platform')\n\n      if (error) {\n        throw ErrorHelpers.databaseError('get_user_social_links', {\n          userId,\n          error: error.message\n        })\n      }\n\n      return data || []\n    }, {\n      operation: 'get_user_social_links',\n      fallbackErrorCode: ErrorCode.DATABASE_ERROR\n    })\n  }\n\n  /**\n   * Increment profile views\n   */\n  static async incrementProfileViews(userId: string): Promise<void> {\n    return withErrorHandling(async () => {\n      const { error } = await supabase\n        .from('user_analytics')\n        .update({\n          profile_views: supabase.raw('COALESCE(profile_views, 0) + 1'),\n          updated_at: new Date().toISOString()\n        })\n        .eq('user_id', userId)\n\n      if (error) {\n        throw ErrorHelpers.databaseError('increment_profile_views', {\n          userId,\n          error: error.message\n        })\n      }\n    }, {\n      operation: 'increment_profile_views',\n      fallbackErrorCode: ErrorCode.DATABASE_ERROR\n    })\n  }\n\n  /**\n   * Delete profile (soft delete)\n   */\n  static async deleteProfile(userId: string): Promise<void> {\n    return withErrorHandling(async () => {\n      // Verify user authentication and authorization\n      const { data: { user }, error: authError } = await supabase.auth.getUser()\n\n      if (authError || !user) {\n        throw ErrorHelpers.authenticationRequired()\n      }\n\n      if (user.id !== userId) {\n        throw ErrorHelpers.insufficientPermissions('profile', {\n          requestedUserId: userId,\n          authenticatedUserId: user.id\n        })\n      }\n\n      // Soft delete by setting status to 'deleted'\n      const { error } = await supabase\n        .from('profiles')\n        .update({\n          status: 'deleted',\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', userId)\n\n      if (error) {\n        throw ErrorHelpers.databaseError('delete_profile', {\n          userId,\n          error: error.message\n        })\n      }\n    }, {\n      operation: 'delete_profile',\n      fallbackErrorCode: ErrorCode.DATABASE_ERROR\n    })\n  }\n}\n\nexport default NormalizedProfileService\n\n\n\n\n\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "eab4b79bc96061c53e131147db4b6beaff428a8b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_163vlng9vx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_163vlng9vx();
var __importDefault =
/* istanbul ignore next */
(cov_163vlng9vx().s[0]++,
/* istanbul ignore next */
(cov_163vlng9vx().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_163vlng9vx().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_163vlng9vx().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_163vlng9vx().f[0]++;
  cov_163vlng9vx().s[1]++;
  return /* istanbul ignore next */(cov_163vlng9vx().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_163vlng9vx().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_163vlng9vx().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_163vlng9vx().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_163vlng9vx().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_163vlng9vx().s[3]++;
exports.NormalizedProfileService = void 0;
const client_1 =
/* istanbul ignore next */
(cov_163vlng9vx().s[4]++, __importDefault(require("@/services/supabase/client")));
const errorHandling_1 =
/* istanbul ignore next */
(cov_163vlng9vx().s[5]++, require("@/lib/api/errorHandling"));
// =====================================================================
// MAIN SERVICE CLASS
// =====================================================================
class NormalizedProfileService {
  /**
   * Get complete profile with all related data
   */
  static async getCompleteProfile(userId) {
    /* istanbul ignore next */
    cov_163vlng9vx().f[1]++;
    cov_163vlng9vx().s[6]++;
    return (0, errorHandling_1.withErrorHandling)(async () => {
      /* istanbul ignore next */
      cov_163vlng9vx().f[2]++;
      cov_163vlng9vx().s[7]++;
      if (!(
      /* istanbul ignore next */
      (cov_163vlng9vx().b[5][0]++, userId === null) ||
      /* istanbul ignore next */
      (cov_163vlng9vx().b[5][1]++, userId === void 0) ?
      /* istanbul ignore next */
      (cov_163vlng9vx().b[4][0]++, void 0) :
      /* istanbul ignore next */
      (cov_163vlng9vx().b[4][1]++, userId.trim()))) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[3][0]++;
        cov_163vlng9vx().s[8]++;
        throw errorHandling_1.ErrorHelpers.validationError('userId', 'User ID is required');
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[3][1]++;
      }
      // Use parallel queries for optimal performance
      const [profile, preferences, bitcoinData, analytics, verification, socialLinks] =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[9]++, await Promise.all([this.getCoreProfile(userId), this.getUserPreferences(userId), this.getBitcoinData(userId), this.getUserAnalytics(userId), this.getUserVerification(userId), this.getUserSocialLinks(userId)]));
      /* istanbul ignore next */
      cov_163vlng9vx().s[10]++;
      if (!profile) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[6][0]++;
        cov_163vlng9vx().s[11]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[6][1]++;
      }
      cov_163vlng9vx().s[12]++;
      return Object.assign(Object.assign({}, profile), {
        preferences:
        /* istanbul ignore next */
        (cov_163vlng9vx().b[7][0]++, preferences) ||
        /* istanbul ignore next */
        (cov_163vlng9vx().b[7][1]++, null),
        bitcoin_data:
        /* istanbul ignore next */
        (cov_163vlng9vx().b[8][0]++, bitcoinData) ||
        /* istanbul ignore next */
        (cov_163vlng9vx().b[8][1]++, null),
        analytics:
        /* istanbul ignore next */
        (cov_163vlng9vx().b[9][0]++, analytics) ||
        /* istanbul ignore next */
        (cov_163vlng9vx().b[9][1]++, null),
        verification:
        /* istanbul ignore next */
        (cov_163vlng9vx().b[10][0]++, verification) ||
        /* istanbul ignore next */
        (cov_163vlng9vx().b[10][1]++, null),
        social_links:
        /* istanbul ignore next */
        (cov_163vlng9vx().b[11][0]++, socialLinks) ||
        /* istanbul ignore next */
        (cov_163vlng9vx().b[11][1]++, null)
      });
    }, {
      operation: 'get_complete_profile',
      fallbackErrorCode: errorHandling_1.ErrorCode.INTERNAL_SERVER_ERROR
    });
  }
  /**
   * Get core profile data only
   */
  static async getCoreProfile(userId) {
    /* istanbul ignore next */
    cov_163vlng9vx().f[3]++;
    cov_163vlng9vx().s[13]++;
    return (0, errorHandling_1.withErrorHandling)(async () => {
      /* istanbul ignore next */
      cov_163vlng9vx().f[4]++;
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[14]++, await client_1.default.from('profiles').select('*').eq('id', userId).single());
      /* istanbul ignore next */
      cov_163vlng9vx().s[15]++;
      if (error) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[12][0]++;
        cov_163vlng9vx().s[16]++;
        if (error.code === 'PGRST116') {
          /* istanbul ignore next */
          cov_163vlng9vx().b[13][0]++;
          cov_163vlng9vx().s[17]++;
          // No rows returned
          return null;
        } else
        /* istanbul ignore next */
        {
          cov_163vlng9vx().b[13][1]++;
        }
        cov_163vlng9vx().s[18]++;
        throw errorHandling_1.ErrorHelpers.databaseError('get_core_profile', {
          userId,
          error: error.message
        });
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[12][1]++;
      }
      cov_163vlng9vx().s[19]++;
      return data;
    }, {
      operation: 'get_core_profile',
      fallbackErrorCode: errorHandling_1.ErrorCode.DATABASE_ERROR
    });
  }
  /**
   * Update profile across multiple tables
   */
  static async updateProfile(userId, updateData) {
    /* istanbul ignore next */
    cov_163vlng9vx().f[5]++;
    cov_163vlng9vx().s[20]++;
    return (0, errorHandling_1.withErrorHandling)(async () => {
      /* istanbul ignore next */
      cov_163vlng9vx().f[6]++;
      cov_163vlng9vx().s[21]++;
      if (!(
      /* istanbul ignore next */
      (cov_163vlng9vx().b[16][0]++, userId === null) ||
      /* istanbul ignore next */
      (cov_163vlng9vx().b[16][1]++, userId === void 0) ?
      /* istanbul ignore next */
      (cov_163vlng9vx().b[15][0]++, void 0) :
      /* istanbul ignore next */
      (cov_163vlng9vx().b[15][1]++, userId.trim()))) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[14][0]++;
        cov_163vlng9vx().s[22]++;
        throw errorHandling_1.ErrorHelpers.validationError('userId', 'User ID is required');
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[14][1]++;
      }
      // Verify user authentication and authorization
      const {
        data: {
          user
        },
        error: authError
      } =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[23]++, await client_1.default.auth.getUser());
      /* istanbul ignore next */
      cov_163vlng9vx().s[24]++;
      if (
      /* istanbul ignore next */
      (cov_163vlng9vx().b[18][0]++, authError) ||
      /* istanbul ignore next */
      (cov_163vlng9vx().b[18][1]++, !user)) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[17][0]++;
        cov_163vlng9vx().s[25]++;
        throw errorHandling_1.ErrorHelpers.authenticationRequired();
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[17][1]++;
      }
      cov_163vlng9vx().s[26]++;
      if (user.id !== userId) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[19][0]++;
        cov_163vlng9vx().s[27]++;
        throw errorHandling_1.ErrorHelpers.insufficientPermissions('profile', {
          requestedUserId: userId,
          authenticatedUserId: user.id
        });
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[19][1]++;
      }
      // Perform updates in parallel
      const updatePromises =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[28]++, []);
      // Core profile updates
      /* istanbul ignore next */
      cov_163vlng9vx().s[29]++;
      if (Object.keys(updateData).some(key => {
        /* istanbul ignore next */
        cov_163vlng9vx().f[7]++;
        cov_163vlng9vx().s[30]++;
        return ['username', 'full_name', 'display_name', 'bio', 'avatar_url', 'banner_url', 'website', 'status', 'onboarding_completed'].includes(key);
      })) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[20][0]++;
        cov_163vlng9vx().s[31]++;
        updatePromises.push(client_1.default.from('profiles').update(Object.assign(Object.assign({}, updateData), {
          updated_at: new Date().toISOString()
        })).eq('id', userId).select('*').single());
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[20][1]++;
      }
      // Preferences updates
      const preferenceFields =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[32]++, ['email', 'phone', 'location', 'timezone', 'language', 'currency', 'theme_preferences', 'privacy_settings']);
      /* istanbul ignore next */
      cov_163vlng9vx().s[33]++;
      if (Object.keys(updateData).some(key => {
        /* istanbul ignore next */
        cov_163vlng9vx().f[8]++;
        cov_163vlng9vx().s[34]++;
        return preferenceFields.includes(key);
      })) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[21][0]++;
        cov_163vlng9vx().s[35]++;
        updatePromises.push(client_1.default.from('user_preferences').upsert(Object.assign(Object.assign({
          user_id: userId
        }, updateData), {
          updated_at: new Date().toISOString()
        })).select('*').single());
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[21][1]++;
      }
      // Bitcoin data updates
      const bitcoinFields =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[36]++, ['bitcoin_address', 'lightning_address', 'bitcoin_public_key', 'lightning_node_id']);
      /* istanbul ignore next */
      cov_163vlng9vx().s[37]++;
      if (Object.keys(updateData).some(key => {
        /* istanbul ignore next */
        cov_163vlng9vx().f[9]++;
        cov_163vlng9vx().s[38]++;
        return bitcoinFields.includes(key);
      })) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[22][0]++;
        cov_163vlng9vx().s[39]++;
        updatePromises.push(client_1.default.from('user_bitcoin_data').upsert(Object.assign(Object.assign({
          user_id: userId
        }, updateData), {
          updated_at: new Date().toISOString()
        })).select('*').single());
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[22][1]++;
      }
      // Execute all updates
      const results =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[40]++, await Promise.all(updatePromises));
      // Check for errors
      /* istanbul ignore next */
      cov_163vlng9vx().s[41]++;
      for (const result of results) {
        /* istanbul ignore next */
        cov_163vlng9vx().s[42]++;
        if (result.error) {
          /* istanbul ignore next */
          cov_163vlng9vx().b[23][0]++;
          cov_163vlng9vx().s[43]++;
          throw errorHandling_1.ErrorHelpers.databaseError('update_profile', {
            userId,
            error: result.error.message
          });
        } else
        /* istanbul ignore next */
        {
          cov_163vlng9vx().b[23][1]++;
        }
      }
      // Return complete updated profile
      /* istanbul ignore next */
      cov_163vlng9vx().s[44]++;
      return await this.getCompleteProfile(userId);
    }, {
      operation: 'update_profile',
      fallbackErrorCode: errorHandling_1.ErrorCode.INTERNAL_SERVER_ERROR
    });
  }
  /**
   * Search profiles with filtering and pagination
   */
  static async searchProfiles(searchQuery, options =
  /* istanbul ignore next */
  (cov_163vlng9vx().b[24][0]++, {})) {
    /* istanbul ignore next */
    cov_163vlng9vx().f[10]++;
    cov_163vlng9vx().s[45]++;
    return (0, errorHandling_1.withErrorHandling)(async () => {
      /* istanbul ignore next */
      cov_163vlng9vx().f[11]++;
      const {
        limit =
        /* istanbul ignore next */
        (cov_163vlng9vx().b[25][0]++, 20),
        offset =
        /* istanbul ignore next */
        (cov_163vlng9vx().b[26][0]++, 0),
        status =
        /* istanbul ignore next */
        (cov_163vlng9vx().b[27][0]++, 'active'),
        verified
      } =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[46]++, options);
      let query =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[47]++, client_1.default.from('profiles').select('*, user_verification!inner(verification_status)', {
        count: 'exact'
      }).eq('status', status).or(`username.ilike.%${searchQuery}%,full_name.ilike.%${searchQuery}%,bio.ilike.%${searchQuery}%`).order('created_at', {
        ascending: false
      }).range(offset, offset + limit - 1));
      /* istanbul ignore next */
      cov_163vlng9vx().s[48]++;
      if (verified !== undefined) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[28][0]++;
        cov_163vlng9vx().s[49]++;
        query = query.eq('user_verification.verification_status', 'verified');
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[28][1]++;
      }
      const {
        data,
        error,
        count
      } =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[50]++, await query);
      /* istanbul ignore next */
      cov_163vlng9vx().s[51]++;
      if (error) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[29][0]++;
        cov_163vlng9vx().s[52]++;
        throw errorHandling_1.ErrorHelpers.databaseError('search_profiles', {
          searchQuery,
          options,
          error: error.message
        });
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[29][1]++;
      }
      const profiles =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[53]++,
      /* istanbul ignore next */
      (cov_163vlng9vx().b[30][0]++, data) ||
      /* istanbul ignore next */
      (cov_163vlng9vx().b[30][1]++, []));
      const totalCount =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[54]++,
      /* istanbul ignore next */
      (cov_163vlng9vx().b[31][0]++, count) ||
      /* istanbul ignore next */
      (cov_163vlng9vx().b[31][1]++, 0));
      const hasMore =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[55]++, offset + limit < totalCount);
      /* istanbul ignore next */
      cov_163vlng9vx().s[56]++;
      return {
        profiles: profiles,
        totalCount,
        hasMore
      };
    }, {
      operation: 'search_profiles',
      fallbackErrorCode: errorHandling_1.ErrorCode.DATABASE_ERROR
    });
  }
  /**
   * Get user preferences
   */
  static async getUserPreferences(userId) {
    /* istanbul ignore next */
    cov_163vlng9vx().f[12]++;
    cov_163vlng9vx().s[57]++;
    return (0, errorHandling_1.withErrorHandling)(async () => {
      /* istanbul ignore next */
      cov_163vlng9vx().f[13]++;
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[58]++, await client_1.default.from('user_preferences').select('*').eq('user_id', userId).single());
      /* istanbul ignore next */
      cov_163vlng9vx().s[59]++;
      if (error) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[32][0]++;
        cov_163vlng9vx().s[60]++;
        if (error.code === 'PGRST116') {
          /* istanbul ignore next */
          cov_163vlng9vx().b[33][0]++;
          cov_163vlng9vx().s[61]++;
          // No rows returned
          return null;
        } else
        /* istanbul ignore next */
        {
          cov_163vlng9vx().b[33][1]++;
        }
        cov_163vlng9vx().s[62]++;
        throw errorHandling_1.ErrorHelpers.databaseError('get_user_preferences', {
          userId,
          error: error.message
        });
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[32][1]++;
      }
      cov_163vlng9vx().s[63]++;
      return data;
    }, {
      operation: 'get_user_preferences',
      fallbackErrorCode: errorHandling_1.ErrorCode.DATABASE_ERROR
    });
  }
  /**
   * Get bitcoin data
   */
  static async getBitcoinData(userId) {
    /* istanbul ignore next */
    cov_163vlng9vx().f[14]++;
    cov_163vlng9vx().s[64]++;
    return (0, errorHandling_1.withErrorHandling)(async () => {
      /* istanbul ignore next */
      cov_163vlng9vx().f[15]++;
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[65]++, await client_1.default.from('user_bitcoin_data').select('*').eq('user_id', userId).single());
      /* istanbul ignore next */
      cov_163vlng9vx().s[66]++;
      if (error) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[34][0]++;
        cov_163vlng9vx().s[67]++;
        if (error.code === 'PGRST116') {
          /* istanbul ignore next */
          cov_163vlng9vx().b[35][0]++;
          cov_163vlng9vx().s[68]++;
          // No rows returned
          return null;
        } else
        /* istanbul ignore next */
        {
          cov_163vlng9vx().b[35][1]++;
        }
        cov_163vlng9vx().s[69]++;
        throw errorHandling_1.ErrorHelpers.databaseError('get_bitcoin_data', {
          userId,
          error: error.message
        });
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[34][1]++;
      }
      cov_163vlng9vx().s[70]++;
      return data;
    }, {
      operation: 'get_bitcoin_data',
      fallbackErrorCode: errorHandling_1.ErrorCode.DATABASE_ERROR
    });
  }
  /**
   * Get user analytics
   */
  static async getUserAnalytics(userId) {
    /* istanbul ignore next */
    cov_163vlng9vx().f[16]++;
    cov_163vlng9vx().s[71]++;
    return (0, errorHandling_1.withErrorHandling)(async () => {
      /* istanbul ignore next */
      cov_163vlng9vx().f[17]++;
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[72]++, await client_1.default.from('user_analytics').select('*').eq('user_id', userId).single());
      /* istanbul ignore next */
      cov_163vlng9vx().s[73]++;
      if (error) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[36][0]++;
        cov_163vlng9vx().s[74]++;
        if (error.code === 'PGRST116') {
          /* istanbul ignore next */
          cov_163vlng9vx().b[37][0]++;
          cov_163vlng9vx().s[75]++;
          // No rows returned
          return null;
        } else
        /* istanbul ignore next */
        {
          cov_163vlng9vx().b[37][1]++;
        }
        cov_163vlng9vx().s[76]++;
        throw errorHandling_1.ErrorHelpers.databaseError('get_user_analytics', {
          userId,
          error: error.message
        });
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[36][1]++;
      }
      cov_163vlng9vx().s[77]++;
      return data;
    }, {
      operation: 'get_user_analytics',
      fallbackErrorCode: errorHandling_1.ErrorCode.DATABASE_ERROR
    });
  }
  /**
   * Get user verification data
   */
  static async getUserVerification(userId) {
    /* istanbul ignore next */
    cov_163vlng9vx().f[18]++;
    cov_163vlng9vx().s[78]++;
    return (0, errorHandling_1.withErrorHandling)(async () => {
      /* istanbul ignore next */
      cov_163vlng9vx().f[19]++;
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[79]++, await client_1.default.from('user_verification').select('*').eq('user_id', userId).single());
      /* istanbul ignore next */
      cov_163vlng9vx().s[80]++;
      if (error) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[38][0]++;
        cov_163vlng9vx().s[81]++;
        if (error.code === 'PGRST116') {
          /* istanbul ignore next */
          cov_163vlng9vx().b[39][0]++;
          cov_163vlng9vx().s[82]++;
          // No rows returned
          return null;
        } else
        /* istanbul ignore next */
        {
          cov_163vlng9vx().b[39][1]++;
        }
        cov_163vlng9vx().s[83]++;
        throw errorHandling_1.ErrorHelpers.databaseError('get_user_verification', {
          userId,
          error: error.message
        });
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[38][1]++;
      }
      cov_163vlng9vx().s[84]++;
      return data;
    }, {
      operation: 'get_user_verification',
      fallbackErrorCode: errorHandling_1.ErrorCode.DATABASE_ERROR
    });
  }
  /**
   * Get user social links
   */
  static async getUserSocialLinks(userId) {
    /* istanbul ignore next */
    cov_163vlng9vx().f[20]++;
    cov_163vlng9vx().s[85]++;
    return (0, errorHandling_1.withErrorHandling)(async () => {
      /* istanbul ignore next */
      cov_163vlng9vx().f[21]++;
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[86]++, await client_1.default.from('user_social_links').select('*').eq('user_id', userId).order('platform'));
      /* istanbul ignore next */
      cov_163vlng9vx().s[87]++;
      if (error) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[40][0]++;
        cov_163vlng9vx().s[88]++;
        throw errorHandling_1.ErrorHelpers.databaseError('get_user_social_links', {
          userId,
          error: error.message
        });
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[40][1]++;
      }
      cov_163vlng9vx().s[89]++;
      return /* istanbul ignore next */(cov_163vlng9vx().b[41][0]++, data) ||
      /* istanbul ignore next */
      (cov_163vlng9vx().b[41][1]++, []);
    }, {
      operation: 'get_user_social_links',
      fallbackErrorCode: errorHandling_1.ErrorCode.DATABASE_ERROR
    });
  }
  /**
   * Increment profile views
   */
  static async incrementProfileViews(userId) {
    /* istanbul ignore next */
    cov_163vlng9vx().f[22]++;
    cov_163vlng9vx().s[90]++;
    return (0, errorHandling_1.withErrorHandling)(async () => {
      /* istanbul ignore next */
      cov_163vlng9vx().f[23]++;
      const {
        error
      } =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[91]++, await client_1.default.from('user_analytics').update({
        profile_views: client_1.default.raw('COALESCE(profile_views, 0) + 1'),
        updated_at: new Date().toISOString()
      }).eq('user_id', userId));
      /* istanbul ignore next */
      cov_163vlng9vx().s[92]++;
      if (error) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[42][0]++;
        cov_163vlng9vx().s[93]++;
        throw errorHandling_1.ErrorHelpers.databaseError('increment_profile_views', {
          userId,
          error: error.message
        });
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[42][1]++;
      }
    }, {
      operation: 'increment_profile_views',
      fallbackErrorCode: errorHandling_1.ErrorCode.DATABASE_ERROR
    });
  }
  /**
   * Delete profile (soft delete)
   */
  static async deleteProfile(userId) {
    /* istanbul ignore next */
    cov_163vlng9vx().f[24]++;
    cov_163vlng9vx().s[94]++;
    return (0, errorHandling_1.withErrorHandling)(async () => {
      /* istanbul ignore next */
      cov_163vlng9vx().f[25]++;
      // Verify user authentication and authorization
      const {
        data: {
          user
        },
        error: authError
      } =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[95]++, await client_1.default.auth.getUser());
      /* istanbul ignore next */
      cov_163vlng9vx().s[96]++;
      if (
      /* istanbul ignore next */
      (cov_163vlng9vx().b[44][0]++, authError) ||
      /* istanbul ignore next */
      (cov_163vlng9vx().b[44][1]++, !user)) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[43][0]++;
        cov_163vlng9vx().s[97]++;
        throw errorHandling_1.ErrorHelpers.authenticationRequired();
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[43][1]++;
      }
      cov_163vlng9vx().s[98]++;
      if (user.id !== userId) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[45][0]++;
        cov_163vlng9vx().s[99]++;
        throw errorHandling_1.ErrorHelpers.insufficientPermissions('profile', {
          requestedUserId: userId,
          authenticatedUserId: user.id
        });
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[45][1]++;
      }
      // Soft delete by setting status to 'deleted'
      const {
        error
      } =
      /* istanbul ignore next */
      (cov_163vlng9vx().s[100]++, await client_1.default.from('profiles').update({
        status: 'deleted',
        updated_at: new Date().toISOString()
      }).eq('id', userId));
      /* istanbul ignore next */
      cov_163vlng9vx().s[101]++;
      if (error) {
        /* istanbul ignore next */
        cov_163vlng9vx().b[46][0]++;
        cov_163vlng9vx().s[102]++;
        throw errorHandling_1.ErrorHelpers.databaseError('delete_profile', {
          userId,
          error: error.message
        });
      } else
      /* istanbul ignore next */
      {
        cov_163vlng9vx().b[46][1]++;
      }
    }, {
      operation: 'delete_profile',
      fallbackErrorCode: errorHandling_1.ErrorCode.DATABASE_ERROR
    });
  }
}
/* istanbul ignore next */
cov_163vlng9vx().s[103]++;
exports.NormalizedProfileService = NormalizedProfileService;
/* istanbul ignore next */
cov_163vlng9vx().s[104]++;
exports.default = NormalizedProfileService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,