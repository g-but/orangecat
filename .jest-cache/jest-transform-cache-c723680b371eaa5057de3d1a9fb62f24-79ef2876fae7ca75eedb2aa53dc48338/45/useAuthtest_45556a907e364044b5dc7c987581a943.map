{"file":"/home/g/dev/orangecat/src/hooks/__tests__/useAuth.test.ts","mappings":"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","names":[],"sources":["/home/g/dev/orangecat/src/hooks/__tests__/useAuth.test.ts"],"sourcesContent":["import { renderHook, act } from '@testing-library/react'\nimport { useRouter } from 'next/navigation'\nimport { usePathname } from 'next/navigation'\nimport { useAuth, useRequireAuth, useRedirectIfAuthenticated } from '../useAuth'\n\n// Mock the auth store\nconst mockAuthStore = {\n  user: null as any,\n  session: null as any,\n  profile: null as any,\n  isLoading: false,\n  hydrated: false,\n  signOut: jest.fn()\n}\n\njest.mock('@/stores/auth', () => ({\n  useAuthStore: () => mockAuthStore\n}))\n\n// Mock Next.js navigation\nconst mockPush = jest.fn()\nconst mockPathname = '/'\n\njest.mock('next/navigation', () => ({\n  useRouter: jest.fn(() => ({\n    push: mockPush\n  })),\n  usePathname: jest.fn(() => mockPathname)\n}))\n\ndescribe('useAuth', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n    // Reset mock store to default state\n    Object.assign(mockAuthStore, {\n      user: null,\n      session: null,\n      profile: null,\n      isLoading: false,\n      hydrated: false,\n      signOut: jest.fn()\n    })\n  })\n\n  describe('useAuth - General Auth Hook', () => {\n    it('should return consistent auth state when user and session exist', () => {\n      mockAuthStore.user = { id: '123' }\n      mockAuthStore.session = { access_token: 'token' }\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = false\n\n      const { result } = renderHook(() => useAuth())\n\n      expect(result.current.isAuthenticated).toBe(true)\n      expect(result.current.isConsistent).toBe(true)\n      expect(result.current.user).toEqual({ id: '123' })\n      expect(result.current.session).toEqual({ access_token: 'token' })\n    })\n\n    it('should return unauthenticated when no user or session', () => {\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = false\n\n      const { result } = renderHook(() => useAuth())\n\n      expect(result.current.isAuthenticated).toBe(false)\n      expect(result.current.isConsistent).toBe(true)\n      expect(result.current.user).toBe(null)\n      expect(result.current.session).toBe(null)\n    })\n\n    it('should detect inconsistent state when user exists but session does not', () => {\n      mockAuthStore.user = { id: '123' }\n      mockAuthStore.session = null\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = false\n\n      const { result } = renderHook(() => useAuth())\n\n      expect(result.current.isAuthenticated).toBe(false)\n      expect(result.current.isConsistent).toBe(false)\n      expect(result.current.user).toEqual({ id: '123' })\n      expect(result.current.session).toBe(null)\n    })\n\n    it('should detect inconsistent state when session exists but user does not', () => {\n      mockAuthStore.user = null\n      mockAuthStore.session = { access_token: 'token' }\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = false\n\n      const { result } = renderHook(() => useAuth())\n\n      expect(result.current.isAuthenticated).toBe(false)\n      expect(result.current.isConsistent).toBe(false)\n      expect(result.current.user).toBe(null)\n      expect(result.current.session).toEqual({ access_token: 'token' })\n    })\n\n    it('should provide fixInconsistentState function', async () => {\n      mockAuthStore.user = { id: '123' }\n      mockAuthStore.session = null\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = false\n\n      // Mock window location\n      Object.defineProperty(window, 'location', {\n        value: { pathname: '/dashboard' },\n        writable: true\n      })\n\n      const { result } = renderHook(() => useAuth())\n\n      expect(result.current.fixInconsistentState).toBeInstanceOf(Function)\n      \n      await act(async () => {\n        await result.current.fixInconsistentState()\n      })\n\n      expect(mockAuthStore.signOut).toHaveBeenCalled()\n      expect(mockPush).toHaveBeenCalledWith('/auth')\n    })\n\n    it('should not attempt fix when not hydrated', async () => {\n      mockAuthStore.user = { id: '123' }\n      mockAuthStore.session = null\n      mockAuthStore.hydrated = false\n      mockAuthStore.isLoading = false\n\n      const { result } = renderHook(() => useAuth())\n\n      await act(async () => {\n        await result.current.fixInconsistentState()\n      })\n\n      expect(mockAuthStore.signOut).not.toHaveBeenCalled()\n      expect(mockPush).not.toHaveBeenCalled()\n    })\n  })\n\n  describe('useRequireAuth - Protected Routes Hook', () => {\n    it('should redirect to auth when user is not authenticated', () => {\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = false\n\n      renderHook(() => useRequireAuth())\n\n      expect(mockPush).toHaveBeenCalledWith('/auth?from=protected')\n    })\n\n    it('should not redirect when user is authenticated', () => {\n      mockAuthStore.user = { id: '123' }\n      mockAuthStore.session = { access_token: 'token' }\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = false\n\n      const { result } = renderHook(() => useRequireAuth())\n\n      expect(mockPush).not.toHaveBeenCalled()\n      expect(result.current.isAuthenticated).toBe(true)\n      expect(result.current.isLoading).toBe(false)\n    })\n\n    it('should show loading when not hydrated', () => {\n      mockAuthStore.hydrated = false\n\n      const { result } = renderHook(() => useRequireAuth())\n\n      expect(result.current.isLoading).toBe(true)\n      expect(mockPush).not.toHaveBeenCalled()\n    })\n\n    it('should show loading when still loading', () => {\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = true\n\n      const { result } = renderHook(() => useRequireAuth())\n\n      expect(result.current.isLoading).toBe(true)\n      expect(mockPush).not.toHaveBeenCalled()\n    })\n\n    it('should redirect when state is inconsistent', () => {\n      mockAuthStore.user = { id: '123' }\n      mockAuthStore.session = null\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = false\n\n      renderHook(() => useRequireAuth())\n\n      expect(mockPush).toHaveBeenCalledWith('/auth?from=protected')\n    })\n\n    it('should return user and profile data when authenticated', () => {\n      const mockUser = { id: '123', email: 'test@example.com' }\n      const mockProfile = { id: '456', username: 'testuser' }\n      \n      mockAuthStore.user = mockUser\n      mockAuthStore.session = { access_token: 'token' }\n      mockAuthStore.profile = mockProfile\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = false\n\n      const { result } = renderHook(() => useRequireAuth())\n\n      expect(result.current.user).toEqual(mockUser)\n      expect(result.current.profile).toEqual(mockProfile)\n      expect(result.current.isAuthenticated).toBe(true)\n    })\n  })\n\n  describe('useRedirectIfAuthenticated - Login/Register Pages Hook', () => {\n    beforeEach(() => {\n      ;(usePathname as jest.Mock).mockReturnValue('/auth')\n    })\n\n    it('should redirect to dashboard when user is authenticated', () => {\n      mockAuthStore.user = { id: '123' }\n      mockAuthStore.session = { access_token: 'token' }\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = false\n\n      renderHook(() => useRedirectIfAuthenticated())\n\n      expect(mockPush).toHaveBeenCalledWith('/dashboard')\n    })\n\n    it('should not redirect when user is not authenticated', () => {\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = false\n\n      const { result } = renderHook(() => useRedirectIfAuthenticated())\n\n      expect(mockPush).not.toHaveBeenCalled()\n      expect(result.current.isAuthenticated).toBe(false)\n    })\n\n    it('should not redirect when on dashboard page', () => {\n      ;(usePathname as jest.Mock).mockReturnValue('/dashboard')\n      \n      mockAuthStore.user = { id: '123' }\n      mockAuthStore.session = { access_token: 'token' }\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = false\n\n      renderHook(() => useRedirectIfAuthenticated())\n\n      expect(mockPush).not.toHaveBeenCalled()\n    })\n\n    it('should not redirect when on home page', () => {\n      ;(usePathname as jest.Mock).mockReturnValue('/')\n      \n      mockAuthStore.user = { id: '123' }\n      mockAuthStore.session = { access_token: 'token' }\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = false\n\n      renderHook(() => useRedirectIfAuthenticated())\n\n      expect(mockPush).not.toHaveBeenCalled()\n    })\n\n    it('should show loading when not hydrated', () => {\n      mockAuthStore.hydrated = false\n\n      const { result } = renderHook(() => useRedirectIfAuthenticated())\n\n      expect(result.current.isLoading).toBe(true)\n      expect(mockPush).not.toHaveBeenCalled()\n    })\n\n    it('should show loading when auth is loading', () => {\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = true\n\n      const { result } = renderHook(() => useRedirectIfAuthenticated())\n\n      expect(result.current.isLoading).toBe(true)\n      expect(mockPush).not.toHaveBeenCalled()\n    })\n\n    it('should not redirect when state is inconsistent', () => {\n      mockAuthStore.user = { id: '123' }\n      mockAuthStore.session = null\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = false\n\n      renderHook(() => useRedirectIfAuthenticated())\n\n      expect(mockPush).not.toHaveBeenCalled()\n    })\n  })\n\n  describe('Error Handling and Edge Cases', () => {\n    it('should handle signOut errors gracefully', async () => {\n      mockAuthStore.user = { id: '123' }\n      mockAuthStore.session = null\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = false\n      mockAuthStore.signOut.mockRejectedValue(new Error('Sign out failed'))\n\n      // Mock console.error to verify error logging (logger uses console.error internally)\n      const consoleSpy = jest.spyOn(console, 'error').mockImplementation()\n\n      Object.defineProperty(window, 'location', {\n        value: { pathname: '/dashboard' },\n        writable: true\n      })\n\n      const { result } = renderHook(() => useAuth())\n\n      await act(async () => {\n        await result.current.fixInconsistentState()\n      })\n\n      // Expect the new logger format\n      expect(consoleSpy).toHaveBeenCalledWith(\n        expect.stringContaining('ERROR [Auth] Error during auth state fix'),\n        expect.objectContaining({ error: 'Sign out failed' })\n      )\n      \n      consoleSpy.mockRestore()\n    })\n\n    it('should handle missing window object gracefully', async () => {\n      mockAuthStore.user = { id: '123' }\n      mockAuthStore.session = null\n      mockAuthStore.hydrated = true\n      mockAuthStore.isLoading = false\n\n      const { result } = renderHook(() => useAuth())\n\n      // Mock the window object to be undefined during the fix\n      const originalWindow = global.window\n      Object.defineProperty(global, 'window', {\n        value: undefined,\n        configurable: true\n      })\n\n      await act(async () => {\n        await result.current.fixInconsistentState()\n      })\n\n      expect(mockAuthStore.signOut).toHaveBeenCalled()\n      expect(mockPush).not.toHaveBeenCalled() // Should not redirect without window\n\n      // Restore window\n      Object.defineProperty(global, 'window', {\n        value: originalWindow,\n        configurable: true\n      })\n    })\n  })\n}) "],"version":3}