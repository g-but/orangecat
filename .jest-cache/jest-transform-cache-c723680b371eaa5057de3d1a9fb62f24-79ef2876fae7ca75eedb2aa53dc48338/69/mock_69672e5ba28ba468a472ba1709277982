e2c9923d80d51dd2e28d422dcc463934
'use client';
"use strict";

/* istanbul ignore next */
function cov_tm2zytqj6() {
  var path = "/home/g/dev/orangecat/src/services/supabase/mock.ts";
  var hash = "624a19d660f57b663f943ebbaba60ec4f4af74f6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/services/supabase/mock.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 42
        }
      },
      "2": {
        start: {
          line: 6,
          column: 33
        },
        end: {
          line: 92,
          column: 1
        }
      },
      "3": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 14,
          column: 5
        }
      },
      "4": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "5": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 91,
          column: 6
        }
      },
      "6": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 72
        }
      },
      "7": {
        start: {
          line: 25,
          column: 45
        },
        end: {
          line: 25,
          column: 70
        }
      },
      "8": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 29,
          column: 18
        }
      },
      "9": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 72
        }
      },
      "10": {
        start: {
          line: 32,
          column: 45
        },
        end: {
          line: 32,
          column: 70
        }
      },
      "11": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 36,
          column: 18
        }
      },
      "12": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 39
        }
      },
      "13": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 64
        }
      },
      "14": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 61
        }
      },
      "15": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 50
        }
      },
      "16": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 51,
          column: 18
        }
      },
      "17": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 49
        }
      },
      "18": {
        start: {
          line: 57,
          column: 26
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "19": {
        start: {
          line: 58,
          column: 34
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "20": {
        start: {
          line: 59,
          column: 40
        },
        end: {
          line: 62,
          column: 17
        }
      },
      "21": {
        start: {
          line: 60,
          column: 41
        },
        end: {
          line: 60,
          column: 68
        }
      },
      "22": {
        start: {
          line: 61,
          column: 39
        },
        end: {
          line: 61,
          column: 64
        }
      },
      "23": {
        start: {
          line: 63,
          column: 35
        },
        end: {
          line: 63,
          column: 60
        }
      },
      "24": {
        start: {
          line: 65,
          column: 31
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "25": {
        start: {
          line: 66,
          column: 31
        },
        end: {
          line: 68,
          column: 17
        }
      },
      "26": {
        start: {
          line: 67,
          column: 41
        },
        end: {
          line: 67,
          column: 68
        }
      },
      "27": {
        start: {
          line: 70,
          column: 31
        },
        end: {
          line: 76,
          column: 13
        }
      },
      "28": {
        start: {
          line: 71,
          column: 40
        },
        end: {
          line: 75,
          column: 17
        }
      },
      "29": {
        start: {
          line: 72,
          column: 35
        },
        end: {
          line: 74,
          column: 21
        }
      },
      "30": {
        start: {
          line: 73,
          column: 45
        },
        end: {
          line: 73,
          column: 72
        }
      },
      "31": {
        start: {
          line: 77,
          column: 27
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "32": {
        start: {
          line: 78,
          column: 40
        },
        end: {
          line: 78,
          column: 67
        }
      },
      "33": {
        start: {
          line: 82,
          column: 31
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "34": {
        start: {
          line: 84,
          column: 20
        },
        end: {
          line: 84,
          column: 59
        }
      },
      "35": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 87,
          column: 77
        }
      },
      "36": {
        start: {
          line: 93,
          column: 0
        },
        end: {
          line: 93,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 34
          }
        },
        loc: {
          start: {
            line: 6,
            column: 39
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 20
          },
          end: {
            line: 24,
            column: 21
          }
        },
        loc: {
          start: {
            line: 24,
            column: 43
          },
          end: {
            line: 30,
            column: 13
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 34
          },
          end: {
            line: 25,
            column: 35
          }
        },
        loc: {
          start: {
            line: 25,
            column: 45
          },
          end: {
            line: 25,
            column: 70
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 20
          },
          end: {
            line: 31,
            column: 21
          }
        },
        loc: {
          start: {
            line: 31,
            column: 43
          },
          end: {
            line: 37,
            column: 13
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 32,
            column: 34
          },
          end: {
            line: 32,
            column: 35
          }
        },
        loc: {
          start: {
            line: 32,
            column: 45
          },
          end: {
            line: 32,
            column: 70
          }
        },
        line: 32
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 38,
            column: 21
          },
          end: {
            line: 38,
            column: 22
          }
        },
        loc: {
          start: {
            line: 38,
            column: 33
          },
          end: {
            line: 40,
            column: 13
          }
        },
        line: 38
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 41,
            column: 25
          }
        },
        loc: {
          start: {
            line: 41,
            column: 36
          },
          end: {
            line: 43,
            column: 13
          }
        },
        line: 41
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 44,
            column: 21
          },
          end: {
            line: 44,
            column: 22
          }
        },
        loc: {
          start: {
            line: 44,
            column: 33
          },
          end: {
            line: 46,
            column: 13
          }
        },
        line: 44
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 47,
            column: 31
          },
          end: {
            line: 47,
            column: 32
          }
        },
        loc: {
          start: {
            line: 47,
            column: 45
          },
          end: {
            line: 52,
            column: 13
          }
        },
        line: 47
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 50,
            column: 57
          },
          end: {
            line: 50,
            column: 58
          }
        },
        loc: {
          start: {
            line: 50,
            column: 63
          },
          end: {
            line: 50,
            column: 66
          }
        },
        line: 50
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 53,
            column: 35
          },
          end: {
            line: 53,
            column: 36
          }
        },
        loc: {
          start: {
            line: 53,
            column: 52
          },
          end: {
            line: 55,
            column: 13
          }
        },
        line: 53
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 57,
            column: 14
          },
          end: {
            line: 57,
            column: 15
          }
        },
        loc: {
          start: {
            line: 57,
            column: 26
          },
          end: {
            line: 80,
            column: 9
          }
        },
        line: 57
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 58,
            column: 21
          }
        },
        loc: {
          start: {
            line: 58,
            column: 34
          },
          end: {
            line: 64,
            column: 13
          }
        },
        line: 58
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 59,
            column: 21
          }
        },
        loc: {
          start: {
            line: 59,
            column: 40
          },
          end: {
            line: 62,
            column: 17
          }
        },
        line: 59
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 60,
            column: 28
          },
          end: {
            line: 60,
            column: 29
          }
        },
        loc: {
          start: {
            line: 60,
            column: 41
          },
          end: {
            line: 60,
            column: 68
          }
        },
        line: 60
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 61,
            column: 27
          },
          end: {
            line: 61,
            column: 28
          }
        },
        loc: {
          start: {
            line: 61,
            column: 39
          },
          end: {
            line: 61,
            column: 64
          }
        },
        line: 61
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 63,
            column: 23
          },
          end: {
            line: 63,
            column: 24
          }
        },
        loc: {
          start: {
            line: 63,
            column: 35
          },
          end: {
            line: 63,
            column: 60
          }
        },
        line: 63
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 65,
            column: 20
          },
          end: {
            line: 65,
            column: 21
          }
        },
        loc: {
          start: {
            line: 65,
            column: 31
          },
          end: {
            line: 69,
            column: 13
          }
        },
        line: 65
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 66,
            column: 24
          },
          end: {
            line: 66,
            column: 25
          }
        },
        loc: {
          start: {
            line: 66,
            column: 31
          },
          end: {
            line: 68,
            column: 17
          }
        },
        line: 66
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 67,
            column: 28
          },
          end: {
            line: 67,
            column: 29
          }
        },
        loc: {
          start: {
            line: 67,
            column: 41
          },
          end: {
            line: 67,
            column: 68
          }
        },
        line: 67
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 70,
            column: 20
          },
          end: {
            line: 70,
            column: 21
          }
        },
        loc: {
          start: {
            line: 70,
            column: 31
          },
          end: {
            line: 76,
            column: 13
          }
        },
        line: 70
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 71,
            column: 20
          },
          end: {
            line: 71,
            column: 21
          }
        },
        loc: {
          start: {
            line: 71,
            column: 40
          },
          end: {
            line: 75,
            column: 17
          }
        },
        line: 71
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 72,
            column: 28
          },
          end: {
            line: 72,
            column: 29
          }
        },
        loc: {
          start: {
            line: 72,
            column: 35
          },
          end: {
            line: 74,
            column: 21
          }
        },
        line: 72
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 73,
            column: 32
          },
          end: {
            line: 73,
            column: 33
          }
        },
        loc: {
          start: {
            line: 73,
            column: 45
          },
          end: {
            line: 73,
            column: 72
          }
        },
        line: 73
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 77,
            column: 20
          },
          end: {
            line: 77,
            column: 21
          }
        },
        loc: {
          start: {
            line: 77,
            column: 27
          },
          end: {
            line: 79,
            column: 13
          }
        },
        line: 77
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 78,
            column: 20
          },
          end: {
            line: 78,
            column: 21
          }
        },
        loc: {
          start: {
            line: 78,
            column: 40
          },
          end: {
            line: 78,
            column: 67
          }
        },
        line: 78
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 82,
            column: 18
          },
          end: {
            line: 82,
            column: 19
          }
        },
        loc: {
          start: {
            line: 82,
            column: 31
          },
          end: {
            line: 89,
            column: 13
          }
        },
        line: 82
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 83,
            column: 24
          },
          end: {
            line: 83,
            column: 25
          }
        },
        loc: {
          start: {
            line: 83,
            column: 46
          },
          end: {
            line: 85,
            column: 17
          }
        },
        line: 83
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 86,
            column: 30
          },
          end: {
            line: 86,
            column: 31
          }
        },
        loc: {
          start: {
            line: 86,
            column: 40
          },
          end: {
            line: 88,
            column: 17
          }
        },
        line: 86
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    b: {},
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/services/supabase/mock.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/services/supabase/mock.ts"],
      sourcesContent: ["'use client'\n\n// Mock Supabase client for local development when external instance is unavailable\nexport const createMockSupabaseClient = () => {\n  const mockUser = {\n    id: 'mock-user-id',\n    email: 'test@example.com',\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString(),\n    aud: 'authenticated',\n    role: 'authenticated'\n  }\n\n  const mockSession = {\n    access_token: 'mock-access-token',\n    refresh_token: 'mock-refresh-token',\n    expires_in: 3600,\n    token_type: 'bearer',\n    user: mockUser\n  }\n\n  return {\n    auth: {\n      signIn: async (credentials: any) => {\n        await new Promise(resolve => setTimeout(resolve, 1000)) // Simulate network delay\n        return {\n          data: { user: mockUser, session: mockSession },\n          error: null\n        }\n      },\n      signUp: async (credentials: any) => {\n        await new Promise(resolve => setTimeout(resolve, 1000))\n        return {\n          data: { user: mockUser, session: null },\n          error: null\n        }\n      },\n      signOut: async () => {\n        return { error: null }\n      },\n      getSession: async () => {\n        return { data: { session: null }, error: null }\n      },\n      getUser: async () => {\n        return { data: { user: null }, error: null }\n      },\n      onAuthStateChange: (callback: any) => {\n        callback('INITIAL_SESSION', null)\n        return {\n          data: { subscription: { unsubscribe: () => {} } }\n        }\n      },\n      resetPasswordForEmail: async (email: string) => {\n        return { data: {}, error: null }\n      }\n    },\n    from: (table: string) => ({\n      select: (columns?: string) => ({\n        eq: (column: string, value: any) => ({\n          single: async () => ({ data: null, error: null }),\n          limit: (count: number) => ({ data: [], error: null })\n        }),\n        limit: (count: number) => ({ data: [], error: null })\n      }),\n      insert: (data: any) => ({\n        select: () => ({\n          single: async () => ({ data: null, error: null })\n        })\n      }),\n      update: (data: any) => ({\n        eq: (column: string, value: any) => ({\n          select: () => ({\n            single: async () => ({ data: null, error: null })\n          })\n        })\n      }),\n      delete: () => ({\n        eq: (column: string, value: any) => ({ data: null, error: null })\n      })\n    }),\n    storage: {\n      from: (bucket: string) => ({\n        upload: async (path: string, file: any) => {\n          return { data: { path }, error: null }\n        },\n        getPublicUrl: (path: string) => {\n          return { data: { publicUrl: `mock://storage/${path}` } }\n        }\n      })\n    }\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "624a19d660f57b663f943ebbaba60ec4f4af74f6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_tm2zytqj6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_tm2zytqj6();
cov_tm2zytqj6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_tm2zytqj6().s[1]++;
exports.createMockSupabaseClient = void 0;
// Mock Supabase client for local development when external instance is unavailable
/* istanbul ignore next */
cov_tm2zytqj6().s[2]++;
const createMockSupabaseClient = () => {
  /* istanbul ignore next */
  cov_tm2zytqj6().f[0]++;
  const mockUser =
  /* istanbul ignore next */
  (cov_tm2zytqj6().s[3]++, {
    id: 'mock-user-id',
    email: 'test@example.com',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    aud: 'authenticated',
    role: 'authenticated'
  });
  const mockSession =
  /* istanbul ignore next */
  (cov_tm2zytqj6().s[4]++, {
    access_token: 'mock-access-token',
    refresh_token: 'mock-refresh-token',
    expires_in: 3600,
    token_type: 'bearer',
    user: mockUser
  });
  /* istanbul ignore next */
  cov_tm2zytqj6().s[5]++;
  return {
    auth: {
      signIn: async credentials => {
        /* istanbul ignore next */
        cov_tm2zytqj6().f[1]++;
        cov_tm2zytqj6().s[6]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_tm2zytqj6().f[2]++;
          cov_tm2zytqj6().s[7]++;
          return setTimeout(resolve, 1000);
        }); // Simulate network delay
        /* istanbul ignore next */
        cov_tm2zytqj6().s[8]++;
        return {
          data: {
            user: mockUser,
            session: mockSession
          },
          error: null
        };
      },
      signUp: async credentials => {
        /* istanbul ignore next */
        cov_tm2zytqj6().f[3]++;
        cov_tm2zytqj6().s[9]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_tm2zytqj6().f[4]++;
          cov_tm2zytqj6().s[10]++;
          return setTimeout(resolve, 1000);
        });
        /* istanbul ignore next */
        cov_tm2zytqj6().s[11]++;
        return {
          data: {
            user: mockUser,
            session: null
          },
          error: null
        };
      },
      signOut: async () => {
        /* istanbul ignore next */
        cov_tm2zytqj6().f[5]++;
        cov_tm2zytqj6().s[12]++;
        return {
          error: null
        };
      },
      getSession: async () => {
        /* istanbul ignore next */
        cov_tm2zytqj6().f[6]++;
        cov_tm2zytqj6().s[13]++;
        return {
          data: {
            session: null
          },
          error: null
        };
      },
      getUser: async () => {
        /* istanbul ignore next */
        cov_tm2zytqj6().f[7]++;
        cov_tm2zytqj6().s[14]++;
        return {
          data: {
            user: null
          },
          error: null
        };
      },
      onAuthStateChange: callback => {
        /* istanbul ignore next */
        cov_tm2zytqj6().f[8]++;
        cov_tm2zytqj6().s[15]++;
        callback('INITIAL_SESSION', null);
        /* istanbul ignore next */
        cov_tm2zytqj6().s[16]++;
        return {
          data: {
            subscription: {
              unsubscribe: () => {
                /* istanbul ignore next */
                cov_tm2zytqj6().f[9]++;
              }
            }
          }
        };
      },
      resetPasswordForEmail: async email => {
        /* istanbul ignore next */
        cov_tm2zytqj6().f[10]++;
        cov_tm2zytqj6().s[17]++;
        return {
          data: {},
          error: null
        };
      }
    },
    from: table => {
      /* istanbul ignore next */
      cov_tm2zytqj6().f[11]++;
      cov_tm2zytqj6().s[18]++;
      return {
        select: columns => {
          /* istanbul ignore next */
          cov_tm2zytqj6().f[12]++;
          cov_tm2zytqj6().s[19]++;
          return {
            eq: (column, value) => {
              /* istanbul ignore next */
              cov_tm2zytqj6().f[13]++;
              cov_tm2zytqj6().s[20]++;
              return {
                single: async () => {
                  /* istanbul ignore next */
                  cov_tm2zytqj6().f[14]++;
                  cov_tm2zytqj6().s[21]++;
                  return {
                    data: null,
                    error: null
                  };
                },
                limit: count => {
                  /* istanbul ignore next */
                  cov_tm2zytqj6().f[15]++;
                  cov_tm2zytqj6().s[22]++;
                  return {
                    data: [],
                    error: null
                  };
                }
              };
            },
            limit: count => {
              /* istanbul ignore next */
              cov_tm2zytqj6().f[16]++;
              cov_tm2zytqj6().s[23]++;
              return {
                data: [],
                error: null
              };
            }
          };
        },
        insert: data => {
          /* istanbul ignore next */
          cov_tm2zytqj6().f[17]++;
          cov_tm2zytqj6().s[24]++;
          return {
            select: () => {
              /* istanbul ignore next */
              cov_tm2zytqj6().f[18]++;
              cov_tm2zytqj6().s[25]++;
              return {
                single: async () => {
                  /* istanbul ignore next */
                  cov_tm2zytqj6().f[19]++;
                  cov_tm2zytqj6().s[26]++;
                  return {
                    data: null,
                    error: null
                  };
                }
              };
            }
          };
        },
        update: data => {
          /* istanbul ignore next */
          cov_tm2zytqj6().f[20]++;
          cov_tm2zytqj6().s[27]++;
          return {
            eq: (column, value) => {
              /* istanbul ignore next */
              cov_tm2zytqj6().f[21]++;
              cov_tm2zytqj6().s[28]++;
              return {
                select: () => {
                  /* istanbul ignore next */
                  cov_tm2zytqj6().f[22]++;
                  cov_tm2zytqj6().s[29]++;
                  return {
                    single: async () => {
                      /* istanbul ignore next */
                      cov_tm2zytqj6().f[23]++;
                      cov_tm2zytqj6().s[30]++;
                      return {
                        data: null,
                        error: null
                      };
                    }
                  };
                }
              };
            }
          };
        },
        delete: () => {
          /* istanbul ignore next */
          cov_tm2zytqj6().f[24]++;
          cov_tm2zytqj6().s[31]++;
          return {
            eq: (column, value) => {
              /* istanbul ignore next */
              cov_tm2zytqj6().f[25]++;
              cov_tm2zytqj6().s[32]++;
              return {
                data: null,
                error: null
              };
            }
          };
        }
      };
    },
    storage: {
      from: bucket => {
        /* istanbul ignore next */
        cov_tm2zytqj6().f[26]++;
        cov_tm2zytqj6().s[33]++;
        return {
          upload: async (path, file) => {
            /* istanbul ignore next */
            cov_tm2zytqj6().f[27]++;
            cov_tm2zytqj6().s[34]++;
            return {
              data: {
                path
              },
              error: null
            };
          },
          getPublicUrl: path => {
            /* istanbul ignore next */
            cov_tm2zytqj6().f[28]++;
            cov_tm2zytqj6().s[35]++;
            return {
              data: {
                publicUrl: `mock://storage/${path}`
              }
            };
          }
        };
      }
    }
  };
};
/* istanbul ignore next */
cov_tm2zytqj6().s[36]++;
exports.createMockSupabaseClient = createMockSupabaseClient;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,