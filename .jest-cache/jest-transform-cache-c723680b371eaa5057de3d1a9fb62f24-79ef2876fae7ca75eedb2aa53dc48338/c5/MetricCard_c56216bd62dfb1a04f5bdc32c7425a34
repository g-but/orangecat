9715330724245d4cf1122351ef286d21
'use client';
"use strict";

/* istanbul ignore next */
function cov_2dnnbslnib() {
  var path = "/home/g/dev/orangecat/src/components/dashboard/MetricCard.tsx";
  var hash = "8e98f94457daa095f02200afb2e83a25017aaeff";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/components/dashboard/MetricCard.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 32
        }
      },
      "3": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 50
        }
      },
      "4": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 46
        }
      },
      "5": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 46
        }
      },
      "6": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "7": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "8": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 97
        }
      },
      "9": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 94
        }
      },
      "10": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 97
        }
      },
      "11": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 28
        }
      },
      "12": {
        start: {
          line: 22,
          column: 31
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "13": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "14": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 40
        }
      },
      "15": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 41
        }
      },
      "16": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 38
        }
      },
      "17": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 39
        }
      },
      "18": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "19": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 36,
          column: 55
        }
      },
      "20": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 55
        }
      },
      "21": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 38,
          column: 49
        }
      },
      "22": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 49
        }
      },
      "23": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 42
        }
      },
      "24": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 2836
        }
      },
      "25": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 389
        }
      },
      "26": {
        start: {
          line: 44,
          column: 175
        },
        end: {
          line: 44,
          column: 382
        }
      }
    },
    fnMap: {
      "0": {
        name: "MetricCard",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 19
          }
        },
        loc: {
          start: {
            line: 9,
            column: 116
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 26
          },
          end: {
            line: 10,
            column: 27
          }
        },
        loc: {
          start: {
            line: 10,
            column: 32
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 31
          },
          end: {
            line: 22,
            column: 32
          }
        },
        loc: {
          start: {
            line: 22,
            column: 37
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 27
          },
          end: {
            line: 34,
            column: 28
          }
        },
        loc: {
          start: {
            line: 34,
            column: 33
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 34
      },
      "4": {
        name: "MetricGrid",
        decl: {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 43,
            column: 19
          }
        },
        loc: {
          start: {
            line: 43,
            column: 68
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 43
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 44,
            column: 155
          },
          end: {
            line: 44,
            column: 156
          }
        },
        loc: {
          start: {
            line: 44,
            column: 175
          },
          end: {
            line: 44,
            column: 382
          }
        },
        line: 44
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 70
          },
          end: {
            line: 9,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 82
          },
          end: {
            line: 9,
            column: 84
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 95
          },
          end: {
            line: 9,
            column: 112
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 107
          },
          end: {
            line: 9,
            column: 112
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 13,
            column: 97
          }
        }, {
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 15,
            column: 94
          }
        }, {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 17,
            column: 97
          }
        }, {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 19,
            column: 28
          }
        }],
        line: 11
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 25,
            column: 40
          }
        }, {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 27,
            column: 41
          }
        }, {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 29,
            column: 38
          }
        }, {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 31,
            column: 39
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 36,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 36,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 38,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 38,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 128
          },
          end: {
            line: 41,
            column: 194
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 138
          },
          end: {
            line: 41,
            column: 189
          }
        }, {
          start: {
            line: 41,
            column: 192
          },
          end: {
            line: 41,
            column: 194
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 581
          },
          end: {
            line: 41,
            column: 769
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 594
          },
          end: {
            line: 41,
            column: 695
          }
        }, {
          start: {
            line: 41,
            column: 700
          },
          end: {
            line: 41,
            column: 768
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 41,
            column: 870
          },
          end: {
            line: 41,
            column: 1220
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 870
          },
          end: {
            line: 41,
            column: 883
          }
        }, {
          start: {
            line: 41,
            column: 888
          },
          end: {
            line: 41,
            column: 1219
          }
        }],
        line: 41
      },
      "9": {
        loc: {
          start: {
            line: 41,
            column: 1222
          },
          end: {
            line: 41,
            column: 1594
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 1222
          },
          end: {
            line: 41,
            column: 1249
          }
        }, {
          start: {
            line: 41,
            column: 1253
          },
          end: {
            line: 41,
            column: 1267
          }
        }, {
          start: {
            line: 41,
            column: 1272
          },
          end: {
            line: 41,
            column: 1593
          }
        }],
        line: 41
      },
      "10": {
        loc: {
          start: {
            line: 41,
            column: 2013
          },
          end: {
            line: 41,
            column: 2064
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 2029
          },
          end: {
            line: 41,
            column: 2046
          }
        }, {
          start: {
            line: 41,
            column: 2049
          },
          end: {
            line: 41,
            column: 2064
          }
        }],
        line: 41
      },
      "11": {
        loc: {
          start: {
            line: 41,
            column: 2078
          },
          end: {
            line: 41,
            column: 2110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 2090
          },
          end: {
            line: 41,
            column: 2095
          }
        }, {
          start: {
            line: 41,
            column: 2098
          },
          end: {
            line: 41,
            column: 2110
          }
        }],
        line: 41
      },
      "12": {
        loc: {
          start: {
            line: 41,
            column: 2115
          },
          end: {
            line: 41,
            column: 2284
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 2115
          },
          end: {
            line: 41,
            column: 2123
          }
        }, {
          start: {
            line: 41,
            column: 2128
          },
          end: {
            line: 41,
            column: 2283
          }
        }],
        line: 41
      },
      "13": {
        loc: {
          start: {
            line: 41,
            column: 2207
          },
          end: {
            line: 41,
            column: 2258
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 2223
          },
          end: {
            line: 41,
            column: 2240
          }
        }, {
          start: {
            line: 41,
            column: 2243
          },
          end: {
            line: 41,
            column: 2258
          }
        }],
        line: 41
      },
      "14": {
        loc: {
          start: {
            line: 41,
            column: 2426
          },
          end: {
            line: 41,
            column: 2827
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 2426
          },
          end: {
            line: 41,
            column: 2439
          }
        }, {
          start: {
            line: 41,
            column: 2444
          },
          end: {
            line: 41,
            column: 2826
          }
        }],
        line: 41
      },
      "15": {
        loc: {
          start: {
            line: 43,
            column: 31
          },
          end: {
            line: 43,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 43,
            column: 43
          },
          end: {
            line: 43,
            column: 48
          }
        }],
        line: 43
      },
      "16": {
        loc: {
          start: {
            line: 43,
            column: 50
          },
          end: {
            line: 43,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 43,
            column: 62
          },
          end: {
            line: 43,
            column: 64
          }
        }],
        line: 43
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0, 0, 0],
      "3": [0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/components/dashboard/MetricCard.tsx",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/components/dashboard/MetricCard.tsx"],
      sourcesContent: ["'use client'\n\nimport { LucideIcon, AlertTriangle, Database, Globe, TestTube, RefreshCw } from 'lucide-react'\nimport { Card, CardContent } from '@/components/ui/Card'\nimport { MetricValue } from '@/services/analytics'\n\ninterface MetricCardProps {\n  icon: LucideIcon\n  iconColor: string\n  label: string\n  metric: MetricValue\n  subtitle?: string\n  className?: string\n  onClick?: () => void\n  isLoading?: boolean\n}\n\nexport function MetricCard({\n  icon: Icon,\n  iconColor,\n  label,\n  metric,\n  subtitle,\n  className = '',\n  onClick,\n  isLoading = false\n}: MetricCardProps) {\n  const getSourceIcon = () => {\n    switch (metric.source) {\n      case 'database':\n        return <Database className=\"w-3 h-3\" />\n      case 'api':\n        return <Globe className=\"w-3 h-3\" />\n      case 'demo':\n        return <TestTube className=\"w-3 h-3\" />\n      default:\n        return null\n    }\n  }\n\n  const getConfidenceColor = () => {\n    switch (metric.confidence) {\n      case 'high':\n        return 'text-green-600'\n      case 'medium':\n        return 'text-yellow-600'\n      case 'low':\n        return 'text-red-600'\n      default:\n        return 'text-gray-600'\n    }\n  }\n\n  const getBorderColor = () => {\n    if (metric.isDemo) return 'border-orange-200 bg-orange-50/50'\n    if (metric.confidence === 'low') return 'border-red-200 bg-red-50/50'\n    return 'border-gray-200 bg-white'\n  }\n\n  return (\n    <Card \n      className={`${getBorderColor()} transition-all duration-200 hover:shadow-md ${\n        onClick ? 'cursor-pointer hover:scale-105 touch-manipulation' : ''\n      } ${className}`}\n      onClick={onClick}\n    >\n      <CardContent className=\"p-4 sm:p-6\">\n        <div className=\"flex items-center justify-between mb-3 sm:mb-4\">\n          <div className={`w-10 h-10 sm:w-12 sm:h-12 rounded-full flex items-center justify-center ${iconColor} flex-shrink-0`}>\n            {isLoading ? (\n              <RefreshCw className=\"w-5 h-5 sm:w-6 sm:h-6 animate-spin\" />\n            ) : (\n              <Icon className=\"w-5 h-5 sm:w-6 sm:h-6\" />\n            )}\n          </div>\n          \n          {/* Data source and confidence indicators */}\n          <div className=\"flex items-center gap-1 sm:gap-2 ml-2\">\n            {metric.isDemo && (\n              <div className=\"flex items-center gap-1 px-2 py-1 bg-orange-100 text-orange-700 rounded-full text-xs font-medium\">\n                <TestTube className=\"w-3 h-3 flex-shrink-0\" />\n                <span className=\"hidden sm:inline\">Demo</span>\n              </div>\n            )}\n            \n            {metric.confidence === 'low' && !metric.isDemo && (\n              <div className=\"flex items-center gap-1 px-2 py-1 bg-red-100 text-red-700 rounded-full text-xs\">\n                <AlertTriangle className=\"w-3 h-3 flex-shrink-0\" />\n                <span className=\"hidden sm:inline\">Limited</span>\n              </div>\n            )}\n            \n            <div className={`flex items-center gap-1 text-xs ${getConfidenceColor()}`}>\n              {getSourceIcon()}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"space-y-2\">\n          <p className=\"text-sm sm:text-base font-medium text-gray-600\">{label}</p>\n          \n          <p className={`text-xl sm:text-2xl lg:text-3xl font-bold break-words ${\n            metric.isDemo ? 'text-orange-900' : 'text-gray-900'\n          }`}>\n            {isLoading ? '...' : metric.value}\n          </p>\n          \n          {subtitle && (\n            <p className={`text-xs sm:text-sm leading-relaxed ${\n              metric.isDemo ? 'text-orange-600' : 'text-gray-500'\n            }`}>\n              {subtitle}\n            </p>\n          )}\n          \n          {/* Last updated info */}\n          <p className=\"text-xs text-gray-400\">\n            Updated: {metric.lastUpdated.toLocaleTimeString()}\n          </p>\n        </div>\n\n        {/* Demo data disclaimer */}\n        {metric.isDemo && (\n          <div className=\"mt-3 sm:mt-4 p-3 bg-orange-100 border border-orange-200 rounded-lg\">\n            <p className=\"text-xs sm:text-sm text-orange-700 leading-relaxed\">\n              <strong>Preview Data:</strong> This shows sample data for upcoming features. \n              Real functionality coming soon!\n            </p>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n\n// Grid component for displaying multiple metrics\ninterface MetricGridProps {\n  metrics: Array<{\n    icon: LucideIcon\n    iconColor: string\n    label: string\n    metric: MetricValue\n    subtitle?: string\n  }>\n  isLoading?: boolean\n  className?: string\n}\n\nexport function MetricGrid({ metrics, isLoading = false, className = '' }: MetricGridProps) {\n  return (\n    <div className={`grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 sm:gap-6 ${className}`}>\n      {metrics.map((metric, index) => (\n        <MetricCard\n          key={`${metric.label}-${index}`}\n          icon={metric.icon}\n          iconColor={metric.iconColor}\n          label={metric.label}\n          metric={metric.metric}\n          subtitle={metric.subtitle}\n          isLoading={isLoading}\n        />\n      ))}\n    </div>\n  )\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8e98f94457daa095f02200afb2e83a25017aaeff"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2dnnbslnib = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2dnnbslnib();
cov_2dnnbslnib().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2dnnbslnib().s[1]++;
exports.MetricCard = MetricCard;
/* istanbul ignore next */
cov_2dnnbslnib().s[2]++;
exports.MetricGrid = MetricGrid;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_2dnnbslnib().s[3]++, require("react/jsx-runtime"));
const lucide_react_1 =
/* istanbul ignore next */
(cov_2dnnbslnib().s[4]++, require("lucide-react"));
const Card_1 =
/* istanbul ignore next */
(cov_2dnnbslnib().s[5]++, require("@/components/ui/Card"));
function MetricCard({
  icon: Icon,
  iconColor,
  label,
  metric,
  subtitle,
  className =
  /* istanbul ignore next */
  (cov_2dnnbslnib().b[0][0]++, ''),
  onClick,
  isLoading =
  /* istanbul ignore next */
  (cov_2dnnbslnib().b[1][0]++, false)
}) {
  /* istanbul ignore next */
  cov_2dnnbslnib().f[0]++;
  cov_2dnnbslnib().s[6]++;
  const getSourceIcon = () => {
    /* istanbul ignore next */
    cov_2dnnbslnib().f[1]++;
    cov_2dnnbslnib().s[7]++;
    switch (metric.source) {
      case 'database':
        /* istanbul ignore next */
        cov_2dnnbslnib().b[2][0]++;
        cov_2dnnbslnib().s[8]++;
        return (0, jsx_runtime_1.jsx)(lucide_react_1.Database, {
          className: "w-3 h-3"
        });
      case 'api':
        /* istanbul ignore next */
        cov_2dnnbslnib().b[2][1]++;
        cov_2dnnbslnib().s[9]++;
        return (0, jsx_runtime_1.jsx)(lucide_react_1.Globe, {
          className: "w-3 h-3"
        });
      case 'demo':
        /* istanbul ignore next */
        cov_2dnnbslnib().b[2][2]++;
        cov_2dnnbslnib().s[10]++;
        return (0, jsx_runtime_1.jsx)(lucide_react_1.TestTube, {
          className: "w-3 h-3"
        });
      default:
        /* istanbul ignore next */
        cov_2dnnbslnib().b[2][3]++;
        cov_2dnnbslnib().s[11]++;
        return null;
    }
  };
  /* istanbul ignore next */
  cov_2dnnbslnib().s[12]++;
  const getConfidenceColor = () => {
    /* istanbul ignore next */
    cov_2dnnbslnib().f[2]++;
    cov_2dnnbslnib().s[13]++;
    switch (metric.confidence) {
      case 'high':
        /* istanbul ignore next */
        cov_2dnnbslnib().b[3][0]++;
        cov_2dnnbslnib().s[14]++;
        return 'text-green-600';
      case 'medium':
        /* istanbul ignore next */
        cov_2dnnbslnib().b[3][1]++;
        cov_2dnnbslnib().s[15]++;
        return 'text-yellow-600';
      case 'low':
        /* istanbul ignore next */
        cov_2dnnbslnib().b[3][2]++;
        cov_2dnnbslnib().s[16]++;
        return 'text-red-600';
      default:
        /* istanbul ignore next */
        cov_2dnnbslnib().b[3][3]++;
        cov_2dnnbslnib().s[17]++;
        return 'text-gray-600';
    }
  };
  /* istanbul ignore next */
  cov_2dnnbslnib().s[18]++;
  const getBorderColor = () => {
    /* istanbul ignore next */
    cov_2dnnbslnib().f[3]++;
    cov_2dnnbslnib().s[19]++;
    if (metric.isDemo) {
      /* istanbul ignore next */
      cov_2dnnbslnib().b[4][0]++;
      cov_2dnnbslnib().s[20]++;
      return 'border-orange-200 bg-orange-50/50';
    } else
    /* istanbul ignore next */
    {
      cov_2dnnbslnib().b[4][1]++;
    }
    cov_2dnnbslnib().s[21]++;
    if (metric.confidence === 'low') {
      /* istanbul ignore next */
      cov_2dnnbslnib().b[5][0]++;
      cov_2dnnbslnib().s[22]++;
      return 'border-red-200 bg-red-50/50';
    } else
    /* istanbul ignore next */
    {
      cov_2dnnbslnib().b[5][1]++;
    }
    cov_2dnnbslnib().s[23]++;
    return 'border-gray-200 bg-white';
  };
  /* istanbul ignore next */
  cov_2dnnbslnib().s[24]++;
  return (0, jsx_runtime_1.jsx)(Card_1.Card, {
    className: `${getBorderColor()} transition-all duration-200 hover:shadow-md ${onClick ?
    /* istanbul ignore next */
    (cov_2dnnbslnib().b[6][0]++, 'cursor-pointer hover:scale-105 touch-manipulation') :
    /* istanbul ignore next */
    (cov_2dnnbslnib().b[6][1]++, '')} ${className}`,
    onClick: onClick,
    children: (0, jsx_runtime_1.jsxs)(Card_1.CardContent, {
      className: "p-4 sm:p-6",
      children: [(0, jsx_runtime_1.jsxs)("div", {
        className: "flex items-center justify-between mb-3 sm:mb-4",
        children: [(0, jsx_runtime_1.jsx)("div", {
          className: `w-10 h-10 sm:w-12 sm:h-12 rounded-full flex items-center justify-center ${iconColor} flex-shrink-0`,
          children: isLoading ?
          /* istanbul ignore next */
          (cov_2dnnbslnib().b[7][0]++, (0, jsx_runtime_1.jsx)(lucide_react_1.RefreshCw, {
            className: "w-5 h-5 sm:w-6 sm:h-6 animate-spin"
          })) :
          /* istanbul ignore next */
          (cov_2dnnbslnib().b[7][1]++, (0, jsx_runtime_1.jsx)(Icon, {
            className: "w-5 h-5 sm:w-6 sm:h-6"
          }))
        }), (0, jsx_runtime_1.jsxs)("div", {
          className: "flex items-center gap-1 sm:gap-2 ml-2",
          children: [
          /* istanbul ignore next */
          (cov_2dnnbslnib().b[8][0]++, metric.isDemo) &&
          /* istanbul ignore next */
          (cov_2dnnbslnib().b[8][1]++, (0, jsx_runtime_1.jsxs)("div", {
            className: "flex items-center gap-1 px-2 py-1 bg-orange-100 text-orange-700 rounded-full text-xs font-medium",
            children: [(0, jsx_runtime_1.jsx)(lucide_react_1.TestTube, {
              className: "w-3 h-3 flex-shrink-0"
            }), (0, jsx_runtime_1.jsx)("span", {
              className: "hidden sm:inline",
              children: "Demo"
            })]
          })),
          /* istanbul ignore next */
          (cov_2dnnbslnib().b[9][0]++, metric.confidence === 'low') &&
          /* istanbul ignore next */
          (cov_2dnnbslnib().b[9][1]++, !metric.isDemo) &&
          /* istanbul ignore next */
          (cov_2dnnbslnib().b[9][2]++, (0, jsx_runtime_1.jsxs)("div", {
            className: "flex items-center gap-1 px-2 py-1 bg-red-100 text-red-700 rounded-full text-xs",
            children: [(0, jsx_runtime_1.jsx)(lucide_react_1.AlertTriangle, {
              className: "w-3 h-3 flex-shrink-0"
            }), (0, jsx_runtime_1.jsx)("span", {
              className: "hidden sm:inline",
              children: "Limited"
            })]
          })), (0, jsx_runtime_1.jsx)("div", {
            className: `flex items-center gap-1 text-xs ${getConfidenceColor()}`,
            children: getSourceIcon()
          })]
        })]
      }), (0, jsx_runtime_1.jsxs)("div", {
        className: "space-y-2",
        children: [(0, jsx_runtime_1.jsx)("p", {
          className: "text-sm sm:text-base font-medium text-gray-600",
          children: label
        }), (0, jsx_runtime_1.jsx)("p", {
          className: `text-xl sm:text-2xl lg:text-3xl font-bold break-words ${metric.isDemo ?
          /* istanbul ignore next */
          (cov_2dnnbslnib().b[10][0]++, 'text-orange-900') :
          /* istanbul ignore next */
          (cov_2dnnbslnib().b[10][1]++, 'text-gray-900')}`,
          children: isLoading ?
          /* istanbul ignore next */
          (cov_2dnnbslnib().b[11][0]++, '...') :
          /* istanbul ignore next */
          (cov_2dnnbslnib().b[11][1]++, metric.value)
        }),
        /* istanbul ignore next */
        (cov_2dnnbslnib().b[12][0]++, subtitle) &&
        /* istanbul ignore next */
        (cov_2dnnbslnib().b[12][1]++, (0, jsx_runtime_1.jsx)("p", {
          className: `text-xs sm:text-sm leading-relaxed ${metric.isDemo ?
          /* istanbul ignore next */
          (cov_2dnnbslnib().b[13][0]++, 'text-orange-600') :
          /* istanbul ignore next */
          (cov_2dnnbslnib().b[13][1]++, 'text-gray-500')}`,
          children: subtitle
        })), (0, jsx_runtime_1.jsxs)("p", {
          className: "text-xs text-gray-400",
          children: ["Updated: ", metric.lastUpdated.toLocaleTimeString()]
        })]
      }),
      /* istanbul ignore next */
      (cov_2dnnbslnib().b[14][0]++, metric.isDemo) &&
      /* istanbul ignore next */
      (cov_2dnnbslnib().b[14][1]++, (0, jsx_runtime_1.jsx)("div", {
        className: "mt-3 sm:mt-4 p-3 bg-orange-100 border border-orange-200 rounded-lg",
        children: (0, jsx_runtime_1.jsxs)("p", {
          className: "text-xs sm:text-sm text-orange-700 leading-relaxed",
          children: [(0, jsx_runtime_1.jsx)("strong", {
            children: "Preview Data:"
          }), " This shows sample data for upcoming features. Real functionality coming soon!"]
        })
      }))]
    })
  });
}
function MetricGrid({
  metrics,
  isLoading =
  /* istanbul ignore next */
  (cov_2dnnbslnib().b[15][0]++, false),
  className =
  /* istanbul ignore next */
  (cov_2dnnbslnib().b[16][0]++, '')
}) {
  /* istanbul ignore next */
  cov_2dnnbslnib().f[4]++;
  cov_2dnnbslnib().s[25]++;
  return (0, jsx_runtime_1.jsx)("div", {
    className: `grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 sm:gap-6 ${className}`,
    children: metrics.map((metric, index) => {
      /* istanbul ignore next */
      cov_2dnnbslnib().f[5]++;
      cov_2dnnbslnib().s[26]++;
      return (0, jsx_runtime_1.jsx)(MetricCard, {
        icon: metric.icon,
        iconColor: metric.iconColor,
        label: metric.label,
        metric: metric.metric,
        subtitle: metric.subtitle,
        isLoading: isLoading
      }, `${metric.label}-${index}`);
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,