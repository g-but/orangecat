{"version":3,"names":["cov_2dnnbslnib","actualCoverage","s","exports","MetricCard","MetricGrid","lucide_react_1","require","Card_1","icon","Icon","iconColor","label","metric","subtitle","className","b","onClick","isLoading","f","getSourceIcon","source","jsx_runtime_1","jsx","Database","Globe","TestTube","getConfidenceColor","confidence","getBorderColor","isDemo","Card","children","jsxs","CardContent","RefreshCw","AlertTriangle","value","lastUpdated","toLocaleTimeString","metrics","map","index"],"sources":["/home/g/dev/orangecat/src/components/dashboard/MetricCard.tsx"],"sourcesContent":["'use client'\n\nimport { LucideIcon, AlertTriangle, Database, Globe, TestTube, RefreshCw } from 'lucide-react'\nimport { Card, CardContent } from '@/components/ui/Card'\nimport { MetricValue } from '@/services/analytics'\n\ninterface MetricCardProps {\n  icon: LucideIcon\n  iconColor: string\n  label: string\n  metric: MetricValue\n  subtitle?: string\n  className?: string\n  onClick?: () => void\n  isLoading?: boolean\n}\n\nexport function MetricCard({\n  icon: Icon,\n  iconColor,\n  label,\n  metric,\n  subtitle,\n  className = '',\n  onClick,\n  isLoading = false\n}: MetricCardProps) {\n  const getSourceIcon = () => {\n    switch (metric.source) {\n      case 'database':\n        return <Database className=\"w-3 h-3\" />\n      case 'api':\n        return <Globe className=\"w-3 h-3\" />\n      case 'demo':\n        return <TestTube className=\"w-3 h-3\" />\n      default:\n        return null\n    }\n  }\n\n  const getConfidenceColor = () => {\n    switch (metric.confidence) {\n      case 'high':\n        return 'text-green-600'\n      case 'medium':\n        return 'text-yellow-600'\n      case 'low':\n        return 'text-red-600'\n      default:\n        return 'text-gray-600'\n    }\n  }\n\n  const getBorderColor = () => {\n    if (metric.isDemo) return 'border-orange-200 bg-orange-50/50'\n    if (metric.confidence === 'low') return 'border-red-200 bg-red-50/50'\n    return 'border-gray-200 bg-white'\n  }\n\n  return (\n    <Card \n      className={`${getBorderColor()} transition-all duration-200 hover:shadow-md ${\n        onClick ? 'cursor-pointer hover:scale-105 touch-manipulation' : ''\n      } ${className}`}\n      onClick={onClick}\n    >\n      <CardContent className=\"p-4 sm:p-6\">\n        <div className=\"flex items-center justify-between mb-3 sm:mb-4\">\n          <div className={`w-10 h-10 sm:w-12 sm:h-12 rounded-full flex items-center justify-center ${iconColor} flex-shrink-0`}>\n            {isLoading ? (\n              <RefreshCw className=\"w-5 h-5 sm:w-6 sm:h-6 animate-spin\" />\n            ) : (\n              <Icon className=\"w-5 h-5 sm:w-6 sm:h-6\" />\n            )}\n          </div>\n          \n          {/* Data source and confidence indicators */}\n          <div className=\"flex items-center gap-1 sm:gap-2 ml-2\">\n            {metric.isDemo && (\n              <div className=\"flex items-center gap-1 px-2 py-1 bg-orange-100 text-orange-700 rounded-full text-xs font-medium\">\n                <TestTube className=\"w-3 h-3 flex-shrink-0\" />\n                <span className=\"hidden sm:inline\">Demo</span>\n              </div>\n            )}\n            \n            {metric.confidence === 'low' && !metric.isDemo && (\n              <div className=\"flex items-center gap-1 px-2 py-1 bg-red-100 text-red-700 rounded-full text-xs\">\n                <AlertTriangle className=\"w-3 h-3 flex-shrink-0\" />\n                <span className=\"hidden sm:inline\">Limited</span>\n              </div>\n            )}\n            \n            <div className={`flex items-center gap-1 text-xs ${getConfidenceColor()}`}>\n              {getSourceIcon()}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"space-y-2\">\n          <p className=\"text-sm sm:text-base font-medium text-gray-600\">{label}</p>\n          \n          <p className={`text-xl sm:text-2xl lg:text-3xl font-bold break-words ${\n            metric.isDemo ? 'text-orange-900' : 'text-gray-900'\n          }`}>\n            {isLoading ? '...' : metric.value}\n          </p>\n          \n          {subtitle && (\n            <p className={`text-xs sm:text-sm leading-relaxed ${\n              metric.isDemo ? 'text-orange-600' : 'text-gray-500'\n            }`}>\n              {subtitle}\n            </p>\n          )}\n          \n          {/* Last updated info */}\n          <p className=\"text-xs text-gray-400\">\n            Updated: {metric.lastUpdated.toLocaleTimeString()}\n          </p>\n        </div>\n\n        {/* Demo data disclaimer */}\n        {metric.isDemo && (\n          <div className=\"mt-3 sm:mt-4 p-3 bg-orange-100 border border-orange-200 rounded-lg\">\n            <p className=\"text-xs sm:text-sm text-orange-700 leading-relaxed\">\n              <strong>Preview Data:</strong> This shows sample data for upcoming features. \n              Real functionality coming soon!\n            </p>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n\n// Grid component for displaying multiple metrics\ninterface MetricGridProps {\n  metrics: Array<{\n    icon: LucideIcon\n    iconColor: string\n    label: string\n    metric: MetricValue\n    subtitle?: string\n  }>\n  isLoading?: boolean\n  className?: string\n}\n\nexport function MetricGrid({ metrics, isLoading = false, className = '' }: MetricGridProps) {\n  return (\n    <div className={`grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 sm:gap-6 ${className}`}>\n      {metrics.map((metric, index) => (\n        <MetricCard\n          key={`${metric.label}-${index}`}\n          icon={metric.icon}\n          iconColor={metric.iconColor}\n          label={metric.label}\n          metric={metric.metric}\n          subtitle={metric.subtitle}\n          isLoading={isLoading}\n        />\n      ))}\n    </div>\n  )\n} "],"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","ignoreList":[]}