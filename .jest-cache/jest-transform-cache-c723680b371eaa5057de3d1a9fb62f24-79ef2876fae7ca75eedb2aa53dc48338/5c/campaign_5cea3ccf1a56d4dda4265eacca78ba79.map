{"version":3,"names":["cov_19433ykxlw","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","safeParseCampaignGoal","value","isFinite","parsed","parseFloat"],"sources":["/home/g/dev/orangecat/src/types/campaign.ts"],"sourcesContent":["/**\n * Campaign Types - Proper TypeScript Definitions\n * \n * Replaces 'any' types in Campaign services with proper type definitions\n * for form data, API responses, and campaign operations\n * \n * Created: 2025-06-08\n * Last Modified: 2025-06-08\n * Last Modified Summary: Initial creation of Campaign types for TypeScript cleanup\n */\n\nimport type { FormValue, SupabaseResponse } from '@/types/common'\n\n// ==================== CAMPAIGN FORM DATA ====================\n\n/**\n * Campaign form data structure\n * Replaces: formData: any in campaign services\n */\nexport interface CampaignFormData {\n  // Basic Information\n  title: string\n  description: string\n  category: string\n  \n  // Financial Details\n  goal: number\n  currency: 'BTC' | 'USD'\n  \n  // Bitcoin Details\n  bitcoin_address?: string\n  \n  // Media\n  image_url?: string\n  banner_url?: string\n  \n  // Campaign Settings\n  duration_days?: number\n  is_public: boolean\n  \n  // Optional Fields\n  tags?: string[]\n  location?: string\n  website_url?: string\n  social_links?: {\n    twitter?: string\n    facebook?: string\n    instagram?: string\n    linkedin?: string\n  }\n  \n  // Rich Content\n  story?: string\n  \n  // Metadata\n  created_at?: string\n  updated_at?: string\n}\n\n/**\n * Campaign draft data (subset of full campaign)\n * Replaces: draftData: any\n */\nexport interface CampaignDraftData {\n  title?: string\n  description?: string\n  category?: string\n  categories?: string[] // Array format used in actual code\n  goal?: number\n  goal_amount?: number | string // Used in actual code\n  currency?: 'BTC' | 'USD'\n  bitcoin_address?: string\n  lightning_address?: string // Used in actual code\n  image_url?: string\n  banner_url?: string\n  duration_days?: number\n  is_public?: boolean\n  tags?: string[]\n  location?: string\n  website_url?: string\n  social_links?: CampaignFormData['social_links']\n  story?: string\n  current_step?: number\n  last_saved?: string\n}\n\n/**\n * Safe number parsing for campaign goals\n * Replaces: safeParseFloat(value: any)\n */\nexport function safeParseCampaignGoal(value: unknown): number | null {\n  if (typeof value === 'number' && isFinite(value) && value > 0) {\n    return value\n  }\n  if (typeof value === 'string') {\n    const parsed = parseFloat(value)\n    if (isFinite(parsed) && parsed > 0) {\n      return parsed\n    }\n  }\n  return null\n}"],"mappings":"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","ignoreList":[]}