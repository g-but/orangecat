{"version":3,"names":["exports","QRScanner","cov_787atmjtn","s","useQRScanner","react_1","__importStar","require","button_1","lucide_react_1","utils_1","logger_1","onScan","onClose","className","acceptedFormats","b","f","videoRef","useRef","canvasRef","streamRef","scanIntervalRef","isScanning","setIsScanning","useState","hasCamera","setHasCamera","hasFlash","setHasFlash","flashEnabled","setFlashEnabled","error","setError","scanning","setScanning","useEffect","initializeCamera","cleanup","navigator","mediaDevices","getUserMedia","constraints","video","facingMode","width","ideal","height","stream","current","srcObject","play","track","getVideoTracks","capabilities","_a","getCapabilities","call","startScanning","logger","Error","message","String","name","useCallback","setInterval","scanQRCode","stopScanning","clearInterval","canvas","context","getContext","videoWidth","videoHeight","drawImage","imageData","getImageData","result","detectQRCode","scanResult","parseQRData","includes","format","data","console","warn","toggleFlash","applyConstraints","advanced","torch","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","imageUrl","scanImageForQR","readAsDataURL","getTracks","forEach","stop","handleClose","jsx_runtime_1","jsxs","cn","children","jsx","Button","variant","size","onClick","FlashOff","FlashOn","X","Fragment","ref","playsInline","muted","AlertCircle","type","accept","onChange","Upload","cleanData","trim","test","confidence","startsWith","isAvailable","setIsAvailable","checkAvailability","hasCanvas","document","createElement"],"sources":["/home/g/dev/orangecat/src/components/mobile/QRScanner.tsx"],"sourcesContent":["'use client'\n\nimport React, { useRef, useEffect, useState, useCallback } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Camera, X, FlashOn, FlashOff, Upload, AlertCircle } from 'lucide-react'\nimport { cn } from '@/lib/utils'\nimport { logger } from '@/utils/logger'\n\ninterface QRScannerProps {\n  onScan: (data: string) => void\n  onClose: () => void\n  className?: string\n  acceptedFormats?: ('bitcoin' | 'lightning' | 'url' | 'text')[]\n}\n\ninterface ScanResult {\n  data: string\n  format: 'bitcoin' | 'lightning' | 'url' | 'text'\n  confidence: number\n}\n\nexport function QRScanner({ \n  onScan, \n  onClose, \n  className,\n  acceptedFormats = ['bitcoin', 'lightning', 'url', 'text']\n}: QRScannerProps) {\n  const videoRef = useRef<HTMLVideoElement>(null)\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const streamRef = useRef<MediaStream | null>(null)\n  const scanIntervalRef = useRef<NodeJS.Timeout | null>(null)\n  \n  const [isScanning, setIsScanning] = useState(false)\n  const [hasCamera, setHasCamera] = useState(true)\n  const [hasFlash, setHasFlash] = useState(false)\n  const [flashEnabled, setFlashEnabled] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [scanning, setScanning] = useState(false)\n\n  // Initialize camera and scanner\n  useEffect(() => {\n    initializeCamera()\n    return cleanup\n  }, [])\n\n  const initializeCamera = async () => {\n    try {\n      setError(null)\n      \n      // Check if camera is available\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        setError('Camera not supported on this device')\n        setHasCamera(false)\n        return\n      }\n\n      // Get camera constraints\n      const constraints: MediaStreamConstraints = {\n        video: {\n          facingMode: 'environment', // Use back camera\n          width: { ideal: 1280 },\n          height: { ideal: 720 },\n        }\n      }\n\n      // Request camera access\n      const stream = await navigator.mediaDevices.getUserMedia(constraints)\n      streamRef.current = stream\n\n      // Set up video element\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream\n        videoRef.current.play()\n        \n        // Check for flash support\n        const track = stream.getVideoTracks()[0]\n        const capabilities = track.getCapabilities?.()\n        setHasFlash(!!(capabilities && 'torch' in capabilities))\n        \n        setIsScanning(true)\n        startScanning()\n      }\n      \n    } catch (error) {\n      logger.error('Camera initialization failed', { error: error instanceof Error ? error.message : String(error) }, 'QRScanner')\n      \n      if (error instanceof Error) {\n        if (error.name === 'NotAllowedError') {\n          setError('Camera access denied. Please allow camera access and try again.')\n        } else if (error.name === 'NotFoundError') {\n          setError('No camera found on this device.')\n        } else {\n          setError('Failed to access camera. Please try again.')\n        }\n      }\n      \n      setHasCamera(false)\n    }\n  }\n\n  const startScanning = useCallback(() => {\n    if (!isScanning || scanning) return\n    \n    setScanning(true)\n    scanIntervalRef.current = setInterval(() => {\n      scanQRCode()\n    }, 500) // Scan every 500ms\n  }, [isScanning, scanning])\n\n  const stopScanning = useCallback(() => {\n    setScanning(false)\n    if (scanIntervalRef.current) {\n      clearInterval(scanIntervalRef.current)\n      scanIntervalRef.current = null\n    }\n  }, [])\n\n  const scanQRCode = async () => {\n    if (!videoRef.current || !canvasRef.current) return\n\n    const video = videoRef.current\n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n\n    if (!context || video.videoWidth === 0 || video.videoHeight === 0) return\n\n    // Set canvas size to match video\n    canvas.width = video.videoWidth\n    canvas.height = video.videoHeight\n\n    // Draw video frame to canvas\n    context.drawImage(video, 0, 0, canvas.width, canvas.height)\n\n    // Get image data for QR scanning\n    const imageData = context.getImageData(0, 0, canvas.width, canvas.height)\n    \n    try {\n      // Use a QR code scanning library here\n      // For now, we'll simulate QR detection\n      const result = await detectQRCode(imageData)\n      \n      if (result) {\n        const scanResult = parseQRData(result)\n        \n        if (scanResult && acceptedFormats.includes(scanResult.format)) {\n          stopScanning()\n          onScan(scanResult.data)\n        }\n      }\n    } catch (error) {\n      console.warn('QR scan error:', error)\n    }\n  }\n\n  // Toggle flash\n  const toggleFlash = async () => {\n    if (!streamRef.current || !hasFlash) return\n\n    try {\n      const track = streamRef.current.getVideoTracks()[0]\n      await track.applyConstraints({\n        advanced: [{ torch: !flashEnabled } as any]\n      })\n      setFlashEnabled(!flashEnabled)\n    } catch (error) {\n      console.warn('Flash toggle error:', error)\n    }\n  }\n\n  // Handle file upload for QR scanning\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0]\n    if (!file) return\n\n    const reader = new FileReader()\n    reader.onload = async (e) => {\n      const imageUrl = e.target?.result as string\n      \n      try {\n        const result = await scanImageForQR(imageUrl)\n        if (result) {\n          const scanResult = parseQRData(result)\n          if (scanResult && acceptedFormats.includes(scanResult.format)) {\n            onScan(scanResult.data)\n          }\n        }\n      } catch (error) {\n        setError('Failed to scan image. Please try again.')\n      }\n    }\n    reader.readAsDataURL(file)\n  }\n\n  const cleanup = () => {\n    stopScanning()\n    \n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop())\n      streamRef.current = null\n    }\n  }\n\n  // Close scanner\n  const handleClose = () => {\n    cleanup()\n    onClose()\n  }\n\n  return (\n    <div className={cn(\n      'fixed inset-0 z-50 bg-black flex flex-col',\n      'safe-area-padding',\n      className\n    )}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 bg-black/80 text-white\">\n        <h2 className=\"text-lg font-semibold\">Scan QR Code</h2>\n        <div className=\"flex items-center space-x-2\">\n          {hasFlash && (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={toggleFlash}\n              className=\"text-white hover:bg-white/20 p-2\"\n            >\n              {flashEnabled ? <FlashOff className=\"w-5 h-5\" /> : <FlashOn className=\"w-5 h-5\" />}\n            </Button>\n          )}\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={handleClose}\n            className=\"text-white hover:bg-white/20 p-2\"\n          >\n            <X className=\"w-5 h-5\" />\n          </Button>\n        </div>\n      </div>\n\n      {/* Camera View */}\n      <div className=\"flex-1 relative overflow-hidden\">\n        {hasCamera && isScanning ? (\n          <>\n            <video\n              ref={videoRef}\n              className=\"w-full h-full object-cover\"\n              playsInline\n              muted\n            />\n            \n            {/* Scanning overlay */}\n            <div className=\"absolute inset-0 flex items-center justify-center\">\n              <div className=\"relative\">\n                {/* Scan frame */}\n                <div className=\"w-64 h-64 border-2 border-white rounded-lg relative\">\n                  {/* Corner indicators */}\n                  <div className=\"absolute top-0 left-0 w-6 h-6 border-l-4 border-t-4 border-orange-500 rounded-tl-lg\"></div>\n                  <div className=\"absolute top-0 right-0 w-6 h-6 border-r-4 border-t-4 border-orange-500 rounded-tr-lg\"></div>\n                  <div className=\"absolute bottom-0 left-0 w-6 h-6 border-l-4 border-b-4 border-orange-500 rounded-bl-lg\"></div>\n                  <div className=\"absolute bottom-0 right-0 w-6 h-6 border-r-4 border-b-4 border-orange-500 rounded-br-lg\"></div>\n                  \n                  {/* Scanning line */}\n                  {scanning && (\n                    <div className=\"absolute inset-x-0 top-0 h-0.5 bg-orange-500 animate-pulse\">\n                      <div className=\"w-full h-full bg-gradient-to-r from-transparent via-orange-500 to-transparent animate-bounce\"></div>\n                    </div>\n                  )}\n                </div>\n                \n                {/* Instructions */}\n                <p className=\"text-white text-center mt-4 px-4\">\n                  Position the QR code within the frame\n                </p>\n              </div>\n            </div>\n          </>\n        ) : (\n          <div className=\"flex-1 flex flex-col items-center justify-center text-white p-8\">\n            <AlertCircle className=\"w-16 h-16 mb-4 text-orange-500\" />\n            <h3 className=\"text-xl font-semibold mb-2\">Camera Not Available</h3>\n            <p className=\"text-center text-gray-300 mb-6\">\n              {error || 'Unable to access camera on this device'}\n            </p>\n            \n            {/* File upload alternative */}\n            <label className=\"cursor-pointer\">\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleFileUpload}\n                className=\"hidden\"\n              />\n              <div className=\"flex items-center space-x-2 bg-orange-500 text-white px-6 py-3 rounded-lg hover:bg-orange-600 transition-colors\">\n                <Upload className=\"w-5 h-5\" />\n                <span>Upload Image</span>\n              </div>\n            </label>\n          </div>\n        )}\n      </div>\n\n      {/* Hidden canvas for image processing */}\n      <canvas ref={canvasRef} className=\"hidden\" />\n\n      {/* Bottom instructions */}\n      <div className=\"bg-black/80 text-white p-4 text-center text-sm\">\n        <p>Supported formats: Bitcoin addresses, Lightning invoices</p>\n        {hasCamera && (\n          <p className=\"text-gray-400 mt-1\">\n            Make sure the QR code is well-lit and clearly visible\n          </p>\n        )}\n      </div>\n    </div>\n  )\n}\n\n// =====================================================================\n// UTILITY FUNCTIONS\n// =====================================================================\n\n// Mock QR detection function (replace with actual QR library)\nasync function detectQRCode(imageData: ImageData): Promise<string | null> {\n  // This would use a library like qr-scanner or jsQR\n  // For now, return null to simulate no QR found\n  return null\n}\n\n// Scan uploaded image for QR code\nasync function scanImageForQR(imageUrl: string): Promise<string | null> {\n  // This would process the uploaded image\n  // For now, return null\n  return null\n}\n\n// Parse QR code data and determine format\nfunction parseQRData(data: string): ScanResult | null {\n  const cleanData = data.trim()\n  \n  // Bitcoin address patterns\n  if (/^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$/.test(cleanData) || \n      /^bc1[a-z0-9]{39,59}$/.test(cleanData)) {\n    return {\n      data: cleanData,\n      format: 'bitcoin',\n      confidence: 0.9\n    }\n  }\n  \n  // Lightning invoice\n  if (/^ln[a-z0-9]+$/i.test(cleanData)) {\n    return {\n      data: cleanData,\n      format: 'lightning',\n      confidence: 0.9\n    }\n  }\n  \n  // Bitcoin URI\n  if (cleanData.startsWith('bitcoin:')) {\n    return {\n      data: cleanData,\n      format: 'bitcoin',\n      confidence: 0.8\n    }\n  }\n  \n  // Lightning URI\n  if (cleanData.startsWith('lightning:')) {\n    return {\n      data: cleanData,\n      format: 'lightning',\n      confidence: 0.8\n    }\n  }\n  \n  // URL\n  if (/^https?:\\/\\/.+/.test(cleanData)) {\n    return {\n      data: cleanData,\n      format: 'url',\n      confidence: 0.7\n    }\n  }\n  \n  // Default to text\n  return {\n    data: cleanData,\n    format: 'text',\n    confidence: 0.5\n  }\n}\n\n// Hook for QR scanner availability\nexport function useQRScanner() {\n  const [isAvailable, setIsAvailable] = useState(false)\n\n  useEffect(() => {\n    const checkAvailability = () => {\n      const hasCamera = !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia)\n      const hasCanvas = !!document.createElement('canvas').getContext\n      setIsAvailable(hasCamera && hasCanvas)\n    }\n\n    checkAvailability()\n  }, [])\n\n  return isAvailable\n} "],"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","ignoreList":[]}