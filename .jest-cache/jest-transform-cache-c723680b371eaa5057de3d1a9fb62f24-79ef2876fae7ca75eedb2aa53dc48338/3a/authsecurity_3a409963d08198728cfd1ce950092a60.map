{"version":3,"names":["cov_100408j2xr","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","client_1","__importDefault","require","security_1","AuthSecurityService","constructor","supabase","default","secureLogin","email","password","ipAddress","sanitizedEmail","InputSanitizer","sanitizeEmail","validation","SecuritySchemas","authData","safeParse","success","SecurityMonitor","logEvent","reason","error","AuthSecurity","isAccountLocked","remainingAttempts","getRemainingAttempts","data","auth","signInWithPassword","user","recordFailedAttempt","clearFailedAttempts","userId","id","session","sanitizedError","SecureErrorHandler","sanitizeErrorMessage","logError","secureSignup","passwordStrength","validatePasswordStrength","valid","feedback","join","signUp","message","_a","changePassword","newPassword","updateUser","strength_score","score","logout","signOut","exports","authSecurityService"],"sources":["/home/g/dev/orangecat/src/services/auth-security.ts"],"sourcesContent":["/**\n * AUTHENTICATION SECURITY SERVICE\n * \n * Created: 2025-06-08\n * Last Modified: 2025-01-17  \n * Last Modified Summary: Fixed duplicate client instance causing auth conflicts\n */\n\nimport { createClient } from '@supabase/supabase-js'\nimport supabaseClient from '@/services/supabase/client'\nimport { \n  AuthSecurity, \n  SecurityMonitor, \n  SecureErrorHandler,\n  InputSanitizer,\n  SecuritySchemas\n} from '@/utils/security'\n\ninterface AuthResult {\n  success: boolean\n  user?: any\n  session?: any\n  error?: string\n  remainingAttempts?: number\n}\n\nexport class AuthSecurityService {\n  private supabase = supabaseClient\n\n  async secureLogin(\n    email: string, \n    password: string, \n    ipAddress: string\n  ): Promise<AuthResult> {\n    try {\n      const sanitizedEmail = InputSanitizer.sanitizeEmail(email)\n      \n      // Validate inputs\n      const validation = SecuritySchemas.authData.safeParse({\n        email: sanitizedEmail,\n        password\n      })\n\n      if (!validation.success) {\n        SecurityMonitor.logEvent('login_failure', 'high', {\n          reason: 'invalid_input',\n          ipAddress\n        })\n        return {\n          success: false,\n          error: 'Invalid email or password format'\n        }\n      }\n\n      // Check account lockout\n      if (AuthSecurity.isAccountLocked(sanitizedEmail)) {\n        const remainingAttempts = AuthSecurity.getRemainingAttempts(sanitizedEmail)\n        \n        SecurityMonitor.logEvent('account_locked', 'critical', {\n          email: sanitizedEmail,\n          ipAddress\n        })\n\n        return {\n          success: false,\n          error: 'Account temporarily locked due to multiple failed attempts',\n          remainingAttempts\n        }\n      }\n\n      // Attempt authentication\n      const { data, error } = await this.supabase.auth.signInWithPassword({\n        email: sanitizedEmail,\n        password\n      })\n\n      if (error || !data.user) {\n        // Record failed attempt\n        AuthSecurity.recordFailedAttempt(sanitizedEmail)\n        \n        SecurityMonitor.logEvent('login_failure', 'high', {\n          reason: 'invalid_credentials',\n          email: sanitizedEmail,\n          ipAddress\n        })\n\n        const remainingAttempts = AuthSecurity.getRemainingAttempts(sanitizedEmail)\n        \n        return {\n          success: false,\n          error: 'Invalid email or password',\n          remainingAttempts\n        }\n      }\n\n      // Clear failed attempts on successful login\n      AuthSecurity.clearFailedAttempts(sanitizedEmail)\n\n      SecurityMonitor.logEvent('login_success', 'low', {\n        userId: data.user.id,\n        ipAddress\n      })\n\n      return {\n        success: true,\n        user: data.user,\n        session: data.session\n      }\n\n    } catch (error) {\n      const sanitizedError = SecureErrorHandler.sanitizeErrorMessage(error)\n      SecureErrorHandler.logError(error, 'auth_login')\n      \n      return {\n        success: false,\n        error: sanitizedError\n      }\n    }\n  }\n\n  async secureSignup(\n    email: string,\n    password: string,\n    ipAddress: string\n  ): Promise<AuthResult> {\n    try {\n      const sanitizedEmail = InputSanitizer.sanitizeEmail(email)\n      \n      // Validate inputs\n      const validation = SecuritySchemas.authData.safeParse({\n        email: sanitizedEmail,\n        password\n      })\n\n      if (!validation.success) {\n        SecurityMonitor.logEvent('signup_failure', 'medium', {\n          reason: 'invalid_input',\n          ipAddress\n        })\n        return {\n          success: false,\n          error: 'Invalid email or password format'\n        }\n      }\n\n      // Check password strength\n      const passwordStrength = AuthSecurity.validatePasswordStrength(password)\n      if (!passwordStrength.valid) {\n        SecurityMonitor.logEvent('signup_failure', 'medium', {\n          reason: 'weak_password',\n          ipAddress\n        })\n        return {\n          success: false,\n          error: `Password too weak: ${passwordStrength.feedback.join(', ')}`\n        }\n      }\n\n      // Create account\n      const { data, error } = await this.supabase.auth.signUp({\n        email: sanitizedEmail,\n        password\n      })\n\n      if (error) {\n        SecurityMonitor.logEvent('signup_failure', 'medium', {\n          reason: 'creation_failed',\n          error: error.message,\n          ipAddress\n        })\n        return {\n          success: false,\n          error: SecureErrorHandler.sanitizeErrorMessage(error)\n        }\n      }\n\n      SecurityMonitor.logEvent('signup_success', 'low', {\n        userId: data.user?.id,\n        ipAddress\n      })\n\n      return {\n        success: true,\n        user: data.user,\n        session: data.session\n      }\n\n    } catch (error) {\n      const sanitizedError = SecureErrorHandler.sanitizeErrorMessage(error)\n      SecureErrorHandler.logError(error, 'auth_signup')\n      \n      return {\n        success: false,\n        error: sanitizedError\n      }\n    }\n  }\n\n  async changePassword(\n    userId: string,\n    newPassword: string,\n    ipAddress: string\n  ): Promise<{ success: boolean; error?: string }> {\n    try {\n      // Validate password strength\n      const passwordStrength = AuthSecurity.validatePasswordStrength(newPassword)\n      \n      if (!passwordStrength.valid) {\n        SecurityMonitor.logEvent('password_change_failure', 'medium', {\n          userId,\n          reason: 'weak_password',\n          ipAddress\n        })\n\n        return {\n          success: false,\n          error: `Password too weak: ${passwordStrength.feedback.join(', ')}`\n        }\n      }\n\n      // Update password\n      const { error } = await this.supabase.auth.updateUser({\n        password: newPassword\n      })\n\n      if (error) {\n        SecurityMonitor.logEvent('password_change_failure', 'medium', {\n          userId,\n          reason: 'update_failed',\n          ipAddress\n        })\n        return {\n          success: false,\n          error: SecureErrorHandler.sanitizeErrorMessage(error)\n        }\n      }\n\n      SecurityMonitor.logEvent('password_change_success', 'medium', {\n        userId,\n        strength_score: passwordStrength.score,\n        ipAddress\n      })\n\n      return { success: true }\n\n    } catch (error) {\n      SecureErrorHandler.logError(error, 'auth_change_password', userId)\n      return {\n        success: false,\n        error: SecureErrorHandler.sanitizeErrorMessage(error)\n      }\n    }\n  }\n\n  async logout(ipAddress: string): Promise<{ success: boolean }> {\n    try {\n      await this.supabase.auth.signOut()\n      \n      SecurityMonitor.logEvent('logout', 'low', {\n        ipAddress\n      })\n\n      return { success: true }\n\n    } catch (error) {\n      SecureErrorHandler.logError(error, 'auth_logout')\n      return { success: false }\n    }\n  }\n}\n\nexport const authSecurityService = new AuthSecurityService() "],"mappings":";;AAAA;;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;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","ignoreList":[]}