8678aa9cb1eec2bef8589c5994d8343d
"use strict";

/**
 * AUTHENTICATION SECURITY SERVICE
 *
 * Created: 2025-06-08
 * Last Modified: 2025-01-17
 * Last Modified Summary: Fixed duplicate client instance causing auth conflicts
 */
/* istanbul ignore next */
function cov_100408j2xr() {
  var path = "/home/g/dev/orangecat/src/services/auth-security.ts";
  var hash = "2e467a87fff57f627b5027ac7f27c3306cfc8d5a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/services/auth-security.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 11,
          column: 1
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "2": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "3": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 67
        }
      },
      "4": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 71
        }
      },
      "5": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "6": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "7": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "8": {
        start: {
          line: 22,
          column: 35
        },
        end: {
          line: 22,
          column: 81
        }
      },
      "9": {
        start: {
          line: 24,
          column: 31
        },
        end: {
          line: 27,
          column: 14
        }
      },
      "10": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 37,
          column: 13
        }
      },
      "11": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 32,
          column: 19
        }
      },
      "12": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 36,
          column: 18
        }
      },
      "13": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "14": {
        start: {
          line: 40,
          column: 42
        },
        end: {
          line: 40,
          column: 102
        }
      },
      "15": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 44,
          column: 19
        }
      },
      "16": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 49,
          column: 18
        }
      },
      "17": {
        start: {
          line: 52,
          column: 36
        },
        end: {
          line: 55,
          column: 14
        }
      },
      "18": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "19": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 76
        }
      },
      "20": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 63,
          column: 19
        }
      },
      "21": {
        start: {
          line: 64,
          column: 42
        },
        end: {
          line: 64,
          column: 102
        }
      },
      "22": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 69,
          column: 18
        }
      },
      "23": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 72
        }
      },
      "24": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 76,
          column: 15
        }
      },
      "25": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 81,
          column: 14
        }
      },
      "26": {
        start: {
          line: 84,
          column: 35
        },
        end: {
          line: 84,
          column: 92
        }
      },
      "27": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 72
        }
      },
      "28": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 89,
          column: 14
        }
      },
      "29": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "30": {
        start: {
          line: 95,
          column: 35
        },
        end: {
          line: 95,
          column: 81
        }
      },
      "31": {
        start: {
          line: 97,
          column: 31
        },
        end: {
          line: 100,
          column: 14
        }
      },
      "32": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 110,
          column: 13
        }
      },
      "33": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 105,
          column: 19
        }
      },
      "34": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 109,
          column: 18
        }
      },
      "35": {
        start: {
          line: 112,
          column: 37
        },
        end: {
          line: 112,
          column: 95
        }
      },
      "36": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 122,
          column: 13
        }
      },
      "37": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 117,
          column: 19
        }
      },
      "38": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 121,
          column: 18
        }
      },
      "39": {
        start: {
          line: 124,
          column: 36
        },
        end: {
          line: 127,
          column: 14
        }
      },
      "40": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "41": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 133,
          column: 19
        }
      },
      "42": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 137,
          column: 18
        }
      },
      "43": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 142,
          column: 15
        }
      },
      "44": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 147,
          column: 14
        }
      },
      "45": {
        start: {
          line: 150,
          column: 35
        },
        end: {
          line: 150,
          column: 92
        }
      },
      "46": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 73
        }
      },
      "47": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 155,
          column: 14
        }
      },
      "48": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "49": {
        start: {
          line: 161,
          column: 37
        },
        end: {
          line: 161,
          column: 98
        }
      },
      "50": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 172,
          column: 13
        }
      },
      "51": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 167,
          column: 19
        }
      },
      "52": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 171,
          column: 18
        }
      },
      "53": {
        start: {
          line: 174,
          column: 30
        },
        end: {
          line: 176,
          column: 14
        }
      },
      "54": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 187,
          column: 13
        }
      },
      "55": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 182,
          column: 19
        }
      },
      "56": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 186,
          column: 18
        }
      },
      "57": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 192,
          column: 15
        }
      },
      "58": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 37
        }
      },
      "59": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 90
        }
      },
      "60": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 200,
          column: 14
        }
      },
      "61": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "62": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 47
        }
      },
      "63": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 208,
          column: 15
        }
      },
      "64": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 37
        }
      },
      "65": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 73
        }
      },
      "66": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 38
        }
      },
      "67": {
        start: {
          line: 217,
          column: 0
        },
        end: {
          line: 217,
          column: 50
        }
      },
      "68": {
        start: {
          line: 218,
          column: 0
        },
        end: {
          line: 218,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 56
          },
          end: {
            line: 9,
            column: 57
          }
        },
        loc: {
          start: {
            line: 9,
            column: 71
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 50
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        loc: {
          start: {
            line: 92,
            column: 51
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 92
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 57
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 158
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 28
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 203
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 11,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 9,
            column: 27
          }
        }, {
          start: {
            line: 9,
            column: 31
          },
          end: {
            line: 9,
            column: 51
          }
        }, {
          start: {
            line: 9,
            column: 56
          },
          end: {
            line: 11,
            column: 1
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 11
          },
          end: {
            line: 10,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 10,
            column: 37
          },
          end: {
            line: 10,
            column: 40
          }
        }, {
          start: {
            line: 10,
            column: 43
          },
          end: {
            line: 10,
            column: 61
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 10,
            column: 12
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 12
          },
          end: {
            line: 10,
            column: 15
          }
        }, {
          start: {
            line: 10,
            column: 19
          },
          end: {
            line: 10,
            column: 33
          }
        }],
        line: 10
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "6": {
        loc: {
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 56,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 56,
            column: 21
          }
        }, {
          start: {
            line: 56,
            column: 25
          },
          end: {
            line: 56,
            column: 35
          }
        }],
        line: 56
      },
      "7": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "8": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "9": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "10": {
        loc: {
          start: {
            line: 140,
            column: 24
          },
          end: {
            line: 140,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 69
          },
          end: {
            line: 140,
            column: 75
          }
        }, {
          start: {
            line: 140,
            column: 78
          },
          end: {
            line: 140,
            column: 83
          }
        }],
        line: 140
      },
      "11": {
        loc: {
          start: {
            line: 140,
            column: 24
          },
          end: {
            line: 140,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 24
          },
          end: {
            line: 140,
            column: 49
          }
        }, {
          start: {
            line: 140,
            column: 53
          },
          end: {
            line: 140,
            column: 66
          }
        }],
        line: 140
      },
      "12": {
        loc: {
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "13": {
        loc: {
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/services/auth-security.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/services/auth-security.ts"],
      sourcesContent: ["/**\n * AUTHENTICATION SECURITY SERVICE\n * \n * Created: 2025-06-08\n * Last Modified: 2025-01-17  \n * Last Modified Summary: Fixed duplicate client instance causing auth conflicts\n */\n\nimport { createClient } from '@supabase/supabase-js'\nimport supabaseClient from '@/services/supabase/client'\nimport { \n  AuthSecurity, \n  SecurityMonitor, \n  SecureErrorHandler,\n  InputSanitizer,\n  SecuritySchemas\n} from '@/utils/security'\n\ninterface AuthResult {\n  success: boolean\n  user?: any\n  session?: any\n  error?: string\n  remainingAttempts?: number\n}\n\nexport class AuthSecurityService {\n  private supabase = supabaseClient\n\n  async secureLogin(\n    email: string, \n    password: string, \n    ipAddress: string\n  ): Promise<AuthResult> {\n    try {\n      const sanitizedEmail = InputSanitizer.sanitizeEmail(email)\n      \n      // Validate inputs\n      const validation = SecuritySchemas.authData.safeParse({\n        email: sanitizedEmail,\n        password\n      })\n\n      if (!validation.success) {\n        SecurityMonitor.logEvent('login_failure', 'high', {\n          reason: 'invalid_input',\n          ipAddress\n        })\n        return {\n          success: false,\n          error: 'Invalid email or password format'\n        }\n      }\n\n      // Check account lockout\n      if (AuthSecurity.isAccountLocked(sanitizedEmail)) {\n        const remainingAttempts = AuthSecurity.getRemainingAttempts(sanitizedEmail)\n        \n        SecurityMonitor.logEvent('account_locked', 'critical', {\n          email: sanitizedEmail,\n          ipAddress\n        })\n\n        return {\n          success: false,\n          error: 'Account temporarily locked due to multiple failed attempts',\n          remainingAttempts\n        }\n      }\n\n      // Attempt authentication\n      const { data, error } = await this.supabase.auth.signInWithPassword({\n        email: sanitizedEmail,\n        password\n      })\n\n      if (error || !data.user) {\n        // Record failed attempt\n        AuthSecurity.recordFailedAttempt(sanitizedEmail)\n        \n        SecurityMonitor.logEvent('login_failure', 'high', {\n          reason: 'invalid_credentials',\n          email: sanitizedEmail,\n          ipAddress\n        })\n\n        const remainingAttempts = AuthSecurity.getRemainingAttempts(sanitizedEmail)\n        \n        return {\n          success: false,\n          error: 'Invalid email or password',\n          remainingAttempts\n        }\n      }\n\n      // Clear failed attempts on successful login\n      AuthSecurity.clearFailedAttempts(sanitizedEmail)\n\n      SecurityMonitor.logEvent('login_success', 'low', {\n        userId: data.user.id,\n        ipAddress\n      })\n\n      return {\n        success: true,\n        user: data.user,\n        session: data.session\n      }\n\n    } catch (error) {\n      const sanitizedError = SecureErrorHandler.sanitizeErrorMessage(error)\n      SecureErrorHandler.logError(error, 'auth_login')\n      \n      return {\n        success: false,\n        error: sanitizedError\n      }\n    }\n  }\n\n  async secureSignup(\n    email: string,\n    password: string,\n    ipAddress: string\n  ): Promise<AuthResult> {\n    try {\n      const sanitizedEmail = InputSanitizer.sanitizeEmail(email)\n      \n      // Validate inputs\n      const validation = SecuritySchemas.authData.safeParse({\n        email: sanitizedEmail,\n        password\n      })\n\n      if (!validation.success) {\n        SecurityMonitor.logEvent('signup_failure', 'medium', {\n          reason: 'invalid_input',\n          ipAddress\n        })\n        return {\n          success: false,\n          error: 'Invalid email or password format'\n        }\n      }\n\n      // Check password strength\n      const passwordStrength = AuthSecurity.validatePasswordStrength(password)\n      if (!passwordStrength.valid) {\n        SecurityMonitor.logEvent('signup_failure', 'medium', {\n          reason: 'weak_password',\n          ipAddress\n        })\n        return {\n          success: false,\n          error: `Password too weak: ${passwordStrength.feedback.join(', ')}`\n        }\n      }\n\n      // Create account\n      const { data, error } = await this.supabase.auth.signUp({\n        email: sanitizedEmail,\n        password\n      })\n\n      if (error) {\n        SecurityMonitor.logEvent('signup_failure', 'medium', {\n          reason: 'creation_failed',\n          error: error.message,\n          ipAddress\n        })\n        return {\n          success: false,\n          error: SecureErrorHandler.sanitizeErrorMessage(error)\n        }\n      }\n\n      SecurityMonitor.logEvent('signup_success', 'low', {\n        userId: data.user?.id,\n        ipAddress\n      })\n\n      return {\n        success: true,\n        user: data.user,\n        session: data.session\n      }\n\n    } catch (error) {\n      const sanitizedError = SecureErrorHandler.sanitizeErrorMessage(error)\n      SecureErrorHandler.logError(error, 'auth_signup')\n      \n      return {\n        success: false,\n        error: sanitizedError\n      }\n    }\n  }\n\n  async changePassword(\n    userId: string,\n    newPassword: string,\n    ipAddress: string\n  ): Promise<{ success: boolean; error?: string }> {\n    try {\n      // Validate password strength\n      const passwordStrength = AuthSecurity.validatePasswordStrength(newPassword)\n      \n      if (!passwordStrength.valid) {\n        SecurityMonitor.logEvent('password_change_failure', 'medium', {\n          userId,\n          reason: 'weak_password',\n          ipAddress\n        })\n\n        return {\n          success: false,\n          error: `Password too weak: ${passwordStrength.feedback.join(', ')}`\n        }\n      }\n\n      // Update password\n      const { error } = await this.supabase.auth.updateUser({\n        password: newPassword\n      })\n\n      if (error) {\n        SecurityMonitor.logEvent('password_change_failure', 'medium', {\n          userId,\n          reason: 'update_failed',\n          ipAddress\n        })\n        return {\n          success: false,\n          error: SecureErrorHandler.sanitizeErrorMessage(error)\n        }\n      }\n\n      SecurityMonitor.logEvent('password_change_success', 'medium', {\n        userId,\n        strength_score: passwordStrength.score,\n        ipAddress\n      })\n\n      return { success: true }\n\n    } catch (error) {\n      SecureErrorHandler.logError(error, 'auth_change_password', userId)\n      return {\n        success: false,\n        error: SecureErrorHandler.sanitizeErrorMessage(error)\n      }\n    }\n  }\n\n  async logout(ipAddress: string): Promise<{ success: boolean }> {\n    try {\n      await this.supabase.auth.signOut()\n      \n      SecurityMonitor.logEvent('logout', 'low', {\n        ipAddress\n      })\n\n      return { success: true }\n\n    } catch (error) {\n      SecureErrorHandler.logError(error, 'auth_logout')\n      return { success: false }\n    }\n  }\n}\n\nexport const authSecurityService = new AuthSecurityService() "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2e467a87fff57f627b5027ac7f27c3306cfc8d5a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_100408j2xr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_100408j2xr();
var __importDefault =
/* istanbul ignore next */
(cov_100408j2xr().s[0]++,
/* istanbul ignore next */
(cov_100408j2xr().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_100408j2xr().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_100408j2xr().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_100408j2xr().f[0]++;
  cov_100408j2xr().s[1]++;
  return /* istanbul ignore next */(cov_100408j2xr().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_100408j2xr().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_100408j2xr().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_100408j2xr().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_100408j2xr().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_100408j2xr().s[3]++;
exports.authSecurityService = exports.AuthSecurityService = void 0;
const client_1 =
/* istanbul ignore next */
(cov_100408j2xr().s[4]++, __importDefault(require("@/services/supabase/client")));
const security_1 =
/* istanbul ignore next */
(cov_100408j2xr().s[5]++, require("@/utils/security"));
class AuthSecurityService {
  constructor() {
    /* istanbul ignore next */
    cov_100408j2xr().f[1]++;
    cov_100408j2xr().s[6]++;
    this.supabase = client_1.default;
  }
  async secureLogin(email, password, ipAddress) {
    /* istanbul ignore next */
    cov_100408j2xr().f[2]++;
    cov_100408j2xr().s[7]++;
    try {
      const sanitizedEmail =
      /* istanbul ignore next */
      (cov_100408j2xr().s[8]++, security_1.InputSanitizer.sanitizeEmail(email));
      // Validate inputs
      const validation =
      /* istanbul ignore next */
      (cov_100408j2xr().s[9]++, security_1.SecuritySchemas.authData.safeParse({
        email: sanitizedEmail,
        password
      }));
      /* istanbul ignore next */
      cov_100408j2xr().s[10]++;
      if (!validation.success) {
        /* istanbul ignore next */
        cov_100408j2xr().b[3][0]++;
        cov_100408j2xr().s[11]++;
        security_1.SecurityMonitor.logEvent('login_failure', 'high', {
          reason: 'invalid_input',
          ipAddress
        });
        /* istanbul ignore next */
        cov_100408j2xr().s[12]++;
        return {
          success: false,
          error: 'Invalid email or password format'
        };
      } else
      /* istanbul ignore next */
      {
        cov_100408j2xr().b[3][1]++;
      }
      // Check account lockout
      cov_100408j2xr().s[13]++;
      if (security_1.AuthSecurity.isAccountLocked(sanitizedEmail)) {
        /* istanbul ignore next */
        cov_100408j2xr().b[4][0]++;
        const remainingAttempts =
        /* istanbul ignore next */
        (cov_100408j2xr().s[14]++, security_1.AuthSecurity.getRemainingAttempts(sanitizedEmail));
        /* istanbul ignore next */
        cov_100408j2xr().s[15]++;
        security_1.SecurityMonitor.logEvent('account_locked', 'critical', {
          email: sanitizedEmail,
          ipAddress
        });
        /* istanbul ignore next */
        cov_100408j2xr().s[16]++;
        return {
          success: false,
          error: 'Account temporarily locked due to multiple failed attempts',
          remainingAttempts
        };
      } else
      /* istanbul ignore next */
      {
        cov_100408j2xr().b[4][1]++;
      }
      // Attempt authentication
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_100408j2xr().s[17]++, await this.supabase.auth.signInWithPassword({
        email: sanitizedEmail,
        password
      }));
      /* istanbul ignore next */
      cov_100408j2xr().s[18]++;
      if (
      /* istanbul ignore next */
      (cov_100408j2xr().b[6][0]++, error) ||
      /* istanbul ignore next */
      (cov_100408j2xr().b[6][1]++, !data.user)) {
        /* istanbul ignore next */
        cov_100408j2xr().b[5][0]++;
        cov_100408j2xr().s[19]++;
        // Record failed attempt
        security_1.AuthSecurity.recordFailedAttempt(sanitizedEmail);
        /* istanbul ignore next */
        cov_100408j2xr().s[20]++;
        security_1.SecurityMonitor.logEvent('login_failure', 'high', {
          reason: 'invalid_credentials',
          email: sanitizedEmail,
          ipAddress
        });
        const remainingAttempts =
        /* istanbul ignore next */
        (cov_100408j2xr().s[21]++, security_1.AuthSecurity.getRemainingAttempts(sanitizedEmail));
        /* istanbul ignore next */
        cov_100408j2xr().s[22]++;
        return {
          success: false,
          error: 'Invalid email or password',
          remainingAttempts
        };
      } else
      /* istanbul ignore next */
      {
        cov_100408j2xr().b[5][1]++;
      }
      // Clear failed attempts on successful login
      cov_100408j2xr().s[23]++;
      security_1.AuthSecurity.clearFailedAttempts(sanitizedEmail);
      /* istanbul ignore next */
      cov_100408j2xr().s[24]++;
      security_1.SecurityMonitor.logEvent('login_success', 'low', {
        userId: data.user.id,
        ipAddress
      });
      /* istanbul ignore next */
      cov_100408j2xr().s[25]++;
      return {
        success: true,
        user: data.user,
        session: data.session
      };
    } catch (error) {
      const sanitizedError =
      /* istanbul ignore next */
      (cov_100408j2xr().s[26]++, security_1.SecureErrorHandler.sanitizeErrorMessage(error));
      /* istanbul ignore next */
      cov_100408j2xr().s[27]++;
      security_1.SecureErrorHandler.logError(error, 'auth_login');
      /* istanbul ignore next */
      cov_100408j2xr().s[28]++;
      return {
        success: false,
        error: sanitizedError
      };
    }
  }
  async secureSignup(email, password, ipAddress) {
    /* istanbul ignore next */
    cov_100408j2xr().f[3]++;
    var _a;
    /* istanbul ignore next */
    cov_100408j2xr().s[29]++;
    try {
      const sanitizedEmail =
      /* istanbul ignore next */
      (cov_100408j2xr().s[30]++, security_1.InputSanitizer.sanitizeEmail(email));
      // Validate inputs
      const validation =
      /* istanbul ignore next */
      (cov_100408j2xr().s[31]++, security_1.SecuritySchemas.authData.safeParse({
        email: sanitizedEmail,
        password
      }));
      /* istanbul ignore next */
      cov_100408j2xr().s[32]++;
      if (!validation.success) {
        /* istanbul ignore next */
        cov_100408j2xr().b[7][0]++;
        cov_100408j2xr().s[33]++;
        security_1.SecurityMonitor.logEvent('signup_failure', 'medium', {
          reason: 'invalid_input',
          ipAddress
        });
        /* istanbul ignore next */
        cov_100408j2xr().s[34]++;
        return {
          success: false,
          error: 'Invalid email or password format'
        };
      } else
      /* istanbul ignore next */
      {
        cov_100408j2xr().b[7][1]++;
      }
      // Check password strength
      const passwordStrength =
      /* istanbul ignore next */
      (cov_100408j2xr().s[35]++, security_1.AuthSecurity.validatePasswordStrength(password));
      /* istanbul ignore next */
      cov_100408j2xr().s[36]++;
      if (!passwordStrength.valid) {
        /* istanbul ignore next */
        cov_100408j2xr().b[8][0]++;
        cov_100408j2xr().s[37]++;
        security_1.SecurityMonitor.logEvent('signup_failure', 'medium', {
          reason: 'weak_password',
          ipAddress
        });
        /* istanbul ignore next */
        cov_100408j2xr().s[38]++;
        return {
          success: false,
          error: `Password too weak: ${passwordStrength.feedback.join(', ')}`
        };
      } else
      /* istanbul ignore next */
      {
        cov_100408j2xr().b[8][1]++;
      }
      // Create account
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_100408j2xr().s[39]++, await this.supabase.auth.signUp({
        email: sanitizedEmail,
        password
      }));
      /* istanbul ignore next */
      cov_100408j2xr().s[40]++;
      if (error) {
        /* istanbul ignore next */
        cov_100408j2xr().b[9][0]++;
        cov_100408j2xr().s[41]++;
        security_1.SecurityMonitor.logEvent('signup_failure', 'medium', {
          reason: 'creation_failed',
          error: error.message,
          ipAddress
        });
        /* istanbul ignore next */
        cov_100408j2xr().s[42]++;
        return {
          success: false,
          error: security_1.SecureErrorHandler.sanitizeErrorMessage(error)
        };
      } else
      /* istanbul ignore next */
      {
        cov_100408j2xr().b[9][1]++;
      }
      cov_100408j2xr().s[43]++;
      security_1.SecurityMonitor.logEvent('signup_success', 'low', {
        userId:
        /* istanbul ignore next */
        (cov_100408j2xr().b[11][0]++, (_a = data.user) === null) ||
        /* istanbul ignore next */
        (cov_100408j2xr().b[11][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_100408j2xr().b[10][0]++, void 0) :
        /* istanbul ignore next */
        (cov_100408j2xr().b[10][1]++, _a.id),
        ipAddress
      });
      /* istanbul ignore next */
      cov_100408j2xr().s[44]++;
      return {
        success: true,
        user: data.user,
        session: data.session
      };
    } catch (error) {
      const sanitizedError =
      /* istanbul ignore next */
      (cov_100408j2xr().s[45]++, security_1.SecureErrorHandler.sanitizeErrorMessage(error));
      /* istanbul ignore next */
      cov_100408j2xr().s[46]++;
      security_1.SecureErrorHandler.logError(error, 'auth_signup');
      /* istanbul ignore next */
      cov_100408j2xr().s[47]++;
      return {
        success: false,
        error: sanitizedError
      };
    }
  }
  async changePassword(userId, newPassword, ipAddress) {
    /* istanbul ignore next */
    cov_100408j2xr().f[4]++;
    cov_100408j2xr().s[48]++;
    try {
      // Validate password strength
      const passwordStrength =
      /* istanbul ignore next */
      (cov_100408j2xr().s[49]++, security_1.AuthSecurity.validatePasswordStrength(newPassword));
      /* istanbul ignore next */
      cov_100408j2xr().s[50]++;
      if (!passwordStrength.valid) {
        /* istanbul ignore next */
        cov_100408j2xr().b[12][0]++;
        cov_100408j2xr().s[51]++;
        security_1.SecurityMonitor.logEvent('password_change_failure', 'medium', {
          userId,
          reason: 'weak_password',
          ipAddress
        });
        /* istanbul ignore next */
        cov_100408j2xr().s[52]++;
        return {
          success: false,
          error: `Password too weak: ${passwordStrength.feedback.join(', ')}`
        };
      } else
      /* istanbul ignore next */
      {
        cov_100408j2xr().b[12][1]++;
      }
      // Update password
      const {
        error
      } =
      /* istanbul ignore next */
      (cov_100408j2xr().s[53]++, await this.supabase.auth.updateUser({
        password: newPassword
      }));
      /* istanbul ignore next */
      cov_100408j2xr().s[54]++;
      if (error) {
        /* istanbul ignore next */
        cov_100408j2xr().b[13][0]++;
        cov_100408j2xr().s[55]++;
        security_1.SecurityMonitor.logEvent('password_change_failure', 'medium', {
          userId,
          reason: 'update_failed',
          ipAddress
        });
        /* istanbul ignore next */
        cov_100408j2xr().s[56]++;
        return {
          success: false,
          error: security_1.SecureErrorHandler.sanitizeErrorMessage(error)
        };
      } else
      /* istanbul ignore next */
      {
        cov_100408j2xr().b[13][1]++;
      }
      cov_100408j2xr().s[57]++;
      security_1.SecurityMonitor.logEvent('password_change_success', 'medium', {
        userId,
        strength_score: passwordStrength.score,
        ipAddress
      });
      /* istanbul ignore next */
      cov_100408j2xr().s[58]++;
      return {
        success: true
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_100408j2xr().s[59]++;
      security_1.SecureErrorHandler.logError(error, 'auth_change_password', userId);
      /* istanbul ignore next */
      cov_100408j2xr().s[60]++;
      return {
        success: false,
        error: security_1.SecureErrorHandler.sanitizeErrorMessage(error)
      };
    }
  }
  async logout(ipAddress) {
    /* istanbul ignore next */
    cov_100408j2xr().f[5]++;
    cov_100408j2xr().s[61]++;
    try {
      /* istanbul ignore next */
      cov_100408j2xr().s[62]++;
      await this.supabase.auth.signOut();
      /* istanbul ignore next */
      cov_100408j2xr().s[63]++;
      security_1.SecurityMonitor.logEvent('logout', 'low', {
        ipAddress
      });
      /* istanbul ignore next */
      cov_100408j2xr().s[64]++;
      return {
        success: true
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_100408j2xr().s[65]++;
      security_1.SecureErrorHandler.logError(error, 'auth_logout');
      /* istanbul ignore next */
      cov_100408j2xr().s[66]++;
      return {
        success: false
      };
    }
  }
}
/* istanbul ignore next */
cov_100408j2xr().s[67]++;
exports.AuthSecurityService = AuthSecurityService;
/* istanbul ignore next */
cov_100408j2xr().s[68]++;
exports.authSecurityService = new AuthSecurityService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,