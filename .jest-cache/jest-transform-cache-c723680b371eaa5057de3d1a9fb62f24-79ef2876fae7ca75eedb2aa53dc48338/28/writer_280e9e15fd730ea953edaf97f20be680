03330c3a544026c33ebf6e52fb6209ee
"use strict";

/**
 * PROFILE WRITER MODULE
 *
 * Created: 2025-01-09
 * Last Modified: 2025-01-09
 * Last Modified Summary: Extracted from profileService.ts for modular architecture - handles write operations
 */
/* istanbul ignore next */
function cov_1hsq4k2igm() {
  var path = "/home/g/dev/orangecat/src/services/profile/writer.ts";
  var hash = "eeb2d28ab354339c4a24e3b06113069e49664b61";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/services/profile/writer.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 11,
          column: 1
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "2": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "3": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "4": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 71
        }
      },
      "5": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "6": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 36
        }
      },
      "7": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 17,
          column: 36
        }
      },
      "8": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "9": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 68
        }
      },
      "10": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "11": {
        start: {
          line: 32,
          column: 57
        },
        end: {
          line: 32,
          column: 94
        }
      },
      "12": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 35,
          column: 13
        }
      },
      "13": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 96
        }
      },
      "14": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 38,
          column: 13
        }
      },
      "15": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 108
        }
      },
      "16": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 76
        }
      },
      "17": {
        start: {
          line: 41,
          column: 35
        },
        end: {
          line: 41,
          column: 82
        }
      },
      "18": {
        start: {
          line: 43,
          column: 35
        },
        end: {
          line: 43,
          column: 192
        }
      },
      "19": {
        start: {
          line: 45,
          column: 31
        },
        end: {
          line: 45,
          column: 90
        }
      },
      "20": {
        start: {
          line: 47,
          column: 36
        },
        end: {
          line: 52,
          column: 25
        }
      },
      "21": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "22": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 92
        }
      },
      "23": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 58,
          column: 17
        }
      },
      "24": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 115
        }
      },
      "25": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 62,
          column: 17
        }
      },
      "26": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 61,
          column: 135
        }
      },
      "27": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 96
        }
      },
      "28": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 76,
          column: 13
        }
      },
      "29": {
        start: {
          line: 68,
          column: 32
        },
        end: {
          line: 68,
          column: 79
        }
      },
      "30": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 75,
          column: 17
        }
      },
      "31": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 70,
          column: 121
        }
      },
      "32": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 71,
          column: 60
        }
      },
      "33": {
        start: {
          line: 74,
          column: 20
        },
        end: {
          line: 74,
          column: 117
        }
      },
      "34": {
        start: {
          line: 77,
          column: 33
        },
        end: {
          line: 77,
          column: 82
        }
      },
      "35": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 97
        }
      },
      "36": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 57
        }
      },
      "37": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 88
        }
      },
      "38": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 100
        }
      },
      "39": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "40": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 68
        }
      },
      "41": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "42": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 76
        }
      },
      "43": {
        start: {
          line: 96,
          column: 32
        },
        end: {
          line: 96,
          column: 366
        }
      },
      "44": {
        start: {
          line: 98,
          column: 31
        },
        end: {
          line: 98,
          column: 87
        }
      },
      "45": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 35
        }
      },
      "46": {
        start: {
          line: 100,
          column: 36
        },
        end: {
          line: 104,
          column: 25
        }
      },
      "47": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "48": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 92
        }
      },
      "49": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 109,
          column: 17
        }
      },
      "50": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 108,
          column: 100
        }
      },
      "51": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 96
        }
      },
      "52": {
        start: {
          line: 112,
          column: 31
        },
        end: {
          line: 112,
          column: 80
        }
      },
      "53": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 95
        }
      },
      "54": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 55
        }
      },
      "55": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 88
        }
      },
      "56": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 100
        }
      },
      "57": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "58": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 68
        }
      },
      "59": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "60": {
        start: {
          line: 130,
          column: 35
        },
        end: {
          line: 130,
          column: 82
        }
      },
      "61": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 133,
          column: 13
        }
      },
      "62": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 70
        }
      },
      "63": {
        start: {
          line: 135,
          column: 35
        },
        end: {
          line: 135,
          column: 151
        }
      },
      "64": {
        start: {
          line: 137,
          column: 31
        },
        end: {
          line: 137,
          column: 90
        }
      },
      "65": {
        start: {
          line: 138,
          column: 30
        },
        end: {
          line: 141,
          column: 33
        }
      },
      "66": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "67": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 85
        }
      },
      "68": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 79
        }
      },
      "69": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 37
        }
      },
      "70": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 90
        }
      },
      "71": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 102
        }
      },
      "72": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "73": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 68
        }
      },
      "74": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "75": {
        start: {
          line: 162,
          column: 57
        },
        end: {
          line: 162,
          column: 94
        }
      },
      "76": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 165,
          column: 13
        }
      },
      "77": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 76
        }
      },
      "78": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 168,
          column: 13
        }
      },
      "79": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 104
        }
      },
      "80": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 66
        }
      },
      "81": {
        start: {
          line: 170,
          column: 30
        },
        end: {
          line: 173,
          column: 33
        }
      },
      "82": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "83": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 175,
          column: 83
        }
      },
      "84": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 77
        }
      },
      "85": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 74
        }
      },
      "86": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 37
        }
      },
      "87": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 88
        }
      },
      "88": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 100
        }
      },
      "89": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "90": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 68
        }
      },
      "91": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "92": {
        start: {
          line: 195,
          column: 36
        },
        end: {
          line: 197,
          column: 14
        }
      },
      "93": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 201,
          column: 13
        }
      },
      "94": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 199,
          column: 84
        }
      },
      "95": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 200,
          column: 104
        }
      },
      "96": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 43
        }
      },
      "97": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 89
        }
      },
      "98": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 100
        }
      },
      "99": {
        start: {
          line: 210,
          column: 0
        },
        end: {
          line: 210,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 56
          },
          end: {
            line: 9,
            column: 57
          }
        },
        loc: {
          start: {
            line: 9,
            column: 71
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 49
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 49
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 89
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 52
          },
          end: {
            line: 152,
            column: 5
          }
        },
        line: 124
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        },
        loc: {
          start: {
            line: 156,
            column: 39
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 156
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 49
          },
          end: {
            line: 208,
            column: 5
          }
        },
        line: 189
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 11,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 9,
            column: 27
          }
        }, {
          start: {
            line: 9,
            column: 31
          },
          end: {
            line: 9,
            column: 51
          }
        }, {
          start: {
            line: 9,
            column: 56
          },
          end: {
            line: 11,
            column: 1
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 11
          },
          end: {
            line: 10,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 10,
            column: 37
          },
          end: {
            line: 10,
            column: 40
          }
        }, {
          start: {
            line: 10,
            column: 43
          },
          end: {
            line: 10,
            column: 61
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 10,
            column: 12
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 12
          },
          end: {
            line: 10,
            column: 15
          }
        }, {
          start: {
            line: 10,
            column: 19
          },
          end: {
            line: 10,
            column: 33
          }
        }],
        line: 10
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 14
          },
          end: {
            line: 27,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 53
          },
          end: {
            line: 27,
            column: 59
          }
        }, {
          start: {
            line: 27,
            column: 62
          },
          end: {
            line: 27,
            column: 75
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 14
          },
          end: {
            line: 27,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 14
          },
          end: {
            line: 27,
            column: 29
          }
        }, {
          start: {
            line: 27,
            column: 33
          },
          end: {
            line: 27,
            column: 50
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 35,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 35,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 33,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 33,
            column: 25
          }
        }, {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 33,
            column: 34
          }
        }],
        line: 33
      },
      "8": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 38,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 38,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "9": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "10": {
        loc: {
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 58,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 58,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "11": {
        loc: {
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 56,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 56,
            column: 42
          }
        }, {
          start: {
            line: 56,
            column: 47
          },
          end: {
            line: 56,
            column: 129
          }
        }],
        line: 56
      },
      "12": {
        loc: {
          start: {
            line: 56,
            column: 47
          },
          end: {
            line: 56,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 96
          },
          end: {
            line: 56,
            column: 102
          }
        }, {
          start: {
            line: 56,
            column: 105
          },
          end: {
            line: 56,
            column: 129
          }
        }],
        line: 56
      },
      "13": {
        loc: {
          start: {
            line: 56,
            column: 47
          },
          end: {
            line: 56,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 47
          },
          end: {
            line: 56,
            column: 76
          }
        }, {
          start: {
            line: 56,
            column: 80
          },
          end: {
            line: 56,
            column: 93
          }
        }],
        line: 56
      },
      "14": {
        loc: {
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 62,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 62,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "15": {
        loc: {
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 59,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 69
          },
          end: {
            line: 59,
            column: 75
          }
        }, {
          start: {
            line: 59,
            column: 78
          },
          end: {
            line: 59,
            column: 105
          }
        }],
        line: 59
      },
      "16": {
        loc: {
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 59,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 59,
            column: 49
          }
        }, {
          start: {
            line: 59,
            column: 53
          },
          end: {
            line: 59,
            column: 66
          }
        }],
        line: 59
      },
      "17": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "18": {
        loc: {
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 75,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 75,
            column: 17
          }
        }, {
          start: {
            line: 73,
            column: 21
          },
          end: {
            line: 75,
            column: 17
          }
        }],
        line: 69
      },
      "19": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "20": {
        loc: {
          start: {
            line: 90,
            column: 14
          },
          end: {
            line: 90,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 53
          },
          end: {
            line: 90,
            column: 59
          }
        }, {
          start: {
            line: 90,
            column: 62
          },
          end: {
            line: 90,
            column: 75
          }
        }],
        line: 90
      },
      "21": {
        loc: {
          start: {
            line: 90,
            column: 14
          },
          end: {
            line: 90,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 14
          },
          end: {
            line: 90,
            column: 29
          }
        }, {
          start: {
            line: 90,
            column: 33
          },
          end: {
            line: 90,
            column: 50
          }
        }],
        line: 90
      },
      "22": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "23": {
        loc: {
          start: {
            line: 107,
            column: 16
          },
          end: {
            line: 109,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 16
          },
          end: {
            line: 109,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "24": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "25": {
        loc: {
          start: {
            line: 125,
            column: 14
          },
          end: {
            line: 125,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 125,
            column: 53
          },
          end: {
            line: 125,
            column: 59
          }
        }, {
          start: {
            line: 125,
            column: 62
          },
          end: {
            line: 125,
            column: 75
          }
        }],
        line: 125
      },
      "26": {
        loc: {
          start: {
            line: 125,
            column: 14
          },
          end: {
            line: 125,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 14
          },
          end: {
            line: 125,
            column: 29
          }
        }, {
          start: {
            line: 125,
            column: 33
          },
          end: {
            line: 125,
            column: 50
          }
        }],
        line: 125
      },
      "27": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 133,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 133,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "28": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "29": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "30": {
        loc: {
          start: {
            line: 157,
            column: 14
          },
          end: {
            line: 157,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 53
          },
          end: {
            line: 157,
            column: 59
          }
        }, {
          start: {
            line: 157,
            column: 62
          },
          end: {
            line: 157,
            column: 75
          }
        }],
        line: 157
      },
      "31": {
        loc: {
          start: {
            line: 157,
            column: 14
          },
          end: {
            line: 157,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 14
          },
          end: {
            line: 157,
            column: 29
          }
        }, {
          start: {
            line: 157,
            column: 33
          },
          end: {
            line: 157,
            column: 50
          }
        }],
        line: 157
      },
      "32": {
        loc: {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "33": {
        loc: {
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 163,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 163,
            column: 25
          }
        }, {
          start: {
            line: 163,
            column: 29
          },
          end: {
            line: 163,
            column: 34
          }
        }],
        line: 163
      },
      "34": {
        loc: {
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 168,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 168,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "35": {
        loc: {
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 177,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 177,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "36": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "37": {
        loc: {
          start: {
            line: 190,
            column: 14
          },
          end: {
            line: 190,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 190,
            column: 53
          },
          end: {
            line: 190,
            column: 59
          }
        }, {
          start: {
            line: 190,
            column: 62
          },
          end: {
            line: 190,
            column: 75
          }
        }],
        line: 190
      },
      "38": {
        loc: {
          start: {
            line: 190,
            column: 14
          },
          end: {
            line: 190,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 14
          },
          end: {
            line: 190,
            column: 29
          }
        }, {
          start: {
            line: 190,
            column: 33
          },
          end: {
            line: 190,
            column: 50
          }
        }],
        line: 190
      },
      "39": {
        loc: {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/services/profile/writer.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/services/profile/writer.ts"],
      sourcesContent: ["/**\n * PROFILE WRITER MODULE\n * \n * Created: 2025-01-09\n * Last Modified: 2025-01-09\n * Last Modified Summary: Extracted from profileService.ts for modular architecture - handles write operations\n */\n\nimport supabase from '@/services/supabase/client'\nimport { logger, logProfile } from '@/utils/logger'\nimport { ProfileMapper } from './mapper'\nimport { ProfileReader } from './reader'\nimport type { ScalableProfile, ScalableProfileFormData, ProfileAnalytics, ProfileServiceResponse } from './types'\n\n// =====================================================================\n// \u270F\uFE0F PROFILE WRITE OPERATIONS\n// =====================================================================\n\nexport class ProfileWriter {\n  \n  /**\n   * Update profile with comprehensive field support\n   */\n  static async updateProfile(\n    userId: string,\n    formData: ScalableProfileFormData\n  ): Promise<ProfileServiceResponse<ScalableProfile>> {\n    if (!userId?.trim()) {\n      return { success: false, error: 'User ID is required' }\n    }\n\n    try {\n      // Verify authentication\n      const { data: { user }, error: authError } = await supabase.auth.getUser()\n      \n      if (authError || !user) {\n        return { success: false, error: 'No authenticated user. Please log in again.' }\n      }\n\n      if (user.id !== userId) {\n        return { success: false, error: 'Permission denied: You can only update your own profile' }\n      }\n\n      logProfile('updateProfile', { userId, formData })\n\n      // Get current profile to merge with updates\n      const currentProfile = await ProfileReader.getProfile(userId);\n      \n      // Merge current profile with form data\n      const updatedProfile: Partial<ScalableProfile> = {\n        ...currentProfile,\n        ...formData,\n        updated_at: new Date().toISOString(),\n        last_active_at: new Date().toISOString(),\n      }\n\n      // Map to database format\n      const updateData = ProfileMapper.mapProfileToDatabase(updatedProfile);\n\n      // Perform the update\n      const { data, error } = await supabase\n        .from('profiles')\n        .update(updateData)\n        .eq('id', userId)\n        .select('*')\n        .single()\n\n      if (error) {\n        logger.error('ProfileWriter.updateProfile database error:', error)\n        \n        // Handle specific error cases\n        if (error.code === '23505' && error.message?.includes('duplicate')) {\n          return { success: false, error: 'Username is already taken. Please choose another username.' }\n        }\n        \n        if (error.message?.includes(\"'avatar_url'\")) {\n          // Column missing, but treat as non-fatal and warn\n          return { success: true, warning: 'avatar_url column missing, profile saved without avatar', data: updatedProfile as any } as any\n        }\n        return { success: false, error: 'Failed to update profile. Please try again.' }\n      }\n\n      if (!data) {\n        // Update succeeded but no data returned (likely RLS policy issue)\n        // Fetch the updated profile separately\n        const fetched = await ProfileReader.getProfile(userId);\n        if (fetched) {\n          logProfile('updateProfile success (via separate fetch)', { userId, profile: fetched })\n          return { success: true, data: fetched }\n        } else {\n          return { success: false, error: 'Profile update succeeded but could not retrieve updated data' }\n        }\n      }\n\n      const finalProfile = ProfileMapper.mapDatabaseToProfile(data);\n      logProfile('updateProfile success', { userId, profile: finalProfile })\n\n      return { success: true, data: finalProfile }\n\n    } catch (err) {\n      logger.error('ProfileWriter.updateProfile unexpected error:', err)\n      return { success: false, error: 'An unexpected error occurred while updating profile' }\n    }\n  }\n\n  /**\n   * Create a new profile\n   */\n  static async createProfile(\n    userId: string,\n    formData: ScalableProfileFormData\n  ): Promise<ProfileServiceResponse<ScalableProfile>> {\n    if (!userId?.trim()) {\n      return { success: false, error: 'User ID is required' }\n    }\n\n    try {\n      logProfile('createProfile', { userId, formData })\n\n      // Prepare profile data\n      const profileData: Partial<ScalableProfile> = {\n        id: userId,\n        ...formData,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString(),\n        last_active_at: new Date().toISOString(),\n        status: 'active',\n        onboarding_completed: false,\n        profile_views: 0,\n        follower_count: 0,\n        following_count: 0,\n        campaign_count: 0,\n        total_raised: 0,\n        total_donated: 0\n      }\n\n      // Map to database format\n      const insertData = ProfileMapper.mapProfileToDatabase(profileData);\n      insertData.id = userId; // Ensure ID is set\n\n      const { data, error } = await supabase\n        .from('profiles')\n        .insert(insertData)\n        .select('*')\n        .single()\n\n      if (error) {\n        logger.error('ProfileWriter.createProfile database error:', error)\n        \n        if (error.code === '23505') {\n          return { success: false, error: 'Profile already exists or username is taken' }\n        }\n        \n        return { success: false, error: 'Failed to create profile. Please try again.' }\n      }\n\n      const newProfile = ProfileMapper.mapDatabaseToProfile(data);\n      logProfile('createProfile success', { userId, profile: newProfile })\n\n      return { success: true, data: newProfile }\n\n    } catch (err) {\n      logger.error('ProfileWriter.createProfile unexpected error:', err)\n      return { success: false, error: 'An unexpected error occurred while creating profile' }\n    }\n  }\n\n  /**\n   * Update profile analytics\n   */\n  static async updateAnalytics(\n    userId: string,\n    analytics: ProfileAnalytics\n  ): Promise<ProfileServiceResponse<void>> {\n    if (!userId?.trim()) {\n      return { success: false, error: 'User ID is required' }\n    }\n\n    try {\n      // Get current profile\n      const currentProfile = await ProfileReader.getProfile(userId);\n      if (!currentProfile) {\n        return { success: false, error: 'Profile not found' }\n      }\n\n      // Merge analytics\n      const updatedProfile: Partial<ScalableProfile> = {\n        ...currentProfile,\n        ...analytics,\n        updated_at: new Date().toISOString()\n      }\n\n      // Map to database format\n      const updateData = ProfileMapper.mapProfileToDatabase(updatedProfile);\n\n      const { error } = await supabase\n        .from('profiles')\n        .update(updateData)\n        .eq('id', userId)\n\n      if (error) {\n        logger.error('ProfileWriter.updateAnalytics error:', error)\n        return { success: false, error: 'Failed to update analytics' }\n      }\n\n      return { success: true }\n\n    } catch (err) {\n      logger.error('ProfileWriter.updateAnalytics unexpected error:', err)\n      return { success: false, error: 'An unexpected error occurred while updating analytics' }\n    }\n  }\n\n  /**\n   * Delete profile\n   */\n  static async deleteProfile(userId: string): Promise<ProfileServiceResponse<void>> {\n    if (!userId?.trim()) {\n      return { success: false, error: 'User ID is required' }\n    }\n\n    try {\n      // Verify authentication\n      const { data: { user }, error: authError } = await supabase.auth.getUser()\n      \n      if (authError || !user) {\n        return { success: false, error: 'Authentication required' }\n      }\n\n      if (user.id !== userId) {\n        return { success: false, error: 'Permission denied: Can only delete your own profile' }\n      }\n\n      logProfile('deleteProfile', { userId })\n\n      const { error } = await supabase\n        .from('profiles')\n        .delete()\n        .eq('id', userId)\n\n      if (error) {\n        logger.error('ProfileWriter.deleteProfile error:', error)\n        return { success: false, error: 'Failed to delete profile' }\n      }\n\n      logProfile('deleteProfile success', { userId })\n      return { success: true }\n\n    } catch (err) {\n      logger.error('ProfileWriter.deleteProfile unexpected error:', err)\n      return { success: false, error: 'An unexpected error occurred while deleting profile' }\n    }\n  }\n\n  /**\n   * Fallback profile update (direct database update)\n   */\n  static async fallbackUpdate(\n    userId: string,\n    updates: Record<string, any>\n  ): Promise<ProfileServiceResponse<any>> {\n    if (!userId?.trim()) {\n      return { success: false, error: 'User ID is required' }\n    }\n\n    try {\n      // Prefer Postgres function for atomic profile update when available\n      const { data, error } = await supabase.rpc('update_profile', {\n        profile_data: updates\n      })\n\n      if (error) {\n        logger.error('ProfileWriter.fallbackUpdate error:', error)\n        return { success: false, error: 'All profile update methods failed: ' + error.message }\n      }\n\n      return { success: true, data }\n\n    } catch (err) {\n      logger.error('ProfileWriter.fallbackUpdate unexpected error:', err)\n      return { success: false, error: 'An unexpected error occurred during fallback update' }\n    }\n  }\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "eeb2d28ab354339c4a24e3b06113069e49664b61"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1hsq4k2igm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1hsq4k2igm();
var __importDefault =
/* istanbul ignore next */
(cov_1hsq4k2igm().s[0]++,
/* istanbul ignore next */
(cov_1hsq4k2igm().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1hsq4k2igm().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1hsq4k2igm().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1hsq4k2igm().f[0]++;
  cov_1hsq4k2igm().s[1]++;
  return /* istanbul ignore next */(cov_1hsq4k2igm().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1hsq4k2igm().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1hsq4k2igm().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1hsq4k2igm().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1hsq4k2igm().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1hsq4k2igm().s[3]++;
exports.ProfileWriter = void 0;
const client_1 =
/* istanbul ignore next */
(cov_1hsq4k2igm().s[4]++, __importDefault(require("@/services/supabase/client")));
const logger_1 =
/* istanbul ignore next */
(cov_1hsq4k2igm().s[5]++, require("@/utils/logger"));
const mapper_1 =
/* istanbul ignore next */
(cov_1hsq4k2igm().s[6]++, require("./mapper"));
const reader_1 =
/* istanbul ignore next */
(cov_1hsq4k2igm().s[7]++, require("./reader"));
// =====================================================================
// ✏️ PROFILE WRITE OPERATIONS
// =====================================================================
class ProfileWriter {
  /**
   * Update profile with comprehensive field support
   */
  static async updateProfile(userId, formData) {
    /* istanbul ignore next */
    cov_1hsq4k2igm().f[1]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1hsq4k2igm().s[8]++;
    if (!(
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[5][0]++, userId === null) ||
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[5][1]++, userId === void 0) ?
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[4][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[4][1]++, userId.trim()))) {
      /* istanbul ignore next */
      cov_1hsq4k2igm().b[3][0]++;
      cov_1hsq4k2igm().s[9]++;
      return {
        success: false,
        error: 'User ID is required'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1hsq4k2igm().b[3][1]++;
    }
    cov_1hsq4k2igm().s[10]++;
    try {
      // Verify authentication
      const {
        data: {
          user
        },
        error: authError
      } =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[11]++, await client_1.default.auth.getUser());
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[12]++;
      if (
      /* istanbul ignore next */
      (cov_1hsq4k2igm().b[7][0]++, authError) ||
      /* istanbul ignore next */
      (cov_1hsq4k2igm().b[7][1]++, !user)) {
        /* istanbul ignore next */
        cov_1hsq4k2igm().b[6][0]++;
        cov_1hsq4k2igm().s[13]++;
        return {
          success: false,
          error: 'No authenticated user. Please log in again.'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1hsq4k2igm().b[6][1]++;
      }
      cov_1hsq4k2igm().s[14]++;
      if (user.id !== userId) {
        /* istanbul ignore next */
        cov_1hsq4k2igm().b[8][0]++;
        cov_1hsq4k2igm().s[15]++;
        return {
          success: false,
          error: 'Permission denied: You can only update your own profile'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1hsq4k2igm().b[8][1]++;
      }
      cov_1hsq4k2igm().s[16]++;
      (0, logger_1.logProfile)('updateProfile', {
        userId,
        formData
      });
      // Get current profile to merge with updates
      const currentProfile =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[17]++, await reader_1.ProfileReader.getProfile(userId));
      // Merge current profile with form data
      const updatedProfile =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[18]++, Object.assign(Object.assign(Object.assign({}, currentProfile), formData), {
        updated_at: new Date().toISOString(),
        last_active_at: new Date().toISOString()
      }));
      // Map to database format
      const updateData =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[19]++, mapper_1.ProfileMapper.mapProfileToDatabase(updatedProfile));
      // Perform the update
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[20]++, await client_1.default.from('profiles').update(updateData).eq('id', userId).select('*').single());
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[21]++;
      if (error) {
        /* istanbul ignore next */
        cov_1hsq4k2igm().b[9][0]++;
        cov_1hsq4k2igm().s[22]++;
        logger_1.logger.error('ProfileWriter.updateProfile database error:', error);
        // Handle specific error cases
        /* istanbul ignore next */
        cov_1hsq4k2igm().s[23]++;
        if (
        /* istanbul ignore next */
        (cov_1hsq4k2igm().b[11][0]++, error.code === '23505') &&
        /* istanbul ignore next */
        (cov_1hsq4k2igm().b[11][1]++,
        /* istanbul ignore next */
        (cov_1hsq4k2igm().b[13][0]++, (_a = error.message) === null) ||
        /* istanbul ignore next */
        (cov_1hsq4k2igm().b[13][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_1hsq4k2igm().b[12][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1hsq4k2igm().b[12][1]++, _a.includes('duplicate')))) {
          /* istanbul ignore next */
          cov_1hsq4k2igm().b[10][0]++;
          cov_1hsq4k2igm().s[24]++;
          return {
            success: false,
            error: 'Username is already taken. Please choose another username.'
          };
        } else
        /* istanbul ignore next */
        {
          cov_1hsq4k2igm().b[10][1]++;
        }
        cov_1hsq4k2igm().s[25]++;
        if (
        /* istanbul ignore next */
        (cov_1hsq4k2igm().b[16][0]++, (_b = error.message) === null) ||
        /* istanbul ignore next */
        (cov_1hsq4k2igm().b[16][1]++, _b === void 0) ?
        /* istanbul ignore next */
        (cov_1hsq4k2igm().b[15][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1hsq4k2igm().b[15][1]++, _b.includes("'avatar_url'"))) {
          /* istanbul ignore next */
          cov_1hsq4k2igm().b[14][0]++;
          cov_1hsq4k2igm().s[26]++;
          // Column missing, but treat as non-fatal and warn
          return {
            success: true,
            warning: 'avatar_url column missing, profile saved without avatar',
            data: updatedProfile
          };
        } else
        /* istanbul ignore next */
        {
          cov_1hsq4k2igm().b[14][1]++;
        }
        cov_1hsq4k2igm().s[27]++;
        return {
          success: false,
          error: 'Failed to update profile. Please try again.'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1hsq4k2igm().b[9][1]++;
      }
      cov_1hsq4k2igm().s[28]++;
      if (!data) {
        /* istanbul ignore next */
        cov_1hsq4k2igm().b[17][0]++;
        // Update succeeded but no data returned (likely RLS policy issue)
        // Fetch the updated profile separately
        const fetched =
        /* istanbul ignore next */
        (cov_1hsq4k2igm().s[29]++, await reader_1.ProfileReader.getProfile(userId));
        /* istanbul ignore next */
        cov_1hsq4k2igm().s[30]++;
        if (fetched) {
          /* istanbul ignore next */
          cov_1hsq4k2igm().b[18][0]++;
          cov_1hsq4k2igm().s[31]++;
          (0, logger_1.logProfile)('updateProfile success (via separate fetch)', {
            userId,
            profile: fetched
          });
          /* istanbul ignore next */
          cov_1hsq4k2igm().s[32]++;
          return {
            success: true,
            data: fetched
          };
        } else {
          /* istanbul ignore next */
          cov_1hsq4k2igm().b[18][1]++;
          cov_1hsq4k2igm().s[33]++;
          return {
            success: false,
            error: 'Profile update succeeded but could not retrieve updated data'
          };
        }
      } else
      /* istanbul ignore next */
      {
        cov_1hsq4k2igm().b[17][1]++;
      }
      const finalProfile =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[34]++, mapper_1.ProfileMapper.mapDatabaseToProfile(data));
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[35]++;
      (0, logger_1.logProfile)('updateProfile success', {
        userId,
        profile: finalProfile
      });
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[36]++;
      return {
        success: true,
        data: finalProfile
      };
    } catch (err) {
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[37]++;
      logger_1.logger.error('ProfileWriter.updateProfile unexpected error:', err);
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[38]++;
      return {
        success: false,
        error: 'An unexpected error occurred while updating profile'
      };
    }
  }
  /**
   * Create a new profile
   */
  static async createProfile(userId, formData) {
    /* istanbul ignore next */
    cov_1hsq4k2igm().f[2]++;
    cov_1hsq4k2igm().s[39]++;
    if (!(
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[21][0]++, userId === null) ||
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[21][1]++, userId === void 0) ?
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[20][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[20][1]++, userId.trim()))) {
      /* istanbul ignore next */
      cov_1hsq4k2igm().b[19][0]++;
      cov_1hsq4k2igm().s[40]++;
      return {
        success: false,
        error: 'User ID is required'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1hsq4k2igm().b[19][1]++;
    }
    cov_1hsq4k2igm().s[41]++;
    try {
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[42]++;
      (0, logger_1.logProfile)('createProfile', {
        userId,
        formData
      });
      // Prepare profile data
      const profileData =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[43]++, Object.assign(Object.assign({
        id: userId
      }, formData), {
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString(),
        last_active_at: new Date().toISOString(),
        status: 'active',
        onboarding_completed: false,
        profile_views: 0,
        follower_count: 0,
        following_count: 0,
        campaign_count: 0,
        total_raised: 0,
        total_donated: 0
      }));
      // Map to database format
      const insertData =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[44]++, mapper_1.ProfileMapper.mapProfileToDatabase(profileData));
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[45]++;
      insertData.id = userId; // Ensure ID is set
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[46]++, await client_1.default.from('profiles').insert(insertData).select('*').single());
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[47]++;
      if (error) {
        /* istanbul ignore next */
        cov_1hsq4k2igm().b[22][0]++;
        cov_1hsq4k2igm().s[48]++;
        logger_1.logger.error('ProfileWriter.createProfile database error:', error);
        /* istanbul ignore next */
        cov_1hsq4k2igm().s[49]++;
        if (error.code === '23505') {
          /* istanbul ignore next */
          cov_1hsq4k2igm().b[23][0]++;
          cov_1hsq4k2igm().s[50]++;
          return {
            success: false,
            error: 'Profile already exists or username is taken'
          };
        } else
        /* istanbul ignore next */
        {
          cov_1hsq4k2igm().b[23][1]++;
        }
        cov_1hsq4k2igm().s[51]++;
        return {
          success: false,
          error: 'Failed to create profile. Please try again.'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1hsq4k2igm().b[22][1]++;
      }
      const newProfile =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[52]++, mapper_1.ProfileMapper.mapDatabaseToProfile(data));
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[53]++;
      (0, logger_1.logProfile)('createProfile success', {
        userId,
        profile: newProfile
      });
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[54]++;
      return {
        success: true,
        data: newProfile
      };
    } catch (err) {
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[55]++;
      logger_1.logger.error('ProfileWriter.createProfile unexpected error:', err);
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[56]++;
      return {
        success: false,
        error: 'An unexpected error occurred while creating profile'
      };
    }
  }
  /**
   * Update profile analytics
   */
  static async updateAnalytics(userId, analytics) {
    /* istanbul ignore next */
    cov_1hsq4k2igm().f[3]++;
    cov_1hsq4k2igm().s[57]++;
    if (!(
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[26][0]++, userId === null) ||
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[26][1]++, userId === void 0) ?
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[25][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[25][1]++, userId.trim()))) {
      /* istanbul ignore next */
      cov_1hsq4k2igm().b[24][0]++;
      cov_1hsq4k2igm().s[58]++;
      return {
        success: false,
        error: 'User ID is required'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1hsq4k2igm().b[24][1]++;
    }
    cov_1hsq4k2igm().s[59]++;
    try {
      // Get current profile
      const currentProfile =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[60]++, await reader_1.ProfileReader.getProfile(userId));
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[61]++;
      if (!currentProfile) {
        /* istanbul ignore next */
        cov_1hsq4k2igm().b[27][0]++;
        cov_1hsq4k2igm().s[62]++;
        return {
          success: false,
          error: 'Profile not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1hsq4k2igm().b[27][1]++;
      }
      // Merge analytics
      const updatedProfile =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[63]++, Object.assign(Object.assign(Object.assign({}, currentProfile), analytics), {
        updated_at: new Date().toISOString()
      }));
      // Map to database format
      const updateData =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[64]++, mapper_1.ProfileMapper.mapProfileToDatabase(updatedProfile));
      const {
        error
      } =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[65]++, await client_1.default.from('profiles').update(updateData).eq('id', userId));
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[66]++;
      if (error) {
        /* istanbul ignore next */
        cov_1hsq4k2igm().b[28][0]++;
        cov_1hsq4k2igm().s[67]++;
        logger_1.logger.error('ProfileWriter.updateAnalytics error:', error);
        /* istanbul ignore next */
        cov_1hsq4k2igm().s[68]++;
        return {
          success: false,
          error: 'Failed to update analytics'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1hsq4k2igm().b[28][1]++;
      }
      cov_1hsq4k2igm().s[69]++;
      return {
        success: true
      };
    } catch (err) {
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[70]++;
      logger_1.logger.error('ProfileWriter.updateAnalytics unexpected error:', err);
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[71]++;
      return {
        success: false,
        error: 'An unexpected error occurred while updating analytics'
      };
    }
  }
  /**
   * Delete profile
   */
  static async deleteProfile(userId) {
    /* istanbul ignore next */
    cov_1hsq4k2igm().f[4]++;
    cov_1hsq4k2igm().s[72]++;
    if (!(
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[31][0]++, userId === null) ||
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[31][1]++, userId === void 0) ?
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[30][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[30][1]++, userId.trim()))) {
      /* istanbul ignore next */
      cov_1hsq4k2igm().b[29][0]++;
      cov_1hsq4k2igm().s[73]++;
      return {
        success: false,
        error: 'User ID is required'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1hsq4k2igm().b[29][1]++;
    }
    cov_1hsq4k2igm().s[74]++;
    try {
      // Verify authentication
      const {
        data: {
          user
        },
        error: authError
      } =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[75]++, await client_1.default.auth.getUser());
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[76]++;
      if (
      /* istanbul ignore next */
      (cov_1hsq4k2igm().b[33][0]++, authError) ||
      /* istanbul ignore next */
      (cov_1hsq4k2igm().b[33][1]++, !user)) {
        /* istanbul ignore next */
        cov_1hsq4k2igm().b[32][0]++;
        cov_1hsq4k2igm().s[77]++;
        return {
          success: false,
          error: 'Authentication required'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1hsq4k2igm().b[32][1]++;
      }
      cov_1hsq4k2igm().s[78]++;
      if (user.id !== userId) {
        /* istanbul ignore next */
        cov_1hsq4k2igm().b[34][0]++;
        cov_1hsq4k2igm().s[79]++;
        return {
          success: false,
          error: 'Permission denied: Can only delete your own profile'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1hsq4k2igm().b[34][1]++;
      }
      cov_1hsq4k2igm().s[80]++;
      (0, logger_1.logProfile)('deleteProfile', {
        userId
      });
      const {
        error
      } =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[81]++, await client_1.default.from('profiles').delete().eq('id', userId));
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[82]++;
      if (error) {
        /* istanbul ignore next */
        cov_1hsq4k2igm().b[35][0]++;
        cov_1hsq4k2igm().s[83]++;
        logger_1.logger.error('ProfileWriter.deleteProfile error:', error);
        /* istanbul ignore next */
        cov_1hsq4k2igm().s[84]++;
        return {
          success: false,
          error: 'Failed to delete profile'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1hsq4k2igm().b[35][1]++;
      }
      cov_1hsq4k2igm().s[85]++;
      (0, logger_1.logProfile)('deleteProfile success', {
        userId
      });
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[86]++;
      return {
        success: true
      };
    } catch (err) {
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[87]++;
      logger_1.logger.error('ProfileWriter.deleteProfile unexpected error:', err);
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[88]++;
      return {
        success: false,
        error: 'An unexpected error occurred while deleting profile'
      };
    }
  }
  /**
   * Fallback profile update (direct database update)
   */
  static async fallbackUpdate(userId, updates) {
    /* istanbul ignore next */
    cov_1hsq4k2igm().f[5]++;
    cov_1hsq4k2igm().s[89]++;
    if (!(
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[38][0]++, userId === null) ||
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[38][1]++, userId === void 0) ?
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[37][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1hsq4k2igm().b[37][1]++, userId.trim()))) {
      /* istanbul ignore next */
      cov_1hsq4k2igm().b[36][0]++;
      cov_1hsq4k2igm().s[90]++;
      return {
        success: false,
        error: 'User ID is required'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1hsq4k2igm().b[36][1]++;
    }
    cov_1hsq4k2igm().s[91]++;
    try {
      // Prefer Postgres function for atomic profile update when available
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_1hsq4k2igm().s[92]++, await client_1.default.rpc('update_profile', {
        profile_data: updates
      }));
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[93]++;
      if (error) {
        /* istanbul ignore next */
        cov_1hsq4k2igm().b[39][0]++;
        cov_1hsq4k2igm().s[94]++;
        logger_1.logger.error('ProfileWriter.fallbackUpdate error:', error);
        /* istanbul ignore next */
        cov_1hsq4k2igm().s[95]++;
        return {
          success: false,
          error: 'All profile update methods failed: ' + error.message
        };
      } else
      /* istanbul ignore next */
      {
        cov_1hsq4k2igm().b[39][1]++;
      }
      cov_1hsq4k2igm().s[96]++;
      return {
        success: true,
        data
      };
    } catch (err) {
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[97]++;
      logger_1.logger.error('ProfileWriter.fallbackUpdate unexpected error:', err);
      /* istanbul ignore next */
      cov_1hsq4k2igm().s[98]++;
      return {
        success: false,
        error: 'An unexpected error occurred during fallback update'
      };
    }
  }
}
/* istanbul ignore next */
cov_1hsq4k2igm().s[99]++;
exports.ProfileWriter = ProfileWriter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,