25577c491a7dd73a20dc5d1083c5a65f
"use strict";

/**
 * PROFILE SERVICE - CLEAN MODULAR ARCHITECTURE
 *
 * Created: 2025-01-08
 * Last Modified: 2025-01-09
 * Last Modified Summary: âœ… REFACTORED from 808-line monolith to modular architecture - Option A Phase 1 Complete
 *
 * BEFORE: 808 lines in single file (102% over 400-line limit)
 * AFTER: Clean imports from 5 focused modules (~200 lines each)
 *
 * Performance Impact: Improved tree-shaking, better code splitting, easier maintenance
 * Architecture: Follows Single Responsibility Principle, DRY principles
 *
 * Module Structure:
 * - types.ts: All TypeScript interfaces and types
 * - mapper.ts: Database schema mapping logic
 * - reader.ts: All read operations (getProfile, searchProfiles, etc.)
 * - writer.ts: All write operations (updateProfile, createProfile, etc.)
 * - index.ts: Combined service interface
 */
/* istanbul ignore next */
function cov_1qmedhe2ib() {
  var path = "/home/g/dev/orangecat/src/services/profileService.ts";
  var hash = "3287b7728352ea4e49e4fc274787d05117fdfc2b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/services/profileService.ts",
    statementMap: {
      "0": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 62
        }
      },
      "1": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 337
        }
      },
      "2": {
        start: {
          line: 25,
          column: 14
        },
        end: {
          line: 25,
          column: 40
        }
      },
      "3": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 124
        }
      },
      "4": {
        start: {
          line: 26,
          column: 88
        },
        end: {
          line: 26,
          column: 118
        }
      },
      "5": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 122
        }
      },
      "6": {
        start: {
          line: 27,
          column: 87
        },
        end: {
          line: 27,
          column: 116
        }
      },
      "7": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 122
        }
      },
      "8": {
        start: {
          line: 28,
          column: 87
        },
        end: {
          line: 28,
          column: 116
        }
      },
      "9": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 29,
          column: 122
        }
      },
      "10": {
        start: {
          line: 29,
          column: 87
        },
        end: {
          line: 29,
          column: 116
        }
      },
      "11": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 42
        }
      },
      "12": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 32,
          column: 84
        }
      },
      "13": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 33,
          column: 90
        }
      },
      "14": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 34,
          column: 90
        }
      },
      "15": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 90
        }
      },
      "16": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 92
        }
      },
      "17": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 37,
          column: 92
        }
      },
      "18": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 94
        }
      },
      "19": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 106
        }
      },
      "20": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 40,
          column: 106
        }
      },
      "21": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 42,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 26,
            column: 74
          },
          end: {
            line: 26,
            column: 75
          }
        },
        loc: {
          start: {
            line: 26,
            column: 86
          },
          end: {
            line: 26,
            column: 120
          }
        },
        line: 26
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 73
          },
          end: {
            line: 27,
            column: 74
          }
        },
        loc: {
          start: {
            line: 27,
            column: 85
          },
          end: {
            line: 27,
            column: 118
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 73
          },
          end: {
            line: 28,
            column: 74
          }
        },
        loc: {
          start: {
            line: 28,
            column: 85
          },
          end: {
            line: 28,
            column: 118
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 73
          },
          end: {
            line: 29,
            column: 74
          }
        },
        loc: {
          start: {
            line: 29,
            column: 85
          },
          end: {
            line: 29,
            column: 118
          }
        },
        line: 29
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/services/profileService.ts",
      mappings: ";AAAA;;;;;;;;;;;;;;;;;;;GAmBG;;;AAEH,kDAAkD;AAClD,yCASyB;AARvB,uGAAA,cAAc,OAAA;AACd,sGAAA,aAAa,OAAA;AACb,sGAAA,aAAa,OAAA;AACb,sGAAA,aAAa,OAAA;AAUf,6DAA6D;AAC7D,2CAAiD;AAEpC,QAAA,UAAU,GAAG,sBAAc,CAAC,UAAU,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AAC5D,QAAA,aAAa,GAAG,sBAAc,CAAC,aAAa,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AAClE,QAAA,aAAa,GAAG,sBAAc,CAAC,aAAa,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AAClE,QAAA,aAAa,GAAG,sBAAc,CAAC,aAAa,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AAClE,QAAA,cAAc,GAAG,sBAAc,CAAC,cAAc,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AACpE,QAAA,cAAc,GAAG,sBAAc,CAAC,cAAc,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AACpE,QAAA,eAAe,GAAG,sBAAc,CAAC,eAAe,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AACtE,QAAA,qBAAqB,GAAG,sBAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AAClF,QAAA,qBAAqB,GAAG,sBAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,sBAAc,CAAC,CAAC;AAE/F,4CAA4C;AAC5C,kBAAe,sBAAc,CAAC",
      names: [],
      sources: ["/home/g/dev/orangecat/src/services/profileService.ts"],
      sourcesContent: ["/**\n * PROFILE SERVICE - CLEAN MODULAR ARCHITECTURE\n * \n * Created: 2025-01-08\n * Last Modified: 2025-01-09\n * Last Modified Summary: \u2705 REFACTORED from 808-line monolith to modular architecture - Option A Phase 1 Complete\n * \n * BEFORE: 808 lines in single file (102% over 400-line limit)\n * AFTER: Clean imports from 5 focused modules (~200 lines each)\n * \n * Performance Impact: Improved tree-shaking, better code splitting, easier maintenance\n * Architecture: Follows Single Responsibility Principle, DRY principles\n * \n * Module Structure:\n * - types.ts: All TypeScript interfaces and types\n * - mapper.ts: Database schema mapping logic\n * - reader.ts: All read operations (getProfile, searchProfiles, etc.)\n * - writer.ts: All write operations (updateProfile, createProfile, etc.)\n * - index.ts: Combined service interface\n */\n\n// Export everything from the modular architecture\nexport {\n  ProfileService,\n  ProfileMapper,\n  ProfileReader,\n  ProfileWriter,\n  type ScalableProfile,\n  type ScalableProfileFormData,\n  type ProfileAnalytics,\n  type ProfileServiceResponse\n} from './profile/index';\n\n// Legacy compatibility exports\nexport type { Profile, ProfileFormData } from '@/types/database';\n\n// Re-export some common functions for backward compatibility\nimport { ProfileService } from './profile/index';\n\nexport const getProfile = ProfileService.getProfile.bind(ProfileService);\nexport const updateProfile = ProfileService.updateProfile.bind(ProfileService);\nexport const createProfile = ProfileService.createProfile.bind(ProfileService);\nexport const deleteProfile = ProfileService.deleteProfile.bind(ProfileService);\nexport const getAllProfiles = ProfileService.getAllProfiles.bind(ProfileService);\nexport const searchProfiles = ProfileService.searchProfiles.bind(ProfileService);\nexport const updateAnalytics = ProfileService.updateAnalytics.bind(ProfileService);\nexport const incrementProfileViews = ProfileService.incrementProfileViews.bind(ProfileService);\nexport const fallbackProfileUpdate = ProfileService.fallbackProfileUpdate.bind(ProfileService);\n\n// Default export for backward compatibility\nexport default ProfileService; "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3287b7728352ea4e49e4fc274787d05117fdfc2b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1qmedhe2ib = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1qmedhe2ib();
cov_1qmedhe2ib().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1qmedhe2ib().s[1]++;
exports.fallbackProfileUpdate = exports.incrementProfileViews = exports.updateAnalytics = exports.searchProfiles = exports.getAllProfiles = exports.deleteProfile = exports.createProfile = exports.updateProfile = exports.getProfile = exports.ProfileWriter = exports.ProfileReader = exports.ProfileMapper = exports.ProfileService = void 0;
// Export everything from the modular architecture
var index_1 =
/* istanbul ignore next */
(cov_1qmedhe2ib().s[2]++, require("./profile/index"));
/* istanbul ignore next */
cov_1qmedhe2ib().s[3]++;
Object.defineProperty(exports, "ProfileService", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1qmedhe2ib().f[0]++;
    cov_1qmedhe2ib().s[4]++;
    return index_1.ProfileService;
  }
});
/* istanbul ignore next */
cov_1qmedhe2ib().s[5]++;
Object.defineProperty(exports, "ProfileMapper", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1qmedhe2ib().f[1]++;
    cov_1qmedhe2ib().s[6]++;
    return index_1.ProfileMapper;
  }
});
/* istanbul ignore next */
cov_1qmedhe2ib().s[7]++;
Object.defineProperty(exports, "ProfileReader", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1qmedhe2ib().f[2]++;
    cov_1qmedhe2ib().s[8]++;
    return index_1.ProfileReader;
  }
});
/* istanbul ignore next */
cov_1qmedhe2ib().s[9]++;
Object.defineProperty(exports, "ProfileWriter", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1qmedhe2ib().f[3]++;
    cov_1qmedhe2ib().s[10]++;
    return index_1.ProfileWriter;
  }
});
// Re-export some common functions for backward compatibility
const index_2 =
/* istanbul ignore next */
(cov_1qmedhe2ib().s[11]++, require("./profile/index"));
/* istanbul ignore next */
cov_1qmedhe2ib().s[12]++;
exports.getProfile = index_2.ProfileService.getProfile.bind(index_2.ProfileService);
/* istanbul ignore next */
cov_1qmedhe2ib().s[13]++;
exports.updateProfile = index_2.ProfileService.updateProfile.bind(index_2.ProfileService);
/* istanbul ignore next */
cov_1qmedhe2ib().s[14]++;
exports.createProfile = index_2.ProfileService.createProfile.bind(index_2.ProfileService);
/* istanbul ignore next */
cov_1qmedhe2ib().s[15]++;
exports.deleteProfile = index_2.ProfileService.deleteProfile.bind(index_2.ProfileService);
/* istanbul ignore next */
cov_1qmedhe2ib().s[16]++;
exports.getAllProfiles = index_2.ProfileService.getAllProfiles.bind(index_2.ProfileService);
/* istanbul ignore next */
cov_1qmedhe2ib().s[17]++;
exports.searchProfiles = index_2.ProfileService.searchProfiles.bind(index_2.ProfileService);
/* istanbul ignore next */
cov_1qmedhe2ib().s[18]++;
exports.updateAnalytics = index_2.ProfileService.updateAnalytics.bind(index_2.ProfileService);
/* istanbul ignore next */
cov_1qmedhe2ib().s[19]++;
exports.incrementProfileViews = index_2.ProfileService.incrementProfileViews.bind(index_2.ProfileService);
/* istanbul ignore next */
cov_1qmedhe2ib().s[20]++;
exports.fallbackProfileUpdate = index_2.ProfileService.fallbackProfileUpdate.bind(index_2.ProfileService);
// Default export for backward compatibility
/* istanbul ignore next */
cov_1qmedhe2ib().s[21]++;
exports.default = index_2.ProfileService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,