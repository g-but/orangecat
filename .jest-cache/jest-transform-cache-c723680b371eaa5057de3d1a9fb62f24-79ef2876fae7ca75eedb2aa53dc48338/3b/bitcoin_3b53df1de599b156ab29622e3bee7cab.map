{"version":3,"names":["cov_u0ud3gfqs","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","convertUSDToBitcoin","formatBitcoinDisplay","formatTooltipDisplay","useBitcoinPrice","currency_1","require","legacyToNew","legacy","convertBitcoinToAll","bitcoin","newToLegacy","modern","usd","bits","satoshis","chf","usdAmount","conversion","modernConversion","formatSwissFrancs"],"sources":["/home/g/dev/orangecat/src/utils/bitcoin.ts"],"sourcesContent":["// Legacy bitcoin utility - redirects to new currency utilities\n// This file maintains backward compatibility while transitioning to the new system\n\nimport { \n  CurrencyConversion, \n  convertSatoshisToAll, \n  convertBitcoinToAll, \n  formatBitcoinDisplay as formatBitcoinAmount, \n  formatSwissFrancs, \n  formatBitcoinWithChf \n} from './currency'\n\n// Legacy interface for backward compatibility\nexport interface PriceConversion {\n  usd: number\n  bitcoin: number\n  /** @deprecated Use satoshis instead of bits */\n  bits: number\n  chf: number // Swiss francs\n}\n\n// Convert legacy PriceConversion to new CurrencyConversion\nfunction legacyToNew(legacy: PriceConversion): CurrencyConversion {\n  return convertBitcoinToAll(legacy.bitcoin)\n}\n\n// Convert new CurrencyConversion to legacy PriceConversion\nfunction newToLegacy(modern: CurrencyConversion): PriceConversion {\n  return {\n    usd: modern.usd,\n    bitcoin: modern.bitcoin,\n    bits: modern.satoshis / 100, // 1 \"bit\" was 100 satoshis in old system\n    chf: modern.chf\n  }\n}\n\n/**\n * @deprecated Use convertSatoshisToAll or convertBitcoinToAll from currency.ts instead\n */\nexport function convertUSDToBitcoin(usdAmount: number): PriceConversion {\n  // Rough conversion for backward compatibility\n  const bitcoin = usdAmount / 45000 // Using mock rate\n  const conversion = convertBitcoinToAll(bitcoin)\n  return newToLegacy(conversion)\n}\n\n/**\n * @deprecated Use formatBitcoinDisplay from currency.ts instead\n * This now properly displays Bitcoin instead of \"bits\"\n */\nexport function formatBitcoinDisplay(conversion: PriceConversion): string {\n  const modernConversion = legacyToNew(conversion)\n  return formatBitcoinAmount(modernConversion.bitcoin)\n}\n\n/**\n * @deprecated Use formatSwissFrancs from currency.ts instead\n */\nexport function formatTooltipDisplay(conversion: PriceConversion): string {\n  return formatSwissFrancs(conversion.chf)\n}\n\n/**\n * @deprecated Use useBitcoinPrice from currency.ts instead\n */\nexport function useBitcoinPrice() {\n  // Redirect to new implementation\n  const { useBitcoinPrice } = require('./currency')\n  return useBitcoinPrice()\n} "],"mappings":"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","ignoreList":[]}