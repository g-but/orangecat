e5017f829ac4ec5b870999c80ec0a056
'use client';
"use strict";

/* istanbul ignore next */
function cov_1ddlr4k2fy() {
  var path = "/home/g/dev/orangecat/src/services/supabase/profiles.ts";
  var hash = "1fa2358f05a8bef309298954b0f6f2960078ef09";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/services/supabase/profiles.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 22
        },
        end: {
          line: 5,
          column: 1
        }
      },
      "1": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 4,
          column: 62
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "3": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 34
        }
      },
      "4": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 32
        }
      },
      "5": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 38
        }
      },
      "6": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 38
        }
      },
      "7": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 50
        }
      },
      "8": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 52
        }
      },
      "9": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 40
        }
      },
      "10": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 50
        }
      },
      "11": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 38
        }
      },
      "12": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 53
        }
      },
      "13": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "14": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "15": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "16": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 86
        }
      },
      "17": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "18": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 64
        }
      },
      "19": {
        start: {
          line: 30,
          column: 32
        },
        end: {
          line: 34,
          column: 21
        }
      },
      "20": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "21": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 39,
          column: 13
        }
      },
      "22": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 77
        }
      },
      "23": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 51
        }
      },
      "24": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 98
        }
      },
      "25": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 56
        }
      },
      "26": {
        start: {
          line: 44,
          column: 24
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "27": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 80
        }
      },
      "28": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 46
        }
      },
      "29": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 88
        }
      },
      "30": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 64
        }
      },
      "31": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "32": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 116
        }
      },
      "33": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "34": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 64
        }
      },
      "35": {
        start: {
          line: 77,
          column: 53
        },
        end: {
          line: 77,
          column: 90
        }
      },
      "36": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "37": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 108
        }
      },
      "38": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 68
        }
      },
      "39": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "40": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 122
        }
      },
      "41": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 62
        }
      },
      "42": {
        start: {
          line: 87,
          column: 28
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "43": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 96
        }
      },
      "44": {
        start: {
          line: 101,
          column: 23
        },
        end: {
          line: 105,
          column: 21
        }
      },
      "45": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "46": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 113
        }
      },
      "47": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 110,
          column: 13
        }
      },
      "48": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 107
        }
      },
      "49": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 93
        }
      },
      "50": {
        start: {
          line: 114,
          column: 24
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "51": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 80
        }
      },
      "52": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 46
        }
      },
      "53": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 104
        }
      },
      "54": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 65
        }
      },
      "55": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 257,
          column: 5
        }
      },
      "56": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 114
        }
      },
      "57": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "58": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 64
        }
      },
      "59": {
        start: {
          line: 147,
          column: 53
        },
        end: {
          line: 147,
          column: 90
        }
      },
      "60": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "61": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 108
        }
      },
      "62": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 68
        }
      },
      "63": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "64": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 122
        }
      },
      "65": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 62
        }
      },
      "66": {
        start: {
          line: 157,
          column: 28
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "67": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "68": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 117
        }
      },
      "69": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "70": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 125
        }
      },
      "71": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "72": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 107
        }
      },
      "73": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "74": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 65
        }
      },
      "75": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "76": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 65
        }
      },
      "77": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "78": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 115
        }
      },
      "79": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "80": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 131
        }
      },
      "81": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "82": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 135
        }
      },
      "83": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 86
        }
      },
      "84": {
        start: {
          line: 187,
          column: 61
        },
        end: {
          line: 191,
          column: 21
        }
      },
      "85": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "86": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 119
        }
      },
      "87": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 77
        }
      },
      "88": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "89": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 100
        }
      },
      "90": {
        start: {
          line: 200,
          column: 35
        },
        end: {
          line: 212,
          column: 13
        }
      },
      "91": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 217,
          column: 26
        }
      },
      "92": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 81
        }
      },
      "93": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 227,
          column: 26
        }
      },
      "94": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "95": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 115
        }
      },
      "96": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 234,
          column: 13
        }
      },
      "97": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 107
        }
      },
      "98": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 93
        }
      },
      "99": {
        start: {
          line: 238,
          column: 24
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "100": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 80
        }
      },
      "101": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 46
        }
      },
      "102": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 255,
          column: 102
        }
      },
      "103": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 65
        }
      },
      "104": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 281,
          column: 5
        }
      },
      "105": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "106": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 71
        }
      },
      "107": {
        start: {
          line: 267,
          column: 32
        },
        end: {
          line: 271,
          column: 21
        }
      },
      "108": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "109": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 112
        }
      },
      "110": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 88
        }
      },
      "111": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 61
        }
      },
      "112": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 102
        }
      },
      "113": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 92
        }
      },
      "114": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 308,
          column: 5
        }
      },
      "115": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "116": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 65
        }
      },
      "117": {
        start: {
          line: 291,
          column: 32
        },
        end: {
          line: 295,
          column: 21
        }
      },
      "118": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "119": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 299,
          column: 13
        }
      },
      "120": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 298,
          column: 66
        }
      },
      "121": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 300,
          column: 110
        }
      },
      "122": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 68
        }
      },
      "123": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 37
        }
      },
      "124": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 113
        }
      },
      "125": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 86
        }
      },
      "126": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 334,
          column: 5
        }
      },
      "127": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 317,
          column: 9
        }
      },
      "128": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 45
        }
      },
      "129": {
        start: {
          line: 318,
          column: 27
        },
        end: {
          line: 318,
          column: 46
        }
      },
      "130": {
        start: {
          line: 319,
          column: 32
        },
        end: {
          line: 324,
          column: 22
        }
      },
      "131": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 328,
          column: 9
        }
      },
      "132": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 100
        }
      },
      "133": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 68
        }
      },
      "134": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 49
        }
      },
      "135": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 103
        }
      },
      "136": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 84
        }
      },
      "137": {
        start: {
          line: 341,
          column: 19
        },
        end: {
          line: 341,
          column: 21
        }
      },
      "138": {
        start: {
          line: 343,
          column: 4
        },
        end: {
          line: 354,
          column: 5
        }
      },
      "139": {
        start: {
          line: 344,
          column: 25
        },
        end: {
          line: 344,
          column: 96
        }
      },
      "140": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 347,
          column: 9
        }
      },
      "141": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 71
        }
      },
      "142": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 350,
          column: 9
        }
      },
      "143": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 66
        }
      },
      "144": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 353,
          column: 9
        }
      },
      "145": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 96
        }
      },
      "146": {
        start: {
          line: 356,
          column: 4
        },
        end: {
          line: 361,
          column: 5
        }
      },
      "147": {
        start: {
          line: 357,
          column: 28
        },
        end: {
          line: 357,
          column: 103
        }
      },
      "148": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 360,
          column: 9
        }
      },
      "149": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 70
        }
      },
      "150": {
        start: {
          line: 363,
          column: 4
        },
        end: {
          line: 368,
          column: 5
        }
      },
      "151": {
        start: {
          line: 364,
          column: 20
        },
        end: {
          line: 364,
          column: 86
        }
      },
      "152": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 367,
          column: 9
        }
      },
      "153": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 366,
          column: 62
        }
      },
      "154": {
        start: {
          line: 370,
          column: 4
        },
        end: {
          line: 375,
          column: 5
        }
      },
      "155": {
        start: {
          line: 371,
          column: 27
        },
        end: {
          line: 371,
          column: 105
        }
      },
      "156": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 374,
          column: 9
        }
      },
      "157": {
        start: {
          line: 373,
          column: 12
        },
        end: {
          line: 373,
          column: 58
        }
      },
      "158": {
        start: {
          line: 376,
          column: 4
        },
        end: {
          line: 376,
          column: 50
        }
      },
      "159": {
        start: {
          line: 382,
          column: 4
        },
        end: {
          line: 401,
          column: 5
        }
      },
      "160": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 383,
          column: 87
        }
      },
      "161": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 386,
          column: 9
        }
      },
      "162": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 385,
          column: 52
        }
      },
      "163": {
        start: {
          line: 387,
          column: 26
        },
        end: {
          line: 390,
          column: 29
        }
      },
      "164": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 394,
          column: 9
        }
      },
      "165": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 392,
          column: 98
        }
      },
      "166": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 393,
          column: 74
        }
      },
      "167": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 395,
          column: 80
        }
      },
      "168": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 396,
          column: 31
        }
      },
      "169": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 399,
          column: 104
        }
      },
      "170": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 400,
          column: 53
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 57
          }
        },
        loc: {
          start: {
            line: 3,
            column: 71
          },
          end: {
            line: 5,
            column: 1
          }
        },
        line: 3
      },
      "1": {
        name: "getProfiles",
        decl: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 26
          }
        },
        loc: {
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "getProfile",
        decl: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 25
          }
        },
        loc: {
          start: {
            line: 24,
            column: 34
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 24
      },
      "3": {
        name: "createProfile",
        decl: {
          start: {
            line: 68,
            column: 15
          },
          end: {
            line: 68,
            column: 28
          }
        },
        loc: {
          start: {
            line: 68,
            column: 47
          },
          end: {
            line: 134,
            column: 1
          }
        },
        line: 68
      },
      "4": {
        name: "updateProfile",
        decl: {
          start: {
            line: 138,
            column: 15
          },
          end: {
            line: 138,
            column: 28
          }
        },
        loc: {
          start: {
            line: 138,
            column: 47
          },
          end: {
            line: 258,
            column: 1
          }
        },
        line: 138
      },
      "5": {
        name: "isUsernameAvailable",
        decl: {
          start: {
            line: 262,
            column: 15
          },
          end: {
            line: 262,
            column: 34
          }
        },
        loc: {
          start: {
            line: 262,
            column: 45
          },
          end: {
            line: 282,
            column: 1
          }
        },
        line: 262
      },
      "6": {
        name: "getProfileByUsername",
        decl: {
          start: {
            line: 286,
            column: 15
          },
          end: {
            line: 286,
            column: 35
          }
        },
        loc: {
          start: {
            line: 286,
            column: 46
          },
          end: {
            line: 309,
            column: 1
          }
        },
        line: 286
      },
      "7": {
        name: "searchProfiles",
        decl: {
          start: {
            line: 313,
            column: 15
          },
          end: {
            line: 313,
            column: 29
          }
        },
        loc: {
          start: {
            line: 313,
            column: 37
          },
          end: {
            line: 335,
            column: 1
          }
        },
        line: 313
      },
      "8": {
        name: "validateProfileData",
        decl: {
          start: {
            line: 339,
            column: 9
          },
          end: {
            line: 339,
            column: 28
          }
        },
        loc: {
          start: {
            line: 339,
            column: 39
          },
          end: {
            line: 377,
            column: 1
          }
        },
        line: 339
      },
      "9": {
        name: "deleteProfile",
        decl: {
          start: {
            line: 381,
            column: 15
          },
          end: {
            line: 381,
            column: 28
          }
        },
        loc: {
          start: {
            line: 381,
            column: 37
          },
          end: {
            line: 402,
            column: 1
          }
        },
        line: 381
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 3,
            column: 22
          },
          end: {
            line: 5,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 23
          },
          end: {
            line: 3,
            column: 27
          }
        }, {
          start: {
            line: 3,
            column: 31
          },
          end: {
            line: 3,
            column: 51
          }
        }, {
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 5,
            column: 1
          }
        }],
        line: 3
      },
      "1": {
        loc: {
          start: {
            line: 4,
            column: 11
          },
          end: {
            line: 4,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 37
          },
          end: {
            line: 4,
            column: 40
          }
        }, {
          start: {
            line: 4,
            column: 43
          },
          end: {
            line: 4,
            column: 61
          }
        }],
        line: 4
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 12
          },
          end: {
            line: 4,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 12
          },
          end: {
            line: 4,
            column: 15
          }
        }, {
          start: {
            line: 4,
            column: 19
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "7": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "8": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 78,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 78,
            column: 21
          }
        }, {
          start: {
            line: 78,
            column: 25
          },
          end: {
            line: 78,
            column: 30
          }
        }],
        line: 78
      },
      "9": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "10": {
        loc: {
          start: {
            line: 89,
            column: 22
          },
          end: {
            line: 89,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 23
          },
          end: {
            line: 89,
            column: 94
          }
        }, {
          start: {
            line: 89,
            column: 99
          },
          end: {
            line: 89,
            column: 103
          }
        }],
        line: 89
      },
      "11": {
        loc: {
          start: {
            line: 89,
            column: 23
          },
          end: {
            line: 89,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 89,
            column: 76
          },
          end: {
            line: 89,
            column: 82
          }
        }, {
          start: {
            line: 89,
            column: 85
          },
          end: {
            line: 89,
            column: 94
          }
        }],
        line: 89
      },
      "12": {
        loc: {
          start: {
            line: 89,
            column: 23
          },
          end: {
            line: 89,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 23
          },
          end: {
            line: 89,
            column: 56
          }
        }, {
          start: {
            line: 89,
            column: 60
          },
          end: {
            line: 89,
            column: 73
          }
        }],
        line: 89
      },
      "13": {
        loc: {
          start: {
            line: 90,
            column: 26
          },
          end: {
            line: 90,
            column: 111
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 27
          },
          end: {
            line: 90,
            column: 102
          }
        }, {
          start: {
            line: 90,
            column: 107
          },
          end: {
            line: 90,
            column: 111
          }
        }],
        line: 90
      },
      "14": {
        loc: {
          start: {
            line: 90,
            column: 27
          },
          end: {
            line: 90,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 84
          },
          end: {
            line: 90,
            column: 90
          }
        }, {
          start: {
            line: 90,
            column: 93
          },
          end: {
            line: 90,
            column: 102
          }
        }],
        line: 90
      },
      "15": {
        loc: {
          start: {
            line: 90,
            column: 27
          },
          end: {
            line: 90,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 27
          },
          end: {
            line: 90,
            column: 64
          }
        }, {
          start: {
            line: 90,
            column: 68
          },
          end: {
            line: 90,
            column: 81
          }
        }],
        line: 90
      },
      "16": {
        loc: {
          start: {
            line: 91,
            column: 17
          },
          end: {
            line: 91,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 18
          },
          end: {
            line: 91,
            column: 84
          }
        }, {
          start: {
            line: 91,
            column: 89
          },
          end: {
            line: 91,
            column: 93
          }
        }],
        line: 91
      },
      "17": {
        loc: {
          start: {
            line: 91,
            column: 18
          },
          end: {
            line: 91,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 66
          },
          end: {
            line: 91,
            column: 72
          }
        }, {
          start: {
            line: 91,
            column: 75
          },
          end: {
            line: 91,
            column: 84
          }
        }],
        line: 91
      },
      "18": {
        loc: {
          start: {
            line: 91,
            column: 18
          },
          end: {
            line: 91,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 18
          },
          end: {
            line: 91,
            column: 46
          }
        }, {
          start: {
            line: 91,
            column: 50
          },
          end: {
            line: 91,
            column: 63
          }
        }],
        line: 91
      },
      "19": {
        loc: {
          start: {
            line: 92,
            column: 24
          },
          end: {
            line: 92,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 24
          },
          end: {
            line: 92,
            column: 43
          }
        }, {
          start: {
            line: 92,
            column: 47
          },
          end: {
            line: 92,
            column: 51
          }
        }],
        line: 92
      },
      "20": {
        loc: {
          start: {
            line: 93,
            column: 24
          },
          end: {
            line: 93,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 24
          },
          end: {
            line: 93,
            column: 43
          }
        }, {
          start: {
            line: 93,
            column: 47
          },
          end: {
            line: 93,
            column: 51
          }
        }],
        line: 93
      },
      "21": {
        loc: {
          start: {
            line: 94,
            column: 21
          },
          end: {
            line: 94,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 22
          },
          end: {
            line: 94,
            column: 92
          }
        }, {
          start: {
            line: 94,
            column: 97
          },
          end: {
            line: 94,
            column: 101
          }
        }],
        line: 94
      },
      "22": {
        loc: {
          start: {
            line: 94,
            column: 22
          },
          end: {
            line: 94,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 94,
            column: 74
          },
          end: {
            line: 94,
            column: 80
          }
        }, {
          start: {
            line: 94,
            column: 83
          },
          end: {
            line: 94,
            column: 92
          }
        }],
        line: 94
      },
      "23": {
        loc: {
          start: {
            line: 94,
            column: 22
          },
          end: {
            line: 94,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 22
          },
          end: {
            line: 94,
            column: 54
          }
        }, {
          start: {
            line: 94,
            column: 58
          },
          end: {
            line: 94,
            column: 71
          }
        }],
        line: 94
      },
      "24": {
        loc: {
          start: {
            line: 95,
            column: 29
          },
          end: {
            line: 95,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 30
          },
          end: {
            line: 95,
            column: 108
          }
        }, {
          start: {
            line: 95,
            column: 113
          },
          end: {
            line: 95,
            column: 117
          }
        }],
        line: 95
      },
      "25": {
        loc: {
          start: {
            line: 95,
            column: 30
          },
          end: {
            line: 95,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 90
          },
          end: {
            line: 95,
            column: 96
          }
        }, {
          start: {
            line: 95,
            column: 99
          },
          end: {
            line: 95,
            column: 108
          }
        }],
        line: 95
      },
      "26": {
        loc: {
          start: {
            line: 95,
            column: 30
          },
          end: {
            line: 95,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 30
          },
          end: {
            line: 95,
            column: 70
          }
        }, {
          start: {
            line: 95,
            column: 74
          },
          end: {
            line: 95,
            column: 87
          }
        }],
        line: 95
      },
      "27": {
        loc: {
          start: {
            line: 96,
            column: 31
          },
          end: {
            line: 96,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 32
          },
          end: {
            line: 96,
            column: 112
          }
        }, {
          start: {
            line: 96,
            column: 117
          },
          end: {
            line: 96,
            column: 121
          }
        }],
        line: 96
      },
      "28": {
        loc: {
          start: {
            line: 96,
            column: 32
          },
          end: {
            line: 96,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 94
          },
          end: {
            line: 96,
            column: 100
          }
        }, {
          start: {
            line: 96,
            column: 103
          },
          end: {
            line: 96,
            column: 112
          }
        }],
        line: 96
      },
      "29": {
        loc: {
          start: {
            line: 96,
            column: 32
          },
          end: {
            line: 96,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 32
          },
          end: {
            line: 96,
            column: 74
          }
        }, {
          start: {
            line: 96,
            column: 78
          },
          end: {
            line: 96,
            column: 91
          }
        }],
        line: 96
      },
      "30": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "31": {
        loc: {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "32": {
        loc: {
          start: {
            line: 111,
            column: 40
          },
          end: {
            line: 111,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 40
          },
          end: {
            line: 111,
            column: 60
          }
        }, {
          start: {
            line: 111,
            column: 64
          },
          end: {
            line: 111,
            column: 90
          }
        }],
        line: 111
      },
      "33": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "34": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "35": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 148,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 148,
            column: 21
          }
        }, {
          start: {
            line: 148,
            column: 25
          },
          end: {
            line: 148,
            column: 30
          }
        }],
        line: 148
      },
      "36": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "37": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "38": {
        loc: {
          start: {
            line: 162,
            column: 35
          },
          end: {
            line: 162,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 36
          },
          end: {
            line: 162,
            column: 107
          }
        }, {
          start: {
            line: 162,
            column: 112
          },
          end: {
            line: 162,
            column: 116
          }
        }],
        line: 162
      },
      "39": {
        loc: {
          start: {
            line: 162,
            column: 36
          },
          end: {
            line: 162,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 162,
            column: 89
          },
          end: {
            line: 162,
            column: 95
          }
        }, {
          start: {
            line: 162,
            column: 98
          },
          end: {
            line: 162,
            column: 107
          }
        }],
        line: 162
      },
      "40": {
        loc: {
          start: {
            line: 162,
            column: 36
          },
          end: {
            line: 162,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 36
          },
          end: {
            line: 162,
            column: 69
          }
        }, {
          start: {
            line: 162,
            column: 73
          },
          end: {
            line: 162,
            column: 86
          }
        }],
        line: 162
      },
      "41": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "42": {
        loc: {
          start: {
            line: 165,
            column: 39
          },
          end: {
            line: 165,
            column: 124
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 40
          },
          end: {
            line: 165,
            column: 115
          }
        }, {
          start: {
            line: 165,
            column: 120
          },
          end: {
            line: 165,
            column: 124
          }
        }],
        line: 165
      },
      "43": {
        loc: {
          start: {
            line: 165,
            column: 40
          },
          end: {
            line: 165,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 97
          },
          end: {
            line: 165,
            column: 103
          }
        }, {
          start: {
            line: 165,
            column: 106
          },
          end: {
            line: 165,
            column: 115
          }
        }],
        line: 165
      },
      "44": {
        loc: {
          start: {
            line: 165,
            column: 40
          },
          end: {
            line: 165,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 40
          },
          end: {
            line: 165,
            column: 77
          }
        }, {
          start: {
            line: 165,
            column: 81
          },
          end: {
            line: 165,
            column: 94
          }
        }],
        line: 165
      },
      "45": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "46": {
        loc: {
          start: {
            line: 168,
            column: 30
          },
          end: {
            line: 168,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 31
          },
          end: {
            line: 168,
            column: 97
          }
        }, {
          start: {
            line: 168,
            column: 102
          },
          end: {
            line: 168,
            column: 106
          }
        }],
        line: 168
      },
      "47": {
        loc: {
          start: {
            line: 168,
            column: 31
          },
          end: {
            line: 168,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 168,
            column: 79
          },
          end: {
            line: 168,
            column: 85
          }
        }, {
          start: {
            line: 168,
            column: 88
          },
          end: {
            line: 168,
            column: 97
          }
        }],
        line: 168
      },
      "48": {
        loc: {
          start: {
            line: 168,
            column: 31
          },
          end: {
            line: 168,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 31
          },
          end: {
            line: 168,
            column: 59
          }
        }, {
          start: {
            line: 168,
            column: 63
          },
          end: {
            line: 168,
            column: 76
          }
        }],
        line: 168
      },
      "49": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "50": {
        loc: {
          start: {
            line: 171,
            column: 37
          },
          end: {
            line: 171,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 37
          },
          end: {
            line: 171,
            column: 56
          }
        }, {
          start: {
            line: 171,
            column: 60
          },
          end: {
            line: 171,
            column: 64
          }
        }],
        line: 171
      },
      "51": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "52": {
        loc: {
          start: {
            line: 174,
            column: 37
          },
          end: {
            line: 174,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 37
          },
          end: {
            line: 174,
            column: 56
          }
        }, {
          start: {
            line: 174,
            column: 60
          },
          end: {
            line: 174,
            column: 64
          }
        }],
        line: 174
      },
      "53": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "54": {
        loc: {
          start: {
            line: 177,
            column: 34
          },
          end: {
            line: 177,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 35
          },
          end: {
            line: 177,
            column: 105
          }
        }, {
          start: {
            line: 177,
            column: 110
          },
          end: {
            line: 177,
            column: 114
          }
        }],
        line: 177
      },
      "55": {
        loc: {
          start: {
            line: 177,
            column: 35
          },
          end: {
            line: 177,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 177,
            column: 87
          },
          end: {
            line: 177,
            column: 93
          }
        }, {
          start: {
            line: 177,
            column: 96
          },
          end: {
            line: 177,
            column: 105
          }
        }],
        line: 177
      },
      "56": {
        loc: {
          start: {
            line: 177,
            column: 35
          },
          end: {
            line: 177,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 35
          },
          end: {
            line: 177,
            column: 67
          }
        }, {
          start: {
            line: 177,
            column: 71
          },
          end: {
            line: 177,
            column: 84
          }
        }],
        line: 177
      },
      "57": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "58": {
        loc: {
          start: {
            line: 180,
            column: 42
          },
          end: {
            line: 180,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 43
          },
          end: {
            line: 180,
            column: 121
          }
        }, {
          start: {
            line: 180,
            column: 126
          },
          end: {
            line: 180,
            column: 130
          }
        }],
        line: 180
      },
      "59": {
        loc: {
          start: {
            line: 180,
            column: 43
          },
          end: {
            line: 180,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 103
          },
          end: {
            line: 180,
            column: 109
          }
        }, {
          start: {
            line: 180,
            column: 112
          },
          end: {
            line: 180,
            column: 121
          }
        }],
        line: 180
      },
      "60": {
        loc: {
          start: {
            line: 180,
            column: 43
          },
          end: {
            line: 180,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 43
          },
          end: {
            line: 180,
            column: 83
          }
        }, {
          start: {
            line: 180,
            column: 87
          },
          end: {
            line: 180,
            column: 100
          }
        }],
        line: 180
      },
      "61": {
        loc: {
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "62": {
        loc: {
          start: {
            line: 183,
            column: 44
          },
          end: {
            line: 183,
            column: 134
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 45
          },
          end: {
            line: 183,
            column: 125
          }
        }, {
          start: {
            line: 183,
            column: 130
          },
          end: {
            line: 183,
            column: 134
          }
        }],
        line: 183
      },
      "63": {
        loc: {
          start: {
            line: 183,
            column: 45
          },
          end: {
            line: 183,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 107
          },
          end: {
            line: 183,
            column: 113
          }
        }, {
          start: {
            line: 183,
            column: 116
          },
          end: {
            line: 183,
            column: 125
          }
        }],
        line: 183
      },
      "64": {
        loc: {
          start: {
            line: 183,
            column: 45
          },
          end: {
            line: 183,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 45
          },
          end: {
            line: 183,
            column: 87
          }
        }, {
          start: {
            line: 183,
            column: 91
          },
          end: {
            line: 183,
            column: 104
          }
        }],
        line: 183
      },
      "65": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "66": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 192,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 192,
            column: 22
          }
        }, {
          start: {
            line: 192,
            column: 26
          },
          end: {
            line: 192,
            column: 56
          }
        }],
        line: 192
      },
      "67": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: 219,
            column: 13
          },
          end: {
            line: 228,
            column: 9
          }
        }],
        line: 197
      },
      "68": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "69": {
        loc: {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "70": {
        loc: {
          start: {
            line: 235,
            column: 40
          },
          end: {
            line: 235,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 40
          },
          end: {
            line: 235,
            column: 60
          }
        }, {
          start: {
            line: 235,
            column: 64
          },
          end: {
            line: 235,
            column: 90
          }
        }],
        line: 235
      },
      "71": {
        loc: {
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "72": {
        loc: {
          start: {
            line: 264,
            column: 14
          },
          end: {
            line: 264,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 264,
            column: 57
          },
          end: {
            line: 264,
            column: 63
          }
        }, {
          start: {
            line: 264,
            column: 66
          },
          end: {
            line: 264,
            column: 81
          }
        }],
        line: 264
      },
      "73": {
        loc: {
          start: {
            line: 264,
            column: 14
          },
          end: {
            line: 264,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 14
          },
          end: {
            line: 264,
            column: 31
          }
        }, {
          start: {
            line: 264,
            column: 35
          },
          end: {
            line: 264,
            column: 54
          }
        }],
        line: 264
      },
      "74": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "75": {
        loc: {
          start: {
            line: 280,
            column: 42
          },
          end: {
            line: 280,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 42
          },
          end: {
            line: 280,
            column: 55
          }
        }, {
          start: {
            line: 280,
            column: 59
          },
          end: {
            line: 280,
            column: 89
          }
        }],
        line: 280
      },
      "76": {
        loc: {
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "77": {
        loc: {
          start: {
            line: 288,
            column: 14
          },
          end: {
            line: 288,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 288,
            column: 57
          },
          end: {
            line: 288,
            column: 63
          }
        }, {
          start: {
            line: 288,
            column: 66
          },
          end: {
            line: 288,
            column: 81
          }
        }],
        line: 288
      },
      "78": {
        loc: {
          start: {
            line: 288,
            column: 14
          },
          end: {
            line: 288,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 14
          },
          end: {
            line: 288,
            column: 31
          }
        }, {
          start: {
            line: 288,
            column: 35
          },
          end: {
            line: 288,
            column: 54
          }
        }],
        line: 288
      },
      "79": {
        loc: {
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "80": {
        loc: {
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 299,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 299,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "81": {
        loc: {
          start: {
            line: 307,
            column: 36
          },
          end: {
            line: 307,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 307,
            column: 36
          },
          end: {
            line: 307,
            column: 49
          }
        }, {
          start: {
            line: 307,
            column: 53
          },
          end: {
            line: 307,
            column: 83
          }
        }],
        line: 307
      },
      "82": {
        loc: {
          start: {
            line: 315,
            column: 8
          },
          end: {
            line: 317,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 8
          },
          end: {
            line: 317,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "83": {
        loc: {
          start: {
            line: 315,
            column: 14
          },
          end: {
            line: 315,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 315,
            column: 51
          },
          end: {
            line: 315,
            column: 57
          }
        }, {
          start: {
            line: 315,
            column: 60
          },
          end: {
            line: 315,
            column: 72
          }
        }],
        line: 315
      },
      "84": {
        loc: {
          start: {
            line: 315,
            column: 14
          },
          end: {
            line: 315,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 315,
            column: 14
          },
          end: {
            line: 315,
            column: 28
          }
        }, {
          start: {
            line: 315,
            column: 32
          },
          end: {
            line: 315,
            column: 48
          }
        }],
        line: 315
      },
      "85": {
        loc: {
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "86": {
        loc: {
          start: {
            line: 329,
            column: 23
          },
          end: {
            line: 329,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 329,
            column: 23
          },
          end: {
            line: 329,
            column: 27
          }
        }, {
          start: {
            line: 329,
            column: 31
          },
          end: {
            line: 329,
            column: 33
          }
        }],
        line: 329
      },
      "87": {
        loc: {
          start: {
            line: 333,
            column: 34
          },
          end: {
            line: 333,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 333,
            column: 34
          },
          end: {
            line: 333,
            column: 47
          }
        }, {
          start: {
            line: 333,
            column: 51
          },
          end: {
            line: 333,
            column: 81
          }
        }],
        line: 333
      },
      "88": {
        loc: {
          start: {
            line: 343,
            column: 4
          },
          end: {
            line: 354,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 4
          },
          end: {
            line: 354,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 343
      },
      "89": {
        loc: {
          start: {
            line: 344,
            column: 25
          },
          end: {
            line: 344,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 344,
            column: 78
          },
          end: {
            line: 344,
            column: 84
          }
        }, {
          start: {
            line: 344,
            column: 87
          },
          end: {
            line: 344,
            column: 96
          }
        }],
        line: 344
      },
      "90": {
        loc: {
          start: {
            line: 344,
            column: 25
          },
          end: {
            line: 344,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 344,
            column: 25
          },
          end: {
            line: 344,
            column: 58
          }
        }, {
          start: {
            line: 344,
            column: 62
          },
          end: {
            line: 344,
            column: 75
          }
        }],
        line: 344
      },
      "91": {
        loc: {
          start: {
            line: 345,
            column: 8
          },
          end: {
            line: 347,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 8
          },
          end: {
            line: 347,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 345
      },
      "92": {
        loc: {
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 345,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 345,
            column: 20
          }
        }, {
          start: {
            line: 345,
            column: 24
          },
          end: {
            line: 345,
            column: 43
          }
        }],
        line: 345
      },
      "93": {
        loc: {
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 350,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 350,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 348
      },
      "94": {
        loc: {
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 348,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 348,
            column: 20
          }
        }, {
          start: {
            line: 348,
            column: 24
          },
          end: {
            line: 348,
            column: 44
          }
        }],
        line: 348
      },
      "95": {
        loc: {
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 353,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 353,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "96": {
        loc: {
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 351,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 351,
            column: 20
          }
        }, {
          start: {
            line: 351,
            column: 24
          },
          end: {
            line: 351,
            column: 58
          }
        }],
        line: 351
      },
      "97": {
        loc: {
          start: {
            line: 356,
            column: 4
          },
          end: {
            line: 361,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 356,
            column: 4
          },
          end: {
            line: 361,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 356
      },
      "98": {
        loc: {
          start: {
            line: 357,
            column: 28
          },
          end: {
            line: 357,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 357,
            column: 85
          },
          end: {
            line: 357,
            column: 91
          }
        }, {
          start: {
            line: 357,
            column: 94
          },
          end: {
            line: 357,
            column: 103
          }
        }],
        line: 357
      },
      "99": {
        loc: {
          start: {
            line: 357,
            column: 28
          },
          end: {
            line: 357,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 357,
            column: 28
          },
          end: {
            line: 357,
            column: 65
          }
        }, {
          start: {
            line: 357,
            column: 69
          },
          end: {
            line: 357,
            column: 82
          }
        }],
        line: 357
      },
      "100": {
        loc: {
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 360,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 360,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "101": {
        loc: {
          start: {
            line: 358,
            column: 12
          },
          end: {
            line: 358,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 358,
            column: 12
          },
          end: {
            line: 358,
            column: 23
          }
        }, {
          start: {
            line: 358,
            column: 27
          },
          end: {
            line: 358,
            column: 50
          }
        }],
        line: 358
      },
      "102": {
        loc: {
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 363
      },
      "103": {
        loc: {
          start: {
            line: 364,
            column: 20
          },
          end: {
            line: 364,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 364,
            column: 68
          },
          end: {
            line: 364,
            column: 74
          }
        }, {
          start: {
            line: 364,
            column: 77
          },
          end: {
            line: 364,
            column: 86
          }
        }],
        line: 364
      },
      "104": {
        loc: {
          start: {
            line: 364,
            column: 20
          },
          end: {
            line: 364,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 364,
            column: 20
          },
          end: {
            line: 364,
            column: 48
          }
        }, {
          start: {
            line: 364,
            column: 52
          },
          end: {
            line: 364,
            column: 65
          }
        }],
        line: 364
      },
      "105": {
        loc: {
          start: {
            line: 365,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 365,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 365
      },
      "106": {
        loc: {
          start: {
            line: 365,
            column: 12
          },
          end: {
            line: 365,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 365,
            column: 12
          },
          end: {
            line: 365,
            column: 15
          }
        }, {
          start: {
            line: 365,
            column: 19
          },
          end: {
            line: 365,
            column: 35
          }
        }],
        line: 365
      },
      "107": {
        loc: {
          start: {
            line: 370,
            column: 4
          },
          end: {
            line: 375,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 4
          },
          end: {
            line: 375,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "108": {
        loc: {
          start: {
            line: 371,
            column: 27
          },
          end: {
            line: 371,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 371,
            column: 87
          },
          end: {
            line: 371,
            column: 93
          }
        }, {
          start: {
            line: 371,
            column: 96
          },
          end: {
            line: 371,
            column: 105
          }
        }],
        line: 371
      },
      "109": {
        loc: {
          start: {
            line: 371,
            column: 27
          },
          end: {
            line: 371,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 371,
            column: 27
          },
          end: {
            line: 371,
            column: 67
          }
        }, {
          start: {
            line: 371,
            column: 71
          },
          end: {
            line: 371,
            column: 84
          }
        }],
        line: 371
      },
      "110": {
        loc: {
          start: {
            line: 372,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 372,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 372
      },
      "111": {
        loc: {
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 372,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 372,
            column: 22
          }
        }, {
          start: {
            line: 372,
            column: 26
          },
          end: {
            line: 372,
            column: 100
          }
        }],
        line: 372
      },
      "112": {
        loc: {
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 384
      },
      "113": {
        loc: {
          start: {
            line: 391,
            column: 8
          },
          end: {
            line: 394,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 391,
            column: 8
          },
          end: {
            line: 394,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 391
      },
      "114": {
        loc: {
          start: {
            line: 393,
            column: 28
          },
          end: {
            line: 393,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 393,
            column: 28
          },
          end: {
            line: 393,
            column: 41
          }
        }, {
          start: {
            line: 393,
            column: 45
          },
          end: {
            line: 393,
            column: 71
          }
        }],
        line: 393
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0],
      "104": [0, 0],
      "105": [0, 0],
      "106": [0, 0],
      "107": [0, 0],
      "108": [0, 0],
      "109": [0, 0],
      "110": [0, 0],
      "111": [0, 0],
      "112": [0, 0],
      "113": [0, 0],
      "114": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/services/supabase/profiles.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/services/supabase/profiles.ts"],
      sourcesContent: ["'use client'\n\nimport supabase from './client'\nimport type { Profile, ProfileFormData } from '@/types/database'\nimport { logProfile, logger } from '@/utils/logger'\n\nexport async function getProfiles() {\n  return supabase\n    .from('profiles')\n    .select('*')\n    .order('created_at', { ascending: false })\n}\n\nexport async function getProfile(userId: string): Promise<{ data: Profile | null; error: string | null }> {\n  try {\n    logProfile(`ProfileHelper: Getting profile for user ${userId}`);\n\n    if (!userId) {\n      return { data: null, error: 'User ID is required' };\n    }\n\n    const { data, error } = await supabase\n      .from('profiles')\n      .select('*')\n      .eq('id', userId)\n      .single();\n\n    if (error) {\n      if (error.code === 'PGRST116') {\n        logProfile('ProfileHelper: Profile not found');\n        return { data: null, error: null }; // Not found is not an error\n      }\n      logger.error('ProfileHelper: Error fetching profile:', { error }, 'Profile');\n      return { data: null, error: error.message };\n    }\n\n    // Map database schema to application schema\n    const profile: Profile = {\n      id: data.id,\n      username: data.username,\n      display_name: data.display_name, // Use actual display_name column\n      bio: data.bio,\n      avatar_url: data.avatar_url,\n      banner_url: data.banner_url,\n      website: data.website,\n      bitcoin_address: data.bitcoin_address,\n      lightning_address: data.lightning_address,\n      created_at: data.created_at,\n      updated_at: data.updated_at\n    };\n\n    logProfile('ProfileHelper: Profile fetched successfully');\n    return { data: profile, error: null };\n\n  } catch (error) {\n    logger.error('ProfileHelper: Unexpected error:', { error }, 'Profile');\n    return { data: null, error: 'Failed to fetch profile' };\n  }\n}\n\n/**\n * Create a new user profile in the database\n */\nexport async function createProfile(userId: string, formData: ProfileFormData): Promise<{ data: Profile | null; error: string | null }> {\n  try {\n    logProfile(`ProfileHelper: Starting profile creation for user ${userId}`, { data: formData });\n\n    // Validate input\n    if (!userId) {\n      return { data: null, error: 'User ID is required' };\n    }\n\n    // Get current user to ensure they can only create their own profile\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    \n    if (userError || !user) {\n      logger.error('ProfileHelper: No authenticated user:', { error: userError }, 'Profile');\n      return { data: null, error: 'Authentication required' };\n    }\n\n    if (user.id !== userId) {\n      logger.error('ProfileHelper: User ID mismatch', { userId, authenticatedUserId: user.id }, 'Profile');\n      return { data: null, error: 'Permission denied' };\n    }\n\n    // Prepare the profile data for creation with ACTUAL database schema\n    const profileData = {\n      id: userId,\n      username: formData.username?.trim() || null,\n      display_name: formData.display_name?.trim() || null, // Use actual display_name column\n      bio: formData.bio?.trim() || null,\n      avatar_url: formData.avatar_url || null,\n      banner_url: formData.banner_url || null,\n      website: formData.website?.trim() || null,\n      bitcoin_address: formData.bitcoin_address?.trim() || null,\n      lightning_address: formData.lightning_address?.trim() || null,\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n    };\n\n    logProfile('ProfileHelper: Creating new profile with data:', profileData);\n\n    const result = await supabase\n      .from('profiles')\n      .insert(profileData)\n      .select('*')\n      .single();\n\n    if (result.error) {\n      logger.error('ProfileHelper: Profile creation failed:', { error: result.error }, 'Profile');\n      \n      if (result.error.code === '23505') {\n        return { data: null, error: 'Username is already taken. Please choose another username.' };\n      }\n      \n      return { data: null, error: result.error.message || 'Failed to create profile' };\n    }\n\n    // Map database result back to application schema\n    const profile: Profile = {\n      id: result.data.id,\n      username: result.data.username,\n      display_name: result.data.display_name,\n      bio: result.data.bio,\n      avatar_url: result.data.avatar_url,\n      banner_url: result.data.banner_url,\n      website: result.data.website,\n      bitcoin_address: result.data.bitcoin_address,\n      lightning_address: result.data.lightning_address,\n      created_at: result.data.created_at,\n      updated_at: result.data.updated_at\n    };\n\n    logProfile('ProfileHelper: Profile created successfully');\n    return { data: profile, error: null };\n\n  } catch (error) {\n    logger.error('ProfileHelper: Unexpected error during creation:', { error }, 'Profile');\n    return { data: null, error: 'Failed to create profile' };\n  }\n}\n\n/**\n * Update a user's profile in the database\n */\nexport async function updateProfile(userId: string, formData: ProfileFormData): Promise<{ data: Profile | null; error: string | null }> {\n  try {\n    logProfile(`ProfileHelper: Starting profile update for user ${userId}`, { data: formData });\n\n    // Validate input\n    if (!userId) {\n      return { data: null, error: 'User ID is required' };\n    }\n\n    // Get current user to ensure they can only update their own profile\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    \n    if (userError || !user) {\n      logger.error('ProfileHelper: No authenticated user:', { error: userError }, 'Profile');\n      return { data: null, error: 'Authentication required' };\n    }\n\n    if (user.id !== userId) {\n      logger.error('ProfileHelper: User ID mismatch', { userId, authenticatedUserId: user.id }, 'Profile');\n      return { data: null, error: 'Permission denied' };\n    }\n\n    // Prepare the profile data for update with ACTUAL database schema\n    const profileData: Record<string, any> = {\n      updated_at: new Date().toISOString(),\n    };\n\n    // Only include fields that are provided and not empty\n    if (formData.username !== undefined) {\n      profileData.username = formData.username?.trim() || null;\n    }\n\n    if (formData.display_name !== undefined) {\n      profileData.display_name = formData.display_name?.trim() || null;\n    }\n\n    if (formData.bio !== undefined) {\n      profileData.bio = formData.bio?.trim() || null;\n    }\n\n    if (formData.avatar_url !== undefined) {\n      profileData.avatar_url = formData.avatar_url || null;\n    }\n\n    if (formData.banner_url !== undefined) {\n      profileData.banner_url = formData.banner_url || null;\n    }\n\n    if (formData.website !== undefined) {\n      profileData.website = formData.website?.trim() || null;\n    }\n\n    if (formData.bitcoin_address !== undefined) {\n      profileData.bitcoin_address = formData.bitcoin_address?.trim() || null;\n    }\n\n    if (formData.lightning_address !== undefined) {\n      profileData.lightning_address = formData.lightning_address?.trim() || null;\n    }\n\n    logProfile('ProfileHelper: Prepared update data:', profileData);\n\n    // Check if profile exists first\n    const { data: existingProfile, error: fetchError } = await supabase\n      .from('profiles')\n      .select('*')\n      .eq('id', userId)\n      .single();\n\n    if (fetchError && fetchError.code !== 'PGRST116') {\n      logger.error('ProfileHelper: Error checking existing profile:', { error: fetchError }, 'Profile');\n      return { data: null, error: 'Failed to check existing profile' };\n    }\n\n    let result;\n\n    if (!existingProfile) {\n      // Profile doesn't exist, create it\n      logProfile('ProfileHelper: Profile does not exist, creating new profile');\n      \n      const newProfileData = {\n        id: userId,\n        username: profileData.username,\n        display_name: profileData.display_name,\n        bio: profileData.bio,\n        avatar_url: profileData.avatar_url,\n        banner_url: profileData.banner_url,\n        website: profileData.website,\n        bitcoin_address: profileData.bitcoin_address,\n        lightning_address: profileData.lightning_address,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString(),\n      };\n\n      result = await supabase\n        .from('profiles')\n        .insert(newProfileData)\n        .select('*')\n        .single();\n    } else {\n      // Profile exists, update it\n      logProfile('ProfileHelper: Updating existing profile');\n      \n      result = await supabase\n        .from('profiles')\n        .update(profileData)\n        .eq('id', userId)\n        .select('*')\n        .single();\n    }\n\n    if (result.error) {\n      logger.error('ProfileHelper: Database operation failed:', { error: result.error }, 'Profile');\n      \n      // Handle specific error cases\n      if (result.error.code === '23505') {\n        return { data: null, error: 'Username is already taken. Please choose another username.' };\n      }\n      \n      return { data: null, error: result.error.message || 'Failed to update profile' };\n    }\n\n    // Map database result back to application schema\n    const profile: Profile = {\n      id: result.data.id,\n      username: result.data.username,\n      display_name: result.data.display_name,\n      bio: result.data.bio,\n      avatar_url: result.data.avatar_url,\n      banner_url: result.data.banner_url,\n      website: result.data.website,\n      bitcoin_address: result.data.bitcoin_address,\n      lightning_address: result.data.lightning_address,\n      created_at: result.data.created_at,\n      updated_at: result.data.updated_at\n    };\n\n    logProfile('ProfileHelper: Profile operation successful');\n    return { data: profile, error: null };\n\n  } catch (error) {\n    logger.error('ProfileHelper: Unexpected error during update:', { error }, 'Profile');\n    return { data: null, error: 'Failed to update profile' };\n  }\n}\n\n/**\n * Check if a username is available\n */\nexport async function isUsernameAvailable(username: string): Promise<{ available: boolean; error: string | null }> {\n  try {\n    if (!username?.trim()) {\n      return { available: false, error: 'Username is required' };\n    }\n\n    const { data, error } = await supabase\n      .from('profiles')\n      .select('username')\n      .eq('username', username.trim())\n      .limit(1);\n\n    if (error) {\n      logger.error('ProfileHelper: Error checking username availability:', { error }, 'Profile');\n      return { available: false, error: 'Failed to check username availability' };\n    }\n\n    return { available: data.length === 0, error: null };\n  } catch (error: any) {\n    logger.error('ProfileHelper: Unexpected error checking username:', error, 'Profile');\n    return { available: false, error: error.message || 'An unexpected error occurred' };\n  }\n}\n\n/**\n * Get profile by username\n */\nexport async function getProfileByUsername(username: string): Promise<{ data: Profile | null; error: string | null }> {\n  try {\n    if (!username?.trim()) {\n      return { data: null, error: 'Username is required' };\n    }\n\n    const { data, error } = await supabase\n      .from('profiles')\n      .select('*')\n      .eq('username', username.trim())\n      .single();\n\n    if (error) {\n      if (error.code === 'PGRST116') {\n        return { data: null, error: 'Profile not found' };\n      }\n      logger.error('ProfileHelper: Error fetching profile by username:', { error }, 'Profile');\n      return { data: null, error: 'Failed to fetch profile' };\n    }\n\n    return { data, error: null };\n  } catch (error: any) {\n    logger.error('ProfileHelper: Unexpected error fetching profile by username:', error, 'Profile');\n    return { data: null, error: error.message || 'An unexpected error occurred' };\n  }\n}\n\n/**\n * Search profiles by username or display name\n */\nexport async function searchProfiles(query: string): Promise<{ data: Profile[]; error: string | null }> {\n  try {\n    if (!query?.trim()) {\n      return { data: [], error: null };\n    }\n\n    const searchTerm = `%${query.trim()}%`;\n    \n    const { data, error } = await supabase\n      .from('profiles')\n      .select('*')\n      .or(`username.ilike.${searchTerm},full_name.ilike.${searchTerm}`)\n      .order('username')\n      .limit(20);\n\n    if (error) {\n      logger.error('ProfileHelper: Error searching profiles:', { error }, 'Profile');\n      return { data: [], error: 'Failed to search profiles' };\n    }\n\n    return { data: data || [], error: null };\n  } catch (error: any) {\n    logger.error('ProfileHelper: Unexpected error searching profiles:', error, 'Profile');\n    return { data: [], error: error.message || 'An unexpected error occurred' };\n  }\n}\n\n/**\n * Validate profile data before submission\n */\nexport function validateProfileData(formData: ProfileFormData): { valid: boolean; errors: string[] } {\n  const errors: string[] = [];\n\n  // Validate username\n  if (formData.username !== undefined) {\n    const username = formData.username?.trim();\n    if (username && username.length < 3) {\n      errors.push('Username must be at least 3 characters long');\n    }\n    if (username && username.length > 20) {\n      errors.push('Username must be 20 characters or less');\n    }\n    if (username && !/^[a-zA-Z0-9_-]+$/.test(username)) {\n      errors.push('Username can only contain letters, numbers, hyphens, and underscores');\n    }\n  }\n\n  // Validate display name\n  if (formData.display_name !== undefined) {\n    const displayName = formData.display_name?.trim();\n    if (displayName && displayName.length > 50) {\n      errors.push('Display name must be 50 characters or less');\n    }\n  }\n\n  // Validate bio\n  if (formData.bio !== undefined) {\n    const bio = formData.bio?.trim();\n    if (bio && bio.length > 500) {\n      errors.push('Bio must be 500 characters or less');\n    }\n  }\n\n  // Validate Bitcoin address format (basic validation)\n  if (formData.bitcoin_address !== undefined) {\n    const btcAddress = formData.bitcoin_address?.trim();\n    if (btcAddress && !/^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$|^bc1[a-z0-9]{39,59}$/.test(btcAddress)) {\n      errors.push('Invalid Bitcoin address format');\n    }\n  }\n\n  return { valid: errors.length === 0, errors };\n}\n\n/**\n * Delete a user's profile\n */\nexport async function deleteProfile(userId: string): Promise<{ error: string | null }> {\n  try {\n    logProfile(`ProfileHelper: Deleting profile for user ${userId}`);\n\n    if (!userId) {\n      return { error: 'User ID is required' };\n    }\n\n    const { error } = await supabase\n      .from('profiles')\n      .delete()\n      .eq('id', userId);\n\n    if (error) {\n      logger.error('ProfileHelper: Error deleting profile:', { error }, 'Profile');\n      return { error: error.message || 'Failed to delete profile' };\n    }\n\n    logProfile('ProfileHelper: Profile deleted successfully');\n    return { error: null };\n\n  } catch (error) {\n    logger.error('ProfileHelper: Unexpected error during deletion:', { error }, 'Profile');\n    return { error: 'Failed to delete profile' };\n  }\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1fa2358f05a8bef309298954b0f6f2960078ef09"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ddlr4k2fy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ddlr4k2fy();
var __importDefault =
/* istanbul ignore next */
(cov_1ddlr4k2fy().s[0]++,
/* istanbul ignore next */
(cov_1ddlr4k2fy().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1ddlr4k2fy().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1ddlr4k2fy().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1ddlr4k2fy().f[0]++;
  cov_1ddlr4k2fy().s[1]++;
  return /* istanbul ignore next */(cov_1ddlr4k2fy().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1ddlr4k2fy().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1ddlr4k2fy().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1ddlr4k2fy().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1ddlr4k2fy().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ddlr4k2fy().s[3]++;
exports.getProfiles = getProfiles;
/* istanbul ignore next */
cov_1ddlr4k2fy().s[4]++;
exports.getProfile = getProfile;
/* istanbul ignore next */
cov_1ddlr4k2fy().s[5]++;
exports.createProfile = createProfile;
/* istanbul ignore next */
cov_1ddlr4k2fy().s[6]++;
exports.updateProfile = updateProfile;
/* istanbul ignore next */
cov_1ddlr4k2fy().s[7]++;
exports.isUsernameAvailable = isUsernameAvailable;
/* istanbul ignore next */
cov_1ddlr4k2fy().s[8]++;
exports.getProfileByUsername = getProfileByUsername;
/* istanbul ignore next */
cov_1ddlr4k2fy().s[9]++;
exports.searchProfiles = searchProfiles;
/* istanbul ignore next */
cov_1ddlr4k2fy().s[10]++;
exports.validateProfileData = validateProfileData;
/* istanbul ignore next */
cov_1ddlr4k2fy().s[11]++;
exports.deleteProfile = deleteProfile;
const client_1 =
/* istanbul ignore next */
(cov_1ddlr4k2fy().s[12]++, __importDefault(require("./client")));
const logger_1 =
/* istanbul ignore next */
(cov_1ddlr4k2fy().s[13]++, require("@/utils/logger"));
async function getProfiles() {
  /* istanbul ignore next */
  cov_1ddlr4k2fy().f[1]++;
  cov_1ddlr4k2fy().s[14]++;
  return client_1.default.from('profiles').select('*').order('created_at', {
    ascending: false
  });
}
async function getProfile(userId) {
  /* istanbul ignore next */
  cov_1ddlr4k2fy().f[2]++;
  cov_1ddlr4k2fy().s[15]++;
  try {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[16]++;
    (0, logger_1.logProfile)(`ProfileHelper: Getting profile for user ${userId}`);
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[17]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[3][0]++;
      cov_1ddlr4k2fy().s[18]++;
      return {
        data: null,
        error: 'User ID is required'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[3][1]++;
    }
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[19]++, await client_1.default.from('profiles').select('*').eq('id', userId).single());
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[20]++;
    if (error) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[4][0]++;
      cov_1ddlr4k2fy().s[21]++;
      if (error.code === 'PGRST116') {
        /* istanbul ignore next */
        cov_1ddlr4k2fy().b[5][0]++;
        cov_1ddlr4k2fy().s[22]++;
        (0, logger_1.logProfile)('ProfileHelper: Profile not found');
        /* istanbul ignore next */
        cov_1ddlr4k2fy().s[23]++;
        return {
          data: null,
          error: null
        }; // Not found is not an error
      } else
      /* istanbul ignore next */
      {
        cov_1ddlr4k2fy().b[5][1]++;
      }
      cov_1ddlr4k2fy().s[24]++;
      logger_1.logger.error('ProfileHelper: Error fetching profile:', {
        error
      }, 'Profile');
      /* istanbul ignore next */
      cov_1ddlr4k2fy().s[25]++;
      return {
        data: null,
        error: error.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[4][1]++;
    }
    // Map database schema to application schema
    const profile =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[26]++, {
      id: data.id,
      username: data.username,
      display_name: data.display_name,
      // Use actual display_name column
      bio: data.bio,
      avatar_url: data.avatar_url,
      banner_url: data.banner_url,
      website: data.website,
      bitcoin_address: data.bitcoin_address,
      lightning_address: data.lightning_address,
      created_at: data.created_at,
      updated_at: data.updated_at
    });
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[27]++;
    (0, logger_1.logProfile)('ProfileHelper: Profile fetched successfully');
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[28]++;
    return {
      data: profile,
      error: null
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[29]++;
    logger_1.logger.error('ProfileHelper: Unexpected error:', {
      error
    }, 'Profile');
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[30]++;
    return {
      data: null,
      error: 'Failed to fetch profile'
    };
  }
}
/**
 * Create a new user profile in the database
 */
async function createProfile(userId, formData) {
  /* istanbul ignore next */
  cov_1ddlr4k2fy().f[3]++;
  var _a, _b, _c, _d, _e, _f;
  /* istanbul ignore next */
  cov_1ddlr4k2fy().s[31]++;
  try {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[32]++;
    (0, logger_1.logProfile)(`ProfileHelper: Starting profile creation for user ${userId}`, {
      data: formData
    });
    // Validate input
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[33]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[6][0]++;
      cov_1ddlr4k2fy().s[34]++;
      return {
        data: null,
        error: 'User ID is required'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[6][1]++;
    }
    // Get current user to ensure they can only create their own profile
    const {
      data: {
        user
      },
      error: userError
    } =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[35]++, await client_1.default.auth.getUser());
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[36]++;
    if (
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[8][0]++, userError) ||
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[8][1]++, !user)) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[7][0]++;
      cov_1ddlr4k2fy().s[37]++;
      logger_1.logger.error('ProfileHelper: No authenticated user:', {
        error: userError
      }, 'Profile');
      /* istanbul ignore next */
      cov_1ddlr4k2fy().s[38]++;
      return {
        data: null,
        error: 'Authentication required'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[7][1]++;
    }
    cov_1ddlr4k2fy().s[39]++;
    if (user.id !== userId) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[9][0]++;
      cov_1ddlr4k2fy().s[40]++;
      logger_1.logger.error('ProfileHelper: User ID mismatch', {
        userId,
        authenticatedUserId: user.id
      }, 'Profile');
      /* istanbul ignore next */
      cov_1ddlr4k2fy().s[41]++;
      return {
        data: null,
        error: 'Permission denied'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[9][1]++;
    }
    // Prepare the profile data for creation with ACTUAL database schema
    const profileData =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[42]++, {
      id: userId,
      username:
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[10][0]++,
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[12][0]++, (_a = formData.username) === null) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[12][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[11][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[11][1]++, _a.trim())) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[10][1]++, null),
      display_name:
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[13][0]++,
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[15][0]++, (_b = formData.display_name) === null) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[15][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[14][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[14][1]++, _b.trim())) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[13][1]++, null),
      // Use actual display_name column
      bio:
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[16][0]++,
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[18][0]++, (_c = formData.bio) === null) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[18][1]++, _c === void 0) ?
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[17][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[17][1]++, _c.trim())) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[16][1]++, null),
      avatar_url:
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[19][0]++, formData.avatar_url) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[19][1]++, null),
      banner_url:
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[20][0]++, formData.banner_url) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[20][1]++, null),
      website:
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[21][0]++,
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[23][0]++, (_d = formData.website) === null) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[23][1]++, _d === void 0) ?
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[22][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[22][1]++, _d.trim())) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[21][1]++, null),
      bitcoin_address:
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[24][0]++,
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[26][0]++, (_e = formData.bitcoin_address) === null) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[26][1]++, _e === void 0) ?
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[25][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[25][1]++, _e.trim())) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[24][1]++, null),
      lightning_address:
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[27][0]++,
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[29][0]++, (_f = formData.lightning_address) === null) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[29][1]++, _f === void 0) ?
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[28][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[28][1]++, _f.trim())) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[27][1]++, null),
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[43]++;
    (0, logger_1.logProfile)('ProfileHelper: Creating new profile with data:', profileData);
    const result =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[44]++, await client_1.default.from('profiles').insert(profileData).select('*').single());
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[45]++;
    if (result.error) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[30][0]++;
      cov_1ddlr4k2fy().s[46]++;
      logger_1.logger.error('ProfileHelper: Profile creation failed:', {
        error: result.error
      }, 'Profile');
      /* istanbul ignore next */
      cov_1ddlr4k2fy().s[47]++;
      if (result.error.code === '23505') {
        /* istanbul ignore next */
        cov_1ddlr4k2fy().b[31][0]++;
        cov_1ddlr4k2fy().s[48]++;
        return {
          data: null,
          error: 'Username is already taken. Please choose another username.'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1ddlr4k2fy().b[31][1]++;
      }
      cov_1ddlr4k2fy().s[49]++;
      return {
        data: null,
        error:
        /* istanbul ignore next */
        (cov_1ddlr4k2fy().b[32][0]++, result.error.message) ||
        /* istanbul ignore next */
        (cov_1ddlr4k2fy().b[32][1]++, 'Failed to create profile')
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[30][1]++;
    }
    // Map database result back to application schema
    const profile =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[50]++, {
      id: result.data.id,
      username: result.data.username,
      display_name: result.data.display_name,
      bio: result.data.bio,
      avatar_url: result.data.avatar_url,
      banner_url: result.data.banner_url,
      website: result.data.website,
      bitcoin_address: result.data.bitcoin_address,
      lightning_address: result.data.lightning_address,
      created_at: result.data.created_at,
      updated_at: result.data.updated_at
    });
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[51]++;
    (0, logger_1.logProfile)('ProfileHelper: Profile created successfully');
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[52]++;
    return {
      data: profile,
      error: null
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[53]++;
    logger_1.logger.error('ProfileHelper: Unexpected error during creation:', {
      error
    }, 'Profile');
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[54]++;
    return {
      data: null,
      error: 'Failed to create profile'
    };
  }
}
/**
 * Update a user's profile in the database
 */
async function updateProfile(userId, formData) {
  /* istanbul ignore next */
  cov_1ddlr4k2fy().f[4]++;
  var _a, _b, _c, _d, _e, _f;
  /* istanbul ignore next */
  cov_1ddlr4k2fy().s[55]++;
  try {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[56]++;
    (0, logger_1.logProfile)(`ProfileHelper: Starting profile update for user ${userId}`, {
      data: formData
    });
    // Validate input
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[57]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[33][0]++;
      cov_1ddlr4k2fy().s[58]++;
      return {
        data: null,
        error: 'User ID is required'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[33][1]++;
    }
    // Get current user to ensure they can only update their own profile
    const {
      data: {
        user
      },
      error: userError
    } =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[59]++, await client_1.default.auth.getUser());
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[60]++;
    if (
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[35][0]++, userError) ||
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[35][1]++, !user)) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[34][0]++;
      cov_1ddlr4k2fy().s[61]++;
      logger_1.logger.error('ProfileHelper: No authenticated user:', {
        error: userError
      }, 'Profile');
      /* istanbul ignore next */
      cov_1ddlr4k2fy().s[62]++;
      return {
        data: null,
        error: 'Authentication required'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[34][1]++;
    }
    cov_1ddlr4k2fy().s[63]++;
    if (user.id !== userId) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[36][0]++;
      cov_1ddlr4k2fy().s[64]++;
      logger_1.logger.error('ProfileHelper: User ID mismatch', {
        userId,
        authenticatedUserId: user.id
      }, 'Profile');
      /* istanbul ignore next */
      cov_1ddlr4k2fy().s[65]++;
      return {
        data: null,
        error: 'Permission denied'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[36][1]++;
    }
    // Prepare the profile data for update with ACTUAL database schema
    const profileData =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[66]++, {
      updated_at: new Date().toISOString()
    });
    // Only include fields that are provided and not empty
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[67]++;
    if (formData.username !== undefined) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[37][0]++;
      cov_1ddlr4k2fy().s[68]++;
      profileData.username =
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[38][0]++,
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[40][0]++, (_a = formData.username) === null) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[40][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[39][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[39][1]++, _a.trim())) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[38][1]++, null);
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[37][1]++;
    }
    cov_1ddlr4k2fy().s[69]++;
    if (formData.display_name !== undefined) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[41][0]++;
      cov_1ddlr4k2fy().s[70]++;
      profileData.display_name =
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[42][0]++,
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[44][0]++, (_b = formData.display_name) === null) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[44][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[43][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[43][1]++, _b.trim())) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[42][1]++, null);
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[41][1]++;
    }
    cov_1ddlr4k2fy().s[71]++;
    if (formData.bio !== undefined) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[45][0]++;
      cov_1ddlr4k2fy().s[72]++;
      profileData.bio =
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[46][0]++,
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[48][0]++, (_c = formData.bio) === null) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[48][1]++, _c === void 0) ?
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[47][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[47][1]++, _c.trim())) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[46][1]++, null);
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[45][1]++;
    }
    cov_1ddlr4k2fy().s[73]++;
    if (formData.avatar_url !== undefined) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[49][0]++;
      cov_1ddlr4k2fy().s[74]++;
      profileData.avatar_url =
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[50][0]++, formData.avatar_url) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[50][1]++, null);
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[49][1]++;
    }
    cov_1ddlr4k2fy().s[75]++;
    if (formData.banner_url !== undefined) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[51][0]++;
      cov_1ddlr4k2fy().s[76]++;
      profileData.banner_url =
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[52][0]++, formData.banner_url) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[52][1]++, null);
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[51][1]++;
    }
    cov_1ddlr4k2fy().s[77]++;
    if (formData.website !== undefined) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[53][0]++;
      cov_1ddlr4k2fy().s[78]++;
      profileData.website =
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[54][0]++,
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[56][0]++, (_d = formData.website) === null) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[56][1]++, _d === void 0) ?
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[55][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[55][1]++, _d.trim())) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[54][1]++, null);
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[53][1]++;
    }
    cov_1ddlr4k2fy().s[79]++;
    if (formData.bitcoin_address !== undefined) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[57][0]++;
      cov_1ddlr4k2fy().s[80]++;
      profileData.bitcoin_address =
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[58][0]++,
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[60][0]++, (_e = formData.bitcoin_address) === null) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[60][1]++, _e === void 0) ?
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[59][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[59][1]++, _e.trim())) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[58][1]++, null);
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[57][1]++;
    }
    cov_1ddlr4k2fy().s[81]++;
    if (formData.lightning_address !== undefined) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[61][0]++;
      cov_1ddlr4k2fy().s[82]++;
      profileData.lightning_address =
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[62][0]++,
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[64][0]++, (_f = formData.lightning_address) === null) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[64][1]++, _f === void 0) ?
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[63][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[63][1]++, _f.trim())) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[62][1]++, null);
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[61][1]++;
    }
    cov_1ddlr4k2fy().s[83]++;
    (0, logger_1.logProfile)('ProfileHelper: Prepared update data:', profileData);
    // Check if profile exists first
    const {
      data: existingProfile,
      error: fetchError
    } =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[84]++, await client_1.default.from('profiles').select('*').eq('id', userId).single());
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[85]++;
    if (
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[66][0]++, fetchError) &&
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[66][1]++, fetchError.code !== 'PGRST116')) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[65][0]++;
      cov_1ddlr4k2fy().s[86]++;
      logger_1.logger.error('ProfileHelper: Error checking existing profile:', {
        error: fetchError
      }, 'Profile');
      /* istanbul ignore next */
      cov_1ddlr4k2fy().s[87]++;
      return {
        data: null,
        error: 'Failed to check existing profile'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[65][1]++;
    }
    let result;
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[88]++;
    if (!existingProfile) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[67][0]++;
      cov_1ddlr4k2fy().s[89]++;
      // Profile doesn't exist, create it
      (0, logger_1.logProfile)('ProfileHelper: Profile does not exist, creating new profile');
      const newProfileData =
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().s[90]++, {
        id: userId,
        username: profileData.username,
        display_name: profileData.display_name,
        bio: profileData.bio,
        avatar_url: profileData.avatar_url,
        banner_url: profileData.banner_url,
        website: profileData.website,
        bitcoin_address: profileData.bitcoin_address,
        lightning_address: profileData.lightning_address,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_1ddlr4k2fy().s[91]++;
      result = await client_1.default.from('profiles').insert(newProfileData).select('*').single();
    } else {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[67][1]++;
      cov_1ddlr4k2fy().s[92]++;
      // Profile exists, update it
      (0, logger_1.logProfile)('ProfileHelper: Updating existing profile');
      /* istanbul ignore next */
      cov_1ddlr4k2fy().s[93]++;
      result = await client_1.default.from('profiles').update(profileData).eq('id', userId).select('*').single();
    }
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[94]++;
    if (result.error) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[68][0]++;
      cov_1ddlr4k2fy().s[95]++;
      logger_1.logger.error('ProfileHelper: Database operation failed:', {
        error: result.error
      }, 'Profile');
      // Handle specific error cases
      /* istanbul ignore next */
      cov_1ddlr4k2fy().s[96]++;
      if (result.error.code === '23505') {
        /* istanbul ignore next */
        cov_1ddlr4k2fy().b[69][0]++;
        cov_1ddlr4k2fy().s[97]++;
        return {
          data: null,
          error: 'Username is already taken. Please choose another username.'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1ddlr4k2fy().b[69][1]++;
      }
      cov_1ddlr4k2fy().s[98]++;
      return {
        data: null,
        error:
        /* istanbul ignore next */
        (cov_1ddlr4k2fy().b[70][0]++, result.error.message) ||
        /* istanbul ignore next */
        (cov_1ddlr4k2fy().b[70][1]++, 'Failed to update profile')
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[68][1]++;
    }
    // Map database result back to application schema
    const profile =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[99]++, {
      id: result.data.id,
      username: result.data.username,
      display_name: result.data.display_name,
      bio: result.data.bio,
      avatar_url: result.data.avatar_url,
      banner_url: result.data.banner_url,
      website: result.data.website,
      bitcoin_address: result.data.bitcoin_address,
      lightning_address: result.data.lightning_address,
      created_at: result.data.created_at,
      updated_at: result.data.updated_at
    });
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[100]++;
    (0, logger_1.logProfile)('ProfileHelper: Profile operation successful');
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[101]++;
    return {
      data: profile,
      error: null
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[102]++;
    logger_1.logger.error('ProfileHelper: Unexpected error during update:', {
      error
    }, 'Profile');
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[103]++;
    return {
      data: null,
      error: 'Failed to update profile'
    };
  }
}
/**
 * Check if a username is available
 */
async function isUsernameAvailable(username) {
  /* istanbul ignore next */
  cov_1ddlr4k2fy().f[5]++;
  cov_1ddlr4k2fy().s[104]++;
  try {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[105]++;
    if (!(
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[73][0]++, username === null) ||
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[73][1]++, username === void 0) ?
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[72][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[72][1]++, username.trim()))) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[71][0]++;
      cov_1ddlr4k2fy().s[106]++;
      return {
        available: false,
        error: 'Username is required'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[71][1]++;
    }
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[107]++, await client_1.default.from('profiles').select('username').eq('username', username.trim()).limit(1));
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[108]++;
    if (error) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[74][0]++;
      cov_1ddlr4k2fy().s[109]++;
      logger_1.logger.error('ProfileHelper: Error checking username availability:', {
        error
      }, 'Profile');
      /* istanbul ignore next */
      cov_1ddlr4k2fy().s[110]++;
      return {
        available: false,
        error: 'Failed to check username availability'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[74][1]++;
    }
    cov_1ddlr4k2fy().s[111]++;
    return {
      available: data.length === 0,
      error: null
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[112]++;
    logger_1.logger.error('ProfileHelper: Unexpected error checking username:', error, 'Profile');
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[113]++;
    return {
      available: false,
      error:
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[75][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[75][1]++, 'An unexpected error occurred')
    };
  }
}
/**
 * Get profile by username
 */
async function getProfileByUsername(username) {
  /* istanbul ignore next */
  cov_1ddlr4k2fy().f[6]++;
  cov_1ddlr4k2fy().s[114]++;
  try {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[115]++;
    if (!(
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[78][0]++, username === null) ||
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[78][1]++, username === void 0) ?
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[77][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[77][1]++, username.trim()))) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[76][0]++;
      cov_1ddlr4k2fy().s[116]++;
      return {
        data: null,
        error: 'Username is required'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[76][1]++;
    }
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[117]++, await client_1.default.from('profiles').select('*').eq('username', username.trim()).single());
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[118]++;
    if (error) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[79][0]++;
      cov_1ddlr4k2fy().s[119]++;
      if (error.code === 'PGRST116') {
        /* istanbul ignore next */
        cov_1ddlr4k2fy().b[80][0]++;
        cov_1ddlr4k2fy().s[120]++;
        return {
          data: null,
          error: 'Profile not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1ddlr4k2fy().b[80][1]++;
      }
      cov_1ddlr4k2fy().s[121]++;
      logger_1.logger.error('ProfileHelper: Error fetching profile by username:', {
        error
      }, 'Profile');
      /* istanbul ignore next */
      cov_1ddlr4k2fy().s[122]++;
      return {
        data: null,
        error: 'Failed to fetch profile'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[79][1]++;
    }
    cov_1ddlr4k2fy().s[123]++;
    return {
      data,
      error: null
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[124]++;
    logger_1.logger.error('ProfileHelper: Unexpected error fetching profile by username:', error, 'Profile');
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[125]++;
    return {
      data: null,
      error:
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[81][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[81][1]++, 'An unexpected error occurred')
    };
  }
}
/**
 * Search profiles by username or display name
 */
async function searchProfiles(query) {
  /* istanbul ignore next */
  cov_1ddlr4k2fy().f[7]++;
  cov_1ddlr4k2fy().s[126]++;
  try {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[127]++;
    if (!(
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[84][0]++, query === null) ||
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[84][1]++, query === void 0) ?
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[83][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[83][1]++, query.trim()))) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[82][0]++;
      cov_1ddlr4k2fy().s[128]++;
      return {
        data: [],
        error: null
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[82][1]++;
    }
    const searchTerm =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[129]++, `%${query.trim()}%`);
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[130]++, await client_1.default.from('profiles').select('*').or(`username.ilike.${searchTerm},full_name.ilike.${searchTerm}`).order('username').limit(20));
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[131]++;
    if (error) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[85][0]++;
      cov_1ddlr4k2fy().s[132]++;
      logger_1.logger.error('ProfileHelper: Error searching profiles:', {
        error
      }, 'Profile');
      /* istanbul ignore next */
      cov_1ddlr4k2fy().s[133]++;
      return {
        data: [],
        error: 'Failed to search profiles'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[85][1]++;
    }
    cov_1ddlr4k2fy().s[134]++;
    return {
      data:
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[86][0]++, data) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[86][1]++, []),
      error: null
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[135]++;
    logger_1.logger.error('ProfileHelper: Unexpected error searching profiles:', error, 'Profile');
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[136]++;
    return {
      data: [],
      error:
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[87][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_1ddlr4k2fy().b[87][1]++, 'An unexpected error occurred')
    };
  }
}
/**
 * Validate profile data before submission
 */
function validateProfileData(formData) {
  /* istanbul ignore next */
  cov_1ddlr4k2fy().f[8]++;
  var _a, _b, _c, _d;
  const errors =
  /* istanbul ignore next */
  (cov_1ddlr4k2fy().s[137]++, []);
  // Validate username
  /* istanbul ignore next */
  cov_1ddlr4k2fy().s[138]++;
  if (formData.username !== undefined) {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().b[88][0]++;
    const username =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[139]++,
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[90][0]++, (_a = formData.username) === null) ||
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[90][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[89][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[89][1]++, _a.trim()));
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[140]++;
    if (
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[92][0]++, username) &&
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[92][1]++, username.length < 3)) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[91][0]++;
      cov_1ddlr4k2fy().s[141]++;
      errors.push('Username must be at least 3 characters long');
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[91][1]++;
    }
    cov_1ddlr4k2fy().s[142]++;
    if (
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[94][0]++, username) &&
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[94][1]++, username.length > 20)) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[93][0]++;
      cov_1ddlr4k2fy().s[143]++;
      errors.push('Username must be 20 characters or less');
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[93][1]++;
    }
    cov_1ddlr4k2fy().s[144]++;
    if (
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[96][0]++, username) &&
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[96][1]++, !/^[a-zA-Z0-9_-]+$/.test(username))) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[95][0]++;
      cov_1ddlr4k2fy().s[145]++;
      errors.push('Username can only contain letters, numbers, hyphens, and underscores');
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[95][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1ddlr4k2fy().b[88][1]++;
  }
  // Validate display name
  cov_1ddlr4k2fy().s[146]++;
  if (formData.display_name !== undefined) {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().b[97][0]++;
    const displayName =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[147]++,
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[99][0]++, (_b = formData.display_name) === null) ||
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[99][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[98][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[98][1]++, _b.trim()));
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[148]++;
    if (
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[101][0]++, displayName) &&
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[101][1]++, displayName.length > 50)) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[100][0]++;
      cov_1ddlr4k2fy().s[149]++;
      errors.push('Display name must be 50 characters or less');
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[100][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1ddlr4k2fy().b[97][1]++;
  }
  // Validate bio
  cov_1ddlr4k2fy().s[150]++;
  if (formData.bio !== undefined) {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().b[102][0]++;
    const bio =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[151]++,
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[104][0]++, (_c = formData.bio) === null) ||
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[104][1]++, _c === void 0) ?
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[103][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[103][1]++, _c.trim()));
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[152]++;
    if (
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[106][0]++, bio) &&
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[106][1]++, bio.length > 500)) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[105][0]++;
      cov_1ddlr4k2fy().s[153]++;
      errors.push('Bio must be 500 characters or less');
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[105][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1ddlr4k2fy().b[102][1]++;
  }
  // Validate Bitcoin address format (basic validation)
  cov_1ddlr4k2fy().s[154]++;
  if (formData.bitcoin_address !== undefined) {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().b[107][0]++;
    const btcAddress =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[155]++,
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[109][0]++, (_d = formData.bitcoin_address) === null) ||
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[109][1]++, _d === void 0) ?
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[108][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[108][1]++, _d.trim()));
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[156]++;
    if (
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[111][0]++, btcAddress) &&
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().b[111][1]++, !/^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$|^bc1[a-z0-9]{39,59}$/.test(btcAddress))) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[110][0]++;
      cov_1ddlr4k2fy().s[157]++;
      errors.push('Invalid Bitcoin address format');
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[110][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1ddlr4k2fy().b[107][1]++;
  }
  cov_1ddlr4k2fy().s[158]++;
  return {
    valid: errors.length === 0,
    errors
  };
}
/**
 * Delete a user's profile
 */
async function deleteProfile(userId) {
  /* istanbul ignore next */
  cov_1ddlr4k2fy().f[9]++;
  cov_1ddlr4k2fy().s[159]++;
  try {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[160]++;
    (0, logger_1.logProfile)(`ProfileHelper: Deleting profile for user ${userId}`);
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[161]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[112][0]++;
      cov_1ddlr4k2fy().s[162]++;
      return {
        error: 'User ID is required'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[112][1]++;
    }
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_1ddlr4k2fy().s[163]++, await client_1.default.from('profiles').delete().eq('id', userId));
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[164]++;
    if (error) {
      /* istanbul ignore next */
      cov_1ddlr4k2fy().b[113][0]++;
      cov_1ddlr4k2fy().s[165]++;
      logger_1.logger.error('ProfileHelper: Error deleting profile:', {
        error
      }, 'Profile');
      /* istanbul ignore next */
      cov_1ddlr4k2fy().s[166]++;
      return {
        error:
        /* istanbul ignore next */
        (cov_1ddlr4k2fy().b[114][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1ddlr4k2fy().b[114][1]++, 'Failed to delete profile')
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ddlr4k2fy().b[113][1]++;
    }
    cov_1ddlr4k2fy().s[167]++;
    (0, logger_1.logProfile)('ProfileHelper: Profile deleted successfully');
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[168]++;
    return {
      error: null
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[169]++;
    logger_1.logger.error('ProfileHelper: Unexpected error during deletion:', {
      error
    }, 'Profile');
    /* istanbul ignore next */
    cov_1ddlr4k2fy().s[170]++;
    return {
      error: 'Failed to delete profile'
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWRkbHI0azJmeSIsImFjdHVhbENvdmVyYWdlIiwiZXhwb3J0cyIsImdldFByb2ZpbGVzIiwicyIsImdldFByb2ZpbGUiLCJjcmVhdGVQcm9maWxlIiwidXBkYXRlUHJvZmlsZSIsImlzVXNlcm5hbWVBdmFpbGFibGUiLCJnZXRQcm9maWxlQnlVc2VybmFtZSIsInNlYXJjaFByb2ZpbGVzIiwidmFsaWRhdGVQcm9maWxlRGF0YSIsImRlbGV0ZVByb2ZpbGUiLCJjbGllbnRfMSIsIl9faW1wb3J0RGVmYXVsdCIsInJlcXVpcmUiLCJsb2dnZXJfMSIsImYiLCJkZWZhdWx0IiwiZnJvbSIsInNlbGVjdCIsIm9yZGVyIiwiYXNjZW5kaW5nIiwidXNlcklkIiwibG9nUHJvZmlsZSIsImIiLCJkYXRhIiwiZXJyb3IiLCJlcSIsInNpbmdsZSIsImNvZGUiLCJsb2dnZXIiLCJtZXNzYWdlIiwicHJvZmlsZSIsImlkIiwidXNlcm5hbWUiLCJkaXNwbGF5X25hbWUiLCJiaW8iLCJhdmF0YXJfdXJsIiwiYmFubmVyX3VybCIsIndlYnNpdGUiLCJiaXRjb2luX2FkZHJlc3MiLCJsaWdodG5pbmdfYWRkcmVzcyIsImNyZWF0ZWRfYXQiLCJ1cGRhdGVkX2F0IiwiZm9ybURhdGEiLCJ1c2VyIiwidXNlckVycm9yIiwiYXV0aCIsImdldFVzZXIiLCJhdXRoZW50aWNhdGVkVXNlcklkIiwicHJvZmlsZURhdGEiLCJfYSIsInRyaW0iLCJfYiIsIl9jIiwiX2QiLCJfZSIsIl9mIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwicmVzdWx0IiwiaW5zZXJ0IiwidW5kZWZpbmVkIiwiZXhpc3RpbmdQcm9maWxlIiwiZmV0Y2hFcnJvciIsIm5ld1Byb2ZpbGVEYXRhIiwidXBkYXRlIiwiYXZhaWxhYmxlIiwibGltaXQiLCJsZW5ndGgiLCJxdWVyeSIsInNlYXJjaFRlcm0iLCJvciIsImVycm9ycyIsInB1c2giLCJ0ZXN0IiwiZGlzcGxheU5hbWUiLCJidGNBZGRyZXNzIiwidmFsaWQiLCJkZWxldGUiXSwic291cmNlcyI6WyIvaG9tZS9nL2Rldi9vcmFuZ2VjYXQvc3JjL3NlcnZpY2VzL3N1cGFiYXNlL3Byb2ZpbGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuXG5pbXBvcnQgc3VwYWJhc2UgZnJvbSAnLi9jbGllbnQnXG5pbXBvcnQgdHlwZSB7IFByb2ZpbGUsIFByb2ZpbGVGb3JtRGF0YSB9IGZyb20gJ0AvdHlwZXMvZGF0YWJhc2UnXG5pbXBvcnQgeyBsb2dQcm9maWxlLCBsb2dnZXIgfSBmcm9tICdAL3V0aWxzL2xvZ2dlcidcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFByb2ZpbGVzKCkge1xuICByZXR1cm4gc3VwYWJhc2VcbiAgICAuZnJvbSgncHJvZmlsZXMnKVxuICAgIC5zZWxlY3QoJyonKVxuICAgIC5vcmRlcignY3JlYXRlZF9hdCcsIHsgYXNjZW5kaW5nOiBmYWxzZSB9KVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UHJvZmlsZSh1c2VySWQ6IHN0cmluZyk6IFByb21pc2U8eyBkYXRhOiBQcm9maWxlIHwgbnVsbDsgZXJyb3I6IHN0cmluZyB8IG51bGwgfT4ge1xuICB0cnkge1xuICAgIGxvZ1Byb2ZpbGUoYFByb2ZpbGVIZWxwZXI6IEdldHRpbmcgcHJvZmlsZSBmb3IgdXNlciAke3VzZXJJZH1gKTtcblxuICAgIGlmICghdXNlcklkKSB7XG4gICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvcjogJ1VzZXIgSUQgaXMgcmVxdWlyZWQnIH07XG4gICAgfVxuXG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdwcm9maWxlcycpXG4gICAgICAuc2VsZWN0KCcqJylcbiAgICAgIC5lcSgnaWQnLCB1c2VySWQpXG4gICAgICAuc2luZ2xlKCk7XG5cbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIGlmIChlcnJvci5jb2RlID09PSAnUEdSU1QxMTYnKSB7XG4gICAgICAgIGxvZ1Byb2ZpbGUoJ1Byb2ZpbGVIZWxwZXI6IFByb2ZpbGUgbm90IGZvdW5kJyk7XG4gICAgICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yOiBudWxsIH07IC8vIE5vdCBmb3VuZCBpcyBub3QgYW4gZXJyb3JcbiAgICAgIH1cbiAgICAgIGxvZ2dlci5lcnJvcignUHJvZmlsZUhlbHBlcjogRXJyb3IgZmV0Y2hpbmcgcHJvZmlsZTonLCB7IGVycm9yIH0sICdQcm9maWxlJyk7XG4gICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvcjogZXJyb3IubWVzc2FnZSB9O1xuICAgIH1cblxuICAgIC8vIE1hcCBkYXRhYmFzZSBzY2hlbWEgdG8gYXBwbGljYXRpb24gc2NoZW1hXG4gICAgY29uc3QgcHJvZmlsZTogUHJvZmlsZSA9IHtcbiAgICAgIGlkOiBkYXRhLmlkLFxuICAgICAgdXNlcm5hbWU6IGRhdGEudXNlcm5hbWUsXG4gICAgICBkaXNwbGF5X25hbWU6IGRhdGEuZGlzcGxheV9uYW1lLCAvLyBVc2UgYWN0dWFsIGRpc3BsYXlfbmFtZSBjb2x1bW5cbiAgICAgIGJpbzogZGF0YS5iaW8sXG4gICAgICBhdmF0YXJfdXJsOiBkYXRhLmF2YXRhcl91cmwsXG4gICAgICBiYW5uZXJfdXJsOiBkYXRhLmJhbm5lcl91cmwsXG4gICAgICB3ZWJzaXRlOiBkYXRhLndlYnNpdGUsXG4gICAgICBiaXRjb2luX2FkZHJlc3M6IGRhdGEuYml0Y29pbl9hZGRyZXNzLFxuICAgICAgbGlnaHRuaW5nX2FkZHJlc3M6IGRhdGEubGlnaHRuaW5nX2FkZHJlc3MsXG4gICAgICBjcmVhdGVkX2F0OiBkYXRhLmNyZWF0ZWRfYXQsXG4gICAgICB1cGRhdGVkX2F0OiBkYXRhLnVwZGF0ZWRfYXRcbiAgICB9O1xuXG4gICAgbG9nUHJvZmlsZSgnUHJvZmlsZUhlbHBlcjogUHJvZmlsZSBmZXRjaGVkIHN1Y2Nlc3NmdWxseScpO1xuICAgIHJldHVybiB7IGRhdGE6IHByb2ZpbGUsIGVycm9yOiBudWxsIH07XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBsb2dnZXIuZXJyb3IoJ1Byb2ZpbGVIZWxwZXI6IFVuZXhwZWN0ZWQgZXJyb3I6JywgeyBlcnJvciB9LCAnUHJvZmlsZScpO1xuICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yOiAnRmFpbGVkIHRvIGZldGNoIHByb2ZpbGUnIH07XG4gIH1cbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBuZXcgdXNlciBwcm9maWxlIGluIHRoZSBkYXRhYmFzZVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlUHJvZmlsZSh1c2VySWQ6IHN0cmluZywgZm9ybURhdGE6IFByb2ZpbGVGb3JtRGF0YSk6IFByb21pc2U8eyBkYXRhOiBQcm9maWxlIHwgbnVsbDsgZXJyb3I6IHN0cmluZyB8IG51bGwgfT4ge1xuICB0cnkge1xuICAgIGxvZ1Byb2ZpbGUoYFByb2ZpbGVIZWxwZXI6IFN0YXJ0aW5nIHByb2ZpbGUgY3JlYXRpb24gZm9yIHVzZXIgJHt1c2VySWR9YCwgeyBkYXRhOiBmb3JtRGF0YSB9KTtcblxuICAgIC8vIFZhbGlkYXRlIGlucHV0XG4gICAgaWYgKCF1c2VySWQpIHtcbiAgICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yOiAnVXNlciBJRCBpcyByZXF1aXJlZCcgfTtcbiAgICB9XG5cbiAgICAvLyBHZXQgY3VycmVudCB1c2VyIHRvIGVuc3VyZSB0aGV5IGNhbiBvbmx5IGNyZWF0ZSB0aGVpciBvd24gcHJvZmlsZVxuICAgIGNvbnN0IHsgZGF0YTogeyB1c2VyIH0sIGVycm9yOiB1c2VyRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguZ2V0VXNlcigpO1xuICAgIFxuICAgIGlmICh1c2VyRXJyb3IgfHwgIXVzZXIpIHtcbiAgICAgIGxvZ2dlci5lcnJvcignUHJvZmlsZUhlbHBlcjogTm8gYXV0aGVudGljYXRlZCB1c2VyOicsIHsgZXJyb3I6IHVzZXJFcnJvciB9LCAnUHJvZmlsZScpO1xuICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3I6ICdBdXRoZW50aWNhdGlvbiByZXF1aXJlZCcgfTtcbiAgICB9XG5cbiAgICBpZiAodXNlci5pZCAhPT0gdXNlcklkKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoJ1Byb2ZpbGVIZWxwZXI6IFVzZXIgSUQgbWlzbWF0Y2gnLCB7IHVzZXJJZCwgYXV0aGVudGljYXRlZFVzZXJJZDogdXNlci5pZCB9LCAnUHJvZmlsZScpO1xuICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3I6ICdQZXJtaXNzaW9uIGRlbmllZCcgfTtcbiAgICB9XG5cbiAgICAvLyBQcmVwYXJlIHRoZSBwcm9maWxlIGRhdGEgZm9yIGNyZWF0aW9uIHdpdGggQUNUVUFMIGRhdGFiYXNlIHNjaGVtYVxuICAgIGNvbnN0IHByb2ZpbGVEYXRhID0ge1xuICAgICAgaWQ6IHVzZXJJZCxcbiAgICAgIHVzZXJuYW1lOiBmb3JtRGF0YS51c2VybmFtZT8udHJpbSgpIHx8IG51bGwsXG4gICAgICBkaXNwbGF5X25hbWU6IGZvcm1EYXRhLmRpc3BsYXlfbmFtZT8udHJpbSgpIHx8IG51bGwsIC8vIFVzZSBhY3R1YWwgZGlzcGxheV9uYW1lIGNvbHVtblxuICAgICAgYmlvOiBmb3JtRGF0YS5iaW8/LnRyaW0oKSB8fCBudWxsLFxuICAgICAgYXZhdGFyX3VybDogZm9ybURhdGEuYXZhdGFyX3VybCB8fCBudWxsLFxuICAgICAgYmFubmVyX3VybDogZm9ybURhdGEuYmFubmVyX3VybCB8fCBudWxsLFxuICAgICAgd2Vic2l0ZTogZm9ybURhdGEud2Vic2l0ZT8udHJpbSgpIHx8IG51bGwsXG4gICAgICBiaXRjb2luX2FkZHJlc3M6IGZvcm1EYXRhLmJpdGNvaW5fYWRkcmVzcz8udHJpbSgpIHx8IG51bGwsXG4gICAgICBsaWdodG5pbmdfYWRkcmVzczogZm9ybURhdGEubGlnaHRuaW5nX2FkZHJlc3M/LnRyaW0oKSB8fCBudWxsLFxuICAgICAgY3JlYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgdXBkYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgIH07XG5cbiAgICBsb2dQcm9maWxlKCdQcm9maWxlSGVscGVyOiBDcmVhdGluZyBuZXcgcHJvZmlsZSB3aXRoIGRhdGE6JywgcHJvZmlsZURhdGEpO1xuXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdwcm9maWxlcycpXG4gICAgICAuaW5zZXJ0KHByb2ZpbGVEYXRhKVxuICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAuc2luZ2xlKCk7XG5cbiAgICBpZiAocmVzdWx0LmVycm9yKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoJ1Byb2ZpbGVIZWxwZXI6IFByb2ZpbGUgY3JlYXRpb24gZmFpbGVkOicsIHsgZXJyb3I6IHJlc3VsdC5lcnJvciB9LCAnUHJvZmlsZScpO1xuICAgICAgXG4gICAgICBpZiAocmVzdWx0LmVycm9yLmNvZGUgPT09ICcyMzUwNScpIHtcbiAgICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3I6ICdVc2VybmFtZSBpcyBhbHJlYWR5IHRha2VuLiBQbGVhc2UgY2hvb3NlIGFub3RoZXIgdXNlcm5hbWUuJyB9O1xuICAgICAgfVxuICAgICAgXG4gICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvcjogcmVzdWx0LmVycm9yLm1lc3NhZ2UgfHwgJ0ZhaWxlZCB0byBjcmVhdGUgcHJvZmlsZScgfTtcbiAgICB9XG5cbiAgICAvLyBNYXAgZGF0YWJhc2UgcmVzdWx0IGJhY2sgdG8gYXBwbGljYXRpb24gc2NoZW1hXG4gICAgY29uc3QgcHJvZmlsZTogUHJvZmlsZSA9IHtcbiAgICAgIGlkOiByZXN1bHQuZGF0YS5pZCxcbiAgICAgIHVzZXJuYW1lOiByZXN1bHQuZGF0YS51c2VybmFtZSxcbiAgICAgIGRpc3BsYXlfbmFtZTogcmVzdWx0LmRhdGEuZGlzcGxheV9uYW1lLFxuICAgICAgYmlvOiByZXN1bHQuZGF0YS5iaW8sXG4gICAgICBhdmF0YXJfdXJsOiByZXN1bHQuZGF0YS5hdmF0YXJfdXJsLFxuICAgICAgYmFubmVyX3VybDogcmVzdWx0LmRhdGEuYmFubmVyX3VybCxcbiAgICAgIHdlYnNpdGU6IHJlc3VsdC5kYXRhLndlYnNpdGUsXG4gICAgICBiaXRjb2luX2FkZHJlc3M6IHJlc3VsdC5kYXRhLmJpdGNvaW5fYWRkcmVzcyxcbiAgICAgIGxpZ2h0bmluZ19hZGRyZXNzOiByZXN1bHQuZGF0YS5saWdodG5pbmdfYWRkcmVzcyxcbiAgICAgIGNyZWF0ZWRfYXQ6IHJlc3VsdC5kYXRhLmNyZWF0ZWRfYXQsXG4gICAgICB1cGRhdGVkX2F0OiByZXN1bHQuZGF0YS51cGRhdGVkX2F0XG4gICAgfTtcblxuICAgIGxvZ1Byb2ZpbGUoJ1Byb2ZpbGVIZWxwZXI6IFByb2ZpbGUgY3JlYXRlZCBzdWNjZXNzZnVsbHknKTtcbiAgICByZXR1cm4geyBkYXRhOiBwcm9maWxlLCBlcnJvcjogbnVsbCB9O1xuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgbG9nZ2VyLmVycm9yKCdQcm9maWxlSGVscGVyOiBVbmV4cGVjdGVkIGVycm9yIGR1cmluZyBjcmVhdGlvbjonLCB7IGVycm9yIH0sICdQcm9maWxlJyk7XG4gICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3I6ICdGYWlsZWQgdG8gY3JlYXRlIHByb2ZpbGUnIH07XG4gIH1cbn1cblxuLyoqXG4gKiBVcGRhdGUgYSB1c2VyJ3MgcHJvZmlsZSBpbiB0aGUgZGF0YWJhc2VcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVByb2ZpbGUodXNlcklkOiBzdHJpbmcsIGZvcm1EYXRhOiBQcm9maWxlRm9ybURhdGEpOiBQcm9taXNlPHsgZGF0YTogUHJvZmlsZSB8IG51bGw7IGVycm9yOiBzdHJpbmcgfCBudWxsIH0+IHtcbiAgdHJ5IHtcbiAgICBsb2dQcm9maWxlKGBQcm9maWxlSGVscGVyOiBTdGFydGluZyBwcm9maWxlIHVwZGF0ZSBmb3IgdXNlciAke3VzZXJJZH1gLCB7IGRhdGE6IGZvcm1EYXRhIH0pO1xuXG4gICAgLy8gVmFsaWRhdGUgaW5wdXRcbiAgICBpZiAoIXVzZXJJZCkge1xuICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3I6ICdVc2VyIElEIGlzIHJlcXVpcmVkJyB9O1xuICAgIH1cblxuICAgIC8vIEdldCBjdXJyZW50IHVzZXIgdG8gZW5zdXJlIHRoZXkgY2FuIG9ubHkgdXBkYXRlIHRoZWlyIG93biBwcm9maWxlXG4gICAgY29uc3QgeyBkYXRhOiB7IHVzZXIgfSwgZXJyb3I6IHVzZXJFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5nZXRVc2VyKCk7XG4gICAgXG4gICAgaWYgKHVzZXJFcnJvciB8fCAhdXNlcikge1xuICAgICAgbG9nZ2VyLmVycm9yKCdQcm9maWxlSGVscGVyOiBObyBhdXRoZW50aWNhdGVkIHVzZXI6JywgeyBlcnJvcjogdXNlckVycm9yIH0sICdQcm9maWxlJyk7XG4gICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvcjogJ0F1dGhlbnRpY2F0aW9uIHJlcXVpcmVkJyB9O1xuICAgIH1cblxuICAgIGlmICh1c2VyLmlkICE9PSB1c2VySWQpIHtcbiAgICAgIGxvZ2dlci5lcnJvcignUHJvZmlsZUhlbHBlcjogVXNlciBJRCBtaXNtYXRjaCcsIHsgdXNlcklkLCBhdXRoZW50aWNhdGVkVXNlcklkOiB1c2VyLmlkIH0sICdQcm9maWxlJyk7XG4gICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvcjogJ1Blcm1pc3Npb24gZGVuaWVkJyB9O1xuICAgIH1cblxuICAgIC8vIFByZXBhcmUgdGhlIHByb2ZpbGUgZGF0YSBmb3IgdXBkYXRlIHdpdGggQUNUVUFMIGRhdGFiYXNlIHNjaGVtYVxuICAgIGNvbnN0IHByb2ZpbGVEYXRhOiBSZWNvcmQ8c3RyaW5nLCBhbnk+ID0ge1xuICAgICAgdXBkYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgIH07XG5cbiAgICAvLyBPbmx5IGluY2x1ZGUgZmllbGRzIHRoYXQgYXJlIHByb3ZpZGVkIGFuZCBub3QgZW1wdHlcbiAgICBpZiAoZm9ybURhdGEudXNlcm5hbWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgcHJvZmlsZURhdGEudXNlcm5hbWUgPSBmb3JtRGF0YS51c2VybmFtZT8udHJpbSgpIHx8IG51bGw7XG4gICAgfVxuXG4gICAgaWYgKGZvcm1EYXRhLmRpc3BsYXlfbmFtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBwcm9maWxlRGF0YS5kaXNwbGF5X25hbWUgPSBmb3JtRGF0YS5kaXNwbGF5X25hbWU/LnRyaW0oKSB8fCBudWxsO1xuICAgIH1cblxuICAgIGlmIChmb3JtRGF0YS5iaW8gIT09IHVuZGVmaW5lZCkge1xuICAgICAgcHJvZmlsZURhdGEuYmlvID0gZm9ybURhdGEuYmlvPy50cmltKCkgfHwgbnVsbDtcbiAgICB9XG5cbiAgICBpZiAoZm9ybURhdGEuYXZhdGFyX3VybCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBwcm9maWxlRGF0YS5hdmF0YXJfdXJsID0gZm9ybURhdGEuYXZhdGFyX3VybCB8fCBudWxsO1xuICAgIH1cblxuICAgIGlmIChmb3JtRGF0YS5iYW5uZXJfdXJsICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHByb2ZpbGVEYXRhLmJhbm5lcl91cmwgPSBmb3JtRGF0YS5iYW5uZXJfdXJsIHx8IG51bGw7XG4gICAgfVxuXG4gICAgaWYgKGZvcm1EYXRhLndlYnNpdGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgcHJvZmlsZURhdGEud2Vic2l0ZSA9IGZvcm1EYXRhLndlYnNpdGU/LnRyaW0oKSB8fCBudWxsO1xuICAgIH1cblxuICAgIGlmIChmb3JtRGF0YS5iaXRjb2luX2FkZHJlc3MgIT09IHVuZGVmaW5lZCkge1xuICAgICAgcHJvZmlsZURhdGEuYml0Y29pbl9hZGRyZXNzID0gZm9ybURhdGEuYml0Y29pbl9hZGRyZXNzPy50cmltKCkgfHwgbnVsbDtcbiAgICB9XG5cbiAgICBpZiAoZm9ybURhdGEubGlnaHRuaW5nX2FkZHJlc3MgIT09IHVuZGVmaW5lZCkge1xuICAgICAgcHJvZmlsZURhdGEubGlnaHRuaW5nX2FkZHJlc3MgPSBmb3JtRGF0YS5saWdodG5pbmdfYWRkcmVzcz8udHJpbSgpIHx8IG51bGw7XG4gICAgfVxuXG4gICAgbG9nUHJvZmlsZSgnUHJvZmlsZUhlbHBlcjogUHJlcGFyZWQgdXBkYXRlIGRhdGE6JywgcHJvZmlsZURhdGEpO1xuXG4gICAgLy8gQ2hlY2sgaWYgcHJvZmlsZSBleGlzdHMgZmlyc3RcbiAgICBjb25zdCB7IGRhdGE6IGV4aXN0aW5nUHJvZmlsZSwgZXJyb3I6IGZldGNoRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAuZnJvbSgncHJvZmlsZXMnKVxuICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAuZXEoJ2lkJywgdXNlcklkKVxuICAgICAgLnNpbmdsZSgpO1xuXG4gICAgaWYgKGZldGNoRXJyb3IgJiYgZmV0Y2hFcnJvci5jb2RlICE9PSAnUEdSU1QxMTYnKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoJ1Byb2ZpbGVIZWxwZXI6IEVycm9yIGNoZWNraW5nIGV4aXN0aW5nIHByb2ZpbGU6JywgeyBlcnJvcjogZmV0Y2hFcnJvciB9LCAnUHJvZmlsZScpO1xuICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3I6ICdGYWlsZWQgdG8gY2hlY2sgZXhpc3RpbmcgcHJvZmlsZScgfTtcbiAgICB9XG5cbiAgICBsZXQgcmVzdWx0O1xuXG4gICAgaWYgKCFleGlzdGluZ1Byb2ZpbGUpIHtcbiAgICAgIC8vIFByb2ZpbGUgZG9lc24ndCBleGlzdCwgY3JlYXRlIGl0XG4gICAgICBsb2dQcm9maWxlKCdQcm9maWxlSGVscGVyOiBQcm9maWxlIGRvZXMgbm90IGV4aXN0LCBjcmVhdGluZyBuZXcgcHJvZmlsZScpO1xuICAgICAgXG4gICAgICBjb25zdCBuZXdQcm9maWxlRGF0YSA9IHtcbiAgICAgICAgaWQ6IHVzZXJJZCxcbiAgICAgICAgdXNlcm5hbWU6IHByb2ZpbGVEYXRhLnVzZXJuYW1lLFxuICAgICAgICBkaXNwbGF5X25hbWU6IHByb2ZpbGVEYXRhLmRpc3BsYXlfbmFtZSxcbiAgICAgICAgYmlvOiBwcm9maWxlRGF0YS5iaW8sXG4gICAgICAgIGF2YXRhcl91cmw6IHByb2ZpbGVEYXRhLmF2YXRhcl91cmwsXG4gICAgICAgIGJhbm5lcl91cmw6IHByb2ZpbGVEYXRhLmJhbm5lcl91cmwsXG4gICAgICAgIHdlYnNpdGU6IHByb2ZpbGVEYXRhLndlYnNpdGUsXG4gICAgICAgIGJpdGNvaW5fYWRkcmVzczogcHJvZmlsZURhdGEuYml0Y29pbl9hZGRyZXNzLFxuICAgICAgICBsaWdodG5pbmdfYWRkcmVzczogcHJvZmlsZURhdGEubGlnaHRuaW5nX2FkZHJlc3MsXG4gICAgICAgIGNyZWF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgdXBkYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgfTtcblxuICAgICAgcmVzdWx0ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgLmZyb20oJ3Byb2ZpbGVzJylcbiAgICAgICAgLmluc2VydChuZXdQcm9maWxlRGF0YSlcbiAgICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAgIC5zaW5nbGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gUHJvZmlsZSBleGlzdHMsIHVwZGF0ZSBpdFxuICAgICAgbG9nUHJvZmlsZSgnUHJvZmlsZUhlbHBlcjogVXBkYXRpbmcgZXhpc3RpbmcgcHJvZmlsZScpO1xuICAgICAgXG4gICAgICByZXN1bHQgPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgICAuZnJvbSgncHJvZmlsZXMnKVxuICAgICAgICAudXBkYXRlKHByb2ZpbGVEYXRhKVxuICAgICAgICAuZXEoJ2lkJywgdXNlcklkKVxuICAgICAgICAuc2VsZWN0KCcqJylcbiAgICAgICAgLnNpbmdsZSgpO1xuICAgIH1cblxuICAgIGlmIChyZXN1bHQuZXJyb3IpIHtcbiAgICAgIGxvZ2dlci5lcnJvcignUHJvZmlsZUhlbHBlcjogRGF0YWJhc2Ugb3BlcmF0aW9uIGZhaWxlZDonLCB7IGVycm9yOiByZXN1bHQuZXJyb3IgfSwgJ1Byb2ZpbGUnKTtcbiAgICAgIFxuICAgICAgLy8gSGFuZGxlIHNwZWNpZmljIGVycm9yIGNhc2VzXG4gICAgICBpZiAocmVzdWx0LmVycm9yLmNvZGUgPT09ICcyMzUwNScpIHtcbiAgICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3I6ICdVc2VybmFtZSBpcyBhbHJlYWR5IHRha2VuLiBQbGVhc2UgY2hvb3NlIGFub3RoZXIgdXNlcm5hbWUuJyB9O1xuICAgICAgfVxuICAgICAgXG4gICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvcjogcmVzdWx0LmVycm9yLm1lc3NhZ2UgfHwgJ0ZhaWxlZCB0byB1cGRhdGUgcHJvZmlsZScgfTtcbiAgICB9XG5cbiAgICAvLyBNYXAgZGF0YWJhc2UgcmVzdWx0IGJhY2sgdG8gYXBwbGljYXRpb24gc2NoZW1hXG4gICAgY29uc3QgcHJvZmlsZTogUHJvZmlsZSA9IHtcbiAgICAgIGlkOiByZXN1bHQuZGF0YS5pZCxcbiAgICAgIHVzZXJuYW1lOiByZXN1bHQuZGF0YS51c2VybmFtZSxcbiAgICAgIGRpc3BsYXlfbmFtZTogcmVzdWx0LmRhdGEuZGlzcGxheV9uYW1lLFxuICAgICAgYmlvOiByZXN1bHQuZGF0YS5iaW8sXG4gICAgICBhdmF0YXJfdXJsOiByZXN1bHQuZGF0YS5hdmF0YXJfdXJsLFxuICAgICAgYmFubmVyX3VybDogcmVzdWx0LmRhdGEuYmFubmVyX3VybCxcbiAgICAgIHdlYnNpdGU6IHJlc3VsdC5kYXRhLndlYnNpdGUsXG4gICAgICBiaXRjb2luX2FkZHJlc3M6IHJlc3VsdC5kYXRhLmJpdGNvaW5fYWRkcmVzcyxcbiAgICAgIGxpZ2h0bmluZ19hZGRyZXNzOiByZXN1bHQuZGF0YS5saWdodG5pbmdfYWRkcmVzcyxcbiAgICAgIGNyZWF0ZWRfYXQ6IHJlc3VsdC5kYXRhLmNyZWF0ZWRfYXQsXG4gICAgICB1cGRhdGVkX2F0OiByZXN1bHQuZGF0YS51cGRhdGVkX2F0XG4gICAgfTtcblxuICAgIGxvZ1Byb2ZpbGUoJ1Byb2ZpbGVIZWxwZXI6IFByb2ZpbGUgb3BlcmF0aW9uIHN1Y2Nlc3NmdWwnKTtcbiAgICByZXR1cm4geyBkYXRhOiBwcm9maWxlLCBlcnJvcjogbnVsbCB9O1xuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgbG9nZ2VyLmVycm9yKCdQcm9maWxlSGVscGVyOiBVbmV4cGVjdGVkIGVycm9yIGR1cmluZyB1cGRhdGU6JywgeyBlcnJvciB9LCAnUHJvZmlsZScpO1xuICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yOiAnRmFpbGVkIHRvIHVwZGF0ZSBwcm9maWxlJyB9O1xuICB9XG59XG5cbi8qKlxuICogQ2hlY2sgaWYgYSB1c2VybmFtZSBpcyBhdmFpbGFibGVcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGlzVXNlcm5hbWVBdmFpbGFibGUodXNlcm5hbWU6IHN0cmluZyk6IFByb21pc2U8eyBhdmFpbGFibGU6IGJvb2xlYW47IGVycm9yOiBzdHJpbmcgfCBudWxsIH0+IHtcbiAgdHJ5IHtcbiAgICBpZiAoIXVzZXJuYW1lPy50cmltKCkpIHtcbiAgICAgIHJldHVybiB7IGF2YWlsYWJsZTogZmFsc2UsIGVycm9yOiAnVXNlcm5hbWUgaXMgcmVxdWlyZWQnIH07XG4gICAgfVxuXG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdwcm9maWxlcycpXG4gICAgICAuc2VsZWN0KCd1c2VybmFtZScpXG4gICAgICAuZXEoJ3VzZXJuYW1lJywgdXNlcm5hbWUudHJpbSgpKVxuICAgICAgLmxpbWl0KDEpO1xuXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoJ1Byb2ZpbGVIZWxwZXI6IEVycm9yIGNoZWNraW5nIHVzZXJuYW1lIGF2YWlsYWJpbGl0eTonLCB7IGVycm9yIH0sICdQcm9maWxlJyk7XG4gICAgICByZXR1cm4geyBhdmFpbGFibGU6IGZhbHNlLCBlcnJvcjogJ0ZhaWxlZCB0byBjaGVjayB1c2VybmFtZSBhdmFpbGFiaWxpdHknIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgYXZhaWxhYmxlOiBkYXRhLmxlbmd0aCA9PT0gMCwgZXJyb3I6IG51bGwgfTtcbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgIGxvZ2dlci5lcnJvcignUHJvZmlsZUhlbHBlcjogVW5leHBlY3RlZCBlcnJvciBjaGVja2luZyB1c2VybmFtZTonLCBlcnJvciwgJ1Byb2ZpbGUnKTtcbiAgICByZXR1cm4geyBhdmFpbGFibGU6IGZhbHNlLCBlcnJvcjogZXJyb3IubWVzc2FnZSB8fCAnQW4gdW5leHBlY3RlZCBlcnJvciBvY2N1cnJlZCcgfTtcbiAgfVxufVxuXG4vKipcbiAqIEdldCBwcm9maWxlIGJ5IHVzZXJuYW1lXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRQcm9maWxlQnlVc2VybmFtZSh1c2VybmFtZTogc3RyaW5nKTogUHJvbWlzZTx7IGRhdGE6IFByb2ZpbGUgfCBudWxsOyBlcnJvcjogc3RyaW5nIHwgbnVsbCB9PiB7XG4gIHRyeSB7XG4gICAgaWYgKCF1c2VybmFtZT8udHJpbSgpKSB7XG4gICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvcjogJ1VzZXJuYW1lIGlzIHJlcXVpcmVkJyB9O1xuICAgIH1cblxuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAuZnJvbSgncHJvZmlsZXMnKVxuICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAuZXEoJ3VzZXJuYW1lJywgdXNlcm5hbWUudHJpbSgpKVxuICAgICAgLnNpbmdsZSgpO1xuXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBpZiAoZXJyb3IuY29kZSA9PT0gJ1BHUlNUMTE2Jykge1xuICAgICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvcjogJ1Byb2ZpbGUgbm90IGZvdW5kJyB9O1xuICAgICAgfVxuICAgICAgbG9nZ2VyLmVycm9yKCdQcm9maWxlSGVscGVyOiBFcnJvciBmZXRjaGluZyBwcm9maWxlIGJ5IHVzZXJuYW1lOicsIHsgZXJyb3IgfSwgJ1Byb2ZpbGUnKTtcbiAgICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yOiAnRmFpbGVkIHRvIGZldGNoIHByb2ZpbGUnIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgZGF0YSwgZXJyb3I6IG51bGwgfTtcbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgIGxvZ2dlci5lcnJvcignUHJvZmlsZUhlbHBlcjogVW5leHBlY3RlZCBlcnJvciBmZXRjaGluZyBwcm9maWxlIGJ5IHVzZXJuYW1lOicsIGVycm9yLCAnUHJvZmlsZScpO1xuICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yOiBlcnJvci5tZXNzYWdlIHx8ICdBbiB1bmV4cGVjdGVkIGVycm9yIG9jY3VycmVkJyB9O1xuICB9XG59XG5cbi8qKlxuICogU2VhcmNoIHByb2ZpbGVzIGJ5IHVzZXJuYW1lIG9yIGRpc3BsYXkgbmFtZVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2VhcmNoUHJvZmlsZXMocXVlcnk6IHN0cmluZyk6IFByb21pc2U8eyBkYXRhOiBQcm9maWxlW107IGVycm9yOiBzdHJpbmcgfCBudWxsIH0+IHtcbiAgdHJ5IHtcbiAgICBpZiAoIXF1ZXJ5Py50cmltKCkpIHtcbiAgICAgIHJldHVybiB7IGRhdGE6IFtdLCBlcnJvcjogbnVsbCB9O1xuICAgIH1cblxuICAgIGNvbnN0IHNlYXJjaFRlcm0gPSBgJSR7cXVlcnkudHJpbSgpfSVgO1xuICAgIFxuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAuZnJvbSgncHJvZmlsZXMnKVxuICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAub3IoYHVzZXJuYW1lLmlsaWtlLiR7c2VhcmNoVGVybX0sZnVsbF9uYW1lLmlsaWtlLiR7c2VhcmNoVGVybX1gKVxuICAgICAgLm9yZGVyKCd1c2VybmFtZScpXG4gICAgICAubGltaXQoMjApO1xuXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoJ1Byb2ZpbGVIZWxwZXI6IEVycm9yIHNlYXJjaGluZyBwcm9maWxlczonLCB7IGVycm9yIH0sICdQcm9maWxlJyk7XG4gICAgICByZXR1cm4geyBkYXRhOiBbXSwgZXJyb3I6ICdGYWlsZWQgdG8gc2VhcmNoIHByb2ZpbGVzJyB9O1xuICAgIH1cblxuICAgIHJldHVybiB7IGRhdGE6IGRhdGEgfHwgW10sIGVycm9yOiBudWxsIH07XG4gIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICBsb2dnZXIuZXJyb3IoJ1Byb2ZpbGVIZWxwZXI6IFVuZXhwZWN0ZWQgZXJyb3Igc2VhcmNoaW5nIHByb2ZpbGVzOicsIGVycm9yLCAnUHJvZmlsZScpO1xuICAgIHJldHVybiB7IGRhdGE6IFtdLCBlcnJvcjogZXJyb3IubWVzc2FnZSB8fCAnQW4gdW5leHBlY3RlZCBlcnJvciBvY2N1cnJlZCcgfTtcbiAgfVxufVxuXG4vKipcbiAqIFZhbGlkYXRlIHByb2ZpbGUgZGF0YSBiZWZvcmUgc3VibWlzc2lvblxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVQcm9maWxlRGF0YShmb3JtRGF0YTogUHJvZmlsZUZvcm1EYXRhKTogeyB2YWxpZDogYm9vbGVhbjsgZXJyb3JzOiBzdHJpbmdbXSB9IHtcbiAgY29uc3QgZXJyb3JzOiBzdHJpbmdbXSA9IFtdO1xuXG4gIC8vIFZhbGlkYXRlIHVzZXJuYW1lXG4gIGlmIChmb3JtRGF0YS51c2VybmFtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgY29uc3QgdXNlcm5hbWUgPSBmb3JtRGF0YS51c2VybmFtZT8udHJpbSgpO1xuICAgIGlmICh1c2VybmFtZSAmJiB1c2VybmFtZS5sZW5ndGggPCAzKSB7XG4gICAgICBlcnJvcnMucHVzaCgnVXNlcm5hbWUgbXVzdCBiZSBhdCBsZWFzdCAzIGNoYXJhY3RlcnMgbG9uZycpO1xuICAgIH1cbiAgICBpZiAodXNlcm5hbWUgJiYgdXNlcm5hbWUubGVuZ3RoID4gMjApIHtcbiAgICAgIGVycm9ycy5wdXNoKCdVc2VybmFtZSBtdXN0IGJlIDIwIGNoYXJhY3RlcnMgb3IgbGVzcycpO1xuICAgIH1cbiAgICBpZiAodXNlcm5hbWUgJiYgIS9eW2EtekEtWjAtOV8tXSskLy50ZXN0KHVzZXJuYW1lKSkge1xuICAgICAgZXJyb3JzLnB1c2goJ1VzZXJuYW1lIGNhbiBvbmx5IGNvbnRhaW4gbGV0dGVycywgbnVtYmVycywgaHlwaGVucywgYW5kIHVuZGVyc2NvcmVzJyk7XG4gICAgfVxuICB9XG5cbiAgLy8gVmFsaWRhdGUgZGlzcGxheSBuYW1lXG4gIGlmIChmb3JtRGF0YS5kaXNwbGF5X25hbWUgIT09IHVuZGVmaW5lZCkge1xuICAgIGNvbnN0IGRpc3BsYXlOYW1lID0gZm9ybURhdGEuZGlzcGxheV9uYW1lPy50cmltKCk7XG4gICAgaWYgKGRpc3BsYXlOYW1lICYmIGRpc3BsYXlOYW1lLmxlbmd0aCA+IDUwKSB7XG4gICAgICBlcnJvcnMucHVzaCgnRGlzcGxheSBuYW1lIG11c3QgYmUgNTAgY2hhcmFjdGVycyBvciBsZXNzJyk7XG4gICAgfVxuICB9XG5cbiAgLy8gVmFsaWRhdGUgYmlvXG4gIGlmIChmb3JtRGF0YS5iaW8gIT09IHVuZGVmaW5lZCkge1xuICAgIGNvbnN0IGJpbyA9IGZvcm1EYXRhLmJpbz8udHJpbSgpO1xuICAgIGlmIChiaW8gJiYgYmlvLmxlbmd0aCA+IDUwMCkge1xuICAgICAgZXJyb3JzLnB1c2goJ0JpbyBtdXN0IGJlIDUwMCBjaGFyYWN0ZXJzIG9yIGxlc3MnKTtcbiAgICB9XG4gIH1cblxuICAvLyBWYWxpZGF0ZSBCaXRjb2luIGFkZHJlc3MgZm9ybWF0IChiYXNpYyB2YWxpZGF0aW9uKVxuICBpZiAoZm9ybURhdGEuYml0Y29pbl9hZGRyZXNzICE9PSB1bmRlZmluZWQpIHtcbiAgICBjb25zdCBidGNBZGRyZXNzID0gZm9ybURhdGEuYml0Y29pbl9hZGRyZXNzPy50cmltKCk7XG4gICAgaWYgKGJ0Y0FkZHJlc3MgJiYgIS9eWzEzXVthLWttLXpBLUhKLU5QLVoxLTldezI1LDM0fSR8XmJjMVthLXowLTldezM5LDU5fSQvLnRlc3QoYnRjQWRkcmVzcykpIHtcbiAgICAgIGVycm9ycy5wdXNoKCdJbnZhbGlkIEJpdGNvaW4gYWRkcmVzcyBmb3JtYXQnKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4geyB2YWxpZDogZXJyb3JzLmxlbmd0aCA9PT0gMCwgZXJyb3JzIH07XG59XG5cbi8qKlxuICogRGVsZXRlIGEgdXNlcidzIHByb2ZpbGVcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRlbGV0ZVByb2ZpbGUodXNlcklkOiBzdHJpbmcpOiBQcm9taXNlPHsgZXJyb3I6IHN0cmluZyB8IG51bGwgfT4ge1xuICB0cnkge1xuICAgIGxvZ1Byb2ZpbGUoYFByb2ZpbGVIZWxwZXI6IERlbGV0aW5nIHByb2ZpbGUgZm9yIHVzZXIgJHt1c2VySWR9YCk7XG5cbiAgICBpZiAoIXVzZXJJZCkge1xuICAgICAgcmV0dXJuIHsgZXJyb3I6ICdVc2VyIElEIGlzIHJlcXVpcmVkJyB9O1xuICAgIH1cblxuICAgIGNvbnN0IHsgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAuZnJvbSgncHJvZmlsZXMnKVxuICAgICAgLmRlbGV0ZSgpXG4gICAgICAuZXEoJ2lkJywgdXNlcklkKTtcblxuICAgIGlmIChlcnJvcikge1xuICAgICAgbG9nZ2VyLmVycm9yKCdQcm9maWxlSGVscGVyOiBFcnJvciBkZWxldGluZyBwcm9maWxlOicsIHsgZXJyb3IgfSwgJ1Byb2ZpbGUnKTtcbiAgICAgIHJldHVybiB7IGVycm9yOiBlcnJvci5tZXNzYWdlIHx8ICdGYWlsZWQgdG8gZGVsZXRlIHByb2ZpbGUnIH07XG4gICAgfVxuXG4gICAgbG9nUHJvZmlsZSgnUHJvZmlsZUhlbHBlcjogUHJvZmlsZSBkZWxldGVkIHN1Y2Nlc3NmdWxseScpO1xuICAgIHJldHVybiB7IGVycm9yOiBudWxsIH07XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBsb2dnZXIuZXJyb3IoJ1Byb2ZpbGVIZWxwZXI6IFVuZXhwZWN0ZWQgZXJyb3IgZHVyaW5nIGRlbGV0aW9uOicsIHsgZXJyb3IgfSwgJ1Byb2ZpbGUnKTtcbiAgICByZXR1cm4geyBlcnJvcjogJ0ZhaWxlZCB0byBkZWxldGUgcHJvZmlsZScgfTtcbiAgfVxufSAiXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVaO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUlBRSxPQUFBLENBQUFDLFdBQUEsR0FBQUEsV0FBQTtBQUtDO0FBQUFILGNBQUEsR0FBQUksQ0FBQTtBQUVERixPQUFBLENBQUFHLFVBQUEsR0FBQUEsVUFBQTtBQTZDQztBQUFBTCxjQUFBLEdBQUFJLENBQUE7QUFLREYsT0FBQSxDQUFBSSxhQUFBLEdBQUFBLGFBQUE7QUE2RUM7QUFBQU4sY0FBQSxHQUFBSSxDQUFBO0FBS0RGLE9BQUEsQ0FBQUssYUFBQSxHQUFBQSxhQUFBO0FBZ0pDO0FBQUFQLGNBQUEsR0FBQUksQ0FBQTtBQUtERixPQUFBLENBQUFNLG1CQUFBLEdBQUFBLG1CQUFBO0FBc0JDO0FBQUFSLGNBQUEsR0FBQUksQ0FBQTtBQUtERixPQUFBLENBQUFPLG9CQUFBLEdBQUFBLG9CQUFBO0FBeUJDO0FBQUFULGNBQUEsR0FBQUksQ0FBQTtBQUtERixPQUFBLENBQUFRLGNBQUEsR0FBQUEsY0FBQTtBQXlCQztBQUFBVixjQUFBLEdBQUFJLENBQUE7QUFLREYsT0FBQSxDQUFBUyxtQkFBQSxHQUFBQSxtQkFBQTtBQTBDQztBQUFBWCxjQUFBLEdBQUFJLENBQUE7QUFLREYsT0FBQSxDQUFBVSxhQUFBLEdBQUFBLGFBQUE7QUExYUEsTUFBQUMsUUFBQTtBQUFBO0FBQUEsQ0FBQWIsY0FBQSxHQUFBSSxDQUFBLFFBQUFVLGVBQUEsQ0FBQUMsT0FBQTtBQUVBLE1BQUFDLFFBQUE7QUFBQTtBQUFBLENBQUFoQixjQUFBLEdBQUFJLENBQUEsUUFBQVcsT0FBQTtBQUVPLGVBQWVaLFdBQVdBLENBQUE7RUFBQTtFQUFBSCxjQUFBLEdBQUFpQixDQUFBO0VBQUFqQixjQUFBLEdBQUFJLENBQUE7RUFDL0IsT0FBT1MsUUFBQSxDQUFBSyxPQUFRLENBQ1pDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FDaEJDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FDWEMsS0FBSyxDQUFDLFlBQVksRUFBRTtJQUFFQyxTQUFTLEVBQUU7RUFBSyxDQUFFLENBQUM7QUFDOUM7QUFFTyxlQUFlakIsVUFBVUEsQ0FBQ2tCLE1BQWM7RUFBQTtFQUFBdkIsY0FBQSxHQUFBaUIsQ0FBQTtFQUFBakIsY0FBQSxHQUFBSSxDQUFBO0VBQzdDLElBQUk7SUFBQTtJQUFBSixjQUFBLEdBQUFJLENBQUE7SUFDRixJQUFBWSxRQUFBLENBQUFRLFVBQVUsRUFBQywyQ0FBMkNELE1BQU0sRUFBRSxDQUFDO0lBQUM7SUFBQXZCLGNBQUEsR0FBQUksQ0FBQTtJQUVoRSxJQUFJLENBQUNtQixNQUFNLEVBQUU7TUFBQTtNQUFBdkIsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBekIsY0FBQSxHQUFBSSxDQUFBO01BQ1gsT0FBTztRQUFFc0IsSUFBSSxFQUFFLElBQUk7UUFBRUMsS0FBSyxFQUFFO01BQXFCLENBQUU7SUFDckQsQ0FBQztJQUFBO0lBQUE7TUFBQTNCLGNBQUEsR0FBQXlCLENBQUE7SUFBQTtJQUVELE1BQU07TUFBRUMsSUFBSTtNQUFFQztJQUFLLENBQUU7SUFBQTtJQUFBLENBQUEzQixjQUFBLEdBQUFJLENBQUEsUUFBRyxNQUFNUyxRQUFBLENBQUFLLE9BQVEsQ0FDbkNDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FDaEJDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FDWFEsRUFBRSxDQUFDLElBQUksRUFBRUwsTUFBTSxDQUFDLENBQ2hCTSxNQUFNLEVBQUU7SUFBQztJQUFBN0IsY0FBQSxHQUFBSSxDQUFBO0lBRVosSUFBSXVCLEtBQUssRUFBRTtNQUFBO01BQUEzQixjQUFBLEdBQUF5QixDQUFBO01BQUF6QixjQUFBLEdBQUFJLENBQUE7TUFDVCxJQUFJdUIsS0FBSyxDQUFDRyxJQUFJLEtBQUssVUFBVSxFQUFFO1FBQUE7UUFBQTlCLGNBQUEsR0FBQXlCLENBQUE7UUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtRQUM3QixJQUFBWSxRQUFBLENBQUFRLFVBQVUsRUFBQyxrQ0FBa0MsQ0FBQztRQUFDO1FBQUF4QixjQUFBLEdBQUFJLENBQUE7UUFDL0MsT0FBTztVQUFFc0IsSUFBSSxFQUFFLElBQUk7VUFBRUMsS0FBSyxFQUFFO1FBQUksQ0FBRSxDQUFDLENBQUM7TUFDdEMsQ0FBQztNQUFBO01BQUE7UUFBQTNCLGNBQUEsR0FBQXlCLENBQUE7TUFBQTtNQUFBekIsY0FBQSxHQUFBSSxDQUFBO01BQ0RZLFFBQUEsQ0FBQWUsTUFBTSxDQUFDSixLQUFLLENBQUMsd0NBQXdDLEVBQUU7UUFBRUE7TUFBSyxDQUFFLEVBQUUsU0FBUyxDQUFDO01BQUM7TUFBQTNCLGNBQUEsR0FBQUksQ0FBQTtNQUM3RSxPQUFPO1FBQUVzQixJQUFJLEVBQUUsSUFBSTtRQUFFQyxLQUFLLEVBQUVBLEtBQUssQ0FBQ0s7TUFBTyxDQUFFO0lBQzdDLENBQUM7SUFBQTtJQUFBO01BQUFoQyxjQUFBLEdBQUF5QixDQUFBO0lBQUE7SUFFRDtJQUNBLE1BQU1RLE9BQU87SUFBQTtJQUFBLENBQUFqQyxjQUFBLEdBQUFJLENBQUEsUUFBWTtNQUN2QjhCLEVBQUUsRUFBRVIsSUFBSSxDQUFDUSxFQUFFO01BQ1hDLFFBQVEsRUFBRVQsSUFBSSxDQUFDUyxRQUFRO01BQ3ZCQyxZQUFZLEVBQUVWLElBQUksQ0FBQ1UsWUFBWTtNQUFFO01BQ2pDQyxHQUFHLEVBQUVYLElBQUksQ0FBQ1csR0FBRztNQUNiQyxVQUFVLEVBQUVaLElBQUksQ0FBQ1ksVUFBVTtNQUMzQkMsVUFBVSxFQUFFYixJQUFJLENBQUNhLFVBQVU7TUFDM0JDLE9BQU8sRUFBRWQsSUFBSSxDQUFDYyxPQUFPO01BQ3JCQyxlQUFlLEVBQUVmLElBQUksQ0FBQ2UsZUFBZTtNQUNyQ0MsaUJBQWlCLEVBQUVoQixJQUFJLENBQUNnQixpQkFBaUI7TUFDekNDLFVBQVUsRUFBRWpCLElBQUksQ0FBQ2lCLFVBQVU7TUFDM0JDLFVBQVUsRUFBRWxCLElBQUksQ0FBQ2tCO0tBQ2xCO0lBQUM7SUFBQTVDLGNBQUEsR0FBQUksQ0FBQTtJQUVGLElBQUFZLFFBQUEsQ0FBQVEsVUFBVSxFQUFDLDZDQUE2QyxDQUFDO0lBQUM7SUFBQXhCLGNBQUEsR0FBQUksQ0FBQTtJQUMxRCxPQUFPO01BQUVzQixJQUFJLEVBQUVPLE9BQU87TUFBRU4sS0FBSyxFQUFFO0lBQUksQ0FBRTtFQUV2QyxDQUFDLENBQUMsT0FBT0EsS0FBSyxFQUFFO0lBQUE7SUFBQTNCLGNBQUEsR0FBQUksQ0FBQTtJQUNkWSxRQUFBLENBQUFlLE1BQU0sQ0FBQ0osS0FBSyxDQUFDLGtDQUFrQyxFQUFFO01BQUVBO0lBQUssQ0FBRSxFQUFFLFNBQVMsQ0FBQztJQUFDO0lBQUEzQixjQUFBLEdBQUFJLENBQUE7SUFDdkUsT0FBTztNQUFFc0IsSUFBSSxFQUFFLElBQUk7TUFBRUMsS0FBSyxFQUFFO0lBQXlCLENBQUU7RUFDekQ7QUFDRjtBQUVBOzs7QUFHTyxlQUFlckIsYUFBYUEsQ0FBQ2lCLE1BQWMsRUFBRXNCLFFBQXlCO0VBQUE7RUFBQTdDLGNBQUEsR0FBQWlCLENBQUE7Ozs7RUFDM0UsSUFBSTtJQUFBO0lBQUFqQixjQUFBLEdBQUFJLENBQUE7SUFDRixJQUFBWSxRQUFBLENBQUFRLFVBQVUsRUFBQyxxREFBcURELE1BQU0sRUFBRSxFQUFFO01BQUVHLElBQUksRUFBRW1CO0lBQVEsQ0FBRSxDQUFDO0lBRTdGO0lBQUE7SUFBQTdDLGNBQUEsR0FBQUksQ0FBQTtJQUNBLElBQUksQ0FBQ21CLE1BQU0sRUFBRTtNQUFBO01BQUF2QixjQUFBLEdBQUF5QixDQUFBO01BQUF6QixjQUFBLEdBQUFJLENBQUE7TUFDWCxPQUFPO1FBQUVzQixJQUFJLEVBQUUsSUFBSTtRQUFFQyxLQUFLLEVBQUU7TUFBcUIsQ0FBRTtJQUNyRCxDQUFDO0lBQUE7SUFBQTtNQUFBM0IsY0FBQSxHQUFBeUIsQ0FBQTtJQUFBO0lBRUQ7SUFDQSxNQUFNO01BQUVDLElBQUksRUFBRTtRQUFFb0I7TUFBSSxDQUFFO01BQUVuQixLQUFLLEVBQUVvQjtJQUFTLENBQUU7SUFBQTtJQUFBLENBQUEvQyxjQUFBLEdBQUFJLENBQUEsUUFBRyxNQUFNUyxRQUFBLENBQUFLLE9BQVEsQ0FBQzhCLElBQUksQ0FBQ0MsT0FBTyxFQUFFO0lBQUM7SUFBQWpELGNBQUEsR0FBQUksQ0FBQTtJQUUzRTtJQUFJO0lBQUEsQ0FBQUosY0FBQSxHQUFBeUIsQ0FBQSxVQUFBc0IsU0FBUztJQUFBO0lBQUEsQ0FBQS9DLGNBQUEsR0FBQXlCLENBQUEsVUFBSSxDQUFDcUIsSUFBSSxHQUFFO01BQUE7TUFBQTlDLGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUN0QlksUUFBQSxDQUFBZSxNQUFNLENBQUNKLEtBQUssQ0FBQyx1Q0FBdUMsRUFBRTtRQUFFQSxLQUFLLEVBQUVvQjtNQUFTLENBQUUsRUFBRSxTQUFTLENBQUM7TUFBQztNQUFBL0MsY0FBQSxHQUFBSSxDQUFBO01BQ3ZGLE9BQU87UUFBRXNCLElBQUksRUFBRSxJQUFJO1FBQUVDLEtBQUssRUFBRTtNQUF5QixDQUFFO0lBQ3pELENBQUM7SUFBQTtJQUFBO01BQUEzQixjQUFBLEdBQUF5QixDQUFBO0lBQUE7SUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtJQUVELElBQUkwQyxJQUFJLENBQUNaLEVBQUUsS0FBS1gsTUFBTSxFQUFFO01BQUE7TUFBQXZCLGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUN0QlksUUFBQSxDQUFBZSxNQUFNLENBQUNKLEtBQUssQ0FBQyxpQ0FBaUMsRUFBRTtRQUFFSixNQUFNO1FBQUUyQixtQkFBbUIsRUFBRUosSUFBSSxDQUFDWjtNQUFFLENBQUUsRUFBRSxTQUFTLENBQUM7TUFBQztNQUFBbEMsY0FBQSxHQUFBSSxDQUFBO01BQ3JHLE9BQU87UUFBRXNCLElBQUksRUFBRSxJQUFJO1FBQUVDLEtBQUssRUFBRTtNQUFtQixDQUFFO0lBQ25ELENBQUM7SUFBQTtJQUFBO01BQUEzQixjQUFBLEdBQUF5QixDQUFBO0lBQUE7SUFFRDtJQUNBLE1BQU0wQixXQUFXO0lBQUE7SUFBQSxDQUFBbkQsY0FBQSxHQUFBSSxDQUFBLFFBQUc7TUFDbEI4QixFQUFFLEVBQUVYLE1BQU07TUFDVlksUUFBUTtNQUFFO01BQUEsQ0FBQW5DLGNBQUEsR0FBQXlCLENBQUE7TUFBQTtNQUFBLENBQUF6QixjQUFBLEdBQUF5QixDQUFBLFlBQUEyQixFQUFBLEdBQUFQLFFBQVEsQ0FBQ1YsUUFBUTtNQUFBO01BQUEsQ0FBQW5DLGNBQUEsR0FBQXlCLENBQUEsV0FBQTJCLEVBQUE7TUFBQTtNQUFBLENBQUFwRCxjQUFBLEdBQUF5QixDQUFBO01BQUE7TUFBQSxDQUFBekIsY0FBQSxHQUFBeUIsQ0FBQSxXQUFBMkIsRUFBQSxDQUFFQyxJQUFJLEVBQUU7TUFBQTtNQUFBLENBQUFyRCxjQUFBLEdBQUF5QixDQUFBLFdBQUksSUFBSTtNQUMzQ1csWUFBWTtNQUFFO01BQUEsQ0FBQXBDLGNBQUEsR0FBQXlCLENBQUE7TUFBQTtNQUFBLENBQUF6QixjQUFBLEdBQUF5QixDQUFBLFlBQUE2QixFQUFBLEdBQUFULFFBQVEsQ0FBQ1QsWUFBWTtNQUFBO01BQUEsQ0FBQXBDLGNBQUEsR0FBQXlCLENBQUEsV0FBQTZCLEVBQUE7TUFBQTtNQUFBLENBQUF0RCxjQUFBLEdBQUF5QixDQUFBO01BQUE7TUFBQSxDQUFBekIsY0FBQSxHQUFBeUIsQ0FBQSxXQUFBNkIsRUFBQSxDQUFFRCxJQUFJLEVBQUU7TUFBQTtNQUFBLENBQUFyRCxjQUFBLEdBQUF5QixDQUFBLFdBQUksSUFBSTtNQUFFO01BQ3JEWSxHQUFHO01BQUU7TUFBQSxDQUFBckMsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBO01BQUEsQ0FBQXpCLGNBQUEsR0FBQXlCLENBQUEsWUFBQThCLEVBQUEsR0FBQVYsUUFBUSxDQUFDUixHQUFHO01BQUE7TUFBQSxDQUFBckMsY0FBQSxHQUFBeUIsQ0FBQSxXQUFBOEIsRUFBQTtNQUFBO01BQUEsQ0FBQXZELGNBQUEsR0FBQXlCLENBQUE7TUFBQTtNQUFBLENBQUF6QixjQUFBLEdBQUF5QixDQUFBLFdBQUE4QixFQUFBLENBQUVGLElBQUksRUFBRTtNQUFBO01BQUEsQ0FBQXJELGNBQUEsR0FBQXlCLENBQUEsV0FBSSxJQUFJO01BQ2pDYSxVQUFVO01BQUU7TUFBQSxDQUFBdEMsY0FBQSxHQUFBeUIsQ0FBQSxXQUFBb0IsUUFBUSxDQUFDUCxVQUFVO01BQUE7TUFBQSxDQUFBdEMsY0FBQSxHQUFBeUIsQ0FBQSxXQUFJLElBQUk7TUFDdkNjLFVBQVU7TUFBRTtNQUFBLENBQUF2QyxjQUFBLEdBQUF5QixDQUFBLFdBQUFvQixRQUFRLENBQUNOLFVBQVU7TUFBQTtNQUFBLENBQUF2QyxjQUFBLEdBQUF5QixDQUFBLFdBQUksSUFBSTtNQUN2Q2UsT0FBTztNQUFFO01BQUEsQ0FBQXhDLGNBQUEsR0FBQXlCLENBQUE7TUFBQTtNQUFBLENBQUF6QixjQUFBLEdBQUF5QixDQUFBLFlBQUErQixFQUFBLEdBQUFYLFFBQVEsQ0FBQ0wsT0FBTztNQUFBO01BQUEsQ0FBQXhDLGNBQUEsR0FBQXlCLENBQUEsV0FBQStCLEVBQUE7TUFBQTtNQUFBLENBQUF4RCxjQUFBLEdBQUF5QixDQUFBO01BQUE7TUFBQSxDQUFBekIsY0FBQSxHQUFBeUIsQ0FBQSxXQUFBK0IsRUFBQSxDQUFFSCxJQUFJLEVBQUU7TUFBQTtNQUFBLENBQUFyRCxjQUFBLEdBQUF5QixDQUFBLFdBQUksSUFBSTtNQUN6Q2dCLGVBQWU7TUFBRTtNQUFBLENBQUF6QyxjQUFBLEdBQUF5QixDQUFBO01BQUE7TUFBQSxDQUFBekIsY0FBQSxHQUFBeUIsQ0FBQSxZQUFBZ0MsRUFBQSxHQUFBWixRQUFRLENBQUNKLGVBQWU7TUFBQTtNQUFBLENBQUF6QyxjQUFBLEdBQUF5QixDQUFBLFdBQUFnQyxFQUFBO01BQUE7TUFBQSxDQUFBekQsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBO01BQUEsQ0FBQXpCLGNBQUEsR0FBQXlCLENBQUEsV0FBQWdDLEVBQUEsQ0FBRUosSUFBSSxFQUFFO01BQUE7TUFBQSxDQUFBckQsY0FBQSxHQUFBeUIsQ0FBQSxXQUFJLElBQUk7TUFDekRpQixpQkFBaUI7TUFBRTtNQUFBLENBQUExQyxjQUFBLEdBQUF5QixDQUFBO01BQUE7TUFBQSxDQUFBekIsY0FBQSxHQUFBeUIsQ0FBQSxZQUFBaUMsRUFBQSxHQUFBYixRQUFRLENBQUNILGlCQUFpQjtNQUFBO01BQUEsQ0FBQTFDLGNBQUEsR0FBQXlCLENBQUEsV0FBQWlDLEVBQUE7TUFBQTtNQUFBLENBQUExRCxjQUFBLEdBQUF5QixDQUFBO01BQUE7TUFBQSxDQUFBekIsY0FBQSxHQUFBeUIsQ0FBQSxXQUFBaUMsRUFBQSxDQUFFTCxJQUFJLEVBQUU7TUFBQTtNQUFBLENBQUFyRCxjQUFBLEdBQUF5QixDQUFBLFdBQUksSUFBSTtNQUM3RGtCLFVBQVUsRUFBRSxJQUFJZ0IsSUFBSSxFQUFFLENBQUNDLFdBQVcsRUFBRTtNQUNwQ2hCLFVBQVUsRUFBRSxJQUFJZSxJQUFJLEVBQUUsQ0FBQ0MsV0FBVztLQUNuQztJQUFDO0lBQUE1RCxjQUFBLEdBQUFJLENBQUE7SUFFRixJQUFBWSxRQUFBLENBQUFRLFVBQVUsRUFBQyxnREFBZ0QsRUFBRTJCLFdBQVcsQ0FBQztJQUV6RSxNQUFNVSxNQUFNO0lBQUE7SUFBQSxDQUFBN0QsY0FBQSxHQUFBSSxDQUFBLFFBQUcsTUFBTVMsUUFBQSxDQUFBSyxPQUFRLENBQzFCQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQ2hCMkMsTUFBTSxDQUFDWCxXQUFXLENBQUMsQ0FDbkIvQixNQUFNLENBQUMsR0FBRyxDQUFDLENBQ1hTLE1BQU0sRUFBRTtJQUFDO0lBQUE3QixjQUFBLEdBQUFJLENBQUE7SUFFWixJQUFJeUQsTUFBTSxDQUFDbEMsS0FBSyxFQUFFO01BQUE7TUFBQTNCLGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUNoQlksUUFBQSxDQUFBZSxNQUFNLENBQUNKLEtBQUssQ0FBQyx5Q0FBeUMsRUFBRTtRQUFFQSxLQUFLLEVBQUVrQyxNQUFNLENBQUNsQztNQUFLLENBQUUsRUFBRSxTQUFTLENBQUM7TUFBQztNQUFBM0IsY0FBQSxHQUFBSSxDQUFBO01BRTVGLElBQUl5RCxNQUFNLENBQUNsQyxLQUFLLENBQUNHLElBQUksS0FBSyxPQUFPLEVBQUU7UUFBQTtRQUFBOUIsY0FBQSxHQUFBeUIsQ0FBQTtRQUFBekIsY0FBQSxHQUFBSSxDQUFBO1FBQ2pDLE9BQU87VUFBRXNCLElBQUksRUFBRSxJQUFJO1VBQUVDLEtBQUssRUFBRTtRQUE0RCxDQUFFO01BQzVGLENBQUM7TUFBQTtNQUFBO1FBQUEzQixjQUFBLEdBQUF5QixDQUFBO01BQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUVELE9BQU87UUFBRXNCLElBQUksRUFBRSxJQUFJO1FBQUVDLEtBQUs7UUFBRTtRQUFBLENBQUEzQixjQUFBLEdBQUF5QixDQUFBLFdBQUFvQyxNQUFNLENBQUNsQyxLQUFLLENBQUNLLE9BQU87UUFBQTtRQUFBLENBQUFoQyxjQUFBLEdBQUF5QixDQUFBLFdBQUksMEJBQTBCO01BQUEsQ0FBRTtJQUNsRixDQUFDO0lBQUE7SUFBQTtNQUFBekIsY0FBQSxHQUFBeUIsQ0FBQTtJQUFBO0lBRUQ7SUFDQSxNQUFNUSxPQUFPO0lBQUE7SUFBQSxDQUFBakMsY0FBQSxHQUFBSSxDQUFBLFFBQVk7TUFDdkI4QixFQUFFLEVBQUUyQixNQUFNLENBQUNuQyxJQUFJLENBQUNRLEVBQUU7TUFDbEJDLFFBQVEsRUFBRTBCLE1BQU0sQ0FBQ25DLElBQUksQ0FBQ1MsUUFBUTtNQUM5QkMsWUFBWSxFQUFFeUIsTUFBTSxDQUFDbkMsSUFBSSxDQUFDVSxZQUFZO01BQ3RDQyxHQUFHLEVBQUV3QixNQUFNLENBQUNuQyxJQUFJLENBQUNXLEdBQUc7TUFDcEJDLFVBQVUsRUFBRXVCLE1BQU0sQ0FBQ25DLElBQUksQ0FBQ1ksVUFBVTtNQUNsQ0MsVUFBVSxFQUFFc0IsTUFBTSxDQUFDbkMsSUFBSSxDQUFDYSxVQUFVO01BQ2xDQyxPQUFPLEVBQUVxQixNQUFNLENBQUNuQyxJQUFJLENBQUNjLE9BQU87TUFDNUJDLGVBQWUsRUFBRW9CLE1BQU0sQ0FBQ25DLElBQUksQ0FBQ2UsZUFBZTtNQUM1Q0MsaUJBQWlCLEVBQUVtQixNQUFNLENBQUNuQyxJQUFJLENBQUNnQixpQkFBaUI7TUFDaERDLFVBQVUsRUFBRWtCLE1BQU0sQ0FBQ25DLElBQUksQ0FBQ2lCLFVBQVU7TUFDbENDLFVBQVUsRUFBRWlCLE1BQU0sQ0FBQ25DLElBQUksQ0FBQ2tCO0tBQ3pCO0lBQUM7SUFBQTVDLGNBQUEsR0FBQUksQ0FBQTtJQUVGLElBQUFZLFFBQUEsQ0FBQVEsVUFBVSxFQUFDLDZDQUE2QyxDQUFDO0lBQUM7SUFBQXhCLGNBQUEsR0FBQUksQ0FBQTtJQUMxRCxPQUFPO01BQUVzQixJQUFJLEVBQUVPLE9BQU87TUFBRU4sS0FBSyxFQUFFO0lBQUksQ0FBRTtFQUV2QyxDQUFDLENBQUMsT0FBT0EsS0FBSyxFQUFFO0lBQUE7SUFBQTNCLGNBQUEsR0FBQUksQ0FBQTtJQUNkWSxRQUFBLENBQUFlLE1BQU0sQ0FBQ0osS0FBSyxDQUFDLGtEQUFrRCxFQUFFO01BQUVBO0lBQUssQ0FBRSxFQUFFLFNBQVMsQ0FBQztJQUFDO0lBQUEzQixjQUFBLEdBQUFJLENBQUE7SUFDdkYsT0FBTztNQUFFc0IsSUFBSSxFQUFFLElBQUk7TUFBRUMsS0FBSyxFQUFFO0lBQTBCLENBQUU7RUFDMUQ7QUFDRjtBQUVBOzs7QUFHTyxlQUFlcEIsYUFBYUEsQ0FBQ2dCLE1BQWMsRUFBRXNCLFFBQXlCO0VBQUE7RUFBQTdDLGNBQUEsR0FBQWlCLENBQUE7Ozs7RUFDM0UsSUFBSTtJQUFBO0lBQUFqQixjQUFBLEdBQUFJLENBQUE7SUFDRixJQUFBWSxRQUFBLENBQUFRLFVBQVUsRUFBQyxtREFBbURELE1BQU0sRUFBRSxFQUFFO01BQUVHLElBQUksRUFBRW1CO0lBQVEsQ0FBRSxDQUFDO0lBRTNGO0lBQUE7SUFBQTdDLGNBQUEsR0FBQUksQ0FBQTtJQUNBLElBQUksQ0FBQ21CLE1BQU0sRUFBRTtNQUFBO01BQUF2QixjQUFBLEdBQUF5QixDQUFBO01BQUF6QixjQUFBLEdBQUFJLENBQUE7TUFDWCxPQUFPO1FBQUVzQixJQUFJLEVBQUUsSUFBSTtRQUFFQyxLQUFLLEVBQUU7TUFBcUIsQ0FBRTtJQUNyRCxDQUFDO0lBQUE7SUFBQTtNQUFBM0IsY0FBQSxHQUFBeUIsQ0FBQTtJQUFBO0lBRUQ7SUFDQSxNQUFNO01BQUVDLElBQUksRUFBRTtRQUFFb0I7TUFBSSxDQUFFO01BQUVuQixLQUFLLEVBQUVvQjtJQUFTLENBQUU7SUFBQTtJQUFBLENBQUEvQyxjQUFBLEdBQUFJLENBQUEsUUFBRyxNQUFNUyxRQUFBLENBQUFLLE9BQVEsQ0FBQzhCLElBQUksQ0FBQ0MsT0FBTyxFQUFFO0lBQUM7SUFBQWpELGNBQUEsR0FBQUksQ0FBQTtJQUUzRTtJQUFJO0lBQUEsQ0FBQUosY0FBQSxHQUFBeUIsQ0FBQSxXQUFBc0IsU0FBUztJQUFBO0lBQUEsQ0FBQS9DLGNBQUEsR0FBQXlCLENBQUEsV0FBSSxDQUFDcUIsSUFBSSxHQUFFO01BQUE7TUFBQTlDLGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUN0QlksUUFBQSxDQUFBZSxNQUFNLENBQUNKLEtBQUssQ0FBQyx1Q0FBdUMsRUFBRTtRQUFFQSxLQUFLLEVBQUVvQjtNQUFTLENBQUUsRUFBRSxTQUFTLENBQUM7TUFBQztNQUFBL0MsY0FBQSxHQUFBSSxDQUFBO01BQ3ZGLE9BQU87UUFBRXNCLElBQUksRUFBRSxJQUFJO1FBQUVDLEtBQUssRUFBRTtNQUF5QixDQUFFO0lBQ3pELENBQUM7SUFBQTtJQUFBO01BQUEzQixjQUFBLEdBQUF5QixDQUFBO0lBQUE7SUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtJQUVELElBQUkwQyxJQUFJLENBQUNaLEVBQUUsS0FBS1gsTUFBTSxFQUFFO01BQUE7TUFBQXZCLGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUN0QlksUUFBQSxDQUFBZSxNQUFNLENBQUNKLEtBQUssQ0FBQyxpQ0FBaUMsRUFBRTtRQUFFSixNQUFNO1FBQUUyQixtQkFBbUIsRUFBRUosSUFBSSxDQUFDWjtNQUFFLENBQUUsRUFBRSxTQUFTLENBQUM7TUFBQztNQUFBbEMsY0FBQSxHQUFBSSxDQUFBO01BQ3JHLE9BQU87UUFBRXNCLElBQUksRUFBRSxJQUFJO1FBQUVDLEtBQUssRUFBRTtNQUFtQixDQUFFO0lBQ25ELENBQUM7SUFBQTtJQUFBO01BQUEzQixjQUFBLEdBQUF5QixDQUFBO0lBQUE7SUFFRDtJQUNBLE1BQU0wQixXQUFXO0lBQUE7SUFBQSxDQUFBbkQsY0FBQSxHQUFBSSxDQUFBLFFBQXdCO01BQ3ZDd0MsVUFBVSxFQUFFLElBQUllLElBQUksRUFBRSxDQUFDQyxXQUFXO0tBQ25DO0lBRUQ7SUFBQTtJQUFBNUQsY0FBQSxHQUFBSSxDQUFBO0lBQ0EsSUFBSXlDLFFBQVEsQ0FBQ1YsUUFBUSxLQUFLNEIsU0FBUyxFQUFFO01BQUE7TUFBQS9ELGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUNuQytDLFdBQVcsQ0FBQ2hCLFFBQVE7TUFBRztNQUFBLENBQUFuQyxjQUFBLEdBQUF5QixDQUFBO01BQUE7TUFBQSxDQUFBekIsY0FBQSxHQUFBeUIsQ0FBQSxZQUFBMkIsRUFBQSxHQUFBUCxRQUFRLENBQUNWLFFBQVE7TUFBQTtNQUFBLENBQUFuQyxjQUFBLEdBQUF5QixDQUFBLFdBQUEyQixFQUFBO01BQUE7TUFBQSxDQUFBcEQsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBO01BQUEsQ0FBQXpCLGNBQUEsR0FBQXlCLENBQUEsV0FBQTJCLEVBQUEsQ0FBRUMsSUFBSSxFQUFFO01BQUE7TUFBQSxDQUFBckQsY0FBQSxHQUFBeUIsQ0FBQSxXQUFJLElBQUk7SUFDMUQsQ0FBQztJQUFBO0lBQUE7TUFBQXpCLGNBQUEsR0FBQXlCLENBQUE7SUFBQTtJQUFBekIsY0FBQSxHQUFBSSxDQUFBO0lBRUQsSUFBSXlDLFFBQVEsQ0FBQ1QsWUFBWSxLQUFLMkIsU0FBUyxFQUFFO01BQUE7TUFBQS9ELGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUN2QytDLFdBQVcsQ0FBQ2YsWUFBWTtNQUFHO01BQUEsQ0FBQXBDLGNBQUEsR0FBQXlCLENBQUE7TUFBQTtNQUFBLENBQUF6QixjQUFBLEdBQUF5QixDQUFBLFlBQUE2QixFQUFBLEdBQUFULFFBQVEsQ0FBQ1QsWUFBWTtNQUFBO01BQUEsQ0FBQXBDLGNBQUEsR0FBQXlCLENBQUEsV0FBQTZCLEVBQUE7TUFBQTtNQUFBLENBQUF0RCxjQUFBLEdBQUF5QixDQUFBO01BQUE7TUFBQSxDQUFBekIsY0FBQSxHQUFBeUIsQ0FBQSxXQUFBNkIsRUFBQSxDQUFFRCxJQUFJLEVBQUU7TUFBQTtNQUFBLENBQUFyRCxjQUFBLEdBQUF5QixDQUFBLFdBQUksSUFBSTtJQUNsRSxDQUFDO0lBQUE7SUFBQTtNQUFBekIsY0FBQSxHQUFBeUIsQ0FBQTtJQUFBO0lBQUF6QixjQUFBLEdBQUFJLENBQUE7SUFFRCxJQUFJeUMsUUFBUSxDQUFDUixHQUFHLEtBQUswQixTQUFTLEVBQUU7TUFBQTtNQUFBL0QsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBekIsY0FBQSxHQUFBSSxDQUFBO01BQzlCK0MsV0FBVyxDQUFDZCxHQUFHO01BQUc7TUFBQSxDQUFBckMsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBO01BQUEsQ0FBQXpCLGNBQUEsR0FBQXlCLENBQUEsWUFBQThCLEVBQUEsR0FBQVYsUUFBUSxDQUFDUixHQUFHO01BQUE7TUFBQSxDQUFBckMsY0FBQSxHQUFBeUIsQ0FBQSxXQUFBOEIsRUFBQTtNQUFBO01BQUEsQ0FBQXZELGNBQUEsR0FBQXlCLENBQUE7TUFBQTtNQUFBLENBQUF6QixjQUFBLEdBQUF5QixDQUFBLFdBQUE4QixFQUFBLENBQUVGLElBQUksRUFBRTtNQUFBO01BQUEsQ0FBQXJELGNBQUEsR0FBQXlCLENBQUEsV0FBSSxJQUFJO0lBQ2hELENBQUM7SUFBQTtJQUFBO01BQUF6QixjQUFBLEdBQUF5QixDQUFBO0lBQUE7SUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtJQUVELElBQUl5QyxRQUFRLENBQUNQLFVBQVUsS0FBS3lCLFNBQVMsRUFBRTtNQUFBO01BQUEvRCxjQUFBLEdBQUF5QixDQUFBO01BQUF6QixjQUFBLEdBQUFJLENBQUE7TUFDckMrQyxXQUFXLENBQUNiLFVBQVU7TUFBRztNQUFBLENBQUF0QyxjQUFBLEdBQUF5QixDQUFBLFdBQUFvQixRQUFRLENBQUNQLFVBQVU7TUFBQTtNQUFBLENBQUF0QyxjQUFBLEdBQUF5QixDQUFBLFdBQUksSUFBSTtJQUN0RCxDQUFDO0lBQUE7SUFBQTtNQUFBekIsY0FBQSxHQUFBeUIsQ0FBQTtJQUFBO0lBQUF6QixjQUFBLEdBQUFJLENBQUE7SUFFRCxJQUFJeUMsUUFBUSxDQUFDTixVQUFVLEtBQUt3QixTQUFTLEVBQUU7TUFBQTtNQUFBL0QsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBekIsY0FBQSxHQUFBSSxDQUFBO01BQ3JDK0MsV0FBVyxDQUFDWixVQUFVO01BQUc7TUFBQSxDQUFBdkMsY0FBQSxHQUFBeUIsQ0FBQSxXQUFBb0IsUUFBUSxDQUFDTixVQUFVO01BQUE7TUFBQSxDQUFBdkMsY0FBQSxHQUFBeUIsQ0FBQSxXQUFJLElBQUk7SUFDdEQsQ0FBQztJQUFBO0lBQUE7TUFBQXpCLGNBQUEsR0FBQXlCLENBQUE7SUFBQTtJQUFBekIsY0FBQSxHQUFBSSxDQUFBO0lBRUQsSUFBSXlDLFFBQVEsQ0FBQ0wsT0FBTyxLQUFLdUIsU0FBUyxFQUFFO01BQUE7TUFBQS9ELGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUNsQytDLFdBQVcsQ0FBQ1gsT0FBTztNQUFHO01BQUEsQ0FBQXhDLGNBQUEsR0FBQXlCLENBQUE7TUFBQTtNQUFBLENBQUF6QixjQUFBLEdBQUF5QixDQUFBLFlBQUErQixFQUFBLEdBQUFYLFFBQVEsQ0FBQ0wsT0FBTztNQUFBO01BQUEsQ0FBQXhDLGNBQUEsR0FBQXlCLENBQUEsV0FBQStCLEVBQUE7TUFBQTtNQUFBLENBQUF4RCxjQUFBLEdBQUF5QixDQUFBO01BQUE7TUFBQSxDQUFBekIsY0FBQSxHQUFBeUIsQ0FBQSxXQUFBK0IsRUFBQSxDQUFFSCxJQUFJLEVBQUU7TUFBQTtNQUFBLENBQUFyRCxjQUFBLEdBQUF5QixDQUFBLFdBQUksSUFBSTtJQUN4RCxDQUFDO0lBQUE7SUFBQTtNQUFBekIsY0FBQSxHQUFBeUIsQ0FBQTtJQUFBO0lBQUF6QixjQUFBLEdBQUFJLENBQUE7SUFFRCxJQUFJeUMsUUFBUSxDQUFDSixlQUFlLEtBQUtzQixTQUFTLEVBQUU7TUFBQTtNQUFBL0QsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBekIsY0FBQSxHQUFBSSxDQUFBO01BQzFDK0MsV0FBVyxDQUFDVixlQUFlO01BQUc7TUFBQSxDQUFBekMsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBO01BQUEsQ0FBQXpCLGNBQUEsR0FBQXlCLENBQUEsWUFBQWdDLEVBQUEsR0FBQVosUUFBUSxDQUFDSixlQUFlO01BQUE7TUFBQSxDQUFBekMsY0FBQSxHQUFBeUIsQ0FBQSxXQUFBZ0MsRUFBQTtNQUFBO01BQUEsQ0FBQXpELGNBQUEsR0FBQXlCLENBQUE7TUFBQTtNQUFBLENBQUF6QixjQUFBLEdBQUF5QixDQUFBLFdBQUFnQyxFQUFBLENBQUVKLElBQUksRUFBRTtNQUFBO01BQUEsQ0FBQXJELGNBQUEsR0FBQXlCLENBQUEsV0FBSSxJQUFJO0lBQ3hFLENBQUM7SUFBQTtJQUFBO01BQUF6QixjQUFBLEdBQUF5QixDQUFBO0lBQUE7SUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtJQUVELElBQUl5QyxRQUFRLENBQUNILGlCQUFpQixLQUFLcUIsU0FBUyxFQUFFO01BQUE7TUFBQS9ELGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUM1QytDLFdBQVcsQ0FBQ1QsaUJBQWlCO01BQUc7TUFBQSxDQUFBMUMsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBO01BQUEsQ0FBQXpCLGNBQUEsR0FBQXlCLENBQUEsWUFBQWlDLEVBQUEsR0FBQWIsUUFBUSxDQUFDSCxpQkFBaUI7TUFBQTtNQUFBLENBQUExQyxjQUFBLEdBQUF5QixDQUFBLFdBQUFpQyxFQUFBO01BQUE7TUFBQSxDQUFBMUQsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBO01BQUEsQ0FBQXpCLGNBQUEsR0FBQXlCLENBQUEsV0FBQWlDLEVBQUEsQ0FBRUwsSUFBSSxFQUFFO01BQUE7TUFBQSxDQUFBckQsY0FBQSxHQUFBeUIsQ0FBQSxXQUFJLElBQUk7SUFDNUUsQ0FBQztJQUFBO0lBQUE7TUFBQXpCLGNBQUEsR0FBQXlCLENBQUE7SUFBQTtJQUFBekIsY0FBQSxHQUFBSSxDQUFBO0lBRUQsSUFBQVksUUFBQSxDQUFBUSxVQUFVLEVBQUMsc0NBQXNDLEVBQUUyQixXQUFXLENBQUM7SUFFL0Q7SUFDQSxNQUFNO01BQUV6QixJQUFJLEVBQUVzQyxlQUFlO01BQUVyQyxLQUFLLEVBQUVzQztJQUFVLENBQUU7SUFBQTtJQUFBLENBQUFqRSxjQUFBLEdBQUFJLENBQUEsUUFBRyxNQUFNUyxRQUFBLENBQUFLLE9BQVEsQ0FDaEVDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FDaEJDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FDWFEsRUFBRSxDQUFDLElBQUksRUFBRUwsTUFBTSxDQUFDLENBQ2hCTSxNQUFNLEVBQUU7SUFBQztJQUFBN0IsY0FBQSxHQUFBSSxDQUFBO0lBRVo7SUFBSTtJQUFBLENBQUFKLGNBQUEsR0FBQXlCLENBQUEsV0FBQXdDLFVBQVU7SUFBQTtJQUFBLENBQUFqRSxjQUFBLEdBQUF5QixDQUFBLFdBQUl3QyxVQUFVLENBQUNuQyxJQUFJLEtBQUssVUFBVSxHQUFFO01BQUE7TUFBQTlCLGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUNoRFksUUFBQSxDQUFBZSxNQUFNLENBQUNKLEtBQUssQ0FBQyxpREFBaUQsRUFBRTtRQUFFQSxLQUFLLEVBQUVzQztNQUFVLENBQUUsRUFBRSxTQUFTLENBQUM7TUFBQztNQUFBakUsY0FBQSxHQUFBSSxDQUFBO01BQ2xHLE9BQU87UUFBRXNCLElBQUksRUFBRSxJQUFJO1FBQUVDLEtBQUssRUFBRTtNQUFrQyxDQUFFO0lBQ2xFLENBQUM7SUFBQTtJQUFBO01BQUEzQixjQUFBLEdBQUF5QixDQUFBO0lBQUE7SUFFRCxJQUFJb0MsTUFBTTtJQUFDO0lBQUE3RCxjQUFBLEdBQUFJLENBQUE7SUFFWCxJQUFJLENBQUM0RCxlQUFlLEVBQUU7TUFBQTtNQUFBaEUsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBekIsY0FBQSxHQUFBSSxDQUFBO01BQ3BCO01BQ0EsSUFBQVksUUFBQSxDQUFBUSxVQUFVLEVBQUMsNkRBQTZELENBQUM7TUFFekUsTUFBTTBDLGNBQWM7TUFBQTtNQUFBLENBQUFsRSxjQUFBLEdBQUFJLENBQUEsUUFBRztRQUNyQjhCLEVBQUUsRUFBRVgsTUFBTTtRQUNWWSxRQUFRLEVBQUVnQixXQUFXLENBQUNoQixRQUFRO1FBQzlCQyxZQUFZLEVBQUVlLFdBQVcsQ0FBQ2YsWUFBWTtRQUN0Q0MsR0FBRyxFQUFFYyxXQUFXLENBQUNkLEdBQUc7UUFDcEJDLFVBQVUsRUFBRWEsV0FBVyxDQUFDYixVQUFVO1FBQ2xDQyxVQUFVLEVBQUVZLFdBQVcsQ0FBQ1osVUFBVTtRQUNsQ0MsT0FBTyxFQUFFVyxXQUFXLENBQUNYLE9BQU87UUFDNUJDLGVBQWUsRUFBRVUsV0FBVyxDQUFDVixlQUFlO1FBQzVDQyxpQkFBaUIsRUFBRVMsV0FBVyxDQUFDVCxpQkFBaUI7UUFDaERDLFVBQVUsRUFBRSxJQUFJZ0IsSUFBSSxFQUFFLENBQUNDLFdBQVcsRUFBRTtRQUNwQ2hCLFVBQVUsRUFBRSxJQUFJZSxJQUFJLEVBQUUsQ0FBQ0MsV0FBVztPQUNuQztNQUFDO01BQUE1RCxjQUFBLEdBQUFJLENBQUE7TUFFRnlELE1BQU0sR0FBRyxNQUFNaEQsUUFBQSxDQUFBSyxPQUFRLENBQ3BCQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQ2hCMkMsTUFBTSxDQUFDSSxjQUFjLENBQUMsQ0FDdEI5QyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQ1hTLE1BQU0sRUFBRTtJQUNiLENBQUMsTUFBTTtNQUFBO01BQUE3QixjQUFBLEdBQUF5QixDQUFBO01BQUF6QixjQUFBLEdBQUFJLENBQUE7TUFDTDtNQUNBLElBQUFZLFFBQUEsQ0FBQVEsVUFBVSxFQUFDLDBDQUEwQyxDQUFDO01BQUM7TUFBQXhCLGNBQUEsR0FBQUksQ0FBQTtNQUV2RHlELE1BQU0sR0FBRyxNQUFNaEQsUUFBQSxDQUFBSyxPQUFRLENBQ3BCQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQ2hCZ0QsTUFBTSxDQUFDaEIsV0FBVyxDQUFDLENBQ25CdkIsRUFBRSxDQUFDLElBQUksRUFBRUwsTUFBTSxDQUFDLENBQ2hCSCxNQUFNLENBQUMsR0FBRyxDQUFDLENBQ1hTLE1BQU0sRUFBRTtJQUNiO0lBQUM7SUFBQTdCLGNBQUEsR0FBQUksQ0FBQTtJQUVELElBQUl5RCxNQUFNLENBQUNsQyxLQUFLLEVBQUU7TUFBQTtNQUFBM0IsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBekIsY0FBQSxHQUFBSSxDQUFBO01BQ2hCWSxRQUFBLENBQUFlLE1BQU0sQ0FBQ0osS0FBSyxDQUFDLDJDQUEyQyxFQUFFO1FBQUVBLEtBQUssRUFBRWtDLE1BQU0sQ0FBQ2xDO01BQUssQ0FBRSxFQUFFLFNBQVMsQ0FBQztNQUU3RjtNQUFBO01BQUEzQixjQUFBLEdBQUFJLENBQUE7TUFDQSxJQUFJeUQsTUFBTSxDQUFDbEMsS0FBSyxDQUFDRyxJQUFJLEtBQUssT0FBTyxFQUFFO1FBQUE7UUFBQTlCLGNBQUEsR0FBQXlCLENBQUE7UUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtRQUNqQyxPQUFPO1VBQUVzQixJQUFJLEVBQUUsSUFBSTtVQUFFQyxLQUFLLEVBQUU7UUFBNEQsQ0FBRTtNQUM1RixDQUFDO01BQUE7TUFBQTtRQUFBM0IsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBO01BQUF6QixjQUFBLEdBQUFJLENBQUE7TUFFRCxPQUFPO1FBQUVzQixJQUFJLEVBQUUsSUFBSTtRQUFFQyxLQUFLO1FBQUU7UUFBQSxDQUFBM0IsY0FBQSxHQUFBeUIsQ0FBQSxXQUFBb0MsTUFBTSxDQUFDbEMsS0FBSyxDQUFDSyxPQUFPO1FBQUE7UUFBQSxDQUFBaEMsY0FBQSxHQUFBeUIsQ0FBQSxXQUFJLDBCQUEwQjtNQUFBLENBQUU7SUFDbEYsQ0FBQztJQUFBO0lBQUE7TUFBQXpCLGNBQUEsR0FBQXlCLENBQUE7SUFBQTtJQUVEO0lBQ0EsTUFBTVEsT0FBTztJQUFBO0lBQUEsQ0FBQWpDLGNBQUEsR0FBQUksQ0FBQSxRQUFZO01BQ3ZCOEIsRUFBRSxFQUFFMkIsTUFBTSxDQUFDbkMsSUFBSSxDQUFDUSxFQUFFO01BQ2xCQyxRQUFRLEVBQUUwQixNQUFNLENBQUNuQyxJQUFJLENBQUNTLFFBQVE7TUFDOUJDLFlBQVksRUFBRXlCLE1BQU0sQ0FBQ25DLElBQUksQ0FBQ1UsWUFBWTtNQUN0Q0MsR0FBRyxFQUFFd0IsTUFBTSxDQUFDbkMsSUFBSSxDQUFDVyxHQUFHO01BQ3BCQyxVQUFVLEVBQUV1QixNQUFNLENBQUNuQyxJQUFJLENBQUNZLFVBQVU7TUFDbENDLFVBQVUsRUFBRXNCLE1BQU0sQ0FBQ25DLElBQUksQ0FBQ2EsVUFBVTtNQUNsQ0MsT0FBTyxFQUFFcUIsTUFBTSxDQUFDbkMsSUFBSSxDQUFDYyxPQUFPO01BQzVCQyxlQUFlLEVBQUVvQixNQUFNLENBQUNuQyxJQUFJLENBQUNlLGVBQWU7TUFDNUNDLGlCQUFpQixFQUFFbUIsTUFBTSxDQUFDbkMsSUFBSSxDQUFDZ0IsaUJBQWlCO01BQ2hEQyxVQUFVLEVBQUVrQixNQUFNLENBQUNuQyxJQUFJLENBQUNpQixVQUFVO01BQ2xDQyxVQUFVLEVBQUVpQixNQUFNLENBQUNuQyxJQUFJLENBQUNrQjtLQUN6QjtJQUFDO0lBQUE1QyxjQUFBLEdBQUFJLENBQUE7SUFFRixJQUFBWSxRQUFBLENBQUFRLFVBQVUsRUFBQyw2Q0FBNkMsQ0FBQztJQUFDO0lBQUF4QixjQUFBLEdBQUFJLENBQUE7SUFDMUQsT0FBTztNQUFFc0IsSUFBSSxFQUFFTyxPQUFPO01BQUVOLEtBQUssRUFBRTtJQUFJLENBQUU7RUFFdkMsQ0FBQyxDQUFDLE9BQU9BLEtBQUssRUFBRTtJQUFBO0lBQUEzQixjQUFBLEdBQUFJLENBQUE7SUFDZFksUUFBQSxDQUFBZSxNQUFNLENBQUNKLEtBQUssQ0FBQyxnREFBZ0QsRUFBRTtNQUFFQTtJQUFLLENBQUUsRUFBRSxTQUFTLENBQUM7SUFBQztJQUFBM0IsY0FBQSxHQUFBSSxDQUFBO0lBQ3JGLE9BQU87TUFBRXNCLElBQUksRUFBRSxJQUFJO01BQUVDLEtBQUssRUFBRTtJQUEwQixDQUFFO0VBQzFEO0FBQ0Y7QUFFQTs7O0FBR08sZUFBZW5CLG1CQUFtQkEsQ0FBQzJCLFFBQWdCO0VBQUE7RUFBQW5DLGNBQUEsR0FBQWlCLENBQUE7RUFBQWpCLGNBQUEsR0FBQUksQ0FBQTtFQUN4RCxJQUFJO0lBQUE7SUFBQUosY0FBQSxHQUFBSSxDQUFBO0lBQ0YsSUFBSTtJQUFDO0lBQUEsQ0FBQUosY0FBQSxHQUFBeUIsQ0FBQSxXQUFBVSxRQUFRO0lBQUE7SUFBQSxDQUFBbkMsY0FBQSxHQUFBeUIsQ0FBQSxXQUFSVSxRQUFRO0lBQUE7SUFBQSxDQUFBbkMsY0FBQSxHQUFBeUIsQ0FBQTtJQUFBO0lBQUEsQ0FBQXpCLGNBQUEsR0FBQXlCLENBQUEsV0FBUlUsUUFBUSxDQUFFa0IsSUFBSSxFQUFFLElBQUU7TUFBQTtNQUFBckQsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBekIsY0FBQSxHQUFBSSxDQUFBO01BQ3JCLE9BQU87UUFBRWdFLFNBQVMsRUFBRSxLQUFLO1FBQUV6QyxLQUFLLEVBQUU7TUFBc0IsQ0FBRTtJQUM1RCxDQUFDO0lBQUE7SUFBQTtNQUFBM0IsY0FBQSxHQUFBeUIsQ0FBQTtJQUFBO0lBRUQsTUFBTTtNQUFFQyxJQUFJO01BQUVDO0lBQUssQ0FBRTtJQUFBO0lBQUEsQ0FBQTNCLGNBQUEsR0FBQUksQ0FBQSxTQUFHLE1BQU1TLFFBQUEsQ0FBQUssT0FBUSxDQUNuQ0MsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUNoQkMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUNsQlEsRUFBRSxDQUFDLFVBQVUsRUFBRU8sUUFBUSxDQUFDa0IsSUFBSSxFQUFFLENBQUMsQ0FDL0JnQixLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQUM7SUFBQXJFLGNBQUEsR0FBQUksQ0FBQTtJQUVaLElBQUl1QixLQUFLLEVBQUU7TUFBQTtNQUFBM0IsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBekIsY0FBQSxHQUFBSSxDQUFBO01BQ1RZLFFBQUEsQ0FBQWUsTUFBTSxDQUFDSixLQUFLLENBQUMsc0RBQXNELEVBQUU7UUFBRUE7TUFBSyxDQUFFLEVBQUUsU0FBUyxDQUFDO01BQUM7TUFBQTNCLGNBQUEsR0FBQUksQ0FBQTtNQUMzRixPQUFPO1FBQUVnRSxTQUFTLEVBQUUsS0FBSztRQUFFekMsS0FBSyxFQUFFO01BQXVDLENBQUU7SUFDN0UsQ0FBQztJQUFBO0lBQUE7TUFBQTNCLGNBQUEsR0FBQXlCLENBQUE7SUFBQTtJQUFBekIsY0FBQSxHQUFBSSxDQUFBO0lBRUQsT0FBTztNQUFFZ0UsU0FBUyxFQUFFMUMsSUFBSSxDQUFDNEMsTUFBTSxLQUFLLENBQUM7TUFBRTNDLEtBQUssRUFBRTtJQUFJLENBQUU7RUFDdEQsQ0FBQyxDQUFDLE9BQU9BLEtBQVUsRUFBRTtJQUFBO0lBQUEzQixjQUFBLEdBQUFJLENBQUE7SUFDbkJZLFFBQUEsQ0FBQWUsTUFBTSxDQUFDSixLQUFLLENBQUMsb0RBQW9ELEVBQUVBLEtBQUssRUFBRSxTQUFTLENBQUM7SUFBQztJQUFBM0IsY0FBQSxHQUFBSSxDQUFBO0lBQ3JGLE9BQU87TUFBRWdFLFNBQVMsRUFBRSxLQUFLO01BQUV6QyxLQUFLO01BQUU7TUFBQSxDQUFBM0IsY0FBQSxHQUFBeUIsQ0FBQSxXQUFBRSxLQUFLLENBQUNLLE9BQU87TUFBQTtNQUFBLENBQUFoQyxjQUFBLEdBQUF5QixDQUFBLFdBQUksOEJBQThCO0lBQUEsQ0FBRTtFQUNyRjtBQUNGO0FBRUE7OztBQUdPLGVBQWVoQixvQkFBb0JBLENBQUMwQixRQUFnQjtFQUFBO0VBQUFuQyxjQUFBLEdBQUFpQixDQUFBO0VBQUFqQixjQUFBLEdBQUFJLENBQUE7RUFDekQsSUFBSTtJQUFBO0lBQUFKLGNBQUEsR0FBQUksQ0FBQTtJQUNGLElBQUk7SUFBQztJQUFBLENBQUFKLGNBQUEsR0FBQXlCLENBQUEsV0FBQVUsUUFBUTtJQUFBO0lBQUEsQ0FBQW5DLGNBQUEsR0FBQXlCLENBQUEsV0FBUlUsUUFBUTtJQUFBO0lBQUEsQ0FBQW5DLGNBQUEsR0FBQXlCLENBQUE7SUFBQTtJQUFBLENBQUF6QixjQUFBLEdBQUF5QixDQUFBLFdBQVJVLFFBQVEsQ0FBRWtCLElBQUksRUFBRSxJQUFFO01BQUE7TUFBQXJELGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUNyQixPQUFPO1FBQUVzQixJQUFJLEVBQUUsSUFBSTtRQUFFQyxLQUFLLEVBQUU7TUFBc0IsQ0FBRTtJQUN0RCxDQUFDO0lBQUE7SUFBQTtNQUFBM0IsY0FBQSxHQUFBeUIsQ0FBQTtJQUFBO0lBRUQsTUFBTTtNQUFFQyxJQUFJO01BQUVDO0lBQUssQ0FBRTtJQUFBO0lBQUEsQ0FBQTNCLGNBQUEsR0FBQUksQ0FBQSxTQUFHLE1BQU1TLFFBQUEsQ0FBQUssT0FBUSxDQUNuQ0MsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUNoQkMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUNYUSxFQUFFLENBQUMsVUFBVSxFQUFFTyxRQUFRLENBQUNrQixJQUFJLEVBQUUsQ0FBQyxDQUMvQnhCLE1BQU0sRUFBRTtJQUFDO0lBQUE3QixjQUFBLEdBQUFJLENBQUE7SUFFWixJQUFJdUIsS0FBSyxFQUFFO01BQUE7TUFBQTNCLGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUNULElBQUl1QixLQUFLLENBQUNHLElBQUksS0FBSyxVQUFVLEVBQUU7UUFBQTtRQUFBOUIsY0FBQSxHQUFBeUIsQ0FBQTtRQUFBekIsY0FBQSxHQUFBSSxDQUFBO1FBQzdCLE9BQU87VUFBRXNCLElBQUksRUFBRSxJQUFJO1VBQUVDLEtBQUssRUFBRTtRQUFtQixDQUFFO01BQ25ELENBQUM7TUFBQTtNQUFBO1FBQUEzQixjQUFBLEdBQUF5QixDQUFBO01BQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUNEWSxRQUFBLENBQUFlLE1BQU0sQ0FBQ0osS0FBSyxDQUFDLG9EQUFvRCxFQUFFO1FBQUVBO01BQUssQ0FBRSxFQUFFLFNBQVMsQ0FBQztNQUFDO01BQUEzQixjQUFBLEdBQUFJLENBQUE7TUFDekYsT0FBTztRQUFFc0IsSUFBSSxFQUFFLElBQUk7UUFBRUMsS0FBSyxFQUFFO01BQXlCLENBQUU7SUFDekQsQ0FBQztJQUFBO0lBQUE7TUFBQTNCLGNBQUEsR0FBQXlCLENBQUE7SUFBQTtJQUFBekIsY0FBQSxHQUFBSSxDQUFBO0lBRUQsT0FBTztNQUFFc0IsSUFBSTtNQUFFQyxLQUFLLEVBQUU7SUFBSSxDQUFFO0VBQzlCLENBQUMsQ0FBQyxPQUFPQSxLQUFVLEVBQUU7SUFBQTtJQUFBM0IsY0FBQSxHQUFBSSxDQUFBO0lBQ25CWSxRQUFBLENBQUFlLE1BQU0sQ0FBQ0osS0FBSyxDQUFDLCtEQUErRCxFQUFFQSxLQUFLLEVBQUUsU0FBUyxDQUFDO0lBQUM7SUFBQTNCLGNBQUEsR0FBQUksQ0FBQTtJQUNoRyxPQUFPO01BQUVzQixJQUFJLEVBQUUsSUFBSTtNQUFFQyxLQUFLO01BQUU7TUFBQSxDQUFBM0IsY0FBQSxHQUFBeUIsQ0FBQSxXQUFBRSxLQUFLLENBQUNLLE9BQU87TUFBQTtNQUFBLENBQUFoQyxjQUFBLEdBQUF5QixDQUFBLFdBQUksOEJBQThCO0lBQUEsQ0FBRTtFQUMvRTtBQUNGO0FBRUE7OztBQUdPLGVBQWVmLGNBQWNBLENBQUM2RCxLQUFhO0VBQUE7RUFBQXZFLGNBQUEsR0FBQWlCLENBQUE7RUFBQWpCLGNBQUEsR0FBQUksQ0FBQTtFQUNoRCxJQUFJO0lBQUE7SUFBQUosY0FBQSxHQUFBSSxDQUFBO0lBQ0YsSUFBSTtJQUFDO0lBQUEsQ0FBQUosY0FBQSxHQUFBeUIsQ0FBQSxXQUFBOEMsS0FBSztJQUFBO0lBQUEsQ0FBQXZFLGNBQUEsR0FBQXlCLENBQUEsV0FBTDhDLEtBQUs7SUFBQTtJQUFBLENBQUF2RSxjQUFBLEdBQUF5QixDQUFBO0lBQUE7SUFBQSxDQUFBekIsY0FBQSxHQUFBeUIsQ0FBQSxXQUFMOEMsS0FBSyxDQUFFbEIsSUFBSSxFQUFFLElBQUU7TUFBQTtNQUFBckQsY0FBQSxHQUFBeUIsQ0FBQTtNQUFBekIsY0FBQSxHQUFBSSxDQUFBO01BQ2xCLE9BQU87UUFBRXNCLElBQUksRUFBRSxFQUFFO1FBQUVDLEtBQUssRUFBRTtNQUFJLENBQUU7SUFDbEMsQ0FBQztJQUFBO0lBQUE7TUFBQTNCLGNBQUEsR0FBQXlCLENBQUE7SUFBQTtJQUVELE1BQU0rQyxVQUFVO0lBQUE7SUFBQSxDQUFBeEUsY0FBQSxHQUFBSSxDQUFBLFNBQUcsSUFBSW1FLEtBQUssQ0FBQ2xCLElBQUksRUFBRSxHQUFHO0lBRXRDLE1BQU07TUFBRTNCLElBQUk7TUFBRUM7SUFBSyxDQUFFO0lBQUE7SUFBQSxDQUFBM0IsY0FBQSxHQUFBSSxDQUFBLFNBQUcsTUFBTVMsUUFBQSxDQUFBSyxPQUFRLENBQ25DQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQ2hCQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQ1hxRCxFQUFFLENBQUMsa0JBQWtCRCxVQUFVLG9CQUFvQkEsVUFBVSxFQUFFLENBQUMsQ0FDaEVuRCxLQUFLLENBQUMsVUFBVSxDQUFDLENBQ2pCZ0QsS0FBSyxDQUFDLEVBQUUsQ0FBQztJQUFDO0lBQUFyRSxjQUFBLEdBQUFJLENBQUE7SUFFYixJQUFJdUIsS0FBSyxFQUFFO01BQUE7TUFBQTNCLGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUNUWSxRQUFBLENBQUFlLE1BQU0sQ0FBQ0osS0FBSyxDQUFDLDBDQUEwQyxFQUFFO1FBQUVBO01BQUssQ0FBRSxFQUFFLFNBQVMsQ0FBQztNQUFDO01BQUEzQixjQUFBLEdBQUFJLENBQUE7TUFDL0UsT0FBTztRQUFFc0IsSUFBSSxFQUFFLEVBQUU7UUFBRUMsS0FBSyxFQUFFO01BQTJCLENBQUU7SUFDekQsQ0FBQztJQUFBO0lBQUE7TUFBQTNCLGNBQUEsR0FBQXlCLENBQUE7SUFBQTtJQUFBekIsY0FBQSxHQUFBSSxDQUFBO0lBRUQsT0FBTztNQUFFc0IsSUFBSTtNQUFFO01BQUEsQ0FBQTFCLGNBQUEsR0FBQXlCLENBQUEsV0FBQUMsSUFBSTtNQUFBO01BQUEsQ0FBQTFCLGNBQUEsR0FBQXlCLENBQUEsV0FBSSxFQUFFO01BQUVFLEtBQUssRUFBRTtJQUFJLENBQUU7RUFDMUMsQ0FBQyxDQUFDLE9BQU9BLEtBQVUsRUFBRTtJQUFBO0lBQUEzQixjQUFBLEdBQUFJLENBQUE7SUFDbkJZLFFBQUEsQ0FBQWUsTUFBTSxDQUFDSixLQUFLLENBQUMscURBQXFELEVBQUVBLEtBQUssRUFBRSxTQUFTLENBQUM7SUFBQztJQUFBM0IsY0FBQSxHQUFBSSxDQUFBO0lBQ3RGLE9BQU87TUFBRXNCLElBQUksRUFBRSxFQUFFO01BQUVDLEtBQUs7TUFBRTtNQUFBLENBQUEzQixjQUFBLEdBQUF5QixDQUFBLFdBQUFFLEtBQUssQ0FBQ0ssT0FBTztNQUFBO01BQUEsQ0FBQWhDLGNBQUEsR0FBQXlCLENBQUEsV0FBSSw4QkFBOEI7SUFBQSxDQUFFO0VBQzdFO0FBQ0Y7QUFFQTs7O0FBR0EsU0FBZ0JkLG1CQUFtQkEsQ0FBQ2tDLFFBQXlCO0VBQUE7RUFBQTdDLGNBQUEsR0FBQWlCLENBQUE7O0VBQzNELE1BQU15RCxNQUFNO0VBQUE7RUFBQSxDQUFBMUUsY0FBQSxHQUFBSSxDQUFBLFNBQWEsRUFBRTtFQUUzQjtFQUFBO0VBQUFKLGNBQUEsR0FBQUksQ0FBQTtFQUNBLElBQUl5QyxRQUFRLENBQUNWLFFBQVEsS0FBSzRCLFNBQVMsRUFBRTtJQUFBO0lBQUEvRCxjQUFBLEdBQUF5QixDQUFBO0lBQ25DLE1BQU1VLFFBQVE7SUFBQTtJQUFBLENBQUFuQyxjQUFBLEdBQUFJLENBQUE7SUFBRztJQUFBLENBQUFKLGNBQUEsR0FBQXlCLENBQUEsWUFBQTJCLEVBQUEsR0FBQVAsUUFBUSxDQUFDVixRQUFRO0lBQUE7SUFBQSxDQUFBbkMsY0FBQSxHQUFBeUIsQ0FBQSxXQUFBMkIsRUFBQTtJQUFBO0lBQUEsQ0FBQXBELGNBQUEsR0FBQXlCLENBQUE7SUFBQTtJQUFBLENBQUF6QixjQUFBLEdBQUF5QixDQUFBLFdBQUEyQixFQUFBLENBQUVDLElBQUksRUFBRTtJQUFDO0lBQUFyRCxjQUFBLEdBQUFJLENBQUE7SUFDM0M7SUFBSTtJQUFBLENBQUFKLGNBQUEsR0FBQXlCLENBQUEsV0FBQVUsUUFBUTtJQUFBO0lBQUEsQ0FBQW5DLGNBQUEsR0FBQXlCLENBQUEsV0FBSVUsUUFBUSxDQUFDbUMsTUFBTSxHQUFHLENBQUMsR0FBRTtNQUFBO01BQUF0RSxjQUFBLEdBQUF5QixDQUFBO01BQUF6QixjQUFBLEdBQUFJLENBQUE7TUFDbkNzRSxNQUFNLENBQUNDLElBQUksQ0FBQyw2Q0FBNkMsQ0FBQztJQUM1RCxDQUFDO0lBQUE7SUFBQTtNQUFBM0UsY0FBQSxHQUFBeUIsQ0FBQTtJQUFBO0lBQUF6QixjQUFBLEdBQUFJLENBQUE7SUFDRDtJQUFJO0lBQUEsQ0FBQUosY0FBQSxHQUFBeUIsQ0FBQSxXQUFBVSxRQUFRO0lBQUE7SUFBQSxDQUFBbkMsY0FBQSxHQUFBeUIsQ0FBQSxXQUFJVSxRQUFRLENBQUNtQyxNQUFNLEdBQUcsRUFBRSxHQUFFO01BQUE7TUFBQXRFLGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUNwQ3NFLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLHdDQUF3QyxDQUFDO0lBQ3ZELENBQUM7SUFBQTtJQUFBO01BQUEzRSxjQUFBLEdBQUF5QixDQUFBO0lBQUE7SUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtJQUNEO0lBQUk7SUFBQSxDQUFBSixjQUFBLEdBQUF5QixDQUFBLFdBQUFVLFFBQVE7SUFBQTtJQUFBLENBQUFuQyxjQUFBLEdBQUF5QixDQUFBLFdBQUksQ0FBQyxrQkFBa0IsQ0FBQ21ELElBQUksQ0FBQ3pDLFFBQVEsQ0FBQyxHQUFFO01BQUE7TUFBQW5DLGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUNsRHNFLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLHNFQUFzRSxDQUFDO0lBQ3JGLENBQUM7SUFBQTtJQUFBO01BQUEzRSxjQUFBLEdBQUF5QixDQUFBO0lBQUE7RUFDSCxDQUFDO0VBQUE7RUFBQTtJQUFBekIsY0FBQSxHQUFBeUIsQ0FBQTtFQUFBO0VBRUQ7RUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtFQUNBLElBQUl5QyxRQUFRLENBQUNULFlBQVksS0FBSzJCLFNBQVMsRUFBRTtJQUFBO0lBQUEvRCxjQUFBLEdBQUF5QixDQUFBO0lBQ3ZDLE1BQU1vRCxXQUFXO0lBQUE7SUFBQSxDQUFBN0UsY0FBQSxHQUFBSSxDQUFBO0lBQUc7SUFBQSxDQUFBSixjQUFBLEdBQUF5QixDQUFBLFlBQUE2QixFQUFBLEdBQUFULFFBQVEsQ0FBQ1QsWUFBWTtJQUFBO0lBQUEsQ0FBQXBDLGNBQUEsR0FBQXlCLENBQUEsV0FBQTZCLEVBQUE7SUFBQTtJQUFBLENBQUF0RCxjQUFBLEdBQUF5QixDQUFBO0lBQUE7SUFBQSxDQUFBekIsY0FBQSxHQUFBeUIsQ0FBQSxXQUFBNkIsRUFBQSxDQUFFRCxJQUFJLEVBQUU7SUFBQztJQUFBckQsY0FBQSxHQUFBSSxDQUFBO0lBQ2xEO0lBQUk7SUFBQSxDQUFBSixjQUFBLEdBQUF5QixDQUFBLFlBQUFvRCxXQUFXO0lBQUE7SUFBQSxDQUFBN0UsY0FBQSxHQUFBeUIsQ0FBQSxZQUFJb0QsV0FBVyxDQUFDUCxNQUFNLEdBQUcsRUFBRSxHQUFFO01BQUE7TUFBQXRFLGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtNQUMxQ3NFLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLDRDQUE0QyxDQUFDO0lBQzNELENBQUM7SUFBQTtJQUFBO01BQUEzRSxjQUFBLEdBQUF5QixDQUFBO0lBQUE7RUFDSCxDQUFDO0VBQUE7RUFBQTtJQUFBekIsY0FBQSxHQUFBeUIsQ0FBQTtFQUFBO0VBRUQ7RUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtFQUNBLElBQUl5QyxRQUFRLENBQUNSLEdBQUcsS0FBSzBCLFNBQVMsRUFBRTtJQUFBO0lBQUEvRCxjQUFBLEdBQUF5QixDQUFBO0lBQzlCLE1BQU1ZLEdBQUc7SUFBQTtJQUFBLENBQUFyQyxjQUFBLEdBQUFJLENBQUE7SUFBRztJQUFBLENBQUFKLGNBQUEsR0FBQXlCLENBQUEsYUFBQThCLEVBQUEsR0FBQVYsUUFBUSxDQUFDUixHQUFHO0lBQUE7SUFBQSxDQUFBckMsY0FBQSxHQUFBeUIsQ0FBQSxZQUFBOEIsRUFBQTtJQUFBO0lBQUEsQ0FBQXZELGNBQUEsR0FBQXlCLENBQUE7SUFBQTtJQUFBLENBQUF6QixjQUFBLEdBQUF5QixDQUFBLFlBQUE4QixFQUFBLENBQUVGLElBQUksRUFBRTtJQUFDO0lBQUFyRCxjQUFBLEdBQUFJLENBQUE7SUFDakM7SUFBSTtJQUFBLENBQUFKLGNBQUEsR0FBQXlCLENBQUEsWUFBQVksR0FBRztJQUFBO0lBQUEsQ0FBQXJDLGNBQUEsR0FBQXlCLENBQUEsWUFBSVksR0FBRyxDQUFDaUMsTUFBTSxHQUFHLEdBQUcsR0FBRTtNQUFBO01BQUF0RSxjQUFBLEdBQUF5QixDQUFBO01BQUF6QixjQUFBLEdBQUFJLENBQUE7TUFDM0JzRSxNQUFNLENBQUNDLElBQUksQ0FBQyxvQ0FBb0MsQ0FBQztJQUNuRCxDQUFDO0lBQUE7SUFBQTtNQUFBM0UsY0FBQSxHQUFBeUIsQ0FBQTtJQUFBO0VBQ0gsQ0FBQztFQUFBO0VBQUE7SUFBQXpCLGNBQUEsR0FBQXlCLENBQUE7RUFBQTtFQUVEO0VBQUF6QixjQUFBLEdBQUFJLENBQUE7RUFDQSxJQUFJeUMsUUFBUSxDQUFDSixlQUFlLEtBQUtzQixTQUFTLEVBQUU7SUFBQTtJQUFBL0QsY0FBQSxHQUFBeUIsQ0FBQTtJQUMxQyxNQUFNcUQsVUFBVTtJQUFBO0lBQUEsQ0FBQTlFLGNBQUEsR0FBQUksQ0FBQTtJQUFHO0lBQUEsQ0FBQUosY0FBQSxHQUFBeUIsQ0FBQSxhQUFBK0IsRUFBQSxHQUFBWCxRQUFRLENBQUNKLGVBQWU7SUFBQTtJQUFBLENBQUF6QyxjQUFBLEdBQUF5QixDQUFBLFlBQUErQixFQUFBO0lBQUE7SUFBQSxDQUFBeEQsY0FBQSxHQUFBeUIsQ0FBQTtJQUFBO0lBQUEsQ0FBQXpCLGNBQUEsR0FBQXlCLENBQUEsWUFBQStCLEVBQUEsQ0FBRUgsSUFBSSxFQUFFO0lBQUM7SUFBQXJELGNBQUEsR0FBQUksQ0FBQTtJQUNwRDtJQUFJO0lBQUEsQ0FBQUosY0FBQSxHQUFBeUIsQ0FBQSxZQUFBcUQsVUFBVTtJQUFBO0lBQUEsQ0FBQTlFLGNBQUEsR0FBQXlCLENBQUEsWUFBSSxDQUFDLHdEQUF3RCxDQUFDbUQsSUFBSSxDQUFDRSxVQUFVLENBQUMsR0FBRTtNQUFBO01BQUE5RSxjQUFBLEdBQUF5QixDQUFBO01BQUF6QixjQUFBLEdBQUFJLENBQUE7TUFDNUZzRSxNQUFNLENBQUNDLElBQUksQ0FBQyxnQ0FBZ0MsQ0FBQztJQUMvQyxDQUFDO0lBQUE7SUFBQTtNQUFBM0UsY0FBQSxHQUFBeUIsQ0FBQTtJQUFBO0VBQ0gsQ0FBQztFQUFBO0VBQUE7SUFBQXpCLGNBQUEsR0FBQXlCLENBQUE7RUFBQTtFQUFBekIsY0FBQSxHQUFBSSxDQUFBO0VBRUQsT0FBTztJQUFFMkUsS0FBSyxFQUFFTCxNQUFNLENBQUNKLE1BQU0sS0FBSyxDQUFDO0lBQUVJO0VBQU0sQ0FBRTtBQUMvQztBQUVBOzs7QUFHTyxlQUFlOUQsYUFBYUEsQ0FBQ1csTUFBYztFQUFBO0VBQUF2QixjQUFBLEdBQUFpQixDQUFBO0VBQUFqQixjQUFBLEdBQUFJLENBQUE7RUFDaEQsSUFBSTtJQUFBO0lBQUFKLGNBQUEsR0FBQUksQ0FBQTtJQUNGLElBQUFZLFFBQUEsQ0FBQVEsVUFBVSxFQUFDLDRDQUE0Q0QsTUFBTSxFQUFFLENBQUM7SUFBQztJQUFBdkIsY0FBQSxHQUFBSSxDQUFBO0lBRWpFLElBQUksQ0FBQ21CLE1BQU0sRUFBRTtNQUFBO01BQUF2QixjQUFBLEdBQUF5QixDQUFBO01BQUF6QixjQUFBLEdBQUFJLENBQUE7TUFDWCxPQUFPO1FBQUV1QixLQUFLLEVBQUU7TUFBcUIsQ0FBRTtJQUN6QyxDQUFDO0lBQUE7SUFBQTtNQUFBM0IsY0FBQSxHQUFBeUIsQ0FBQTtJQUFBO0lBRUQsTUFBTTtNQUFFRTtJQUFLLENBQUU7SUFBQTtJQUFBLENBQUEzQixjQUFBLEdBQUFJLENBQUEsU0FBRyxNQUFNUyxRQUFBLENBQUFLLE9BQVEsQ0FDN0JDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FDaEI2RCxNQUFNLEVBQUUsQ0FDUnBELEVBQUUsQ0FBQyxJQUFJLEVBQUVMLE1BQU0sQ0FBQztJQUFDO0lBQUF2QixjQUFBLEdBQUFJLENBQUE7SUFFcEIsSUFBSXVCLEtBQUssRUFBRTtNQUFBO01BQUEzQixjQUFBLEdBQUF5QixDQUFBO01BQUF6QixjQUFBLEdBQUFJLENBQUE7TUFDVFksUUFBQSxDQUFBZSxNQUFNLENBQUNKLEtBQUssQ0FBQyx3Q0FBd0MsRUFBRTtRQUFFQTtNQUFLLENBQUUsRUFBRSxTQUFTLENBQUM7TUFBQztNQUFBM0IsY0FBQSxHQUFBSSxDQUFBO01BQzdFLE9BQU87UUFBRXVCLEtBQUs7UUFBRTtRQUFBLENBQUEzQixjQUFBLEdBQUF5QixDQUFBLFlBQUFFLEtBQUssQ0FBQ0ssT0FBTztRQUFBO1FBQUEsQ0FBQWhDLGNBQUEsR0FBQXlCLENBQUEsWUFBSSwwQkFBMEI7TUFBQSxDQUFFO0lBQy9ELENBQUM7SUFBQTtJQUFBO01BQUF6QixjQUFBLEdBQUF5QixDQUFBO0lBQUE7SUFBQXpCLGNBQUEsR0FBQUksQ0FBQTtJQUVELElBQUFZLFFBQUEsQ0FBQVEsVUFBVSxFQUFDLDZDQUE2QyxDQUFDO0lBQUM7SUFBQXhCLGNBQUEsR0FBQUksQ0FBQTtJQUMxRCxPQUFPO01BQUV1QixLQUFLLEVBQUU7SUFBSSxDQUFFO0VBRXhCLENBQUMsQ0FBQyxPQUFPQSxLQUFLLEVBQUU7SUFBQTtJQUFBM0IsY0FBQSxHQUFBSSxDQUFBO0lBQ2RZLFFBQUEsQ0FBQWUsTUFBTSxDQUFDSixLQUFLLENBQUMsa0RBQWtELEVBQUU7TUFBRUE7SUFBSyxDQUFFLEVBQUUsU0FBUyxDQUFDO0lBQUM7SUFBQTNCLGNBQUEsR0FBQUksQ0FBQTtJQUN2RixPQUFPO01BQUV1QixLQUFLLEVBQUU7SUFBMEIsQ0FBRTtFQUM5QztBQUNGIiwiaWdub3JlTGlzdCI6W119