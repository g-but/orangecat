344151026aa40beb259b5716e54199c7
"use strict";

/* istanbul ignore next */
function cov_2og2u5b3aj() {
  var path = "/home/g/dev/orangecat/src/hooks/useAuth.ts";
  var hash = "52ab94b859e13811accca827f1e0dc59d2fcb5c7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/hooks/useAuth.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 40
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 64
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 26
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 39
        }
      },
      "5": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 7,
          column: 47
        }
      },
      "6": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 32
        }
      },
      "7": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 42
        }
      },
      "8": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "9": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "10": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "11": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 18,
          column: 9
        }
      },
      "12": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "13": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 38
        }
      },
      "14": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 48,
          column: 129
        }
      },
      "15": {
        start: {
          line: 25,
          column: 32
        },
        end: {
          line: 25,
          column: 159
        }
      },
      "16": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "17": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 52
        }
      },
      "18": {
        start: {
          line: 28,
          column: 41
        },
        end: {
          line: 29,
          column: 60
        }
      },
      "19": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "20": {
        start: {
          line: 31,
          column: 34
        },
        end: {
          line: 41,
          column: 24
        }
      },
      "21": {
        start: {
          line: 32,
          column: 40
        },
        end: {
          line: 32,
          column: 70
        }
      },
      "22": {
        start: {
          line: 33,
          column: 46
        },
        end: {
          line: 34,
          column: 66
        }
      },
      "23": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 40,
          column: 21
        }
      },
      "24": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 36,
          column: 47
        }
      },
      "25": {
        start: {
          line: 39,
          column: 24
        },
        end: {
          line: 39,
          column: 46
        }
      },
      "26": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 53
        }
      },
      "27": {
        start: {
          line: 42,
          column: 29
        },
        end: {
          line: 42,
          column: 52
        }
      },
      "28": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 38
        }
      },
      "29": {
        start: {
          line: 53,
          column: 60
        },
        end: {
          line: 53,
          column: 86
        }
      },
      "30": {
        start: {
          line: 54,
          column: 44
        },
        end: {
          line: 54,
          column: 71
        }
      },
      "31": {
        start: {
          line: 55,
          column: 19
        },
        end: {
          line: 55,
          column: 48
        }
      },
      "32": {
        start: {
          line: 56,
          column: 42
        },
        end: {
          line: 56,
          column: 70
        }
      },
      "33": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 73,
          column: 45
        }
      },
      "34": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "35": {
        start: {
          line: 61,
          column: 41
        },
        end: {
          line: 62,
          column: 34
        }
      },
      "36": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "37": {
        start: {
          line: 64,
          column: 34
        },
        end: {
          line: 66,
          column: 24
        }
      },
      "38": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 65,
          column: 43
        }
      },
      "39": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 53
        }
      },
      "40": {
        start: {
          line: 67,
          column: 29
        },
        end: {
          line: 67,
          column: 52
        }
      },
      "41": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 38
        }
      },
      "42": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 86,
          column: 53
        }
      },
      "43": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "44": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "45": {
        start: {
          line: 80,
          column: 32
        },
        end: {
          line: 80,
          column: 38
        }
      },
      "46": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "47": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 48
        }
      },
      "48": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 29
        }
      },
      "49": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 94,
          column: 6
        }
      },
      "50": {
        start: {
          line: 99,
          column: 60
        },
        end: {
          line: 99,
          column: 86
        }
      },
      "51": {
        start: {
          line: 100,
          column: 44
        },
        end: {
          line: 100,
          column: 71
        }
      },
      "52": {
        start: {
          line: 101,
          column: 19
        },
        end: {
          line: 101,
          column: 48
        }
      },
      "53": {
        start: {
          line: 102,
          column: 21
        },
        end: {
          line: 102,
          column: 52
        }
      },
      "54": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 118,
          column: 45
        }
      },
      "55": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "56": {
        start: {
          line: 106,
          column: 41
        },
        end: {
          line: 107,
          column: 34
        }
      },
      "57": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 116,
          column: 13
        }
      },
      "58": {
        start: {
          line: 109,
          column: 34
        },
        end: {
          line: 111,
          column: 24
        }
      },
      "59": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 110,
          column: 43
        }
      },
      "60": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 53
        }
      },
      "61": {
        start: {
          line: 112,
          column: 29
        },
        end: {
          line: 112,
          column: 52
        }
      },
      "62": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 38
        }
      },
      "63": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 128,
          column: 72
        }
      },
      "64": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 122,
          column: 19
        }
      },
      "65": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 19
        }
      },
      "66": {
        start: {
          line: 124,
          column: 32
        },
        end: {
          line: 124,
          column: 38
        }
      },
      "67": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "68": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 38
        }
      },
      "69": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 133,
          column: 6
        }
      },
      "70": {
        start: {
          line: 138,
          column: 22
        },
        end: {
          line: 138,
          column: 48
        }
      },
      "71": {
        start: {
          line: 139,
          column: 44
        },
        end: {
          line: 139,
          column: 71
        }
      },
      "72": {
        start: {
          line: 140,
          column: 19
        },
        end: {
          line: 140,
          column: 48
        }
      },
      "73": {
        start: {
          line: 141,
          column: 28
        },
        end: {
          line: 141,
          column: 51
        }
      },
      "74": {
        start: {
          line: 142,
          column: 25
        },
        end: {
          line: 142,
          column: 48
        }
      },
      "75": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 144,
          column: 73
        }
      },
      "76": {
        start: {
          line: 146,
          column: 25
        },
        end: {
          line: 172,
          column: 13
        }
      },
      "77": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "78": {
        start: {
          line: 149,
          column: 35
        },
        end: {
          line: 149,
          column: 163
        }
      },
      "79": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 170,
          column: 13
        }
      },
      "80": {
        start: {
          line: 153,
          column: 44
        },
        end: {
          line: 156,
          column: 62
        }
      },
      "81": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 169,
          column: 17
        }
      },
      "82": {
        start: {
          line: 158,
          column: 20
        },
        end: {
          line: 167,
          column: 23
        }
      },
      "83": {
        start: {
          line: 168,
          column: 20
        },
        end: {
          line: 168,
          column: 61
        }
      },
      "84": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 183,
          column: 132
        }
      },
      "85": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "86": {
        start: {
          line: 177,
          column: 30
        },
        end: {
          line: 178,
          column: 75
        }
      },
      "87": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "88": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 31
        }
      },
      "89": {
        start: {
          line: 185,
          column: 33
        },
        end: {
          line: 204,
          column: 5
        }
      },
      "90": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "91": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 19
        }
      },
      "92": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 84
        }
      },
      "93": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "94": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 38
        }
      },
      "95": {
        start: {
          line: 194,
          column: 32
        },
        end: {
          line: 194,
          column: 56
        }
      },
      "96": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 199,
          column: 13
        }
      },
      "97": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 198,
          column: 37
        }
      },
      "98": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 140
        }
      },
      "99": {
        start: {
          line: 207,
          column: 28
        },
        end: {
          line: 207,
          column: 113
        }
      },
      "100": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 210,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "useThrottledLog",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 24
          }
        },
        loc: {
          start: {
            line: 11,
            column: 47
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 11
          },
          end: {
            line: 13,
            column: 12
          }
        },
        loc: {
          start: {
            line: 13,
            column: 17
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "useOptimizedAuthComparison",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 35
          }
        },
        loc: {
          start: {
            line: 22,
            column: 82
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 23,
            column: 28
          }
        },
        loc: {
          start: {
            line: 23,
            column: 33
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 31,
            column: 45
          },
          end: {
            line: 31,
            column: 46
          }
        },
        loc: {
          start: {
            line: 31,
            column: 51
          },
          end: {
            line: 41,
            column: 17
          }
        },
        line: 31
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 24
          }
        },
        loc: {
          start: {
            line: 42,
            column: 29
          },
          end: {
            line: 42,
            column: 52
          }
        },
        line: 42
      },
      "6": {
        name: "useRequireAuth",
        decl: {
          start: {
            line: 51,
            column: 9
          },
          end: {
            line: 51,
            column: 23
          }
        },
        loc: {
          start: {
            line: 51,
            column: 26
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 51
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 58,
            column: 27
          },
          end: {
            line: 58,
            column: 28
          }
        },
        loc: {
          start: {
            line: 58,
            column: 33
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 58
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 64,
            column: 45
          },
          end: {
            line: 64,
            column: 46
          }
        },
        loc: {
          start: {
            line: 64,
            column: 51
          },
          end: {
            line: 66,
            column: 17
          }
        },
        line: 64
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 67,
            column: 24
          }
        },
        loc: {
          start: {
            line: 67,
            column: 29
          },
          end: {
            line: 67,
            column: 52
          }
        },
        line: 67
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 75,
            column: 27
          },
          end: {
            line: 75,
            column: 28
          }
        },
        loc: {
          start: {
            line: 75,
            column: 33
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 75
      },
      "11": {
        name: "useRedirectIfAuthenticated",
        decl: {
          start: {
            line: 97,
            column: 9
          },
          end: {
            line: 97,
            column: 35
          }
        },
        loc: {
          start: {
            line: 97,
            column: 38
          },
          end: {
            line: 134,
            column: 1
          }
        },
        line: 97
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 104,
            column: 27
          },
          end: {
            line: 104,
            column: 28
          }
        },
        loc: {
          start: {
            line: 104,
            column: 33
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 104
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 109,
            column: 45
          },
          end: {
            line: 109,
            column: 46
          }
        },
        loc: {
          start: {
            line: 109,
            column: 51
          },
          end: {
            line: 111,
            column: 17
          }
        },
        line: 109
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 112,
            column: 23
          },
          end: {
            line: 112,
            column: 24
          }
        },
        loc: {
          start: {
            line: 112,
            column: 29
          },
          end: {
            line: 112,
            column: 52
          }
        },
        line: 112
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 119,
            column: 27
          },
          end: {
            line: 119,
            column: 28
          }
        },
        loc: {
          start: {
            line: 119,
            column: 33
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 119
      },
      "16": {
        name: "useAuth",
        decl: {
          start: {
            line: 136,
            column: 9
          },
          end: {
            line: 136,
            column: 16
          }
        },
        loc: {
          start: {
            line: 136,
            column: 19
          },
          end: {
            line: 211,
            column: 1
          }
        },
        line: 136
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 146,
            column: 41
          },
          end: {
            line: 146,
            column: 42
          }
        },
        loc: {
          start: {
            line: 146,
            column: 47
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 146
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 174,
            column: 27
          },
          end: {
            line: 174,
            column: 28
          }
        },
        loc: {
          start: {
            line: 174,
            column: 33
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 174
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 185,
            column: 33
          },
          end: {
            line: 185,
            column: 34
          }
        },
        loc: {
          start: {
            line: 185,
            column: 45
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 185
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 32
          },
          end: {
            line: 11,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 11,
            column: 45
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 29,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 42
          },
          end: {
            line: 28,
            column: 59
          }
        }, {
          start: {
            line: 28,
            column: 63
          },
          end: {
            line: 28,
            column: 84
          }
        }, {
          start: {
            line: 29,
            column: 17
          },
          end: {
            line: 29,
            column: 35
          }
        }, {
          start: {
            line: 29,
            column: 39
          },
          end: {
            line: 29,
            column: 59
          }
        }],
        line: 28
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 46,
            column: 13
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 36
          }
        }, {
          start: {
            line: 30,
            column: 40
          },
          end: {
            line: 30,
            column: 61
          }
        }, {
          start: {
            line: 30,
            column: 65
          },
          end: {
            line: 30,
            column: 88
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 46
          },
          end: {
            line: 34,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 47
          },
          end: {
            line: 33,
            column: 63
          }
        }, {
          start: {
            line: 33,
            column: 67
          },
          end: {
            line: 33,
            column: 87
          }
        }, {
          start: {
            line: 34,
            column: 25
          },
          end: {
            line: 34,
            column: 42
          }
        }, {
          start: {
            line: 34,
            column: 46
          },
          end: {
            line: 34,
            column: 65
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 40,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 40,
            column: 21
          }
        }, {
          start: {
            line: 38,
            column: 25
          },
          end: {
            line: 40,
            column: 21
          }
        }],
        line: 35
      },
      "8": {
        loc: {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 41
          }
        }, {
          start: {
            line: 35,
            column: 45
          },
          end: {
            line: 35,
            column: 65
          }
        }, {
          start: {
            line: 35,
            column: 69
          },
          end: {
            line: 35,
            column: 91
          }
        }],
        line: 35
      },
      "9": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "10": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 20
          }
        }, {
          start: {
            line: 59,
            column: 24
          },
          end: {
            line: 59,
            column: 34
          }
        }],
        line: 59
      },
      "11": {
        loc: {
          start: {
            line: 61,
            column: 41
          },
          end: {
            line: 62,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 42
          },
          end: {
            line: 61,
            column: 46
          }
        }, {
          start: {
            line: 61,
            column: 50
          },
          end: {
            line: 61,
            column: 58
          }
        }, {
          start: {
            line: 62,
            column: 17
          },
          end: {
            line: 62,
            column: 22
          }
        }, {
          start: {
            line: 62,
            column: 26
          },
          end: {
            line: 62,
            column: 33
          }
        }],
        line: 61
      },
      "12": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        }, {
          start: {
            line: 69,
            column: 17
          },
          end: {
            line: 71,
            column: 13
          }
        }],
        line: 63
      },
      "13": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 78,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 78,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "14": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 77,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 77,
            column: 21
          }
        }, {
          start: {
            line: 77,
            column: 25
          },
          end: {
            line: 77,
            column: 34
          }
        }],
        line: 77
      },
      "15": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "16": {
        loc: {
          start: {
            line: 91,
            column: 19
          },
          end: {
            line: 91,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 19
          },
          end: {
            line: 91,
            column: 28
          }
        }, {
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 91,
            column: 41
          }
        }, {
          start: {
            line: 91,
            column: 45
          },
          end: {
            line: 91,
            column: 57
          }
        }],
        line: 91
      },
      "17": {
        loc: {
          start: {
            line: 93,
            column: 25
          },
          end: {
            line: 93,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 25
          },
          end: {
            line: 93,
            column: 31
          }
        }, {
          start: {
            line: 93,
            column: 35
          },
          end: {
            line: 93,
            column: 43
          }
        }, {
          start: {
            line: 93,
            column: 47
          },
          end: {
            line: 93,
            column: 57
          }
        }],
        line: 93
      },
      "18": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "19": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 105,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 105,
            column: 20
          }
        }, {
          start: {
            line: 105,
            column: 24
          },
          end: {
            line: 105,
            column: 34
          }
        }],
        line: 105
      },
      "20": {
        loc: {
          start: {
            line: 106,
            column: 41
          },
          end: {
            line: 107,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 42
          },
          end: {
            line: 106,
            column: 46
          }
        }, {
          start: {
            line: 106,
            column: 50
          },
          end: {
            line: 106,
            column: 58
          }
        }, {
          start: {
            line: 107,
            column: 17
          },
          end: {
            line: 107,
            column: 22
          }
        }, {
          start: {
            line: 107,
            column: 26
          },
          end: {
            line: 107,
            column: 33
          }
        }],
        line: 106
      },
      "21": {
        loc: {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 116,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 116,
            column: 13
          }
        }, {
          start: {
            line: 114,
            column: 17
          },
          end: {
            line: 116,
            column: 13
          }
        }],
        line: 108
      },
      "22": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 122,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 122,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "23": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 121,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 121,
            column: 21
          }
        }, {
          start: {
            line: 121,
            column: 25
          },
          end: {
            line: 121,
            column: 34
          }
        }],
        line: 121
      },
      "24": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "25": {
        loc: {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 125,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 125,
            column: 27
          }
        }, {
          start: {
            line: 125,
            column: 31
          },
          end: {
            line: 125,
            column: 56
          }
        }, {
          start: {
            line: 125,
            column: 60
          },
          end: {
            line: 125,
            column: 76
          }
        }],
        line: 125
      },
      "26": {
        loc: {
          start: {
            line: 130,
            column: 19
          },
          end: {
            line: 130,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 19
          },
          end: {
            line: 130,
            column: 28
          }
        }, {
          start: {
            line: 130,
            column: 32
          },
          end: {
            line: 130,
            column: 41
          }
        }],
        line: 130
      },
      "27": {
        loc: {
          start: {
            line: 132,
            column: 25
          },
          end: {
            line: 132,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 25
          },
          end: {
            line: 132,
            column: 31
          }
        }, {
          start: {
            line: 132,
            column: 35
          },
          end: {
            line: 132,
            column: 43
          }
        }, {
          start: {
            line: 132,
            column: 47
          },
          end: {
            line: 132,
            column: 57
          }
        }],
        line: 132
      },
      "28": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "29": {
        loc: {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 170,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 170,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "30": {
        loc: {
          start: {
            line: 153,
            column: 44
          },
          end: {
            line: 156,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 44
          },
          end: {
            line: 153,
            column: 62
          }
        }, {
          start: {
            line: 154,
            column: 21
          },
          end: {
            line: 154,
            column: 41
          }
        }, {
          start: {
            line: 155,
            column: 24
          },
          end: {
            line: 155,
            column: 37
          }
        }, {
          start: {
            line: 156,
            column: 25
          },
          end: {
            line: 156,
            column: 39
          }
        }, {
          start: {
            line: 156,
            column: 43
          },
          end: {
            line: 156,
            column: 60
          }
        }],
        line: 153
      },
      "31": {
        loc: {
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 169,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 169,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "32": {
        loc: {
          start: {
            line: 165,
            column: 37
          },
          end: {
            line: 165,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 63
          },
          end: {
            line: 165,
            column: 111
          }
        }, {
          start: {
            line: 165,
            column: 114
          },
          end: {
            line: 165,
            column: 123
          }
        }],
        line: 165
      },
      "33": {
        loc: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "34": {
        loc: {
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 175,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 175,
            column: 50
          }
        }, {
          start: {
            line: 175,
            column: 54
          },
          end: {
            line: 175,
            column: 72
          }
        }],
        line: 175
      },
      "35": {
        loc: {
          start: {
            line: 177,
            column: 30
          },
          end: {
            line: 178,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 30
          },
          end: {
            line: 177,
            column: 50
          }
        }, {
          start: {
            line: 177,
            column: 55
          },
          end: {
            line: 177,
            column: 68
          }
        }, {
          start: {
            line: 178,
            column: 17
          },
          end: {
            line: 178,
            column: 31
          }
        }, {
          start: {
            line: 178,
            column: 35
          },
          end: {
            line: 178,
            column: 52
          }
        }, {
          start: {
            line: 178,
            column: 56
          },
          end: {
            line: 178,
            column: 73
          }
        }],
        line: 177
      },
      "36": {
        loc: {
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "37": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "38": {
        loc: {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 31
          }
        }, {
          start: {
            line: 186,
            column: 35
          },
          end: {
            line: 186,
            column: 54
          }
        }],
        line: 186
      },
      "39": {
        loc: {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 199,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 199,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "40": {
        loc: {
          start: {
            line: 195,
            column: 16
          },
          end: {
            line: 197,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 16
          },
          end: {
            line: 195,
            column: 52
          }
        }, {
          start: {
            line: 196,
            column: 16
          },
          end: {
            line: 196,
            column: 50
          }
        }, {
          start: {
            line: 197,
            column: 16
          },
          end: {
            line: 197,
            column: 51
          }
        }],
        line: 195
      },
      "41": {
        loc: {
          start: {
            line: 202,
            column: 74
          },
          end: {
            line: 202,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 99
          },
          end: {
            line: 202,
            column: 112
          }
        }, {
          start: {
            line: 202,
            column: 115
          },
          end: {
            line: 202,
            column: 128
          }
        }],
        line: 202
      },
      "42": {
        loc: {
          start: {
            line: 207,
            column: 28
          },
          end: {
            line: 207,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 28
          },
          end: {
            line: 207,
            column: 46
          }
        }, {
          start: {
            line: 207,
            column: 50
          },
          end: {
            line: 207,
            column: 70
          }
        }, {
          start: {
            line: 207,
            column: 74
          },
          end: {
            line: 207,
            column: 90
          }
        }, {
          start: {
            line: 207,
            column: 94
          },
          end: {
            line: 207,
            column: 113
          }
        }],
        line: 207
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0, 0, 0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0, 0, 0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0, 0],
      "41": [0, 0],
      "42": [0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/hooks/useAuth.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/hooks/useAuth.ts"],
      sourcesContent: ["import { useAuthStore } from '@/stores/auth'\nimport { useRouter, usePathname } from 'next/navigation'\nimport { useEffect, useState, useRef } from 'react'\nimport { logger } from '@/utils/logger'\n\n  // Throttle function to prevent excessive logging - optimized performance\n  function useThrottledLog(logFn: () => void, delay: number = 10000) {\n    const lastLogTime = useRef(0);\n\n    return () => {\n      const now = Date.now();\n      if (now - lastLogTime.current >= delay) {\n        logFn();\n        lastLogTime.current = now;\n      }\n    };\n  }\n\n  // Optimized state comparison to reduce unnecessary re-renders\n  function useOptimizedAuthComparison(\n    currentState: any,\n    previousState: React.MutableRefObject<any>,\n    setIsConsistent: (consistent: boolean) => void\n  ) {\n    useEffect(() => {\n      // Only check consistency when state actually changes\n      const currentStateKey = `${!!currentState.user}-${!!currentState.session}-${!!currentState.profile}-${currentState.isLoading}-${currentState.hydrated}`;\n\n      if (currentStateKey !== previousState.current) {\n        previousState.current = currentStateKey;\n\n        const hasInconsistentState =\n          (currentState.user && !currentState.session) ||\n          (!currentState.user && currentState.session);\n\n        if (hasInconsistentState && currentState.hydrated && !currentState.isLoading) {\n          const timeoutId = setTimeout(() => {\n            const latestState = useAuthStore.getState();\n            const stillInconsistent =\n              (latestState.user && !latestState.session) ||\n              (!latestState.user && latestState.session);\n\n            if (stillInconsistent && latestState.hydrated && !latestState.isLoading) {\n              setIsConsistent(false);\n            } else {\n              setIsConsistent(true);\n            }\n          }, 1000); // Reduced timeout for faster feedback\n\n          return () => clearTimeout(timeoutId);\n        } else {\n          setIsConsistent(true);\n        }\n      }\n    }, [currentState.user, currentState.session, currentState.isLoading, currentState.hydrated, setIsConsistent, previousState]);\n  }\n\n// Hook for protected routes - redirects to login if not authenticated\nexport function useRequireAuth() {\n  // IMPORTANT: Keep all hooks in the exact same order\n  const { user, session, profile, isLoading, hydrated } = useAuthStore();\n  const [isConsistent, setIsConsistent] = useState(true);\n  const router = useRouter();\n  const [checkedAuth, setCheckedAuth] = useState(false);\n\n  // Simplified consistency check - allow transitional states\n  useEffect(() => {\n    if (hydrated && !isLoading) {\n      // Be more lenient - only flag as inconsistent after a delay\n      const hasInconsistentState = \n        (user && !session) || \n        (!user && session);\n        \n      if (hasInconsistentState) {\n        const timeoutId = setTimeout(() => {\n          setIsConsistent(false);\n        }, 2000);\n        return () => clearTimeout(timeoutId);\n      } else {\n        setIsConsistent(true);\n      }\n    }\n  }, [user, session, isLoading, hydrated]);\n\n  // Then handle redirection based on auth state\n  useEffect(() => {\n    // Wait until hydration and initial loading completes\n    if (!hydrated || isLoading) return;\n    \n    // More lenient authentication check - focus on user presence\n    const isAuthenticated = !!user;\n    \n    if (!isAuthenticated) {\n      router.push('/auth?from=protected');\n    }\n    \n    // Mark that we've checked authentication\n    setCheckedAuth(true);\n  }, [user, session, isLoading, hydrated, router]);\n\n  return { \n    user, \n    profile, \n    session, \n    isLoading: isLoading || !hydrated || !checkedAuth, \n    hydrated, \n    isAuthenticated: !!user && hydrated && !isLoading\n  };\n}\n\n// Hook for login/register pages - redirects to dashboard if already authenticated\nexport function useRedirectIfAuthenticated() {\n  // IMPORTANT: Keep all hooks in the exact same order\n  const { user, session, isLoading, hydrated, profile } = useAuthStore();\n  const [isConsistent, setIsConsistent] = useState(true);\n  const router = useRouter();\n  const pathname = usePathname();\n\n  // Simplified consistency check\n  useEffect(() => {\n    if (hydrated && !isLoading) {\n      const hasInconsistentState = \n        (user && !session) || \n        (!user && session);\n        \n      if (hasInconsistentState) {\n        const timeoutId = setTimeout(() => {\n          setIsConsistent(false);\n        }, 2000);\n        return () => clearTimeout(timeoutId);\n      } else {\n        setIsConsistent(true);\n      }\n    }\n  }, [user, session, isLoading, hydrated]);\n\n  useEffect(() => {\n    // Wait for hydration and initial load\n    if (!hydrated || isLoading) return;\n    \n    // More lenient authentication check - focus on user presence\n    const isAuthenticated = !!user;\n    \n    if (isAuthenticated && pathname !== '/dashboard' && pathname !== '/') {\n      router.push('/dashboard');\n    }\n  }, [user, session, isLoading, hydrated, router, pathname, profile]);\n\n  return { \n    isLoading: isLoading || !hydrated, \n    hydrated,\n    isAuthenticated: !!user && hydrated && !isLoading\n  };\n}\n\n// General auth hook with optimized consistency checks - reduces excessive updates\nexport function useAuth() {\n  // IMPORTANT: Keep all hooks in the exact same order\n  const authState = useAuthStore();\n  const [isConsistent, setIsConsistent] = useState(true);\n  const router = useRouter(); // Always declare this hook third\n  const lastLoggedState = useRef<string>('');\n  const lastStateKey = useRef<string>('');\n\n  // Use optimized comparison to reduce unnecessary re-renders\n  useOptimizedAuthComparison(authState, lastStateKey, setIsConsistent);\n\n  // Throttled logging to prevent console spam - only log every 10 seconds for truly significant changes\n  const throttledLog = useThrottledLog(() => {\n    if (process.env.NODE_ENV === 'development') {\n      // Create a signature of the current state to avoid duplicate logs\n      const stateSignature = `${!!authState.user}-${!!authState.session}-${!!authState.profile}-${authState.isLoading}-${authState.hydrated}-${isConsistent}`;\n\n      // Only log if state signature has changed significantly\n      if (stateSignature !== lastLoggedState.current) {\n        // Only log when there's a meaningful state change\n        const isSignificantChange =\n          authState.hydrated &&\n          (!authState.isLoading ||\n           !isConsistent ||\n           (authState.user && authState.session));\n\n        if (isSignificantChange) {\n          logger.debug('Significant auth state change', {\n            hasUser: !!authState.user,\n            hasSession: !!authState.session,\n            hasProfile: !!authState.profile,\n            isLoading: authState.isLoading,\n            hydrated: authState.hydrated,\n            isConsistent,\n            stateChange: lastLoggedState.current ? `${lastLoggedState.current} \u2192 ${stateSignature}` : 'initial',\n            timestamp: new Date().toISOString()\n          });\n          lastLoggedState.current = stateSignature;\n        }\n      }\n    }\n  }, 10000); // Increased to 10 seconds to greatly reduce spam\n  \n  // Optimized logging - only log very significant auth state changes with much less frequency\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development' && authState.hydrated) {\n      // Only call throttled log for critical state changes\n      const shouldLog =\n        !authState.isLoading && (\n          !isConsistent ||\n          (authState.user && authState.session && authState.profile)\n        );\n\n      if (shouldLog) {\n        throttledLog();\n      }\n    }\n  }, [authState.user, authState.session, authState.profile, authState.isLoading, authState.hydrated, isConsistent, throttledLog]);\n\n  // Simple function to fix inconsistent state - no auto-fix to avoid race conditions\n  const fixInconsistentState = async () => {\n    if (!authState.hydrated || authState.isLoading) {\n      return;\n    }\n\n    logger.warn('Manually fixing inconsistent auth state', {}, 'Auth');\n    \n    try {\n      // Force sign out to clean everything up\n      await authState.signOut();\n      \n      // Redirect to auth page if on a protected route\n      const currentPath = window.location.pathname;\n      if (currentPath.startsWith('/dashboard') || \n          currentPath.startsWith('/profile') || \n          currentPath.startsWith('/settings')) {\n        router.push('/auth');\n      }\n    } catch (error) {\n      logger.error('Error during auth state fix', { error: error instanceof Error ? error.message : String(error) }, 'Auth');\n    }\n  };\n\n  // Require both user AND session for authentication\n  // If user exists but session doesn't, consider it not authenticated (inconsistent state)\n  const isAuthenticated = authState.hydrated && !authState.isLoading && !!authState.user && !!authState.session;\n\n  return {\n    ...authState,\n    isAuthenticated,\n    isConsistent,\n    fixInconsistentState\n  };\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "52ab94b859e13811accca827f1e0dc59d2fcb5c7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2og2u5b3aj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2og2u5b3aj();
cov_2og2u5b3aj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2og2u5b3aj().s[1]++;
exports.useRequireAuth = useRequireAuth;
/* istanbul ignore next */
cov_2og2u5b3aj().s[2]++;
exports.useRedirectIfAuthenticated = useRedirectIfAuthenticated;
/* istanbul ignore next */
cov_2og2u5b3aj().s[3]++;
exports.useAuth = useAuth;
const auth_1 =
/* istanbul ignore next */
(cov_2og2u5b3aj().s[4]++, require("@/stores/auth"));
const navigation_1 =
/* istanbul ignore next */
(cov_2og2u5b3aj().s[5]++, require("next/navigation"));
const react_1 =
/* istanbul ignore next */
(cov_2og2u5b3aj().s[6]++, require("react"));
const logger_1 =
/* istanbul ignore next */
(cov_2og2u5b3aj().s[7]++, require("@/utils/logger"));
// Throttle function to prevent excessive logging - optimized performance
function useThrottledLog(logFn, delay =
/* istanbul ignore next */
(cov_2og2u5b3aj().b[0][0]++, 10000)) {
  /* istanbul ignore next */
  cov_2og2u5b3aj().f[0]++;
  const lastLogTime =
  /* istanbul ignore next */
  (cov_2og2u5b3aj().s[8]++, (0, react_1.useRef)(0));
  /* istanbul ignore next */
  cov_2og2u5b3aj().s[9]++;
  return () => {
    /* istanbul ignore next */
    cov_2og2u5b3aj().f[1]++;
    const now =
    /* istanbul ignore next */
    (cov_2og2u5b3aj().s[10]++, Date.now());
    /* istanbul ignore next */
    cov_2og2u5b3aj().s[11]++;
    if (now - lastLogTime.current >= delay) {
      /* istanbul ignore next */
      cov_2og2u5b3aj().b[1][0]++;
      cov_2og2u5b3aj().s[12]++;
      logFn();
      /* istanbul ignore next */
      cov_2og2u5b3aj().s[13]++;
      lastLogTime.current = now;
    } else
    /* istanbul ignore next */
    {
      cov_2og2u5b3aj().b[1][1]++;
    }
  };
}
// Optimized state comparison to reduce unnecessary re-renders
function useOptimizedAuthComparison(currentState, previousState, setIsConsistent) {
  /* istanbul ignore next */
  cov_2og2u5b3aj().f[2]++;
  cov_2og2u5b3aj().s[14]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_2og2u5b3aj().f[3]++;
    // Only check consistency when state actually changes
    const currentStateKey =
    /* istanbul ignore next */
    (cov_2og2u5b3aj().s[15]++, `${!!currentState.user}-${!!currentState.session}-${!!currentState.profile}-${currentState.isLoading}-${currentState.hydrated}`);
    /* istanbul ignore next */
    cov_2og2u5b3aj().s[16]++;
    if (currentStateKey !== previousState.current) {
      /* istanbul ignore next */
      cov_2og2u5b3aj().b[2][0]++;
      cov_2og2u5b3aj().s[17]++;
      previousState.current = currentStateKey;
      const hasInconsistentState =
      /* istanbul ignore next */
      (cov_2og2u5b3aj().s[18]++,
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[3][0]++, currentState.user) &&
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[3][1]++, !currentState.session) ||
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[3][2]++, !currentState.user) &&
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[3][3]++, currentState.session));
      /* istanbul ignore next */
      cov_2og2u5b3aj().s[19]++;
      if (
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[5][0]++, hasInconsistentState) &&
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[5][1]++, currentState.hydrated) &&
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[5][2]++, !currentState.isLoading)) {
        /* istanbul ignore next */
        cov_2og2u5b3aj().b[4][0]++;
        const timeoutId =
        /* istanbul ignore next */
        (cov_2og2u5b3aj().s[20]++, setTimeout(() => {
          /* istanbul ignore next */
          cov_2og2u5b3aj().f[4]++;
          const latestState =
          /* istanbul ignore next */
          (cov_2og2u5b3aj().s[21]++, auth_1.useAuthStore.getState());
          const stillInconsistent =
          /* istanbul ignore next */
          (cov_2og2u5b3aj().s[22]++,
          /* istanbul ignore next */
          (cov_2og2u5b3aj().b[6][0]++, latestState.user) &&
          /* istanbul ignore next */
          (cov_2og2u5b3aj().b[6][1]++, !latestState.session) ||
          /* istanbul ignore next */
          (cov_2og2u5b3aj().b[6][2]++, !latestState.user) &&
          /* istanbul ignore next */
          (cov_2og2u5b3aj().b[6][3]++, latestState.session));
          /* istanbul ignore next */
          cov_2og2u5b3aj().s[23]++;
          if (
          /* istanbul ignore next */
          (cov_2og2u5b3aj().b[8][0]++, stillInconsistent) &&
          /* istanbul ignore next */
          (cov_2og2u5b3aj().b[8][1]++, latestState.hydrated) &&
          /* istanbul ignore next */
          (cov_2og2u5b3aj().b[8][2]++, !latestState.isLoading)) {
            /* istanbul ignore next */
            cov_2og2u5b3aj().b[7][0]++;
            cov_2og2u5b3aj().s[24]++;
            setIsConsistent(false);
          } else {
            /* istanbul ignore next */
            cov_2og2u5b3aj().b[7][1]++;
            cov_2og2u5b3aj().s[25]++;
            setIsConsistent(true);
          }
        }, 1000)); // Reduced timeout for faster feedback
        /* istanbul ignore next */
        cov_2og2u5b3aj().s[26]++;
        return () => {
          /* istanbul ignore next */
          cov_2og2u5b3aj().f[5]++;
          cov_2og2u5b3aj().s[27]++;
          return clearTimeout(timeoutId);
        };
      } else {
        /* istanbul ignore next */
        cov_2og2u5b3aj().b[4][1]++;
        cov_2og2u5b3aj().s[28]++;
        setIsConsistent(true);
      }
    } else
    /* istanbul ignore next */
    {
      cov_2og2u5b3aj().b[2][1]++;
    }
  }, [currentState.user, currentState.session, currentState.isLoading, currentState.hydrated, setIsConsistent, previousState]);
}
// Hook for protected routes - redirects to login if not authenticated
function useRequireAuth() {
  /* istanbul ignore next */
  cov_2og2u5b3aj().f[6]++;
  // IMPORTANT: Keep all hooks in the exact same order
  const {
    user,
    session,
    profile,
    isLoading,
    hydrated
  } =
  /* istanbul ignore next */
  (cov_2og2u5b3aj().s[29]++, (0, auth_1.useAuthStore)());
  const [isConsistent, setIsConsistent] =
  /* istanbul ignore next */
  (cov_2og2u5b3aj().s[30]++, (0, react_1.useState)(true));
  const router =
  /* istanbul ignore next */
  (cov_2og2u5b3aj().s[31]++, (0, navigation_1.useRouter)());
  const [checkedAuth, setCheckedAuth] =
  /* istanbul ignore next */
  (cov_2og2u5b3aj().s[32]++, (0, react_1.useState)(false));
  // Simplified consistency check - allow transitional states
  /* istanbul ignore next */
  cov_2og2u5b3aj().s[33]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_2og2u5b3aj().f[7]++;
    cov_2og2u5b3aj().s[34]++;
    if (
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[10][0]++, hydrated) &&
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[10][1]++, !isLoading)) {
      /* istanbul ignore next */
      cov_2og2u5b3aj().b[9][0]++;
      // Be more lenient - only flag as inconsistent after a delay
      const hasInconsistentState =
      /* istanbul ignore next */
      (cov_2og2u5b3aj().s[35]++,
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[11][0]++, user) &&
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[11][1]++, !session) ||
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[11][2]++, !user) &&
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[11][3]++, session));
      /* istanbul ignore next */
      cov_2og2u5b3aj().s[36]++;
      if (hasInconsistentState) {
        /* istanbul ignore next */
        cov_2og2u5b3aj().b[12][0]++;
        const timeoutId =
        /* istanbul ignore next */
        (cov_2og2u5b3aj().s[37]++, setTimeout(() => {
          /* istanbul ignore next */
          cov_2og2u5b3aj().f[8]++;
          cov_2og2u5b3aj().s[38]++;
          setIsConsistent(false);
        }, 2000));
        /* istanbul ignore next */
        cov_2og2u5b3aj().s[39]++;
        return () => {
          /* istanbul ignore next */
          cov_2og2u5b3aj().f[9]++;
          cov_2og2u5b3aj().s[40]++;
          return clearTimeout(timeoutId);
        };
      } else {
        /* istanbul ignore next */
        cov_2og2u5b3aj().b[12][1]++;
        cov_2og2u5b3aj().s[41]++;
        setIsConsistent(true);
      }
    } else
    /* istanbul ignore next */
    {
      cov_2og2u5b3aj().b[9][1]++;
    }
  }, [user, session, isLoading, hydrated]);
  // Then handle redirection based on auth state
  /* istanbul ignore next */
  cov_2og2u5b3aj().s[42]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_2og2u5b3aj().f[10]++;
    cov_2og2u5b3aj().s[43]++;
    // Wait until hydration and initial loading completes
    if (
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[14][0]++, !hydrated) ||
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[14][1]++, isLoading)) {
      /* istanbul ignore next */
      cov_2og2u5b3aj().b[13][0]++;
      cov_2og2u5b3aj().s[44]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2og2u5b3aj().b[13][1]++;
    }
    // More lenient authentication check - focus on user presence
    const isAuthenticated =
    /* istanbul ignore next */
    (cov_2og2u5b3aj().s[45]++, !!user);
    /* istanbul ignore next */
    cov_2og2u5b3aj().s[46]++;
    if (!isAuthenticated) {
      /* istanbul ignore next */
      cov_2og2u5b3aj().b[15][0]++;
      cov_2og2u5b3aj().s[47]++;
      router.push('/auth?from=protected');
    } else
    /* istanbul ignore next */
    {
      cov_2og2u5b3aj().b[15][1]++;
    }
    // Mark that we've checked authentication
    cov_2og2u5b3aj().s[48]++;
    setCheckedAuth(true);
  }, [user, session, isLoading, hydrated, router]);
  /* istanbul ignore next */
  cov_2og2u5b3aj().s[49]++;
  return {
    user,
    profile,
    session,
    isLoading:
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[16][0]++, isLoading) ||
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[16][1]++, !hydrated) ||
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[16][2]++, !checkedAuth),
    hydrated,
    isAuthenticated:
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[17][0]++, !!user) &&
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[17][1]++, hydrated) &&
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[17][2]++, !isLoading)
  };
}
// Hook for login/register pages - redirects to dashboard if already authenticated
function useRedirectIfAuthenticated() {
  /* istanbul ignore next */
  cov_2og2u5b3aj().f[11]++;
  // IMPORTANT: Keep all hooks in the exact same order
  const {
    user,
    session,
    isLoading,
    hydrated,
    profile
  } =
  /* istanbul ignore next */
  (cov_2og2u5b3aj().s[50]++, (0, auth_1.useAuthStore)());
  const [isConsistent, setIsConsistent] =
  /* istanbul ignore next */
  (cov_2og2u5b3aj().s[51]++, (0, react_1.useState)(true));
  const router =
  /* istanbul ignore next */
  (cov_2og2u5b3aj().s[52]++, (0, navigation_1.useRouter)());
  const pathname =
  /* istanbul ignore next */
  (cov_2og2u5b3aj().s[53]++, (0, navigation_1.usePathname)());
  // Simplified consistency check
  /* istanbul ignore next */
  cov_2og2u5b3aj().s[54]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_2og2u5b3aj().f[12]++;
    cov_2og2u5b3aj().s[55]++;
    if (
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[19][0]++, hydrated) &&
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[19][1]++, !isLoading)) {
      /* istanbul ignore next */
      cov_2og2u5b3aj().b[18][0]++;
      const hasInconsistentState =
      /* istanbul ignore next */
      (cov_2og2u5b3aj().s[56]++,
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[20][0]++, user) &&
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[20][1]++, !session) ||
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[20][2]++, !user) &&
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[20][3]++, session));
      /* istanbul ignore next */
      cov_2og2u5b3aj().s[57]++;
      if (hasInconsistentState) {
        /* istanbul ignore next */
        cov_2og2u5b3aj().b[21][0]++;
        const timeoutId =
        /* istanbul ignore next */
        (cov_2og2u5b3aj().s[58]++, setTimeout(() => {
          /* istanbul ignore next */
          cov_2og2u5b3aj().f[13]++;
          cov_2og2u5b3aj().s[59]++;
          setIsConsistent(false);
        }, 2000));
        /* istanbul ignore next */
        cov_2og2u5b3aj().s[60]++;
        return () => {
          /* istanbul ignore next */
          cov_2og2u5b3aj().f[14]++;
          cov_2og2u5b3aj().s[61]++;
          return clearTimeout(timeoutId);
        };
      } else {
        /* istanbul ignore next */
        cov_2og2u5b3aj().b[21][1]++;
        cov_2og2u5b3aj().s[62]++;
        setIsConsistent(true);
      }
    } else
    /* istanbul ignore next */
    {
      cov_2og2u5b3aj().b[18][1]++;
    }
  }, [user, session, isLoading, hydrated]);
  /* istanbul ignore next */
  cov_2og2u5b3aj().s[63]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_2og2u5b3aj().f[15]++;
    cov_2og2u5b3aj().s[64]++;
    // Wait for hydration and initial load
    if (
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[23][0]++, !hydrated) ||
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[23][1]++, isLoading)) {
      /* istanbul ignore next */
      cov_2og2u5b3aj().b[22][0]++;
      cov_2og2u5b3aj().s[65]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2og2u5b3aj().b[22][1]++;
    }
    // More lenient authentication check - focus on user presence
    const isAuthenticated =
    /* istanbul ignore next */
    (cov_2og2u5b3aj().s[66]++, !!user);
    /* istanbul ignore next */
    cov_2og2u5b3aj().s[67]++;
    if (
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[25][0]++, isAuthenticated) &&
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[25][1]++, pathname !== '/dashboard') &&
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[25][2]++, pathname !== '/')) {
      /* istanbul ignore next */
      cov_2og2u5b3aj().b[24][0]++;
      cov_2og2u5b3aj().s[68]++;
      router.push('/dashboard');
    } else
    /* istanbul ignore next */
    {
      cov_2og2u5b3aj().b[24][1]++;
    }
  }, [user, session, isLoading, hydrated, router, pathname, profile]);
  /* istanbul ignore next */
  cov_2og2u5b3aj().s[69]++;
  return {
    isLoading:
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[26][0]++, isLoading) ||
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[26][1]++, !hydrated),
    hydrated,
    isAuthenticated:
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[27][0]++, !!user) &&
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[27][1]++, hydrated) &&
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[27][2]++, !isLoading)
  };
}
// General auth hook with optimized consistency checks - reduces excessive updates
function useAuth() {
  /* istanbul ignore next */
  cov_2og2u5b3aj().f[16]++;
  // IMPORTANT: Keep all hooks in the exact same order
  const authState =
  /* istanbul ignore next */
  (cov_2og2u5b3aj().s[70]++, (0, auth_1.useAuthStore)());
  const [isConsistent, setIsConsistent] =
  /* istanbul ignore next */
  (cov_2og2u5b3aj().s[71]++, (0, react_1.useState)(true));
  const router =
  /* istanbul ignore next */
  (cov_2og2u5b3aj().s[72]++, (0, navigation_1.useRouter)()); // Always declare this hook third
  const lastLoggedState =
  /* istanbul ignore next */
  (cov_2og2u5b3aj().s[73]++, (0, react_1.useRef)(''));
  const lastStateKey =
  /* istanbul ignore next */
  (cov_2og2u5b3aj().s[74]++, (0, react_1.useRef)(''));
  // Use optimized comparison to reduce unnecessary re-renders
  /* istanbul ignore next */
  cov_2og2u5b3aj().s[75]++;
  useOptimizedAuthComparison(authState, lastStateKey, setIsConsistent);
  // Throttled logging to prevent console spam - only log every 10 seconds for truly significant changes
  const throttledLog =
  /* istanbul ignore next */
  (cov_2og2u5b3aj().s[76]++, useThrottledLog(() => {
    /* istanbul ignore next */
    cov_2og2u5b3aj().f[17]++;
    cov_2og2u5b3aj().s[77]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_2og2u5b3aj().b[28][0]++;
      // Create a signature of the current state to avoid duplicate logs
      const stateSignature =
      /* istanbul ignore next */
      (cov_2og2u5b3aj().s[78]++, `${!!authState.user}-${!!authState.session}-${!!authState.profile}-${authState.isLoading}-${authState.hydrated}-${isConsistent}`);
      // Only log if state signature has changed significantly
      /* istanbul ignore next */
      cov_2og2u5b3aj().s[79]++;
      if (stateSignature !== lastLoggedState.current) {
        /* istanbul ignore next */
        cov_2og2u5b3aj().b[29][0]++;
        // Only log when there's a meaningful state change
        const isSignificantChange =
        /* istanbul ignore next */
        (cov_2og2u5b3aj().s[80]++,
        /* istanbul ignore next */
        (cov_2og2u5b3aj().b[30][0]++, authState.hydrated) && (
        /* istanbul ignore next */
        (cov_2og2u5b3aj().b[30][1]++, !authState.isLoading) ||
        /* istanbul ignore next */
        (cov_2og2u5b3aj().b[30][2]++, !isConsistent) ||
        /* istanbul ignore next */
        (cov_2og2u5b3aj().b[30][3]++, authState.user) &&
        /* istanbul ignore next */
        (cov_2og2u5b3aj().b[30][4]++, authState.session)));
        /* istanbul ignore next */
        cov_2og2u5b3aj().s[81]++;
        if (isSignificantChange) {
          /* istanbul ignore next */
          cov_2og2u5b3aj().b[31][0]++;
          cov_2og2u5b3aj().s[82]++;
          logger_1.logger.debug('Significant auth state change', {
            hasUser: !!authState.user,
            hasSession: !!authState.session,
            hasProfile: !!authState.profile,
            isLoading: authState.isLoading,
            hydrated: authState.hydrated,
            isConsistent,
            stateChange: lastLoggedState.current ?
            /* istanbul ignore next */
            (cov_2og2u5b3aj().b[32][0]++, `${lastLoggedState.current} → ${stateSignature}`) :
            /* istanbul ignore next */
            (cov_2og2u5b3aj().b[32][1]++, 'initial'),
            timestamp: new Date().toISOString()
          });
          /* istanbul ignore next */
          cov_2og2u5b3aj().s[83]++;
          lastLoggedState.current = stateSignature;
        } else
        /* istanbul ignore next */
        {
          cov_2og2u5b3aj().b[31][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2og2u5b3aj().b[29][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2og2u5b3aj().b[28][1]++;
    }
  }, 10000)); // Increased to 10 seconds to greatly reduce spam
  // Optimized logging - only log very significant auth state changes with much less frequency
  /* istanbul ignore next */
  cov_2og2u5b3aj().s[84]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_2og2u5b3aj().f[18]++;
    cov_2og2u5b3aj().s[85]++;
    if (
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[34][0]++, process.env.NODE_ENV === 'development') &&
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[34][1]++, authState.hydrated)) {
      /* istanbul ignore next */
      cov_2og2u5b3aj().b[33][0]++;
      // Only call throttled log for critical state changes
      const shouldLog =
      /* istanbul ignore next */
      (cov_2og2u5b3aj().s[86]++,
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[35][0]++, !authState.isLoading) && (
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[35][1]++, !isConsistent) ||
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[35][2]++, authState.user) &&
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[35][3]++, authState.session) &&
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[35][4]++, authState.profile)));
      /* istanbul ignore next */
      cov_2og2u5b3aj().s[87]++;
      if (shouldLog) {
        /* istanbul ignore next */
        cov_2og2u5b3aj().b[36][0]++;
        cov_2og2u5b3aj().s[88]++;
        throttledLog();
      } else
      /* istanbul ignore next */
      {
        cov_2og2u5b3aj().b[36][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2og2u5b3aj().b[33][1]++;
    }
  }, [authState.user, authState.session, authState.profile, authState.isLoading, authState.hydrated, isConsistent, throttledLog]);
  // Simple function to fix inconsistent state - no auto-fix to avoid race conditions
  /* istanbul ignore next */
  cov_2og2u5b3aj().s[89]++;
  const fixInconsistentState = async () => {
    /* istanbul ignore next */
    cov_2og2u5b3aj().f[19]++;
    cov_2og2u5b3aj().s[90]++;
    if (
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[38][0]++, !authState.hydrated) ||
    /* istanbul ignore next */
    (cov_2og2u5b3aj().b[38][1]++, authState.isLoading)) {
      /* istanbul ignore next */
      cov_2og2u5b3aj().b[37][0]++;
      cov_2og2u5b3aj().s[91]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2og2u5b3aj().b[37][1]++;
    }
    cov_2og2u5b3aj().s[92]++;
    logger_1.logger.warn('Manually fixing inconsistent auth state', {}, 'Auth');
    /* istanbul ignore next */
    cov_2og2u5b3aj().s[93]++;
    try {
      /* istanbul ignore next */
      cov_2og2u5b3aj().s[94]++;
      // Force sign out to clean everything up
      await authState.signOut();
      // Redirect to auth page if on a protected route
      const currentPath =
      /* istanbul ignore next */
      (cov_2og2u5b3aj().s[95]++, window.location.pathname);
      /* istanbul ignore next */
      cov_2og2u5b3aj().s[96]++;
      if (
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[40][0]++, currentPath.startsWith('/dashboard')) ||
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[40][1]++, currentPath.startsWith('/profile')) ||
      /* istanbul ignore next */
      (cov_2og2u5b3aj().b[40][2]++, currentPath.startsWith('/settings'))) {
        /* istanbul ignore next */
        cov_2og2u5b3aj().b[39][0]++;
        cov_2og2u5b3aj().s[97]++;
        router.push('/auth');
      } else
      /* istanbul ignore next */
      {
        cov_2og2u5b3aj().b[39][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2og2u5b3aj().s[98]++;
      logger_1.logger.error('Error during auth state fix', {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_2og2u5b3aj().b[41][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2og2u5b3aj().b[41][1]++, String(error))
      }, 'Auth');
    }
  };
  // Require both user AND session for authentication
  // If user exists but session doesn't, consider it not authenticated (inconsistent state)
  const isAuthenticated =
  /* istanbul ignore next */
  (cov_2og2u5b3aj().s[99]++,
  /* istanbul ignore next */
  (cov_2og2u5b3aj().b[42][0]++, authState.hydrated) &&
  /* istanbul ignore next */
  (cov_2og2u5b3aj().b[42][1]++, !authState.isLoading) &&
  /* istanbul ignore next */
  (cov_2og2u5b3aj().b[42][2]++, !!authState.user) &&
  /* istanbul ignore next */
  (cov_2og2u5b3aj().b[42][3]++, !!authState.session));
  /* istanbul ignore next */
  cov_2og2u5b3aj().s[100]++;
  return Object.assign(Object.assign({}, authState), {
    isAuthenticated,
    isConsistent,
    fixInconsistentState
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,