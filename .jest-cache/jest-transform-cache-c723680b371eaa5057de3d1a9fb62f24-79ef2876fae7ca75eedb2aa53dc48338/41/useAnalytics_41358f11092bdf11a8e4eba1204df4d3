8e367e091137851f18b6ee87a74e5998
'use client';
"use strict";

/* istanbul ignore next */
function cov_15hj19kcld() {
  var path = "/home/g/dev/orangecat/src/hooks/useAnalytics.ts";
  var hash = "f493ba47ca4842787a5cb89cc25bd05b068fcc40";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/hooks/useAnalytics.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 36
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 46
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 54
        }
      },
      "4": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 44
        }
      },
      "5": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 32
        }
      },
      "6": {
        start: {
          line: 9,
          column: 20
        },
        end: {
          line: 9,
          column: 51
        }
      },
      "7": {
        start: {
          line: 10,
          column: 18
        },
        end: {
          line: 10,
          column: 44
        }
      },
      "8": {
        start: {
          line: 12,
          column: 30
        },
        end: {
          line: 12,
          column: 54
        }
      },
      "9": {
        start: {
          line: 13,
          column: 64
        },
        end: {
          line: 13,
          column: 71
        }
      },
      "10": {
        start: {
          line: 14,
          column: 34
        },
        end: {
          line: 14,
          column: 61
        }
      },
      "11": {
        start: {
          line: 15,
          column: 38
        },
        end: {
          line: 15,
          column: 65
        }
      },
      "12": {
        start: {
          line: 16,
          column: 30
        },
        end: {
          line: 16,
          column: 57
        }
      },
      "13": {
        start: {
          line: 17,
          column: 42
        },
        end: {
          line: 17,
          column: 69
        }
      },
      "14": {
        start: {
          line: 18,
          column: 25
        },
        end: {
          line: 36,
          column: 98
        }
      },
      "15": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 22,
          column: 9
        }
      },
      "16": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 32
        }
      },
      "17": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 19
        }
      },
      "18": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "19": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "20": {
        start: {
          line: 25,
          column: 34
        },
        end: {
          line: 25,
          column: 122
        }
      },
      "21": {
        start: {
          line: 26,
          column: 25
        },
        end: {
          line: 26,
          column: 97
        }
      },
      "22": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 29
        }
      },
      "23": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 39
        }
      },
      "24": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 92
        }
      },
      "25": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 32
        }
      },
      "26": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 40,
          column: 22
        }
      },
      "27": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 27
        }
      },
      "28": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 29
        }
      },
      "29": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 23
        }
      },
      "30": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 23
        }
      },
      "31": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 51,
          column: 49
        }
      },
      "32": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 48,
          column: 19
        }
      },
      "33": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 19
        }
      },
      "34": {
        start: {
          line: 49,
          column: 25
        },
        end: {
          line: 49,
          column: 67
        }
      },
      "35": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 45
        }
      },
      "36": {
        start: {
          line: 50,
          column: 21
        },
        end: {
          line: 50,
          column: 44
        }
      },
      "37": {
        start: {
          line: 53,
          column: 23
        },
        end: {
          line: 53,
          column: 67
        }
      },
      "38": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 61,
          column: 6
        }
      },
      "39": {
        start: {
          line: 65,
          column: 42
        },
        end: {
          line: 65,
          column: 56
        }
      },
      "40": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 70,
          column: 6
        }
      },
      "41": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 44
        }
      },
      "42": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 78,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "useAnalytics",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 21
          }
        },
        loc: {
          start: {
            line: 11,
            column: 36
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 51
          }
        },
        loc: {
          start: {
            line: 18,
            column: 62
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 37,
            column: 45
          },
          end: {
            line: 37,
            column: 46
          }
        },
        loc: {
          start: {
            line: 37,
            column: 57
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 37
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 42,
            column: 28
          }
        },
        loc: {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 46,
            column: 27
          },
          end: {
            line: 46,
            column: 28
          }
        },
        loc: {
          start: {
            line: 46,
            column: 33
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 46
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 50,
            column: 15
          },
          end: {
            line: 50,
            column: 16
          }
        },
        loc: {
          start: {
            line: 50,
            column: 21
          },
          end: {
            line: 50,
            column: 44
          }
        },
        line: 50
      },
      "6": {
        name: "useFeatureMetrics",
        decl: {
          start: {
            line: 64,
            column: 9
          },
          end: {
            line: 64,
            column: 26
          }
        },
        loc: {
          start: {
            line: 64,
            column: 36
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 64
      },
      "7": {
        name: "useFundraisingMetrics",
        decl: {
          start: {
            line: 73,
            column: 9
          },
          end: {
            line: 73,
            column: 30
          }
        },
        loc: {
          start: {
            line: 73,
            column: 33
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 73
      },
      "8": {
        name: "useWalletMetrics",
        decl: {
          start: {
            line: 77,
            column: 9
          },
          end: {
            line: 77,
            column: 25
          }
        },
        loc: {
          start: {
            line: 77,
            column: 28
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 77
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 11,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 32
          },
          end: {
            line: 11,
            column: 34
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 13,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 13,
            column: 43
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 13,
            column: 45
          },
          end: {
            line: 13,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 55
          },
          end: {
            line: 13,
            column: 59
          }
        }],
        line: 13
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "4": {
        loc: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 17
          }
        }, {
          start: {
            line: 19,
            column: 21
          },
          end: {
            line: 19,
            column: 29
          }
        }],
        line: 19
      },
      "5": {
        loc: {
          start: {
            line: 25,
            column: 34
          },
          end: {
            line: 25,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 25,
            column: 108
          }
        }, {
          start: {
            line: 25,
            column: 113
          },
          end: {
            line: 25,
            column: 122
          }
        }],
        line: 25
      },
      "6": {
        loc: {
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 25,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 76
          },
          end: {
            line: 25,
            column: 82
          }
        }, {
          start: {
            line: 25,
            column: 85
          },
          end: {
            line: 25,
            column: 108
          }
        }],
        line: 25
      },
      "7": {
        loc: {
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 25,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 25,
            column: 51
          }
        }, {
          start: {
            line: 25,
            column: 55
          },
          end: {
            line: 25,
            column: 73
          }
        }],
        line: 25
      },
      "8": {
        loc: {
          start: {
            line: 31,
            column: 21
          },
          end: {
            line: 31,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 44
          },
          end: {
            line: 31,
            column: 55
          }
        }, {
          start: {
            line: 31,
            column: 58
          },
          end: {
            line: 31,
            column: 90
          }
        }],
        line: 31
      },
      "9": {
        loc: {
          start: {
            line: 36,
            column: 14
          },
          end: {
            line: 36,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 55
          },
          end: {
            line: 36,
            column: 61
          }
        }, {
          start: {
            line: 36,
            column: 64
          },
          end: {
            line: 36,
            column: 87
          }
        }],
        line: 36
      },
      "10": {
        loc: {
          start: {
            line: 36,
            column: 14
          },
          end: {
            line: 36,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 14
          },
          end: {
            line: 36,
            column: 30
          }
        }, {
          start: {
            line: 36,
            column: 34
          },
          end: {
            line: 36,
            column: 52
          }
        }],
        line: 36
      },
      "11": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 48,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 48,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "12": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 20
          }
        }, {
          start: {
            line: 47,
            column: 24
          },
          end: {
            line: 47,
            column: 40
          }
        }],
        line: 47
      },
      "13": {
        loc: {
          start: {
            line: 67,
            column: 17
          },
          end: {
            line: 67,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 18
          },
          end: {
            line: 67,
            column: 84
          }
        }, {
          start: {
            line: 67,
            column: 89
          },
          end: {
            line: 67,
            column: 93
          }
        }],
        line: 67
      },
      "14": {
        loc: {
          start: {
            line: 67,
            column: 18
          },
          end: {
            line: 67,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 59
          },
          end: {
            line: 67,
            column: 65
          }
        }, {
          start: {
            line: 67,
            column: 68
          },
          end: {
            line: 67,
            column: 84
          }
        }],
        line: 67
      },
      "15": {
        loc: {
          start: {
            line: 67,
            column: 18
          },
          end: {
            line: 67,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 18
          },
          end: {
            line: 67,
            column: 34
          }
        }, {
          start: {
            line: 67,
            column: 38
          },
          end: {
            line: 67,
            column: 56
          }
        }],
        line: 67
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/hooks/useAnalytics.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/hooks/useAnalytics.ts"],
      sourcesContent: ["'use client'\n\nimport { useState, useEffect, useCallback } from 'react'\nimport { analyticsService, DashboardMetrics, FeatureMetrics } from '@/services/analytics'\nimport { useAuth } from '@/hooks/useAuth'\n\ninterface UseAnalyticsOptions {\n  refreshInterval?: number // in milliseconds\n  enabled?: boolean\n}\n\ninterface UseAnalyticsReturn {\n  metrics: DashboardMetrics | null\n  isLoading: boolean\n  error: string | null\n  refresh: () => Promise<void>\n  lastUpdated: Date | null\n  cacheStats: { size: number; keys: string[] }\n}\n\nexport function useAnalytics(options: UseAnalyticsOptions = {}): UseAnalyticsReturn {\n  const { user, profile } = useAuth()\n  const { refreshInterval = 5 * 60 * 1000, enabled = true } = options // Default 5 minutes\n  \n  const [metrics, setMetrics] = useState<DashboardMetrics | null>(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null)\n\n  const fetchMetrics = useCallback(async () => {\n    if (!user || !enabled) {\n      setIsLoading(false)\n      return\n    }\n\n    try {\n      setError(null)\n      const walletAddress = profile?.bitcoin_address || undefined\n      const data = await analyticsService.getAllMetrics(user.id, walletAddress)\n      \n      setMetrics(data)\n      setLastUpdated(new Date())\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch analytics data')\n    } finally {\n      setIsLoading(false)\n    }\n  }, [user, profile?.bitcoin_address, enabled])\n\n  const refresh = useCallback(async () => {\n    setIsLoading(true)\n    await fetchMetrics()\n  }, [fetchMetrics])\n\n  // Initial load\n  useEffect(() => {\n    fetchMetrics()\n  }, [fetchMetrics])\n\n  // Auto-refresh interval\n  useEffect(() => {\n    if (!enabled || !refreshInterval) return\n\n    const interval = setInterval(fetchMetrics, refreshInterval)\n    return () => clearInterval(interval)\n  }, [fetchMetrics, refreshInterval, enabled])\n\n  // Get cache stats\n  const cacheStats = analyticsService.getCacheStats()\n\n  return {\n    metrics,\n    isLoading,\n    error,\n    refresh,\n    lastUpdated,\n    cacheStats\n  }\n}\n\n// Hook for specific feature metrics\nexport function useFeatureMetrics(feature: keyof DashboardMetrics): {\n  metrics: FeatureMetrics | null\n  isLoading: boolean\n  error: string | null\n} {\n  const { metrics, isLoading, error } = useAnalytics()\n  \n  return {\n    metrics: metrics?.[feature] || null,\n    isLoading,\n    error\n  }\n}\n\n// Hook for fundraising metrics specifically\nexport function useFundraisingMetrics() {\n  return useFeatureMetrics('fundraising')\n}\n\n// Hook for wallet metrics specifically  \nexport function useWalletMetrics() {\n  return useFeatureMetrics('wallet')\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f493ba47ca4842787a5cb89cc25bd05b068fcc40"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15hj19kcld = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_15hj19kcld();
cov_15hj19kcld().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_15hj19kcld().s[1]++;
exports.useAnalytics = useAnalytics;
/* istanbul ignore next */
cov_15hj19kcld().s[2]++;
exports.useFeatureMetrics = useFeatureMetrics;
/* istanbul ignore next */
cov_15hj19kcld().s[3]++;
exports.useFundraisingMetrics = useFundraisingMetrics;
/* istanbul ignore next */
cov_15hj19kcld().s[4]++;
exports.useWalletMetrics = useWalletMetrics;
const react_1 =
/* istanbul ignore next */
(cov_15hj19kcld().s[5]++, require("react"));
const analytics_1 =
/* istanbul ignore next */
(cov_15hj19kcld().s[6]++, require("@/services/analytics"));
const useAuth_1 =
/* istanbul ignore next */
(cov_15hj19kcld().s[7]++, require("@/hooks/useAuth"));
function useAnalytics(options =
/* istanbul ignore next */
(cov_15hj19kcld().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_15hj19kcld().f[0]++;
  const {
    user,
    profile
  } =
  /* istanbul ignore next */
  (cov_15hj19kcld().s[8]++, (0, useAuth_1.useAuth)());
  const {
    refreshInterval =
    /* istanbul ignore next */
    (cov_15hj19kcld().b[1][0]++, 5 * 60 * 1000),
    enabled =
    /* istanbul ignore next */
    (cov_15hj19kcld().b[2][0]++, true)
  } =
  /* istanbul ignore next */
  (cov_15hj19kcld().s[9]++, options); // Default 5 minutes
  const [metrics, setMetrics] =
  /* istanbul ignore next */
  (cov_15hj19kcld().s[10]++, (0, react_1.useState)(null));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_15hj19kcld().s[11]++, (0, react_1.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_15hj19kcld().s[12]++, (0, react_1.useState)(null));
  const [lastUpdated, setLastUpdated] =
  /* istanbul ignore next */
  (cov_15hj19kcld().s[13]++, (0, react_1.useState)(null));
  const fetchMetrics =
  /* istanbul ignore next */
  (cov_15hj19kcld().s[14]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_15hj19kcld().f[1]++;
    cov_15hj19kcld().s[15]++;
    if (
    /* istanbul ignore next */
    (cov_15hj19kcld().b[4][0]++, !user) ||
    /* istanbul ignore next */
    (cov_15hj19kcld().b[4][1]++, !enabled)) {
      /* istanbul ignore next */
      cov_15hj19kcld().b[3][0]++;
      cov_15hj19kcld().s[16]++;
      setIsLoading(false);
      /* istanbul ignore next */
      cov_15hj19kcld().s[17]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_15hj19kcld().b[3][1]++;
    }
    cov_15hj19kcld().s[18]++;
    try {
      /* istanbul ignore next */
      cov_15hj19kcld().s[19]++;
      setError(null);
      const walletAddress =
      /* istanbul ignore next */
      (cov_15hj19kcld().s[20]++,
      /* istanbul ignore next */
      (cov_15hj19kcld().b[5][0]++,
      /* istanbul ignore next */
      (cov_15hj19kcld().b[7][0]++, profile === null) ||
      /* istanbul ignore next */
      (cov_15hj19kcld().b[7][1]++, profile === void 0) ?
      /* istanbul ignore next */
      (cov_15hj19kcld().b[6][0]++, void 0) :
      /* istanbul ignore next */
      (cov_15hj19kcld().b[6][1]++, profile.bitcoin_address)) ||
      /* istanbul ignore next */
      (cov_15hj19kcld().b[5][1]++, undefined));
      const data =
      /* istanbul ignore next */
      (cov_15hj19kcld().s[21]++, await analytics_1.analyticsService.getAllMetrics(user.id, walletAddress));
      /* istanbul ignore next */
      cov_15hj19kcld().s[22]++;
      setMetrics(data);
      /* istanbul ignore next */
      cov_15hj19kcld().s[23]++;
      setLastUpdated(new Date());
    } catch (err) {
      /* istanbul ignore next */
      cov_15hj19kcld().s[24]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_15hj19kcld().b[8][0]++, err.message) :
      /* istanbul ignore next */
      (cov_15hj19kcld().b[8][1]++, 'Failed to fetch analytics data'));
    } finally {
      /* istanbul ignore next */
      cov_15hj19kcld().s[25]++;
      setIsLoading(false);
    }
  }, [user,
  /* istanbul ignore next */
  (cov_15hj19kcld().b[10][0]++, profile === null) ||
  /* istanbul ignore next */
  (cov_15hj19kcld().b[10][1]++, profile === void 0) ?
  /* istanbul ignore next */
  (cov_15hj19kcld().b[9][0]++, void 0) :
  /* istanbul ignore next */
  (cov_15hj19kcld().b[9][1]++, profile.bitcoin_address), enabled]));
  const refresh =
  /* istanbul ignore next */
  (cov_15hj19kcld().s[26]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_15hj19kcld().f[2]++;
    cov_15hj19kcld().s[27]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_15hj19kcld().s[28]++;
    await fetchMetrics();
  }, [fetchMetrics]));
  // Initial load
  /* istanbul ignore next */
  cov_15hj19kcld().s[29]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_15hj19kcld().f[3]++;
    cov_15hj19kcld().s[30]++;
    fetchMetrics();
  }, [fetchMetrics]);
  // Auto-refresh interval
  /* istanbul ignore next */
  cov_15hj19kcld().s[31]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_15hj19kcld().f[4]++;
    cov_15hj19kcld().s[32]++;
    if (
    /* istanbul ignore next */
    (cov_15hj19kcld().b[12][0]++, !enabled) ||
    /* istanbul ignore next */
    (cov_15hj19kcld().b[12][1]++, !refreshInterval)) {
      /* istanbul ignore next */
      cov_15hj19kcld().b[11][0]++;
      cov_15hj19kcld().s[33]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_15hj19kcld().b[11][1]++;
    }
    const interval =
    /* istanbul ignore next */
    (cov_15hj19kcld().s[34]++, setInterval(fetchMetrics, refreshInterval));
    /* istanbul ignore next */
    cov_15hj19kcld().s[35]++;
    return () => {
      /* istanbul ignore next */
      cov_15hj19kcld().f[5]++;
      cov_15hj19kcld().s[36]++;
      return clearInterval(interval);
    };
  }, [fetchMetrics, refreshInterval, enabled]);
  // Get cache stats
  const cacheStats =
  /* istanbul ignore next */
  (cov_15hj19kcld().s[37]++, analytics_1.analyticsService.getCacheStats());
  /* istanbul ignore next */
  cov_15hj19kcld().s[38]++;
  return {
    metrics,
    isLoading,
    error,
    refresh,
    lastUpdated,
    cacheStats
  };
}
// Hook for specific feature metrics
function useFeatureMetrics(feature) {
  /* istanbul ignore next */
  cov_15hj19kcld().f[6]++;
  const {
    metrics,
    isLoading,
    error
  } =
  /* istanbul ignore next */
  (cov_15hj19kcld().s[39]++, useAnalytics());
  /* istanbul ignore next */
  cov_15hj19kcld().s[40]++;
  return {
    metrics:
    /* istanbul ignore next */
    (cov_15hj19kcld().b[13][0]++,
    /* istanbul ignore next */
    (cov_15hj19kcld().b[15][0]++, metrics === null) ||
    /* istanbul ignore next */
    (cov_15hj19kcld().b[15][1]++, metrics === void 0) ?
    /* istanbul ignore next */
    (cov_15hj19kcld().b[14][0]++, void 0) :
    /* istanbul ignore next */
    (cov_15hj19kcld().b[14][1]++, metrics[feature])) ||
    /* istanbul ignore next */
    (cov_15hj19kcld().b[13][1]++, null),
    isLoading,
    error
  };
}
// Hook for fundraising metrics specifically
function useFundraisingMetrics() {
  /* istanbul ignore next */
  cov_15hj19kcld().f[7]++;
  cov_15hj19kcld().s[41]++;
  return useFeatureMetrics('fundraising');
}
// Hook for wallet metrics specifically  
function useWalletMetrics() {
  /* istanbul ignore next */
  cov_15hj19kcld().f[8]++;
  cov_15hj19kcld().s[42]++;
  return useFeatureMetrics('wallet');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,