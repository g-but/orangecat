{"version":3,"names":["cov_15hj19kcld","actualCoverage","s","exports","useAnalytics","useFeatureMetrics","useFundraisingMetrics","useWalletMetrics","react_1","require","analytics_1","useAuth_1","options","b","f","user","profile","useAuth","refreshInterval","enabled","metrics","setMetrics","useState","isLoading","setIsLoading","error","setError","lastUpdated","setLastUpdated","fetchMetrics","useCallback","walletAddress","bitcoin_address","undefined","data","analyticsService","getAllMetrics","id","Date","err","Error","message","refresh","useEffect","interval","setInterval","clearInterval","cacheStats","getCacheStats","feature"],"sources":["/home/g/dev/orangecat/src/hooks/useAnalytics.ts"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useCallback } from 'react'\nimport { analyticsService, DashboardMetrics, FeatureMetrics } from '@/services/analytics'\nimport { useAuth } from '@/hooks/useAuth'\n\ninterface UseAnalyticsOptions {\n  refreshInterval?: number // in milliseconds\n  enabled?: boolean\n}\n\ninterface UseAnalyticsReturn {\n  metrics: DashboardMetrics | null\n  isLoading: boolean\n  error: string | null\n  refresh: () => Promise<void>\n  lastUpdated: Date | null\n  cacheStats: { size: number; keys: string[] }\n}\n\nexport function useAnalytics(options: UseAnalyticsOptions = {}): UseAnalyticsReturn {\n  const { user, profile } = useAuth()\n  const { refreshInterval = 5 * 60 * 1000, enabled = true } = options // Default 5 minutes\n  \n  const [metrics, setMetrics] = useState<DashboardMetrics | null>(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null)\n\n  const fetchMetrics = useCallback(async () => {\n    if (!user || !enabled) {\n      setIsLoading(false)\n      return\n    }\n\n    try {\n      setError(null)\n      const walletAddress = profile?.bitcoin_address || undefined\n      const data = await analyticsService.getAllMetrics(user.id, walletAddress)\n      \n      setMetrics(data)\n      setLastUpdated(new Date())\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch analytics data')\n    } finally {\n      setIsLoading(false)\n    }\n  }, [user, profile?.bitcoin_address, enabled])\n\n  const refresh = useCallback(async () => {\n    setIsLoading(true)\n    await fetchMetrics()\n  }, [fetchMetrics])\n\n  // Initial load\n  useEffect(() => {\n    fetchMetrics()\n  }, [fetchMetrics])\n\n  // Auto-refresh interval\n  useEffect(() => {\n    if (!enabled || !refreshInterval) return\n\n    const interval = setInterval(fetchMetrics, refreshInterval)\n    return () => clearInterval(interval)\n  }, [fetchMetrics, refreshInterval, enabled])\n\n  // Get cache stats\n  const cacheStats = analyticsService.getCacheStats()\n\n  return {\n    metrics,\n    isLoading,\n    error,\n    refresh,\n    lastUpdated,\n    cacheStats\n  }\n}\n\n// Hook for specific feature metrics\nexport function useFeatureMetrics(feature: keyof DashboardMetrics): {\n  metrics: FeatureMetrics | null\n  isLoading: boolean\n  error: string | null\n} {\n  const { metrics, isLoading, error } = useAnalytics()\n  \n  return {\n    metrics: metrics?.[feature] || null,\n    isLoading,\n    error\n  }\n}\n\n// Hook for fundraising metrics specifically\nexport function useFundraisingMetrics() {\n  return useFeatureMetrics('fundraising')\n}\n\n// Hook for wallet metrics specifically  \nexport function useWalletMetrics() {\n  return useFeatureMetrics('wallet')\n} "],"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","ignoreList":[]}