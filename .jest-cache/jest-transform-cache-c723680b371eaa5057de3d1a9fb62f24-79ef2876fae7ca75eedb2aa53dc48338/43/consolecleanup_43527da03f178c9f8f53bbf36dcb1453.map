{"version":3,"names":["cov_28vomypchx","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","auditConsoleUsage","logger_1","require","ProductionConsole","log","args","isProduction","logger","info","console","warn","error","initialize","bind","process","env","NODE_ENV","CONSOLE_LOG_AUDIT","testFiles","devUtilities","productionCode","securityRisk","high","medium","low","recommendations","totalFound","length","productionRisk","highRisk","SafeConsole","dev","perf","message","data","security","audit","window"],"sources":["/home/g/dev/orangecat/src/utils/console-cleanup.ts"],"sourcesContent":["/**\n * CONSOLE LOG CLEANUP UTILITY\n * \n * Security hardening: Remove all console.log statements for production\n * Prevents sensitive information disclosure in production logs\n * \n * Created: 2025-01-14\n * Last Modified: 2025-01-14\n * Last Modified Summary: Production security - console log removal\n */\n\nimport { logger } from '@/utils/logger'\n\n/**\n * Production-safe console replacement\n * Replaces console.log with proper logger in production\n */\nexport class ProductionConsole {\n  private static isProduction = process.env.NODE_ENV === 'production'\n\n  /**\n   * Safe logging that uses proper logger in production\n   */\n  static log(...args: any[]): void {\n    if (this.isProduction) {\n      // In production, use proper logger instead of console.log\n      logger.info('Console output', { args }, 'Console')\n    } else {\n      // In development, allow console.log\n      console.log(...args)\n    }\n  }\n\n  /**\n   * Safe warning that uses proper logger in production\n   */\n  static warn(...args: any[]): void {\n    if (this.isProduction) {\n      logger.warn('Console warning', { args }, 'Console')\n    } else {\n      console.warn(...args)\n    }\n  }\n\n  /**\n   * Safe error logging (always use proper logger)\n   */\n  static error(...args: any[]): void {\n    logger.error('Console error', { args }, 'Console')\n  }\n\n  /**\n   * Initialize production console replacement\n   */\n  static initialize(): void {\n    if (this.isProduction) {\n      // Replace global console methods in production\n      global.console.log = this.log.bind(this)\n      global.console.warn = this.warn.bind(this)\n      // Keep console.error for critical issues\n    }\n  }\n}\n\n/**\n * List of console.log statements found in codebase that need attention\n */\nexport const CONSOLE_LOG_AUDIT = {\n  // Test files (acceptable - for test output)\n  testFiles: [\n    'src/utils/__tests__/bitcoinValidation.test.ts',\n    'src/app/api/__tests__/file-upload-security.test.ts',\n    'src/app/api/__tests__/profile-security-enhanced.test.ts',\n    'src/app/api/__tests__/profile-security.test.ts',\n    'src/app/api/__tests__/funding-security.test.ts',\n    'src/services/performance/performance-test.ts'\n  ],\n\n  // Development utilities (acceptable - for development)\n  devUtilities: [\n    'src/utils/dev-seed.ts',\n    'src/utils/debugUtils.ts',\n    'scripts/cleanup-branches.js',\n    'scripts/fix-profiles-schema.js',\n    'scripts/get_current_datetime.js',\n    'scripts/performance-check.js'\n  ],\n\n  // Production code (NEEDS FIXING)\n  productionCode: [\n    'src/components/AuthProvider.tsx',\n    'src/app/layout.tsx',\n    'src/app/auth/signout/route.ts',\n    'src/utils/monitoring.ts',\n    'src/utils/migrateLegacyDrafts.ts',\n    'supabase/functions/cors-proxy/index.ts'\n  ],\n\n  // Security assessment\n  securityRisk: {\n    high: [\n      'src/app/auth/signout/route.ts' // Auth-related logging\n    ],\n    medium: [\n      'src/components/AuthProvider.tsx', // User state logging\n      'src/app/layout.tsx' // Session logging\n    ],\n    low: [\n      'src/utils/monitoring.ts', // Already commented\n      'src/utils/migrateLegacyDrafts.ts', // Migration utility\n      'supabase/functions/cors-proxy/index.ts' // Edge function\n    ]\n  }\n}\n\n/**\n * Clean up console.log statements in production code\n */\nexport function auditConsoleUsage(): {\n  totalFound: number\n  productionRisk: number\n  highRisk: number\n  recommendations: string[]\n} {\n  const { productionCode, securityRisk } = CONSOLE_LOG_AUDIT\n  \n  const recommendations = [\n    'Replace console.log with logger.info() in production code',\n    'Remove sensitive data logging in authentication flows',\n    'Use conditional logging based on NODE_ENV',\n    'Implement proper log levels (info, warn, error)',\n    'Add log sanitization for user data',\n    'Configure log retention policies for production'\n  ]\n\n  return {\n    totalFound: productionCode.length,\n    productionRisk: productionCode.length,\n    highRisk: securityRisk.high.length,\n    recommendations\n  }\n}\n\n/**\n * Security-safe console replacement for specific use cases\n */\nexport const SafeConsole = {\n  /**\n   * Development-only logging\n   */\n  dev: (...args: any[]) => {\n    if (process.env.NODE_ENV === 'development') {\n      console.log('[DEV]', ...args)\n    }\n  },\n\n  /**\n   * Performance logging (safe for production)\n   */\n  perf: (message: string, data?: any) => {\n    logger.info(`Performance: ${message}`, data, 'Performance')\n  },\n\n  /**\n   * Security event logging (always use proper logger)\n   */\n  security: (message: string, data?: any) => {\n    logger.warn(`Security: ${message}`, data, 'Security')\n  },\n\n  /**\n   * Audit trail logging (always use proper logger)\n   */\n  audit: (message: string, data?: any) => {\n    logger.info(`Audit: ${message}`, data, 'Audit')\n  }\n}\n\n// Initialize production console replacement\nif (typeof window === 'undefined') {\n  // Server-side only\n  ProductionConsole.initialize()\n} "],"mappings":";;AAAA;;;;;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAA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","ignoreList":[]}