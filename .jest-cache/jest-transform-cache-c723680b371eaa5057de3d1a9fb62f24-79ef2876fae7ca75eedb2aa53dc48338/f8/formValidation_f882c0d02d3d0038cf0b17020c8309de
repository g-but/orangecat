fe8e102b9523329f32297310916ed810
"use strict";

/**
 * Reusable form validation utilities
 * Consolidates validation logic from API routes and components
 */
/* istanbul ignore next */
function cov_2ltrpuqpkj() {
  var path = "/home/g/dev/orangecat/src/utils/formValidation.ts";
  var hash = "b9ffd3f6a0728c8d9ce679d6b053b91d2512bb08";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/utils/formValidation.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 72
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "3": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 42
        }
      },
      "4": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 48
        }
      },
      "5": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 36
        }
      },
      "6": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 54
        }
      },
      "7": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "8": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 32
        }
      },
      "9": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 40
        }
      },
      "10": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 64
        }
      },
      "11": {
        start: {
          line: 21,
          column: 81
        },
        end: {
          line: 21,
          column: 88
        }
      },
      "12": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "13": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 27,
          column: 10
        }
      },
      "14": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "15": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 31
        }
      },
      "16": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 33,
          column: 37
        }
      },
      "17": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "18": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "19": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "20": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 45,
          column: 10
        }
      },
      "21": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "22": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 52,
          column: 10
        }
      },
      "23": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "24": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 59,
          column: 10
        }
      },
      "25": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 27
        }
      },
      "26": {
        start: {
          line: 69,
          column: 56
        },
        end: {
          line: 69,
          column: 79
        }
      },
      "27": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "28": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 63
        }
      },
      "29": {
        start: {
          line: 73,
          column: 19
        },
        end: {
          line: 73,
          column: 58
        }
      },
      "30": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 77,
          column: 6
        }
      },
      "31": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 88,
          column: 7
        }
      },
      "32": {
        start: {
          line: 94,
          column: 25
        },
        end: {
          line: 94,
          column: 53
        }
      },
      "33": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 109,
          column: 7
        }
      },
      "34": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 101,
          column: 29
        }
      },
      "35": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 29
        }
      },
      "36": {
        start: {
          line: 102,
          column: 40
        },
        end: {
          line: 102,
          column: 56
        }
      },
      "37": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 104,
          column: 29
        }
      },
      "38": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 29
        }
      },
      "39": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 106,
          column: 29
        }
      },
      "40": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 29
        }
      },
      "41": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 24
        }
      },
      "42": {
        start: {
          line: 117,
          column: 62
        },
        end: {
          line: 117,
          column: 85
        }
      },
      "43": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "44": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 31
        }
      },
      "45": {
        start: {
          line: 121,
          column: 19
        },
        end: {
          line: 121,
          column: 57
        }
      },
      "46": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 125,
          column: 6
        }
      },
      "47": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 140,
          column: 7
        }
      },
      "48": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 137,
          column: 29
        }
      },
      "49": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 29
        }
      },
      "50": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 24
        }
      },
      "51": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "52": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 31
        }
      },
      "53": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 165,
          column: 5
        }
      },
      "54": {
        start: {
          line: 150,
          column: 23
        },
        end: {
          line: 150,
          column: 35
        }
      },
      "55": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "56": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 156,
          column: 14
        }
      },
      "57": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 31
        }
      },
      "58": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 164,
          column: 10
        }
      },
      "59": {
        start: {
          line: 171,
          column: 19
        },
        end: {
          line: 171,
          column: 21
        }
      },
      "60": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 20
        }
      },
      "61": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "62": {
        start: {
          line: 174,
          column: 23
        },
        end: {
          line: 174,
          column: 39
        }
      },
      "63": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "64": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 45
        }
      },
      "65": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 26
        }
      },
      "66": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 180,
          column: 29
        }
      },
      "67": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 197,
          column: 6
        }
      },
      "68": {
        start: {
          line: 187,
          column: 23
        },
        end: {
          line: 187,
          column: 25
        }
      },
      "69": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 188,
          column: 24
        }
      },
      "70": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "71": {
        start: {
          line: 190,
          column: 27
        },
        end: {
          line: 190,
          column: 49
        }
      },
      "72": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "73": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 45
        }
      },
      "74": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 30
        }
      },
      "75": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 33
        }
      },
      "76": {
        start: {
          line: 202,
          column: 0
        },
        end: {
          line: 208,
          column: 2
        }
      },
      "77": {
        start: {
          line: 209,
          column: 0
        },
        end: {
          line: 211,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "validateField",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 22
          }
        },
        loc: {
          start: {
            line: 20,
            column: 55
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 20
      },
      "1": {
        name: "isValidUsername",
        decl: {
          start: {
            line: 67,
            column: 9
          },
          end: {
            line: 67,
            column: 24
          }
        },
        loc: {
          start: {
            line: 67,
            column: 35
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 67
      },
      "2": {
        name: "isValidDisplayName",
        decl: {
          start: {
            line: 82,
            column: 9
          },
          end: {
            line: 82,
            column: 27
          }
        },
        loc: {
          start: {
            line: 82,
            column: 41
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 82
      },
      "3": {
        name: "isValidEmail",
        decl: {
          start: {
            line: 93,
            column: 9
          },
          end: {
            line: 93,
            column: 21
          }
        },
        loc: {
          start: {
            line: 93,
            column: 29
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 93
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 98,
            column: 25
          },
          end: {
            line: 98,
            column: 26
          }
        },
        loc: {
          start: {
            line: 98,
            column: 36
          },
          end: {
            line: 108,
            column: 9
          }
        },
        line: 98
      },
      "5": {
        name: "isValidBitcoinAddress",
        decl: {
          start: {
            line: 115,
            column: 9
          },
          end: {
            line: 115,
            column: 30
          }
        },
        loc: {
          start: {
            line: 115,
            column: 40
          },
          end: {
            line: 126,
            column: 1
          }
        },
        line: 115
      },
      "6": {
        name: "isValidBio",
        decl: {
          start: {
            line: 130,
            column: 9
          },
          end: {
            line: 130,
            column: 19
          }
        },
        loc: {
          start: {
            line: 130,
            column: 25
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 130
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 134,
            column: 25
          },
          end: {
            line: 134,
            column: 26
          }
        },
        loc: {
          start: {
            line: 134,
            column: 36
          },
          end: {
            line: 139,
            column: 9
          }
        },
        line: 134
      },
      "8": {
        name: "isValidUrl",
        decl: {
          start: {
            line: 145,
            column: 9
          },
          end: {
            line: 145,
            column: 19
          }
        },
        loc: {
          start: {
            line: 145,
            column: 25
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 145
      },
      "9": {
        name: "validateFields",
        decl: {
          start: {
            line: 170,
            column: 9
          },
          end: {
            line: 170,
            column: 23
          }
        },
        loc: {
          start: {
            line: 170,
            column: 32
          },
          end: {
            line: 181,
            column: 1
          }
        },
        line: 170
      },
      "10": {
        name: "createValidationMiddleware",
        decl: {
          start: {
            line: 185,
            column: 9
          },
          end: {
            line: 185,
            column: 35
          }
        },
        loc: {
          start: {
            line: 185,
            column: 54
          },
          end: {
            line: 198,
            column: 1
          }
        },
        line: 185
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 186,
            column: 11
          },
          end: {
            line: 186,
            column: 12
          }
        },
        loc: {
          start: {
            line: 186,
            column: 21
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 186
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 41
          },
          end: {
            line: 20,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 20,
            column: 51
          },
          end: {
            line: 20,
            column: 53
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 21,
            column: 28
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 16
          }
        }, {
          start: {
            line: 23,
            column: 21
          },
          end: {
            line: 23,
            column: 27
          }
        }, {
          start: {
            line: 23,
            column: 31
          },
          end: {
            line: 23,
            column: 56
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 14
          }
        }, {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 30,
            column: 43
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 17
          }
        }, {
          start: {
            line: 35,
            column: 21
          },
          end: {
            line: 35,
            column: 52
          }
        }],
        line: 35
      },
      "8": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "9": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 17
          }
        }, {
          start: {
            line: 41,
            column: 21
          },
          end: {
            line: 41,
            column: 52
          }
        }],
        line: 41
      },
      "10": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "11": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 15
          }
        }, {
          start: {
            line: 48,
            column: 19
          },
          end: {
            line: 48,
            column: 46
          }
        }],
        line: 48
      },
      "12": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "13": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 23
          }
        }, {
          start: {
            line: 55,
            column: 27
          },
          end: {
            line: 55,
            column: 57
          }
        }],
        line: 55
      },
      "14": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "15": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 17
          }
        }, {
          start: {
            line: 70,
            column: 21
          },
          end: {
            line: 70,
            column: 49
          }
        }],
        line: 70
      },
      "16": {
        loc: {
          start: {
            line: 76,
            column: 15
          },
          end: {
            line: 76,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 15
          },
          end: {
            line: 76,
            column: 27
          }
        }, {
          start: {
            line: 76,
            column: 31
          },
          end: {
            line: 76,
            column: 49
          }
        }],
        line: 76
      },
      "17": {
        loc: {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 101,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 101,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "18": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 104,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 104,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "19": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 106,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 106,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "20": {
        loc: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "21": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 118,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 118,
            column: 16
          }
        }, {
          start: {
            line: 118,
            column: 20
          },
          end: {
            line: 118,
            column: 47
          }
        }],
        line: 118
      },
      "22": {
        loc: {
          start: {
            line: 124,
            column: 15
          },
          end: {
            line: 124,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 15
          },
          end: {
            line: 124,
            column: 27
          }
        }, {
          start: {
            line: 124,
            column: 31
          },
          end: {
            line: 124,
            column: 56
          }
        }],
        line: 124
      },
      "23": {
        loc: {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 137,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 137,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "24": {
        loc: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "25": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 146,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 146,
            column: 12
          }
        }, {
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 146,
            column: 39
          }
        }],
        line: 146
      },
      "26": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "27": {
        loc: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "28": {
        loc: {
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 175,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 175,
            column: 25
          }
        }, {
          start: {
            line: 175,
            column: 29
          },
          end: {
            line: 175,
            column: 41
          }
        }],
        line: 175
      },
      "29": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "30": {
        loc: {
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 191,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 191,
            column: 29
          }
        }, {
          start: {
            line: 191,
            column: 33
          },
          end: {
            line: 191,
            column: 45
          }
        }],
        line: 191
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/utils/formValidation.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/utils/formValidation.ts"],
      sourcesContent: ["/**\n * Reusable form validation utilities\n * Consolidates validation logic from API routes and components\n */\n\nexport interface ValidationResult {\n  valid: boolean\n  error?: string\n}\n\nexport interface ValidationOptions {\n  required?: boolean\n  minLength?: number\n  maxLength?: number\n  pattern?: RegExp\n  customValidator?: (value: string) => boolean\n}\n\n/**\n * Generic field validator\n */\nexport function validateField(\n  value: string | undefined | null,\n  fieldName: string,\n  options: ValidationOptions = {}\n): ValidationResult {\n  const {\n    required = false,\n    minLength,\n    maxLength,\n    pattern,\n    customValidator\n  } = options\n\n  // Required check\n  if (required && (!value || value.trim().length === 0)) {\n    return {\n      valid: false,\n      error: `${fieldName} is required`\n    }\n  }\n\n  // If not required and empty, it's valid\n  if (!value || value.trim().length === 0) {\n    return { valid: true }\n  }\n\n  const trimmedValue = value.trim()\n\n  // Length checks\n  if (minLength && trimmedValue.length < minLength) {\n    return {\n      valid: false,\n      error: `${fieldName} must be at least ${minLength} characters`\n    }\n  }\n\n  if (maxLength && trimmedValue.length > maxLength) {\n    return {\n      valid: false,\n      error: `${fieldName} must be no more than ${maxLength} characters`\n    }\n  }\n\n  // Pattern check\n  if (pattern && !pattern.test(trimmedValue)) {\n    return {\n      valid: false,\n      error: `${fieldName} format is invalid`\n    }\n  }\n\n  // Custom validator\n  if (customValidator && !customValidator(trimmedValue)) {\n    return {\n      valid: false,\n      error: `${fieldName} is invalid`\n    }\n  }\n\n  return { valid: true }\n}\n\n/**\n * Username validation - DEPRECATED: Use isValidUsername from utils/validation instead\n * This function is kept for backwards compatibility but delegates to the comprehensive validation\n */\nexport function isValidUsername(username: string | undefined | null): ValidationResult {\n  // Import the comprehensive validation function\n  const { isValidUsername: comprehensiveValidator } = require('./validation');\n\n  if (!username || username.trim().length === 0) {\n    return { valid: false, error: 'Username is required' };\n  }\n\n  const result = comprehensiveValidator(username.trim());\n  return {\n    valid: result.valid,\n    error: result.error || 'Invalid username'\n  };\n}\n\n/**\n * Display name validation\n */\nexport function isValidDisplayName(displayName: string | undefined | null): ValidationResult {\n  return validateField(displayName, 'Display name', {\n    required: true,\n    minLength: 1,\n    maxLength: 50,\n    pattern: /^[a-zA-Z0-9\\s\\-'.]+$/\n  })\n}\n\n/**\n * Email validation\n */\nexport function isValidEmail(email: string | undefined | null): ValidationResult {\n  const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  return validateField(email, 'Email', {\n    required: true,\n    pattern: emailPattern,\n    customValidator: (value) => {\n      // Additional email validation\n      if (value.length > 254) return false\n      const [localPart, domain] = value.split('@')\n      if (localPart.length > 64) return false\n      if (domain.length > 253) return false\n      return true\n    }\n  })\n}\n\n/**\n * Bitcoin address validation - DEPRECATED: Use isValidBitcoinAddress from utils/validation instead\n * This function is kept for backwards compatibility but delegates to the comprehensive validation\n */\nexport function isValidBitcoinAddress(address: string | undefined | null): ValidationResult {\n  // Import the comprehensive validation function\n  const { isValidBitcoinAddress: comprehensiveValidator } = require('./validation');\n\n  if (!address || address.trim().length === 0) {\n    return { valid: true } // Optional field\n  }\n\n  const result = comprehensiveValidator(address.trim());\n  return {\n    valid: result.valid,\n    error: result.error || 'Invalid Bitcoin address'\n  };\n}\n\n/**\n * Bio validation\n */\nexport function isValidBio(bio: string | undefined | null): ValidationResult {\n  return validateField(bio, 'Bio', {\n    required: false,\n    maxLength: 500,\n    customValidator: (value) => {\n      // Check for excessive line breaks\n      if (/\\n{4,}/.test(value)) return false\n      return true\n    }\n  })\n}\n\n/**\n * URL validation\n */\nexport function isValidUrl(url: string | undefined | null): ValidationResult {\n  if (!url || url.trim().length === 0) {\n    return { valid: true } // Optional field\n  }\n\n  try {\n    const urlObj = new URL(url)\n    // Only allow http/https\n    if (!['http:', 'https:'].includes(urlObj.protocol)) {\n      return {\n        valid: false,\n        error: 'URL must use HTTP or HTTPS protocol'\n      }\n    }\n    return { valid: true }\n  } catch {\n    return {\n      valid: false,\n      error: 'Invalid URL format'\n    }\n  }\n}\n\n/**\n * Validate multiple fields and return all errors\n */\nexport function validateFields(\n  fields: Record<string, { value: string | undefined | null; validator: (value: string | undefined | null) => ValidationResult }>\n): { valid: boolean; errors: Record<string, string> } {\n  const errors: Record<string, string> = {}\n  let valid = true\n\n  for (const [fieldName, { value, validator }] of Object.entries(fields)) {\n    const result = validator(value)\n    if (!result.valid && result.error) {\n      errors[fieldName] = result.error\n      valid = false\n    }\n  }\n\n  return { valid, errors }\n}\n\n/**\n * Express middleware for API route validation\n */\nexport function createValidationMiddleware(\n  validationSchema: Record<string, (value: any) => ValidationResult>\n) {\n  return (data: Record<string, any>) => {\n    const errors: Record<string, string> = {}\n    let valid = true\n\n    for (const [field, validator] of Object.entries(validationSchema)) {\n      const result = validator(data[field])\n      if (!result.valid && result.error) {\n        errors[field] = result.error\n        valid = false\n      }\n    }\n\n    return { valid, errors }\n  }\n}\n\n/**\n * Common validation schemas\n */\nexport const profileValidationSchema = {\n  username: isValidUsername,\n  display_name: isValidDisplayName,\n  bio: isValidBio,\n  bitcoin_address: isValidBitcoinAddress,\n  avatar_url: isValidUrl\n}\n\nexport const authValidationSchema = {\n  email: isValidEmail\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b9ffd3f6a0728c8d9ce679d6b053b91d2512bb08"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ltrpuqpkj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ltrpuqpkj();
cov_2ltrpuqpkj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ltrpuqpkj().s[1]++;
exports.authValidationSchema = exports.profileValidationSchema = void 0;
/* istanbul ignore next */
cov_2ltrpuqpkj().s[2]++;
exports.validateField = validateField;
/* istanbul ignore next */
cov_2ltrpuqpkj().s[3]++;
exports.isValidUsername = isValidUsername;
/* istanbul ignore next */
cov_2ltrpuqpkj().s[4]++;
exports.isValidDisplayName = isValidDisplayName;
/* istanbul ignore next */
cov_2ltrpuqpkj().s[5]++;
exports.isValidEmail = isValidEmail;
/* istanbul ignore next */
cov_2ltrpuqpkj().s[6]++;
exports.isValidBitcoinAddress = isValidBitcoinAddress;
/* istanbul ignore next */
cov_2ltrpuqpkj().s[7]++;
exports.isValidBio = isValidBio;
/* istanbul ignore next */
cov_2ltrpuqpkj().s[8]++;
exports.isValidUrl = isValidUrl;
/* istanbul ignore next */
cov_2ltrpuqpkj().s[9]++;
exports.validateFields = validateFields;
/* istanbul ignore next */
cov_2ltrpuqpkj().s[10]++;
exports.createValidationMiddleware = createValidationMiddleware;
/**
 * Generic field validator
 */
function validateField(value, fieldName, options =
/* istanbul ignore next */
(cov_2ltrpuqpkj().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_2ltrpuqpkj().f[0]++;
  const {
    required =
    /* istanbul ignore next */
    (cov_2ltrpuqpkj().b[1][0]++, false),
    minLength,
    maxLength,
    pattern,
    customValidator
  } =
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().s[11]++, options);
  // Required check
  /* istanbul ignore next */
  cov_2ltrpuqpkj().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[3][0]++, required) && (
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[3][1]++, !value) ||
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[3][2]++, value.trim().length === 0))) {
    /* istanbul ignore next */
    cov_2ltrpuqpkj().b[2][0]++;
    cov_2ltrpuqpkj().s[13]++;
    return {
      valid: false,
      error: `${fieldName} is required`
    };
  } else
  /* istanbul ignore next */
  {
    cov_2ltrpuqpkj().b[2][1]++;
  }
  // If not required and empty, it's valid
  cov_2ltrpuqpkj().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[5][0]++, !value) ||
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[5][1]++, value.trim().length === 0)) {
    /* istanbul ignore next */
    cov_2ltrpuqpkj().b[4][0]++;
    cov_2ltrpuqpkj().s[15]++;
    return {
      valid: true
    };
  } else
  /* istanbul ignore next */
  {
    cov_2ltrpuqpkj().b[4][1]++;
  }
  const trimmedValue =
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().s[16]++, value.trim());
  // Length checks
  /* istanbul ignore next */
  cov_2ltrpuqpkj().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[7][0]++, minLength) &&
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[7][1]++, trimmedValue.length < minLength)) {
    /* istanbul ignore next */
    cov_2ltrpuqpkj().b[6][0]++;
    cov_2ltrpuqpkj().s[18]++;
    return {
      valid: false,
      error: `${fieldName} must be at least ${minLength} characters`
    };
  } else
  /* istanbul ignore next */
  {
    cov_2ltrpuqpkj().b[6][1]++;
  }
  cov_2ltrpuqpkj().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[9][0]++, maxLength) &&
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[9][1]++, trimmedValue.length > maxLength)) {
    /* istanbul ignore next */
    cov_2ltrpuqpkj().b[8][0]++;
    cov_2ltrpuqpkj().s[20]++;
    return {
      valid: false,
      error: `${fieldName} must be no more than ${maxLength} characters`
    };
  } else
  /* istanbul ignore next */
  {
    cov_2ltrpuqpkj().b[8][1]++;
  }
  // Pattern check
  cov_2ltrpuqpkj().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[11][0]++, pattern) &&
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[11][1]++, !pattern.test(trimmedValue))) {
    /* istanbul ignore next */
    cov_2ltrpuqpkj().b[10][0]++;
    cov_2ltrpuqpkj().s[22]++;
    return {
      valid: false,
      error: `${fieldName} format is invalid`
    };
  } else
  /* istanbul ignore next */
  {
    cov_2ltrpuqpkj().b[10][1]++;
  }
  // Custom validator
  cov_2ltrpuqpkj().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[13][0]++, customValidator) &&
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[13][1]++, !customValidator(trimmedValue))) {
    /* istanbul ignore next */
    cov_2ltrpuqpkj().b[12][0]++;
    cov_2ltrpuqpkj().s[24]++;
    return {
      valid: false,
      error: `${fieldName} is invalid`
    };
  } else
  /* istanbul ignore next */
  {
    cov_2ltrpuqpkj().b[12][1]++;
  }
  cov_2ltrpuqpkj().s[25]++;
  return {
    valid: true
  };
}
/**
 * Username validation - DEPRECATED: Use isValidUsername from utils/validation instead
 * This function is kept for backwards compatibility but delegates to the comprehensive validation
 */
function isValidUsername(username) {
  /* istanbul ignore next */
  cov_2ltrpuqpkj().f[1]++;
  // Import the comprehensive validation function
  const {
    isValidUsername: comprehensiveValidator
  } =
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().s[26]++, require('./validation'));
  /* istanbul ignore next */
  cov_2ltrpuqpkj().s[27]++;
  if (
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[15][0]++, !username) ||
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[15][1]++, username.trim().length === 0)) {
    /* istanbul ignore next */
    cov_2ltrpuqpkj().b[14][0]++;
    cov_2ltrpuqpkj().s[28]++;
    return {
      valid: false,
      error: 'Username is required'
    };
  } else
  /* istanbul ignore next */
  {
    cov_2ltrpuqpkj().b[14][1]++;
  }
  const result =
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().s[29]++, comprehensiveValidator(username.trim()));
  /* istanbul ignore next */
  cov_2ltrpuqpkj().s[30]++;
  return {
    valid: result.valid,
    error:
    /* istanbul ignore next */
    (cov_2ltrpuqpkj().b[16][0]++, result.error) ||
    /* istanbul ignore next */
    (cov_2ltrpuqpkj().b[16][1]++, 'Invalid username')
  };
}
/**
 * Display name validation
 */
function isValidDisplayName(displayName) {
  /* istanbul ignore next */
  cov_2ltrpuqpkj().f[2]++;
  cov_2ltrpuqpkj().s[31]++;
  return validateField(displayName, 'Display name', {
    required: true,
    minLength: 1,
    maxLength: 50,
    pattern: /^[a-zA-Z0-9\s\-'.]+$/
  });
}
/**
 * Email validation
 */
function isValidEmail(email) {
  /* istanbul ignore next */
  cov_2ltrpuqpkj().f[3]++;
  const emailPattern =
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().s[32]++, /^[^\s@]+@[^\s@]+\.[^\s@]+$/);
  /* istanbul ignore next */
  cov_2ltrpuqpkj().s[33]++;
  return validateField(email, 'Email', {
    required: true,
    pattern: emailPattern,
    customValidator: value => {
      /* istanbul ignore next */
      cov_2ltrpuqpkj().f[4]++;
      cov_2ltrpuqpkj().s[34]++;
      // Additional email validation
      if (value.length > 254) {
        /* istanbul ignore next */
        cov_2ltrpuqpkj().b[17][0]++;
        cov_2ltrpuqpkj().s[35]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2ltrpuqpkj().b[17][1]++;
      }
      const [localPart, domain] =
      /* istanbul ignore next */
      (cov_2ltrpuqpkj().s[36]++, value.split('@'));
      /* istanbul ignore next */
      cov_2ltrpuqpkj().s[37]++;
      if (localPart.length > 64) {
        /* istanbul ignore next */
        cov_2ltrpuqpkj().b[18][0]++;
        cov_2ltrpuqpkj().s[38]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2ltrpuqpkj().b[18][1]++;
      }
      cov_2ltrpuqpkj().s[39]++;
      if (domain.length > 253) {
        /* istanbul ignore next */
        cov_2ltrpuqpkj().b[19][0]++;
        cov_2ltrpuqpkj().s[40]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2ltrpuqpkj().b[19][1]++;
      }
      cov_2ltrpuqpkj().s[41]++;
      return true;
    }
  });
}
/**
 * Bitcoin address validation - DEPRECATED: Use isValidBitcoinAddress from utils/validation instead
 * This function is kept for backwards compatibility but delegates to the comprehensive validation
 */
function isValidBitcoinAddress(address) {
  /* istanbul ignore next */
  cov_2ltrpuqpkj().f[5]++;
  // Import the comprehensive validation function
  const {
    isValidBitcoinAddress: comprehensiveValidator
  } =
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().s[42]++, require('./validation'));
  /* istanbul ignore next */
  cov_2ltrpuqpkj().s[43]++;
  if (
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[21][0]++, !address) ||
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[21][1]++, address.trim().length === 0)) {
    /* istanbul ignore next */
    cov_2ltrpuqpkj().b[20][0]++;
    cov_2ltrpuqpkj().s[44]++;
    return {
      valid: true
    }; // Optional field
  } else
  /* istanbul ignore next */
  {
    cov_2ltrpuqpkj().b[20][1]++;
  }
  const result =
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().s[45]++, comprehensiveValidator(address.trim()));
  /* istanbul ignore next */
  cov_2ltrpuqpkj().s[46]++;
  return {
    valid: result.valid,
    error:
    /* istanbul ignore next */
    (cov_2ltrpuqpkj().b[22][0]++, result.error) ||
    /* istanbul ignore next */
    (cov_2ltrpuqpkj().b[22][1]++, 'Invalid Bitcoin address')
  };
}
/**
 * Bio validation
 */
function isValidBio(bio) {
  /* istanbul ignore next */
  cov_2ltrpuqpkj().f[6]++;
  cov_2ltrpuqpkj().s[47]++;
  return validateField(bio, 'Bio', {
    required: false,
    maxLength: 500,
    customValidator: value => {
      /* istanbul ignore next */
      cov_2ltrpuqpkj().f[7]++;
      cov_2ltrpuqpkj().s[48]++;
      // Check for excessive line breaks
      if (/\n{4,}/.test(value)) {
        /* istanbul ignore next */
        cov_2ltrpuqpkj().b[23][0]++;
        cov_2ltrpuqpkj().s[49]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2ltrpuqpkj().b[23][1]++;
      }
      cov_2ltrpuqpkj().s[50]++;
      return true;
    }
  });
}
/**
 * URL validation
 */
function isValidUrl(url) {
  /* istanbul ignore next */
  cov_2ltrpuqpkj().f[8]++;
  cov_2ltrpuqpkj().s[51]++;
  if (
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[25][0]++, !url) ||
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().b[25][1]++, url.trim().length === 0)) {
    /* istanbul ignore next */
    cov_2ltrpuqpkj().b[24][0]++;
    cov_2ltrpuqpkj().s[52]++;
    return {
      valid: true
    }; // Optional field
  } else
  /* istanbul ignore next */
  {
    cov_2ltrpuqpkj().b[24][1]++;
  }
  cov_2ltrpuqpkj().s[53]++;
  try {
    const urlObj =
    /* istanbul ignore next */
    (cov_2ltrpuqpkj().s[54]++, new URL(url));
    // Only allow http/https
    /* istanbul ignore next */
    cov_2ltrpuqpkj().s[55]++;
    if (!['http:', 'https:'].includes(urlObj.protocol)) {
      /* istanbul ignore next */
      cov_2ltrpuqpkj().b[26][0]++;
      cov_2ltrpuqpkj().s[56]++;
      return {
        valid: false,
        error: 'URL must use HTTP or HTTPS protocol'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2ltrpuqpkj().b[26][1]++;
    }
    cov_2ltrpuqpkj().s[57]++;
    return {
      valid: true
    };
  } catch (_a) {
    /* istanbul ignore next */
    cov_2ltrpuqpkj().s[58]++;
    return {
      valid: false,
      error: 'Invalid URL format'
    };
  }
}
/**
 * Validate multiple fields and return all errors
 */
function validateFields(fields) {
  /* istanbul ignore next */
  cov_2ltrpuqpkj().f[9]++;
  const errors =
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().s[59]++, {});
  let valid =
  /* istanbul ignore next */
  (cov_2ltrpuqpkj().s[60]++, true);
  /* istanbul ignore next */
  cov_2ltrpuqpkj().s[61]++;
  for (const [fieldName, {
    value,
    validator
  }] of Object.entries(fields)) {
    const result =
    /* istanbul ignore next */
    (cov_2ltrpuqpkj().s[62]++, validator(value));
    /* istanbul ignore next */
    cov_2ltrpuqpkj().s[63]++;
    if (
    /* istanbul ignore next */
    (cov_2ltrpuqpkj().b[28][0]++, !result.valid) &&
    /* istanbul ignore next */
    (cov_2ltrpuqpkj().b[28][1]++, result.error)) {
      /* istanbul ignore next */
      cov_2ltrpuqpkj().b[27][0]++;
      cov_2ltrpuqpkj().s[64]++;
      errors[fieldName] = result.error;
      /* istanbul ignore next */
      cov_2ltrpuqpkj().s[65]++;
      valid = false;
    } else
    /* istanbul ignore next */
    {
      cov_2ltrpuqpkj().b[27][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2ltrpuqpkj().s[66]++;
  return {
    valid,
    errors
  };
}
/**
 * Express middleware for API route validation
 */
function createValidationMiddleware(validationSchema) {
  /* istanbul ignore next */
  cov_2ltrpuqpkj().f[10]++;
  cov_2ltrpuqpkj().s[67]++;
  return data => {
    /* istanbul ignore next */
    cov_2ltrpuqpkj().f[11]++;
    const errors =
    /* istanbul ignore next */
    (cov_2ltrpuqpkj().s[68]++, {});
    let valid =
    /* istanbul ignore next */
    (cov_2ltrpuqpkj().s[69]++, true);
    /* istanbul ignore next */
    cov_2ltrpuqpkj().s[70]++;
    for (const [field, validator] of Object.entries(validationSchema)) {
      const result =
      /* istanbul ignore next */
      (cov_2ltrpuqpkj().s[71]++, validator(data[field]));
      /* istanbul ignore next */
      cov_2ltrpuqpkj().s[72]++;
      if (
      /* istanbul ignore next */
      (cov_2ltrpuqpkj().b[30][0]++, !result.valid) &&
      /* istanbul ignore next */
      (cov_2ltrpuqpkj().b[30][1]++, result.error)) {
        /* istanbul ignore next */
        cov_2ltrpuqpkj().b[29][0]++;
        cov_2ltrpuqpkj().s[73]++;
        errors[field] = result.error;
        /* istanbul ignore next */
        cov_2ltrpuqpkj().s[74]++;
        valid = false;
      } else
      /* istanbul ignore next */
      {
        cov_2ltrpuqpkj().b[29][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2ltrpuqpkj().s[75]++;
    return {
      valid,
      errors
    };
  };
}
/**
 * Common validation schemas
 */
/* istanbul ignore next */
cov_2ltrpuqpkj().s[76]++;
exports.profileValidationSchema = {
  username: isValidUsername,
  display_name: isValidDisplayName,
  bio: isValidBio,
  bitcoin_address: isValidBitcoinAddress,
  avatar_url: isValidUrl
};
/* istanbul ignore next */
cov_2ltrpuqpkj().s[77]++;
exports.authValidationSchema = {
  email: isValidEmail
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,