{"file":"/home/g/dev/orangecat/src/components/layout/__tests__/AuthButtons.test.tsx","mappings":"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","names":[],"sources":["/home/g/dev/orangecat/src/components/layout/__tests__/AuthButtons.test.tsx"],"sourcesContent":["/**\n * AuthButtons Component Tests\n * Testing critical authentication UI component for the Bitcoin platform\n */\n\nimport React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport AuthButtons from '../AuthButtons';\nimport { useAuth } from '@/hooks/useAuth';\n\n// Mock useAuth hook\njest.mock('@/hooks/useAuth', () => ({\n  useAuth: jest.fn()\n}));\n\n// Mock next/link\njest.mock('next/link', () => {\n  return function MockLink({ children, href, className }) {\n    return <a href={href} className={className}>{children}</a>;\n  };\n});\n\n// Mock Button component\njest.mock('@/components/ui/Button', () => {\n  return function MockButton({ children, variant, className }) {\n    return <button data-variant={variant} className={className}>{children}</button>;\n  };\n});\n\n// Mock UserProfileDropdown component\njest.mock('@/components/ui/UserProfileDropdown', () => {\n  return function MockUserProfileDropdown({ variant }) {\n    return <div data-testid=\"user-profile-dropdown\" data-variant={variant}>User Profile Dropdown</div>;\n  };\n});\n\n// Mock Lucide React icons\njest.mock('lucide-react', () => ({\n  Loader2: ({ className }) => (\n    <div data-testid=\"loader2-icon\" className={className}>Loading</div>\n  )\n}));\n\nconst mockUseAuth = useAuth as jest.Mock;\n\ndescribe('🔐 AuthButtons Component Tests', () => {\n  beforeEach(() => {\n    mockUseAuth.mockClear();\n  });\n\n  describe('✅ Hydration & Loading States', () => {\n    test('should show hydration loading indicator when not hydrated', () => {\n      mockUseAuth.mockReturnValue({\n        user: null,\n        session: null,\n        isLoading: false,\n        hydrated: false\n      });\n\n      render(<AuthButtons />);\n      \n      const pulseDiv = document.querySelector('.animate-pulse');\n      expect(pulseDiv).toBeInTheDocument();\n      expect(pulseDiv).toHaveClass('w-4', 'h-4', 'bg-gray-200', 'rounded-full', 'animate-pulse');\n    });\n\n    test('should show loading spinner when hydrated but loading', () => {\n      mockUseAuth.mockReturnValue({\n        user: null,\n        session: null,\n        isLoading: true,\n        hydrated: true\n      });\n\n      render(<AuthButtons />);\n      \n      expect(screen.getByTestId('loader2-icon')).toBeInTheDocument();\n      expect(screen.getByTestId('loader2-icon')).toHaveClass('h-5', 'w-5', 'animate-spin', 'text-tiffany-500');\n    });\n\n    test('should apply custom className to hydration indicator', () => {\n      mockUseAuth.mockReturnValue({\n        user: null,\n        session: null,\n        isLoading: false,\n        hydrated: false\n      });\n\n      render(<AuthButtons className=\"custom-class\" />);\n      \n      const container = document.querySelector('.custom-class');\n      expect(container).toBeInTheDocument();\n      expect(container).toHaveClass('flex', 'items-center', 'justify-center', 'custom-class');\n    });\n  });\n\n  describe('🔑 Authenticated User States', () => {\n    test('should render UserProfileDropdown when user is authenticated', () => {\n      mockUseAuth.mockReturnValue({\n        user: { id: '123', email: 'user@example.com' },\n        session: { access_token: 'token' },\n        isLoading: false,\n        hydrated: true\n      });\n\n      render(<AuthButtons />);\n      \n      const dropdown = screen.getByTestId('user-profile-dropdown');\n      expect(dropdown).toBeInTheDocument();\n      expect(dropdown).toHaveAttribute('data-variant', 'advanced');\n    });\n\n    test('should render UserProfileDropdown when only user exists', () => {\n      mockUseAuth.mockReturnValue({\n        user: { id: '123', email: 'user@example.com' },\n        session: null,\n        isLoading: false,\n        hydrated: true\n      });\n\n      render(<AuthButtons />);\n      \n      expect(screen.getByTestId('user-profile-dropdown')).toBeInTheDocument();\n    });\n\n    test('should render UserProfileDropdown when only session exists', () => {\n      mockUseAuth.mockReturnValue({\n        user: null,\n        session: { access_token: 'token', user: { id: '123' } },\n        isLoading: false,\n        hydrated: true\n      });\n\n      render(<AuthButtons />);\n      \n      expect(screen.getByTestId('user-profile-dropdown')).toBeInTheDocument();\n    });\n  });\n\n  describe('🚫 Unauthenticated User States', () => {\n    beforeEach(() => {\n      mockUseAuth.mockReturnValue({\n        user: null,\n        session: null,\n        isLoading: false,\n        hydrated: true\n      });\n    });\n\n    test('should render login and register buttons when not authenticated', () => {\n      render(<AuthButtons />);\n      \n      expect(screen.getByText('Log in')).toBeInTheDocument();\n      expect(screen.getByText('Get Started')).toBeInTheDocument();\n    });\n\n    test('should have correct href attributes for auth buttons', () => {\n      render(<AuthButtons />);\n      \n      const loginLink = screen.getByText('Log in').closest('a');\n      const registerLink = screen.getByText('Get Started').closest('a');\n      \n      expect(loginLink).toHaveAttribute('href', '/auth?mode=login');\n      expect(registerLink).toHaveAttribute('href', '/auth?mode=register');\n    });\n\n    test('should use ghost variant for login button', () => {\n      render(<AuthButtons />);\n      \n      const loginButton = screen.getByText('Log in');\n      expect(loginButton).toHaveAttribute('data-variant', 'ghost');\n    });\n\n    test('should have minimum touch target size for buttons', () => {\n      render(<AuthButtons />);\n      \n      const loginButton = screen.getByText('Log in');\n      const registerButton = screen.getByText('Get Started');\n      \n      expect(loginButton).toHaveClass('min-h-[44px]');\n      expect(registerButton).toHaveClass('min-h-[44px]');\n    });\n  });\n\n  describe('📱 Mobile Navigation Layout', () => {\n    beforeEach(() => {\n      mockUseAuth.mockReturnValue({\n        user: null,\n        session: null,\n        isLoading: false,\n        hydrated: true\n      });\n    });\n\n    test('should detect mobile navigation layout from className', () => {\n      render(<AuthButtons className=\"flex-col mobile-nav\" />);\n      \n      const container = screen.getByText('Log in').closest('div');\n      expect(container).toHaveClass('flex-col', 'space-y-3', 'w-full');\n      expect(container).not.toHaveClass('space-x-4');\n    });\n\n    test('should apply full width styling to links in mobile layout', () => {\n      render(<AuthButtons className=\"flex-col\" />);\n      \n      const loginLink = screen.getByText('Log in').closest('a');\n      const registerLink = screen.getByText('Get Started').closest('a');\n      \n      expect(loginLink).toHaveClass('w-full');\n      expect(registerLink).toHaveClass('w-full');\n    });\n\n    test('should apply full width and center styling to buttons in mobile layout', () => {\n      render(<AuthButtons className=\"flex-col\" />);\n      \n      const loginButton = screen.getByText('Log in');\n      const registerButton = screen.getByText('Get Started');\n      \n      expect(loginButton).toHaveClass('w-full', 'justify-center');\n      expect(registerButton).toHaveClass('w-full', 'justify-center');\n    });\n  });\n\n  describe('🔄 State Transitions', () => {\n    test('should transition from hydration to loading state', () => {\n      const { rerender } = render(<AuthButtons />);\n      \n      mockUseAuth.mockReturnValue({\n        user: null,\n        session: null,\n        isLoading: false,\n        hydrated: false\n      });\n      rerender(<AuthButtons />);\n      \n      const pulseDiv = document.querySelector('.animate-pulse');\n      expect(pulseDiv).toBeInTheDocument();\n      expect(pulseDiv).toHaveClass('animate-pulse');\n      \n      mockUseAuth.mockReturnValue({\n        user: null,\n        session: null,\n        isLoading: true,\n        hydrated: true\n      });\n      rerender(<AuthButtons />);\n      \n      expect(screen.getByTestId('loader2-icon')).toHaveClass('animate-spin');\n    });\n\n    test('should transition from loading to unauthenticated state', () => {\n      const { rerender } = render(<AuthButtons />);\n      \n      mockUseAuth.mockReturnValue({\n        user: null,\n        session: null,\n        isLoading: true,\n        hydrated: true\n      });\n      rerender(<AuthButtons />);\n      \n      expect(screen.getByTestId('loader2-icon')).toBeInTheDocument();\n      \n      mockUseAuth.mockReturnValue({\n        user: null,\n        session: null,\n        isLoading: false,\n        hydrated: true\n      });\n      rerender(<AuthButtons />);\n      \n      expect(screen.getByText('Log in')).toBeInTheDocument();\n      expect(screen.getByText('Get Started')).toBeInTheDocument();\n    });\n\n    test('should transition from unauthenticated to authenticated state', () => {\n      const { rerender } = render(<AuthButtons />);\n      \n      mockUseAuth.mockReturnValue({\n        user: null,\n        session: null,\n        isLoading: false,\n        hydrated: true\n      });\n      rerender(<AuthButtons />);\n      \n      expect(screen.getByText('Log in')).toBeInTheDocument();\n      \n      mockUseAuth.mockReturnValue({\n        user: { id: '123', email: 'user@example.com' },\n        session: { access_token: 'token' },\n        isLoading: false,\n        hydrated: true\n      });\n      rerender(<AuthButtons />);\n      \n      expect(screen.getByTestId('user-profile-dropdown')).toBeInTheDocument();\n      expect(screen.queryByText('Log in')).not.toBeInTheDocument();\n    });\n  });\n\n  describe('♿ Accessibility', () => {\n    beforeEach(() => {\n      mockUseAuth.mockReturnValue({\n        user: null,\n        session: null,\n        isLoading: false,\n        hydrated: true\n      });\n    });\n\n    test('should have accessible button text', () => {\n      render(<AuthButtons />);\n      \n      expect(screen.getByRole('button', { name: 'Log in' })).toBeInTheDocument();\n      expect(screen.getByRole('button', { name: 'Get Started' })).toBeInTheDocument();\n    });\n\n    test('should have proper link semantics', () => {\n      render(<AuthButtons />);\n      \n      const loginLink = screen.getByRole('link', { name: 'Log in' });\n      const registerLink = screen.getByRole('link', { name: 'Get Started' });\n      \n      expect(loginLink).toHaveAttribute('href', '/auth?mode=login');\n      expect(registerLink).toHaveAttribute('href', '/auth?mode=register');\n    });\n\n    test('should maintain minimum touch target sizes', () => {\n      render(<AuthButtons />);\n      \n      const loginButton = screen.getByText('Log in');\n      const registerButton = screen.getByText('Get Started');\n      \n      expect(loginButton).toHaveClass('min-h-[44px]');\n      expect(registerButton).toHaveClass('min-h-[44px]');\n    });\n  });\n\n  describe('🔧 Edge Cases & Error Handling', () => {\n    test('should handle undefined auth hook return', () => {\n      mockUseAuth.mockReturnValue({\n        user: null,\n        session: null,\n        isLoading: false,\n        hydrated: true\n      });\n      \n      expect(() => render(<AuthButtons />)).not.toThrow();\n    });\n\n    test('should handle empty auth hook return', () => {\n      mockUseAuth.mockReturnValue({});\n      \n      expect(() => render(<AuthButtons />)).not.toThrow();\n    });\n\n    test('should handle partial auth state', () => {\n      mockUseAuth.mockReturnValue({\n        user: null,\n        session: null,\n      });\n      \n      expect(() => render(<AuthButtons />)).not.toThrow();\n    });\n\n    test('should handle className edge cases', () => {\n      const edgeCases = ['', '   ', 'flex-col-something', 'not-flex-col'];\n      \n      edgeCases.forEach(className => {\n        mockUseAuth.mockReturnValue({\n          user: null,\n          session: null,\n          isLoading: false,\n          hydrated: true\n        });\n        \n        const { unmount } = render(<AuthButtons className={className} />);\n        expect(screen.getByText('Log in')).toBeInTheDocument();\n        unmount();\n      });\n    });\n  });\n});\n"],"version":3}