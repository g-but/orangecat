8640113515c372dc09681fc57b2520f7
"use strict";

/**
 * PERFORMANCE TEST SUITE
 *
 * Comprehensive testing for Option B - Performance Optimization
 * Tests all performance improvements: bundle size, lazy loading, database optimization
 *
 * Created: 2025-01-14
 * Last Modified: 2025-01-14
 * Last Modified Summary: Performance validation for Option B completion
 */
/* istanbul ignore next */
function cov_nngj7xnje() {
  var path = "/home/g/dev/orangecat/src/services/performance/performance-test.ts";
  var hash = "df56aad1656eb417b3390f4eef1aaaa0fe8e687f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/services/performance/performance-test.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 22
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "1": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 33
        }
      },
      "2": {
        start: {
          line: 13,
          column: 26
        },
        end: {
          line: 13,
          column: 33
        }
      },
      "3": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 52
        }
      },
      "4": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 5
        }
      },
      "5": {
        start: {
          line: 16,
          column: 6
        },
        end: {
          line: 16,
          column: 68
        }
      },
      "6": {
        start: {
          line: 16,
          column: 51
        },
        end: {
          line: 16,
          column: 63
        }
      },
      "7": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 39
        }
      },
      "8": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "9": {
        start: {
          line: 20,
          column: 26
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "10": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 17
        }
      },
      "11": {
        start: {
          line: 23,
          column: 25
        },
        end: {
          line: 27,
          column: 2
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 72
        }
      },
      "13": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 21
        }
      },
      "14": {
        start: {
          line: 28,
          column: 19
        },
        end: {
          line: 44,
          column: 4
        }
      },
      "15": {
        start: {
          line: 29,
          column: 18
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "16": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "17": {
        start: {
          line: 31,
          column: 21
        },
        end: {
          line: 31,
          column: 23
        }
      },
      "18": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 95
        }
      },
      "19": {
        start: {
          line: 32,
          column: 29
        },
        end: {
          line: 32,
          column: 95
        }
      },
      "20": {
        start: {
          line: 32,
          column: 77
        },
        end: {
          line: 32,
          column: 95
        }
      },
      "21": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 22
        }
      },
      "22": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 26
        }
      },
      "23": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 43,
          column: 6
        }
      },
      "24": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 46
        }
      },
      "25": {
        start: {
          line: 38,
          column: 35
        },
        end: {
          line: 38,
          column: 46
        }
      },
      "26": {
        start: {
          line: 39,
          column: 21
        },
        end: {
          line: 39,
          column: 23
        }
      },
      "27": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 137
        }
      },
      "28": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 137
        }
      },
      "29": {
        start: {
          line: 40,
          column: 38
        },
        end: {
          line: 40,
          column: 50
        }
      },
      "30": {
        start: {
          line: 40,
          column: 56
        },
        end: {
          line: 40,
          column: 57
        }
      },
      "31": {
        start: {
          line: 40,
          column: 78
        },
        end: {
          line: 40,
          column: 137
        }
      },
      "32": {
        start: {
          line: 40,
          column: 102
        },
        end: {
          line: 40,
          column: 137
        }
      },
      "33": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 40
        }
      },
      "34": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 22
        }
      },
      "35": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 62
        }
      },
      "36": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 46,
          column: 50
        }
      },
      "37": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 47,
          column: 50
        }
      },
      "38": {
        start: {
          line: 48,
          column: 29
        },
        end: {
          line: 48,
          column: 60
        }
      },
      "39": {
        start: {
          line: 49,
          column: 27
        },
        end: {
          line: 49,
          column: 61
        }
      },
      "40": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 22
        }
      },
      "41": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "42": {
        start: {
          line: 55,
          column: 26
        },
        end: {
          line: 55,
          column: 43
        }
      },
      "43": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 60,
          column: 11
        }
      },
      "44": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 67
        }
      },
      "45": {
        start: {
          line: 58,
          column: 41
        },
        end: {
          line: 58,
          column: 65
        }
      },
      "46": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 59
        }
      },
      "47": {
        start: {
          line: 61,
          column: 30
        },
        end: {
          line: 61,
          column: 59
        }
      },
      "48": {
        start: {
          line: 63,
          column: 31
        },
        end: {
          line: 63,
          column: 48
        }
      },
      "49": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 67,
          column: 11
        }
      },
      "50": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 67
        }
      },
      "51": {
        start: {
          line: 65,
          column: 41
        },
        end: {
          line: 65,
          column: 65
        }
      },
      "52": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 59
        }
      },
      "53": {
        start: {
          line: 68,
          column: 30
        },
        end: {
          line: 68,
          column: 64
        }
      },
      "54": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "55": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 82,
          column: 11
        }
      },
      "56": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "57": {
        start: {
          line: 86,
          column: 26
        },
        end: {
          line: 86,
          column: 43
        }
      },
      "58": {
        start: {
          line: 88,
          column: 25
        },
        end: {
          line: 91,
          column: 32
        }
      },
      "59": {
        start: {
          line: 88,
          column: 57
        },
        end: {
          line: 91,
          column: 31
        }
      },
      "60": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 66
        }
      },
      "61": {
        start: {
          line: 89,
          column: 41
        },
        end: {
          line: 89,
          column: 64
        }
      },
      "62": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 65
        }
      },
      "63": {
        start: {
          line: 92,
          column: 30
        },
        end: {
          line: 92,
          column: 57
        }
      },
      "64": {
        start: {
          line: 93,
          column: 25
        },
        end: {
          line: 93,
          column: 54
        }
      },
      "65": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "66": {
        start: {
          line: 98,
          column: 64
        },
        end: {
          line: 98,
          column: 87
        }
      },
      "67": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 107,
          column: 11
        }
      },
      "68": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 141,
          column: 5
        }
      },
      "69": {
        start: {
          line: 111,
          column: 26
        },
        end: {
          line: 111,
          column: 43
        }
      },
      "70": {
        start: {
          line: 112,
          column: 32
        },
        end: {
          line: 125,
          column: 10
        }
      },
      "71": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 70
        }
      },
      "72": {
        start: {
          line: 114,
          column: 45
        },
        end: {
          line: 114,
          column: 68
        }
      },
      "73": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 45
        }
      },
      "74": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 70
        }
      },
      "75": {
        start: {
          line: 118,
          column: 45
        },
        end: {
          line: 118,
          column: 68
        }
      },
      "76": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 45
        }
      },
      "77": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 70
        }
      },
      "78": {
        start: {
          line: 122,
          column: 45
        },
        end: {
          line: 122,
          column: 68
        }
      },
      "79": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 45
        }
      },
      "80": {
        start: {
          line: 126,
          column: 25
        },
        end: {
          line: 126,
          column: 54
        }
      },
      "81": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 132,
          column: 11
        }
      },
      "82": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "83": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 142,
          column: 19
        }
      },
      "84": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 146,
          column: 22
        }
      },
      "85": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "86": {
        start: {
          line: 149,
          column: 26
        },
        end: {
          line: 149,
          column: 43
        }
      },
      "87": {
        start: {
          line: 151,
          column: 27
        },
        end: {
          line: 151,
          column: 90
        }
      },
      "88": {
        start: {
          line: 152,
          column: 30
        },
        end: {
          line: 152,
          column: 59
        }
      },
      "89": {
        start: {
          line: 154,
          column: 31
        },
        end: {
          line: 154,
          column: 48
        }
      },
      "90": {
        start: {
          line: 155,
          column: 33
        },
        end: {
          line: 155,
          column: 96
        }
      },
      "91": {
        start: {
          line: 156,
          column: 30
        },
        end: {
          line: 156,
          column: 64
        }
      },
      "92": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 162,
          column: 11
        }
      },
      "93": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 170,
          column: 11
        }
      },
      "94": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 197,
          column: 5
        }
      },
      "95": {
        start: {
          line: 174,
          column: 26
        },
        end: {
          line: 174,
          column: 43
        }
      },
      "96": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 53
        }
      },
      "97": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 63
        }
      },
      "98": {
        start: {
          line: 178,
          column: 37
        },
        end: {
          line: 178,
          column: 61
        }
      },
      "99": {
        start: {
          line: 180,
          column: 30
        },
        end: {
          line: 180,
          column: 47
        }
      },
      "100": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 56
        }
      },
      "101": {
        start: {
          line: 182,
          column: 25
        },
        end: {
          line: 182,
          column: 58
        }
      },
      "102": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 188,
          column: 11
        }
      },
      "103": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 196,
          column: 11
        }
      },
      "104": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 198,
          column: 19
        }
      },
      "105": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 203,
          column: 22
        }
      },
      "106": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "107": {
        start: {
          line: 206,
          column: 26
        },
        end: {
          line: 206,
          column: 43
        }
      },
      "108": {
        start: {
          line: 207,
          column: 30
        },
        end: {
          line: 207,
          column: 117
        }
      },
      "109": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 56
        }
      },
      "110": {
        start: {
          line: 210,
          column: 32
        },
        end: {
          line: 210,
          column: 119
        }
      },
      "111": {
        start: {
          line: 211,
          column: 31
        },
        end: {
          line: 211,
          column: 62
        }
      },
      "112": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 217,
          column: 11
        }
      },
      "113": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 225,
          column: 11
        }
      },
      "114": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 246,
          column: 5
        }
      },
      "115": {
        start: {
          line: 229,
          column: 26
        },
        end: {
          line: 229,
          column: 43
        }
      },
      "116": {
        start: {
          line: 231,
          column: 30
        },
        end: {
          line: 231,
          column: 109
        }
      },
      "117": {
        start: {
          line: 231,
          column: 65
        },
        end: {
          line: 231,
          column: 108
        }
      },
      "118": {
        start: {
          line: 232,
          column: 25
        },
        end: {
          line: 232,
          column: 54
        }
      },
      "119": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 237,
          column: 11
        }
      },
      "120": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 245,
          column: 11
        }
      },
      "121": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 247,
          column: 19
        }
      },
      "122": {
        start: {
          line: 253,
          column: 27
        },
        end: {
          line: 253,
          column: 44
        }
      },
      "123": {
        start: {
          line: 255,
          column: 59
        },
        end: {
          line: 259,
          column: 6
        }
      },
      "124": {
        start: {
          line: 260,
          column: 26
        },
        end: {
          line: 260,
          column: 60
        }
      },
      "125": {
        start: {
          line: 262,
          column: 21
        },
        end: {
          line: 262,
          column: 76
        }
      },
      "126": {
        start: {
          line: 263,
          column: 24
        },
        end: {
          line: 263,
          column: 62
        }
      },
      "127": {
        start: {
          line: 263,
          column: 45
        },
        end: {
          line: 263,
          column: 54
        }
      },
      "128": {
        start: {
          line: 264,
          column: 24
        },
        end: {
          line: 264,
          column: 53
        }
      },
      "129": {
        start: {
          line: 265,
          column: 22
        },
        end: {
          line: 265,
          column: 61
        }
      },
      "130": {
        start: {
          line: 265,
          column: 43
        },
        end: {
          line: 265,
          column: 53
        }
      },
      "131": {
        start: {
          line: 266,
          column: 26
        },
        end: {
          line: 266,
          column: 53
        }
      },
      "132": {
        start: {
          line: 268,
          column: 29
        },
        end: {
          line: 268,
          column: 83
        }
      },
      "133": {
        start: {
          line: 269,
          column: 20
        },
        end: {
          line: 281,
          column: 5
        }
      },
      "134": {
        start: {
          line: 279,
          column: 60
        },
        end: {
          line: 279,
          column: 102
        }
      },
      "135": {
        start: {
          line: 290,
          column: 4
        },
        end: {
          line: 297,
          column: 7
        }
      },
      "136": {
        start: {
          line: 291,
          column: 23
        },
        end: {
          line: 291,
          column: 47
        }
      },
      "137": {
        start: {
          line: 292,
          column: 28
        },
        end: {
          line: 292,
          column: 52
        }
      },
      "138": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 296,
          column: 9
        }
      },
      "139": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 298,
          column: 19
        }
      },
      "140": {
        start: {
          line: 302,
          column: 18
        },
        end: {
          line: 302,
          column: 72
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 74
          },
          end: {
            line: 12,
            column: 75
          }
        },
        loc: {
          start: {
            line: 12,
            column: 96
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 38
          },
          end: {
            line: 16,
            column: 39
          }
        },
        loc: {
          start: {
            line: 16,
            column: 49
          },
          end: {
            line: 16,
            column: 65
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 6
          },
          end: {
            line: 19,
            column: 7
          }
        },
        loc: {
          start: {
            line: 19,
            column: 28
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 80
          },
          end: {
            line: 23,
            column: 81
          }
        },
        loc: {
          start: {
            line: 23,
            column: 95
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 5
          },
          end: {
            line: 25,
            column: 6
          }
        },
        loc: {
          start: {
            line: 25,
            column: 20
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 28,
            column: 51
          },
          end: {
            line: 28,
            column: 52
          }
        },
        loc: {
          start: {
            line: 28,
            column: 63
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 28
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 29,
            column: 18
          },
          end: {
            line: 29,
            column: 19
          }
        },
        loc: {
          start: {
            line: 29,
            column: 30
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 29
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 48
          },
          end: {
            line: 30,
            column: 49
          }
        },
        loc: {
          start: {
            line: 30,
            column: 61
          },
          end: {
            line: 34,
            column: 9
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 37,
            column: 11
          },
          end: {
            line: 37,
            column: 12
          }
        },
        loc: {
          start: {
            line: 37,
            column: 26
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 37
      },
      "9": {
        name: "testDatabaseOptimization",
        decl: {
          start: {
            line: 51,
            column: 15
          },
          end: {
            line: 51,
            column: 39
          }
        },
        loc: {
          start: {
            line: 51,
            column: 42
          },
          end: {
            line: 143,
            column: 1
          }
        },
        line: 51
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 57,
            column: 76
          },
          end: {
            line: 57,
            column: 77
          }
        },
        loc: {
          start: {
            line: 57,
            column: 88
          },
          end: {
            line: 60,
            column: 9
          }
        },
        line: 57
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 58,
            column: 30
          },
          end: {
            line: 58,
            column: 31
          }
        },
        loc: {
          start: {
            line: 58,
            column: 41
          },
          end: {
            line: 58,
            column: 65
          }
        },
        line: 58
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 64,
            column: 76
          },
          end: {
            line: 64,
            column: 77
          }
        },
        loc: {
          start: {
            line: 64,
            column: 88
          },
          end: {
            line: 67,
            column: 9
          }
        },
        line: 64
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 65,
            column: 31
          }
        },
        loc: {
          start: {
            line: 65,
            column: 41
          },
          end: {
            line: 65,
            column: 65
          }
        },
        line: 65
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 88,
            column: 51
          },
          end: {
            line: 88,
            column: 52
          }
        },
        loc: {
          start: {
            line: 88,
            column: 57
          },
          end: {
            line: 91,
            column: 31
          }
        },
        line: 88
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 88,
            column: 119
          },
          end: {
            line: 88,
            column: 120
          }
        },
        loc: {
          start: {
            line: 88,
            column: 131
          },
          end: {
            line: 91,
            column: 9
          }
        },
        line: 88
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 89,
            column: 30
          },
          end: {
            line: 89,
            column: 31
          }
        },
        loc: {
          start: {
            line: 89,
            column: 41
          },
          end: {
            line: 89,
            column: 64
          }
        },
        line: 89
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 98,
            column: 59
          },
          end: {
            line: 98,
            column: 60
          }
        },
        loc: {
          start: {
            line: 98,
            column: 64
          },
          end: {
            line: 98,
            column: 87
          }
        },
        line: 98
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 113,
            column: 20
          },
          end: {
            line: 113,
            column: 21
          }
        },
        loc: {
          start: {
            line: 113,
            column: 32
          },
          end: {
            line: 116,
            column: 13
          }
        },
        line: 113
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 114,
            column: 34
          },
          end: {
            line: 114,
            column: 35
          }
        },
        loc: {
          start: {
            line: 114,
            column: 45
          },
          end: {
            line: 114,
            column: 68
          }
        },
        line: 114
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 117,
            column: 20
          },
          end: {
            line: 117,
            column: 21
          }
        },
        loc: {
          start: {
            line: 117,
            column: 32
          },
          end: {
            line: 120,
            column: 13
          }
        },
        line: 117
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 118,
            column: 34
          },
          end: {
            line: 118,
            column: 35
          }
        },
        loc: {
          start: {
            line: 118,
            column: 45
          },
          end: {
            line: 118,
            column: 68
          }
        },
        line: 118
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 121,
            column: 20
          },
          end: {
            line: 121,
            column: 21
          }
        },
        loc: {
          start: {
            line: 121,
            column: 32
          },
          end: {
            line: 124,
            column: 13
          }
        },
        line: 121
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 122,
            column: 34
          },
          end: {
            line: 122,
            column: 35
          }
        },
        loc: {
          start: {
            line: 122,
            column: 45
          },
          end: {
            line: 122,
            column: 68
          }
        },
        line: 122
      },
      "24": {
        name: "testLazyLoading",
        decl: {
          start: {
            line: 145,
            column: 15
          },
          end: {
            line: 145,
            column: 30
          }
        },
        loc: {
          start: {
            line: 145,
            column: 33
          },
          end: {
            line: 199,
            column: 1
          }
        },
        line: 145
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 178,
            column: 26
          },
          end: {
            line: 178,
            column: 27
          }
        },
        loc: {
          start: {
            line: 178,
            column: 37
          },
          end: {
            line: 178,
            column: 61
          }
        },
        line: 178
      },
      "26": {
        name: "testBundleOptimization",
        decl: {
          start: {
            line: 201,
            column: 15
          },
          end: {
            line: 201,
            column: 37
          }
        },
        loc: {
          start: {
            line: 201,
            column: 40
          },
          end: {
            line: 248,
            column: 1
          }
        },
        line: 201
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 231,
            column: 59
          },
          end: {
            line: 231,
            column: 60
          }
        },
        loc: {
          start: {
            line: 231,
            column: 65
          },
          end: {
            line: 231,
            column: 108
          }
        },
        line: 231
      },
      "28": {
        name: "runPerformanceTests",
        decl: {
          start: {
            line: 250,
            column: 15
          },
          end: {
            line: 250,
            column: 34
          }
        },
        loc: {
          start: {
            line: 250,
            column: 37
          },
          end: {
            line: 299,
            column: 1
          }
        },
        line: 250
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 263,
            column: 40
          },
          end: {
            line: 263,
            column: 41
          }
        },
        loc: {
          start: {
            line: 263,
            column: 45
          },
          end: {
            line: 263,
            column: 54
          }
        },
        line: 263
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 265,
            column: 38
          },
          end: {
            line: 265,
            column: 39
          }
        },
        loc: {
          start: {
            line: 265,
            column: 43
          },
          end: {
            line: 265,
            column: 53
          }
        },
        line: 265
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 279,
            column: 55
          },
          end: {
            line: 279,
            column: 56
          }
        },
        loc: {
          start: {
            line: 279,
            column: 60
          },
          end: {
            line: 279,
            column: 102
          }
        },
        line: 279
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 290,
            column: 21
          },
          end: {
            line: 290,
            column: 22
          }
        },
        loc: {
          start: {
            line: 290,
            column: 29
          },
          end: {
            line: 297,
            column: 5
          }
        },
        line: 290
      },
      "33": {
        name: "logPerformanceStats",
        decl: {
          start: {
            line: 301,
            column: 9
          },
          end: {
            line: 301,
            column: 28
          }
        },
        loc: {
          start: {
            line: 301,
            column: 31
          },
          end: {
            line: 307,
            column: 1
          }
        },
        line: 301
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 22
          },
          end: {
            line: 22,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 12,
            column: 27
          }
        }, {
          start: {
            line: 12,
            column: 31
          },
          end: {
            line: 12,
            column: 51
          }
        }, {
          start: {
            line: 12,
            column: 57
          },
          end: {
            line: 22,
            column: 2
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 12,
            column: 57
          },
          end: {
            line: 22,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 74
          },
          end: {
            line: 19,
            column: 1
          }
        }, {
          start: {
            line: 19,
            column: 6
          },
          end: {
            line: 22,
            column: 1
          }
        }],
        line: 12
      },
      "2": {
        loc: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "3": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "4": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 13
          }
        }, {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 84
          }
        }],
        line: 15
      },
      "5": {
        loc: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 34
          },
          end: {
            line: 15,
            column: 47
          }
        }, {
          start: {
            line: 15,
            column: 50
          },
          end: {
            line: 15,
            column: 84
          }
        }],
        line: 15
      },
      "6": {
        loc: {
          start: {
            line: 15,
            column: 50
          },
          end: {
            line: 15,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 50
          },
          end: {
            line: 15,
            column: 63
          }
        }, {
          start: {
            line: 15,
            column: 67
          },
          end: {
            line: 15,
            column: 84
          }
        }],
        line: 15
      },
      "7": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "8": {
        loc: {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 27,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 26
          },
          end: {
            line: 23,
            column: 30
          }
        }, {
          start: {
            line: 23,
            column: 34
          },
          end: {
            line: 23,
            column: 57
          }
        }, {
          start: {
            line: 23,
            column: 63
          },
          end: {
            line: 27,
            column: 1
          }
        }],
        line: 23
      },
      "9": {
        loc: {
          start: {
            line: 23,
            column: 63
          },
          end: {
            line: 27,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 80
          },
          end: {
            line: 25,
            column: 1
          }
        }, {
          start: {
            line: 25,
            column: 5
          },
          end: {
            line: 27,
            column: 1
          }
        }],
        line: 23
      },
      "10": {
        loc: {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 44,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 20
          },
          end: {
            line: 28,
            column: 24
          }
        }, {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 28,
            column: 45
          }
        }, {
          start: {
            line: 28,
            column: 50
          },
          end: {
            line: 44,
            column: 4
          }
        }],
        line: 28
      },
      "11": {
        loc: {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 30,
            column: 44
          }
        }, {
          start: {
            line: 30,
            column: 48
          },
          end: {
            line: 34,
            column: 9
          }
        }],
        line: 30
      },
      "12": {
        loc: {
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 32,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 32,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "13": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "14": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 15
          }
        }, {
          start: {
            line: 38,
            column: 19
          },
          end: {
            line: 38,
            column: 33
          }
        }],
        line: 38
      },
      "15": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "16": {
        loc: {
          start: {
            line: 40,
            column: 78
          },
          end: {
            line: 40,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 78
          },
          end: {
            line: 40,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "17": {
        loc: {
          start: {
            line: 98,
            column: 21
          },
          end: {
            line: 98,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 21
          },
          end: {
            line: 98,
            column: 35
          }
        }, {
          start: {
            line: 98,
            column: 39
          },
          end: {
            line: 98,
            column: 88
          }
        }],
        line: 98
      },
      "18": {
        loc: {
          start: {
            line: 131,
            column: 21
          },
          end: {
            line: 131,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 21
          },
          end: {
            line: 131,
            column: 34
          }
        }, {
          start: {
            line: 131,
            column: 38
          },
          end: {
            line: 131,
            column: 81
          }
        }],
        line: 131
      },
      "19": {
        loc: {
          start: {
            line: 207,
            column: 30
          },
          end: {
            line: 207,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 31
          },
          end: {
            line: 207,
            column: 111
          }
        }, {
          start: {
            line: 207,
            column: 116
          },
          end: {
            line: 207,
            column: 117
          }
        }],
        line: 207
      },
      "20": {
        loc: {
          start: {
            line: 207,
            column: 31
          },
          end: {
            line: 207,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 207,
            column: 85
          },
          end: {
            line: 207,
            column: 91
          }
        }, {
          start: {
            line: 207,
            column: 94
          },
          end: {
            line: 207,
            column: 111
          }
        }],
        line: 207
      },
      "21": {
        loc: {
          start: {
            line: 207,
            column: 31
          },
          end: {
            line: 207,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 31
          },
          end: {
            line: 207,
            column: 65
          }
        }, {
          start: {
            line: 207,
            column: 69
          },
          end: {
            line: 207,
            column: 82
          }
        }],
        line: 207
      },
      "22": {
        loc: {
          start: {
            line: 210,
            column: 32
          },
          end: {
            line: 210,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 33
          },
          end: {
            line: 210,
            column: 113
          }
        }, {
          start: {
            line: 210,
            column: 118
          },
          end: {
            line: 210,
            column: 119
          }
        }],
        line: 210
      },
      "23": {
        loc: {
          start: {
            line: 210,
            column: 33
          },
          end: {
            line: 210,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 87
          },
          end: {
            line: 210,
            column: 93
          }
        }, {
          start: {
            line: 210,
            column: 96
          },
          end: {
            line: 210,
            column: 113
          }
        }],
        line: 210
      },
      "24": {
        loc: {
          start: {
            line: 210,
            column: 33
          },
          end: {
            line: 210,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 33
          },
          end: {
            line: 210,
            column: 67
          }
        }, {
          start: {
            line: 210,
            column: 71
          },
          end: {
            line: 210,
            column: 84
          }
        }],
        line: 210
      },
      "25": {
        loc: {
          start: {
            line: 236,
            column: 21
          },
          end: {
            line: 236,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 21
          },
          end: {
            line: 236,
            column: 35
          }
        }, {
          start: {
            line: 236,
            column: 39
          },
          end: {
            line: 236,
            column: 78
          }
        }],
        line: 236
      },
      "26": {
        loc: {
          start: {
            line: 279,
            column: 31
          },
          end: {
            line: 279,
            column: 162
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 32
          },
          end: {
            line: 279,
            column: 156
          }
        }, {
          start: {
            line: 279,
            column: 161
          },
          end: {
            line: 279,
            column: 162
          }
        }],
        line: 279
      },
      "27": {
        loc: {
          start: {
            line: 279,
            column: 32
          },
          end: {
            line: 279,
            column: 156
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 279,
            column: 133
          },
          end: {
            line: 279,
            column: 139
          }
        }, {
          start: {
            line: 279,
            column: 142
          },
          end: {
            line: 279,
            column: 156
          }
        }],
        line: 279
      },
      "28": {
        loc: {
          start: {
            line: 279,
            column: 32
          },
          end: {
            line: 279,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 32
          },
          end: {
            line: 279,
            column: 113
          }
        }, {
          start: {
            line: 279,
            column: 117
          },
          end: {
            line: 279,
            column: 130
          }
        }],
        line: 279
      },
      "29": {
        loc: {
          start: {
            line: 291,
            column: 23
          },
          end: {
            line: 291,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 291,
            column: 38
          },
          end: {
            line: 291,
            column: 41
          }
        }, {
          start: {
            line: 291,
            column: 44
          },
          end: {
            line: 291,
            column: 47
          }
        }],
        line: 291
      },
      "30": {
        loc: {
          start: {
            line: 292,
            column: 28
          },
          end: {
            line: 292,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 292,
            column: 44
          },
          end: {
            line: 292,
            column: 47
          }
        }, {
          start: {
            line: 292,
            column: 50
          },
          end: {
            line: 292,
            column: 52
          }
        }],
        line: 292
      },
      "31": {
        loc: {
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 296,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 296,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/services/performance/performance-test.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/services/performance/performance-test.ts"],
      sourcesContent: ["/**\n * PERFORMANCE TEST SUITE\n * \n * Comprehensive testing for Option B - Performance Optimization\n * Tests all performance improvements: bundle size, lazy loading, database optimization\n * \n * Created: 2025-01-14\n * Last Modified: 2025-01-14\n * Last Modified Summary: Performance validation for Option B completion\n */\n\nimport { dbOptimizer, performanceMonitor } from './database-optimizer'\nimport { loadInitiatives, loadInitiative, preloadInitiatives } from '@/data/initiatives-lazy'\n\n// ==================== PERFORMANCE TEST RESULTS ====================\n\ninterface PerformanceTestResult {\n  testName: string\n  duration: number\n  success: boolean\n  cacheHit?: boolean\n  bundleSize?: number\n  memoryUsage?: number\n  error?: string\n}\n\ninterface PerformanceTestSuite {\n  databaseOptimization: PerformanceTestResult[]\n  lazyLoading: PerformanceTestResult[]\n  bundleOptimization: PerformanceTestResult[]\n  overall: {\n    totalTests: number\n    passedTests: number\n    failedTests: number\n    totalDuration: number\n    cacheHitRatio: number\n    memoryImprovement: number\n  }\n}\n\n// ==================== DATABASE OPTIMIZATION TESTS ====================\n\nasync function testDatabaseOptimization(): Promise<PerformanceTestResult[]> {\n  const results: PerformanceTestResult[] = []\n  \n  // Test 1: Query Caching\n  try {\n    const startTime = performance.now()\n    \n    // First call - should hit database\n    await dbOptimizer.optimizedQuery('test:cache', async () => {\n      await new Promise(resolve => setTimeout(resolve, 100)) // Simulate DB call\n      return { data: 'test', timestamp: Date.now() }\n    })\n    \n    const firstCallTime = performance.now() - startTime\n    \n    // Second call - should hit cache\n    const cacheStartTime = performance.now()\n    await dbOptimizer.optimizedQuery('test:cache', async () => {\n      await new Promise(resolve => setTimeout(resolve, 100))\n      return { data: 'test', timestamp: Date.now() }\n    })\n    \n    const cacheCallTime = performance.now() - cacheStartTime\n    \n    results.push({\n      testName: 'Query Caching',\n      duration: firstCallTime + cacheCallTime,\n      success: cacheCallTime < firstCallTime * 0.1, // Cache should be 10x faster\n      cacheHit: cacheCallTime < 10 // Cache hit should be < 10ms\n    })\n  } catch (error) {\n    results.push({\n      testName: 'Query Caching',\n      duration: 0,\n      success: false,\n      error: (error as Error).message\n    })\n  }\n  \n  // Test 2: Request Deduplication\n  try {\n    const startTime = performance.now()\n    \n    // Simultaneous calls - should deduplicate\n    const promises = Array.from({ length: 5 }, () => \n      dbOptimizer.optimizedQuery('test:dedup', async () => {\n        await new Promise(resolve => setTimeout(resolve, 50))\n        return { data: 'dedup-test', timestamp: Date.now() }\n      }, { skipCache: true })\n    )\n    \n    const results_dedup = await Promise.all(promises)\n    const duration = performance.now() - startTime\n    \n    // Should complete faster than 5 individual calls (< 100ms instead of 250ms)\n    results.push({\n      testName: 'Request Deduplication',\n      duration,\n      success: duration < 100 && results_dedup.every(r => r.data === 'dedup-test')\n    })\n  } catch (error) {\n    results.push({\n      testName: 'Request Deduplication',\n      duration: 0,\n      success: false,\n      error: (error as Error).message\n    })\n  }\n  \n  // Test 3: Parallel Query Execution\n  try {\n    const startTime = performance.now()\n    \n    const parallelResults = await dbOptimizer.parallelQueries({\n      query1: async () => {\n        await new Promise(resolve => setTimeout(resolve, 30))\n        return { data: 'parallel1' }\n      },\n      query2: async () => {\n        await new Promise(resolve => setTimeout(resolve, 40))\n        return { data: 'parallel2' }\n      },\n      query3: async () => {\n        await new Promise(resolve => setTimeout(resolve, 50))\n        return { data: 'parallel3' }\n      }\n    })\n    \n    const duration = performance.now() - startTime\n    \n    // Should complete in ~50ms (slowest query) instead of 120ms (sequential)\n    results.push({\n      testName: 'Parallel Query Execution',\n      duration,\n      success: duration < 80 && parallelResults.query1.data === 'parallel1'\n    })\n  } catch (error) {\n    results.push({\n      testName: 'Parallel Query Execution',\n      duration: 0,\n      success: false,\n      error: (error as Error).message\n    })\n  }\n  \n  return results\n}\n\n// ==================== LAZY LOADING TESTS ====================\n\nasync function testLazyLoading(): Promise<PerformanceTestResult[]> {\n  const results: PerformanceTestResult[] = []\n  \n  // Test 1: Lazy Initiative Loading\n  try {\n    const startTime = performance.now()\n    \n    // First load - should actually load the module\n    const initiative = await loadInitiative('demo-initiative')\n    const firstLoadTime = performance.now() - startTime\n    \n    // Second load - should use cache\n    const cacheStartTime = performance.now()\n    const cachedInitiative = await loadInitiative('demo-initiative')\n    const cacheLoadTime = performance.now() - cacheStartTime\n    \n    results.push({\n      testName: 'Lazy Initiative Loading',\n      duration: firstLoadTime + cacheLoadTime,\n      success: cacheLoadTime < firstLoadTime * 0.1, // Cache should be 10x faster\n      cacheHit: cacheLoadTime < 5\n    })\n  } catch (error) {\n    results.push({\n      testName: 'Lazy Initiative Loading',\n      duration: 0,\n      success: false,\n      error: (error as Error).message\n    })\n  }\n  \n  // Test 2: Preloading\n  try {\n    const startTime = performance.now()\n    \n    // Test preloading function\n    preloadInitiatives()\n    \n    // Give it time to preload\n    await new Promise(resolve => setTimeout(resolve, 100))\n    \n    // Now loading should be fast\n    const loadStartTime = performance.now()\n    await loadInitiatives()\n    const loadTime = performance.now() - loadStartTime\n    \n    results.push({\n      testName: 'Initiative Preloading',\n      duration: performance.now() - startTime,\n      success: loadTime < 10, // Should be very fast if preloaded\n      cacheHit: true\n    })\n  } catch (error) {\n    results.push({\n      testName: 'Initiative Preloading',\n      duration: 0,\n      success: false,\n      error: (error as Error).message\n    })\n  }\n  \n  return results\n}\n\n// ==================== BUNDLE OPTIMIZATION TESTS ====================\n\nasync function testBundleOptimization(): Promise<PerformanceTestResult[]> {\n  const results: PerformanceTestResult[] = []\n  \n  // Test 1: Memory Usage\n  try {\n    const startTime = performance.now()\n    const initialMemory = (performance as any).memory?.usedJSHeapSize || 0\n    \n    // Load large data with lazy loading\n    await loadInitiatives()\n    \n    const afterLoadMemory = (performance as any).memory?.usedJSHeapSize || 0\n    const memoryIncrease = afterLoadMemory - initialMemory\n    \n    results.push({\n      testName: 'Memory Usage Optimization',\n      duration: performance.now() - startTime,\n      success: memoryIncrease < 5 * 1024 * 1024, // Should be < 5MB increase\n      memoryUsage: memoryIncrease\n    })\n  } catch (error) {\n    results.push({\n      testName: 'Memory Usage Optimization',\n      duration: 0,\n      success: false,\n      error: (error as Error).message\n    })\n  }\n  \n  // Test 2: Dynamic Import Performance\n  try {\n    const startTime = performance.now()\n    \n    // Test dynamic import performance\n    const dynamicModule = await import('@/data/initiatives')\n    const loadTime = performance.now() - startTime\n    \n    results.push({\n      testName: 'Dynamic Import Performance',\n      duration: loadTime,\n      success: loadTime < 100 && dynamicModule.INITIATIVES !== undefined\n    })\n  } catch (error) {\n    results.push({\n      testName: 'Dynamic Import Performance',\n      duration: 0,\n      success: false,\n      error: (error as Error).message\n    })\n  }\n  \n  return results\n}\n\n// ==================== MAIN PERFORMANCE TEST RUNNER ====================\n\nexport async function runPerformanceTests(): Promise<PerformanceTestSuite> {\n  // REMOVED: console.log statement\n  \n  const suiteStartTime = performance.now()\n  \n  // Run all test categories\n  const [databaseTests, lazyLoadingTests, bundleTests] = await Promise.all([\n    testDatabaseOptimization(),\n    testLazyLoading(),\n    testBundleOptimization()\n  ])\n  \n  const totalDuration = performance.now() - suiteStartTime\n  \n  // Calculate overall statistics\n  const allTests = [...databaseTests, ...lazyLoadingTests, ...bundleTests]\n  const passedTests = allTests.filter(t => t.success).length\n  const failedTests = allTests.length - passedTests\n  const cacheHits = allTests.filter(t => t.cacheHit).length\n  const cacheHitRatio = cacheHits / allTests.length\n  \n  // Get performance monitor stats\n  const performanceStats = dbOptimizer.getPerformanceStats()\n  \n  const results: PerformanceTestSuite = {\n    databaseOptimization: databaseTests,\n    lazyLoading: lazyLoadingTests,\n    bundleOptimization: bundleTests,\n    overall: {\n      totalTests: allTests.length,\n      passedTests,\n      failedTests,\n      totalDuration,\n      cacheHitRatio,\n      memoryImprovement: bundleTests.find(t => t.testName === 'Memory Usage Optimization')?.memoryUsage || 0\n    }\n  }\n  \n  // Log results\n  // REMOVED: console.log statement\n  // REMOVED: console.log statement\n  // REMOVED: console.log statement\n  // REMOVED: console.log statement\n  // REMOVED: console.log statement\n  \n  // Log detailed results\n  // REMOVED: console.log statement\n  allTests.forEach(test => {\n    const status = test.success ? '\u2705' : '\u274C'\n    const cacheStatus = test.cacheHit ? '\u26A1' : ''\n    // REMOVED: console.log statement\n    if (test.error) {\n      // REMOVED: console.log statement\n    }\n  })\n  \n  return results\n}\n\n// ==================== BENCHMARK UTILITIES ====================\n\nexport function logPerformanceStats() {\n  const stats = dbOptimizer.getPerformanceStats()\n  // REMOVED: console.log statement\n  // REMOVED: console.log statement\n  // REMOVED: console.log statement\n  // REMOVED: console.log statement\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "df56aad1656eb417b3390f4eef1aaaa0fe8e687f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_nngj7xnje = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_nngj7xnje();
var __createBinding =
/* istanbul ignore next */
(cov_nngj7xnje().s[0]++,
/* istanbul ignore next */
(cov_nngj7xnje().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_nngj7xnje().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_nngj7xnje().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_nngj7xnje().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_nngj7xnje().f[0]++;
  cov_nngj7xnje().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_nngj7xnje().b[2][0]++;
    cov_nngj7xnje().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_nngj7xnje().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_nngj7xnje().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_nngj7xnje().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_nngj7xnje().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_nngj7xnje().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_nngj7xnje().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_nngj7xnje().b[5][1]++,
  /* istanbul ignore next */
  (cov_nngj7xnje().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_nngj7xnje().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_nngj7xnje().b[3][0]++;
    cov_nngj7xnje().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_nngj7xnje().f[1]++;
        cov_nngj7xnje().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_nngj7xnje().b[3][1]++;
  }
  cov_nngj7xnje().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_nngj7xnje().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_nngj7xnje().f[2]++;
  cov_nngj7xnje().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_nngj7xnje().b[7][0]++;
    cov_nngj7xnje().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_nngj7xnje().b[7][1]++;
  }
  cov_nngj7xnje().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_nngj7xnje().s[11]++,
/* istanbul ignore next */
(cov_nngj7xnje().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_nngj7xnje().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_nngj7xnje().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_nngj7xnje().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_nngj7xnje().f[3]++;
  cov_nngj7xnje().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_nngj7xnje().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_nngj7xnje().f[4]++;
  cov_nngj7xnje().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_nngj7xnje().s[14]++,
/* istanbul ignore next */
(cov_nngj7xnje().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_nngj7xnje().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_nngj7xnje().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_nngj7xnje().f[5]++;
  cov_nngj7xnje().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_nngj7xnje().f[6]++;
    cov_nngj7xnje().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_nngj7xnje().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_nngj7xnje().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_nngj7xnje().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_nngj7xnje().s[17]++, []);
      /* istanbul ignore next */
      cov_nngj7xnje().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_nngj7xnje().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_nngj7xnje().b[12][0]++;
          cov_nngj7xnje().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_nngj7xnje().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_nngj7xnje().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_nngj7xnje().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_nngj7xnje().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_nngj7xnje().f[8]++;
    cov_nngj7xnje().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_nngj7xnje().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_nngj7xnje().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_nngj7xnje().b[13][0]++;
      cov_nngj7xnje().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_nngj7xnje().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[26]++, {});
    /* istanbul ignore next */
    cov_nngj7xnje().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_nngj7xnje().b[15][0]++;
      cov_nngj7xnje().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_nngj7xnje().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_nngj7xnje().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_nngj7xnje().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_nngj7xnje().b[16][0]++;
          cov_nngj7xnje().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_nngj7xnje().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_nngj7xnje().b[15][1]++;
    }
    cov_nngj7xnje().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_nngj7xnje().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_nngj7xnje().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_nngj7xnje().s[36]++;
exports.runPerformanceTests = runPerformanceTests;
/* istanbul ignore next */
cov_nngj7xnje().s[37]++;
exports.logPerformanceStats = logPerformanceStats;
const database_optimizer_1 =
/* istanbul ignore next */
(cov_nngj7xnje().s[38]++, require("./database-optimizer"));
const initiatives_lazy_1 =
/* istanbul ignore next */
(cov_nngj7xnje().s[39]++, require("@/data/initiatives-lazy"));
// ==================== DATABASE OPTIMIZATION TESTS ====================
async function testDatabaseOptimization() {
  /* istanbul ignore next */
  cov_nngj7xnje().f[9]++;
  const results =
  /* istanbul ignore next */
  (cov_nngj7xnje().s[40]++, []);
  // Test 1: Query Caching
  /* istanbul ignore next */
  cov_nngj7xnje().s[41]++;
  try {
    const startTime =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[42]++, performance.now());
    // First call - should hit database
    /* istanbul ignore next */
    cov_nngj7xnje().s[43]++;
    await database_optimizer_1.dbOptimizer.optimizedQuery('test:cache', async () => {
      /* istanbul ignore next */
      cov_nngj7xnje().f[10]++;
      cov_nngj7xnje().s[44]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_nngj7xnje().f[11]++;
        cov_nngj7xnje().s[45]++;
        return setTimeout(resolve, 100);
      }); // Simulate DB call
      /* istanbul ignore next */
      cov_nngj7xnje().s[46]++;
      return {
        data: 'test',
        timestamp: Date.now()
      };
    });
    const firstCallTime =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[47]++, performance.now() - startTime);
    // Second call - should hit cache
    const cacheStartTime =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[48]++, performance.now());
    /* istanbul ignore next */
    cov_nngj7xnje().s[49]++;
    await database_optimizer_1.dbOptimizer.optimizedQuery('test:cache', async () => {
      /* istanbul ignore next */
      cov_nngj7xnje().f[12]++;
      cov_nngj7xnje().s[50]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_nngj7xnje().f[13]++;
        cov_nngj7xnje().s[51]++;
        return setTimeout(resolve, 100);
      });
      /* istanbul ignore next */
      cov_nngj7xnje().s[52]++;
      return {
        data: 'test',
        timestamp: Date.now()
      };
    });
    const cacheCallTime =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[53]++, performance.now() - cacheStartTime);
    /* istanbul ignore next */
    cov_nngj7xnje().s[54]++;
    results.push({
      testName: 'Query Caching',
      duration: firstCallTime + cacheCallTime,
      success: cacheCallTime < firstCallTime * 0.1,
      // Cache should be 10x faster
      cacheHit: cacheCallTime < 10 // Cache hit should be < 10ms
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nngj7xnje().s[55]++;
    results.push({
      testName: 'Query Caching',
      duration: 0,
      success: false,
      error: error.message
    });
  }
  // Test 2: Request Deduplication
  /* istanbul ignore next */
  cov_nngj7xnje().s[56]++;
  try {
    const startTime =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[57]++, performance.now());
    // Simultaneous calls - should deduplicate
    const promises =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[58]++, Array.from({
      length: 5
    }, () => {
      /* istanbul ignore next */
      cov_nngj7xnje().f[14]++;
      cov_nngj7xnje().s[59]++;
      return database_optimizer_1.dbOptimizer.optimizedQuery('test:dedup', async () => {
        /* istanbul ignore next */
        cov_nngj7xnje().f[15]++;
        cov_nngj7xnje().s[60]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_nngj7xnje().f[16]++;
          cov_nngj7xnje().s[61]++;
          return setTimeout(resolve, 50);
        });
        /* istanbul ignore next */
        cov_nngj7xnje().s[62]++;
        return {
          data: 'dedup-test',
          timestamp: Date.now()
        };
      }, {
        skipCache: true
      });
    }));
    const results_dedup =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[63]++, await Promise.all(promises));
    const duration =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[64]++, performance.now() - startTime);
    // Should complete faster than 5 individual calls (< 100ms instead of 250ms)
    /* istanbul ignore next */
    cov_nngj7xnje().s[65]++;
    results.push({
      testName: 'Request Deduplication',
      duration,
      success:
      /* istanbul ignore next */
      (cov_nngj7xnje().b[17][0]++, duration < 100) &&
      /* istanbul ignore next */
      (cov_nngj7xnje().b[17][1]++, results_dedup.every(r => {
        /* istanbul ignore next */
        cov_nngj7xnje().f[17]++;
        cov_nngj7xnje().s[66]++;
        return r.data === 'dedup-test';
      }))
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nngj7xnje().s[67]++;
    results.push({
      testName: 'Request Deduplication',
      duration: 0,
      success: false,
      error: error.message
    });
  }
  // Test 3: Parallel Query Execution
  /* istanbul ignore next */
  cov_nngj7xnje().s[68]++;
  try {
    const startTime =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[69]++, performance.now());
    const parallelResults =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[70]++, await database_optimizer_1.dbOptimizer.parallelQueries({
      query1: async () => {
        /* istanbul ignore next */
        cov_nngj7xnje().f[18]++;
        cov_nngj7xnje().s[71]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_nngj7xnje().f[19]++;
          cov_nngj7xnje().s[72]++;
          return setTimeout(resolve, 30);
        });
        /* istanbul ignore next */
        cov_nngj7xnje().s[73]++;
        return {
          data: 'parallel1'
        };
      },
      query2: async () => {
        /* istanbul ignore next */
        cov_nngj7xnje().f[20]++;
        cov_nngj7xnje().s[74]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_nngj7xnje().f[21]++;
          cov_nngj7xnje().s[75]++;
          return setTimeout(resolve, 40);
        });
        /* istanbul ignore next */
        cov_nngj7xnje().s[76]++;
        return {
          data: 'parallel2'
        };
      },
      query3: async () => {
        /* istanbul ignore next */
        cov_nngj7xnje().f[22]++;
        cov_nngj7xnje().s[77]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_nngj7xnje().f[23]++;
          cov_nngj7xnje().s[78]++;
          return setTimeout(resolve, 50);
        });
        /* istanbul ignore next */
        cov_nngj7xnje().s[79]++;
        return {
          data: 'parallel3'
        };
      }
    }));
    const duration =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[80]++, performance.now() - startTime);
    // Should complete in ~50ms (slowest query) instead of 120ms (sequential)
    /* istanbul ignore next */
    cov_nngj7xnje().s[81]++;
    results.push({
      testName: 'Parallel Query Execution',
      duration,
      success:
      /* istanbul ignore next */
      (cov_nngj7xnje().b[18][0]++, duration < 80) &&
      /* istanbul ignore next */
      (cov_nngj7xnje().b[18][1]++, parallelResults.query1.data === 'parallel1')
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nngj7xnje().s[82]++;
    results.push({
      testName: 'Parallel Query Execution',
      duration: 0,
      success: false,
      error: error.message
    });
  }
  /* istanbul ignore next */
  cov_nngj7xnje().s[83]++;
  return results;
}
// ==================== LAZY LOADING TESTS ====================
async function testLazyLoading() {
  /* istanbul ignore next */
  cov_nngj7xnje().f[24]++;
  const results =
  /* istanbul ignore next */
  (cov_nngj7xnje().s[84]++, []);
  // Test 1: Lazy Initiative Loading
  /* istanbul ignore next */
  cov_nngj7xnje().s[85]++;
  try {
    const startTime =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[86]++, performance.now());
    // First load - should actually load the module
    const initiative =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[87]++, await (0, initiatives_lazy_1.loadInitiative)('demo-initiative'));
    const firstLoadTime =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[88]++, performance.now() - startTime);
    // Second load - should use cache
    const cacheStartTime =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[89]++, performance.now());
    const cachedInitiative =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[90]++, await (0, initiatives_lazy_1.loadInitiative)('demo-initiative'));
    const cacheLoadTime =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[91]++, performance.now() - cacheStartTime);
    /* istanbul ignore next */
    cov_nngj7xnje().s[92]++;
    results.push({
      testName: 'Lazy Initiative Loading',
      duration: firstLoadTime + cacheLoadTime,
      success: cacheLoadTime < firstLoadTime * 0.1,
      // Cache should be 10x faster
      cacheHit: cacheLoadTime < 5
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nngj7xnje().s[93]++;
    results.push({
      testName: 'Lazy Initiative Loading',
      duration: 0,
      success: false,
      error: error.message
    });
  }
  // Test 2: Preloading
  /* istanbul ignore next */
  cov_nngj7xnje().s[94]++;
  try {
    const startTime =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[95]++, performance.now());
    // Test preloading function
    /* istanbul ignore next */
    cov_nngj7xnje().s[96]++;
    (0, initiatives_lazy_1.preloadInitiatives)();
    // Give it time to preload
    /* istanbul ignore next */
    cov_nngj7xnje().s[97]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_nngj7xnje().f[25]++;
      cov_nngj7xnje().s[98]++;
      return setTimeout(resolve, 100);
    });
    // Now loading should be fast
    const loadStartTime =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[99]++, performance.now());
    /* istanbul ignore next */
    cov_nngj7xnje().s[100]++;
    await (0, initiatives_lazy_1.loadInitiatives)();
    const loadTime =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[101]++, performance.now() - loadStartTime);
    /* istanbul ignore next */
    cov_nngj7xnje().s[102]++;
    results.push({
      testName: 'Initiative Preloading',
      duration: performance.now() - startTime,
      success: loadTime < 10,
      // Should be very fast if preloaded
      cacheHit: true
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nngj7xnje().s[103]++;
    results.push({
      testName: 'Initiative Preloading',
      duration: 0,
      success: false,
      error: error.message
    });
  }
  /* istanbul ignore next */
  cov_nngj7xnje().s[104]++;
  return results;
}
// ==================== BUNDLE OPTIMIZATION TESTS ====================
async function testBundleOptimization() {
  /* istanbul ignore next */
  cov_nngj7xnje().f[26]++;
  var _a, _b;
  const results =
  /* istanbul ignore next */
  (cov_nngj7xnje().s[105]++, []);
  // Test 1: Memory Usage
  /* istanbul ignore next */
  cov_nngj7xnje().s[106]++;
  try {
    const startTime =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[107]++, performance.now());
    const initialMemory =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[108]++,
    /* istanbul ignore next */
    (cov_nngj7xnje().b[19][0]++,
    /* istanbul ignore next */
    (cov_nngj7xnje().b[21][0]++, (_a = performance.memory) === null) ||
    /* istanbul ignore next */
    (cov_nngj7xnje().b[21][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_nngj7xnje().b[20][0]++, void 0) :
    /* istanbul ignore next */
    (cov_nngj7xnje().b[20][1]++, _a.usedJSHeapSize)) ||
    /* istanbul ignore next */
    (cov_nngj7xnje().b[19][1]++, 0));
    // Load large data with lazy loading
    /* istanbul ignore next */
    cov_nngj7xnje().s[109]++;
    await (0, initiatives_lazy_1.loadInitiatives)();
    const afterLoadMemory =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[110]++,
    /* istanbul ignore next */
    (cov_nngj7xnje().b[22][0]++,
    /* istanbul ignore next */
    (cov_nngj7xnje().b[24][0]++, (_b = performance.memory) === null) ||
    /* istanbul ignore next */
    (cov_nngj7xnje().b[24][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_nngj7xnje().b[23][0]++, void 0) :
    /* istanbul ignore next */
    (cov_nngj7xnje().b[23][1]++, _b.usedJSHeapSize)) ||
    /* istanbul ignore next */
    (cov_nngj7xnje().b[22][1]++, 0));
    const memoryIncrease =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[111]++, afterLoadMemory - initialMemory);
    /* istanbul ignore next */
    cov_nngj7xnje().s[112]++;
    results.push({
      testName: 'Memory Usage Optimization',
      duration: performance.now() - startTime,
      success: memoryIncrease < 5 * 1024 * 1024,
      // Should be < 5MB increase
      memoryUsage: memoryIncrease
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nngj7xnje().s[113]++;
    results.push({
      testName: 'Memory Usage Optimization',
      duration: 0,
      success: false,
      error: error.message
    });
  }
  // Test 2: Dynamic Import Performance
  /* istanbul ignore next */
  cov_nngj7xnje().s[114]++;
  try {
    const startTime =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[115]++, performance.now());
    // Test dynamic import performance
    const dynamicModule =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[116]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_nngj7xnje().f[27]++;
      cov_nngj7xnje().s[117]++;
      return __importStar(require('@/data/initiatives'));
    }));
    const loadTime =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[118]++, performance.now() - startTime);
    /* istanbul ignore next */
    cov_nngj7xnje().s[119]++;
    results.push({
      testName: 'Dynamic Import Performance',
      duration: loadTime,
      success:
      /* istanbul ignore next */
      (cov_nngj7xnje().b[25][0]++, loadTime < 100) &&
      /* istanbul ignore next */
      (cov_nngj7xnje().b[25][1]++, dynamicModule.INITIATIVES !== undefined)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nngj7xnje().s[120]++;
    results.push({
      testName: 'Dynamic Import Performance',
      duration: 0,
      success: false,
      error: error.message
    });
  }
  /* istanbul ignore next */
  cov_nngj7xnje().s[121]++;
  return results;
}
// ==================== MAIN PERFORMANCE TEST RUNNER ====================
async function runPerformanceTests() {
  /* istanbul ignore next */
  cov_nngj7xnje().f[28]++;
  // REMOVED: console.log statement
  var _a;
  const suiteStartTime =
  /* istanbul ignore next */
  (cov_nngj7xnje().s[122]++, performance.now());
  // Run all test categories
  const [databaseTests, lazyLoadingTests, bundleTests] =
  /* istanbul ignore next */
  (cov_nngj7xnje().s[123]++, await Promise.all([testDatabaseOptimization(), testLazyLoading(), testBundleOptimization()]));
  const totalDuration =
  /* istanbul ignore next */
  (cov_nngj7xnje().s[124]++, performance.now() - suiteStartTime);
  // Calculate overall statistics
  const allTests =
  /* istanbul ignore next */
  (cov_nngj7xnje().s[125]++, [...databaseTests, ...lazyLoadingTests, ...bundleTests]);
  const passedTests =
  /* istanbul ignore next */
  (cov_nngj7xnje().s[126]++, allTests.filter(t => {
    /* istanbul ignore next */
    cov_nngj7xnje().f[29]++;
    cov_nngj7xnje().s[127]++;
    return t.success;
  }).length);
  const failedTests =
  /* istanbul ignore next */
  (cov_nngj7xnje().s[128]++, allTests.length - passedTests);
  const cacheHits =
  /* istanbul ignore next */
  (cov_nngj7xnje().s[129]++, allTests.filter(t => {
    /* istanbul ignore next */
    cov_nngj7xnje().f[30]++;
    cov_nngj7xnje().s[130]++;
    return t.cacheHit;
  }).length);
  const cacheHitRatio =
  /* istanbul ignore next */
  (cov_nngj7xnje().s[131]++, cacheHits / allTests.length);
  // Get performance monitor stats
  const performanceStats =
  /* istanbul ignore next */
  (cov_nngj7xnje().s[132]++, database_optimizer_1.dbOptimizer.getPerformanceStats());
  const results =
  /* istanbul ignore next */
  (cov_nngj7xnje().s[133]++, {
    databaseOptimization: databaseTests,
    lazyLoading: lazyLoadingTests,
    bundleOptimization: bundleTests,
    overall: {
      totalTests: allTests.length,
      passedTests,
      failedTests,
      totalDuration,
      cacheHitRatio,
      memoryImprovement:
      /* istanbul ignore next */
      (cov_nngj7xnje().b[26][0]++,
      /* istanbul ignore next */
      (cov_nngj7xnje().b[28][0]++, (_a = bundleTests.find(t => {
        /* istanbul ignore next */
        cov_nngj7xnje().f[31]++;
        cov_nngj7xnje().s[134]++;
        return t.testName === 'Memory Usage Optimization';
      })) === null) ||
      /* istanbul ignore next */
      (cov_nngj7xnje().b[28][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_nngj7xnje().b[27][0]++, void 0) :
      /* istanbul ignore next */
      (cov_nngj7xnje().b[27][1]++, _a.memoryUsage)) ||
      /* istanbul ignore next */
      (cov_nngj7xnje().b[26][1]++, 0)
    }
  });
  // Log results
  // REMOVED: console.log statement
  // REMOVED: console.log statement
  // REMOVED: console.log statement
  // REMOVED: console.log statement
  // REMOVED: console.log statement
  // Log detailed results
  // REMOVED: console.log statement
  /* istanbul ignore next */
  cov_nngj7xnje().s[135]++;
  allTests.forEach(test => {
    /* istanbul ignore next */
    cov_nngj7xnje().f[32]++;
    const status =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[136]++, test.success ?
    /* istanbul ignore next */
    (cov_nngj7xnje().b[29][0]++, '✅') :
    /* istanbul ignore next */
    (cov_nngj7xnje().b[29][1]++, '❌'));
    const cacheStatus =
    /* istanbul ignore next */
    (cov_nngj7xnje().s[137]++, test.cacheHit ?
    /* istanbul ignore next */
    (cov_nngj7xnje().b[30][0]++, '⚡') :
    /* istanbul ignore next */
    (cov_nngj7xnje().b[30][1]++, ''));
    // REMOVED: console.log statement
    /* istanbul ignore next */
    cov_nngj7xnje().s[138]++;
    if (test.error) {
      /* istanbul ignore next */
      cov_nngj7xnje().b[31][0]++;
    } // REMOVED: console.log statement
    else
    /* istanbul ignore next */
    {
      cov_nngj7xnje().b[31][1]++;
    }
  });
  /* istanbul ignore next */
  cov_nngj7xnje().s[139]++;
  return results;
}
// ==================== BENCHMARK UTILITIES ====================
function logPerformanceStats() {
  /* istanbul ignore next */
  cov_nngj7xnje().f[33]++;
  const stats =
  /* istanbul ignore next */
  (cov_nngj7xnje().s[140]++, database_optimizer_1.dbOptimizer.getPerformanceStats());
  // REMOVED: console.log statement
  // REMOVED: console.log statement
  // REMOVED: console.log statement
  // REMOVED: console.log statement
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,