9619c9bc5785a4e8b33c9b5fd92e744d
"use strict";

/**
 * Verification System for OrangeCat Platform
 *
 * Handles official account verification, celebrity account protection,
 * and verification badge management to prevent impersonation.
 */
/* istanbul ignore next */
function cov_26q8k2ch6g() {
  var path = "/home/g/dev/orangecat/src/utils/verification.ts";
  var hash = "0a114bbf6c9d271fbfeac3d2357dfc252b09e6d8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/utils/verification.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 67
        }
      },
      "2": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 50
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "4": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 60
        }
      },
      "5": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 66
        }
      },
      "6": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 66
        }
      },
      "7": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 66
        }
      },
      "8": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 30,
          column: 2
        }
      },
      "9": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 63,
          column: 3
        }
      },
      "10": {
        start: {
          line: 68,
          column: 26
        },
        end: {
          line: 68,
          column: 48
        }
      },
      "11": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "12": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 75,
          column: 10
        }
      },
      "13": {
        start: {
          line: 78,
          column: 31
        },
        end: {
          line: 78,
          column: 65
        }
      },
      "14": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "15": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 84,
          column: 10
        }
      },
      "16": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "17": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "18": {
        start: {
          line: 90,
          column: 27
        },
        end: {
          line: 90,
          column: 68
        }
      },
      "19": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "20": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 25
        }
      },
      "21": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "22": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 101,
          column: 18
        }
      },
      "23": {
        start: {
          line: 105,
          column: 42
        },
        end: {
          line: 105,
          column: 76
        }
      },
      "24": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "25": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 111,
          column: 14
        }
      },
      "26": {
        start: {
          line: 115,
          column: 35
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "27": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "28": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "29": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 125,
          column: 18
        }
      },
      "30": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "31": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "32": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 136,
          column: 14
        }
      },
      "33": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 139,
          column: 34
        }
      },
      "34": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 147,
          column: 20
        }
      },
      "35": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 20
        }
      },
      "36": {
        start: {
          line: 149,
          column: 26
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "37": {
        start: {
          line: 159,
          column: 23
        },
        end: {
          line: 159,
          column: 75
        }
      },
      "38": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 160,
          column: 42
        }
      },
      "39": {
        start: {
          line: 166,
          column: 23
        },
        end: {
          line: 166,
          column: 38
        }
      },
      "40": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 177,
          column: 5
        }
      },
      "41": {
        start: {
          line: 168,
          column: 17
        },
        end: {
          line: 168,
          column: 18
        }
      },
      "42": {
        start: {
          line: 169,
          column: 21
        },
        end: {
          line: 169,
          column: 28
        }
      },
      "43": {
        start: {
          line: 170,
          column: 21
        },
        end: {
          line: 170,
          column: 40
        }
      },
      "44": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "45": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "46": {
        start: {
          line: 173,
          column: 34
        },
        end: {
          line: 173,
          column: 76
        }
      },
      "47": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 42
        }
      },
      "48": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 178,
          column: 34
        }
      },
      "49": {
        start: {
          line: 184,
          column: 17
        },
        end: {
          line: 184,
          column: 73
        }
      },
      "50": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 194,
          column: 18
        }
      },
      "51": {
        start: {
          line: 200,
          column: 23
        },
        end: {
          line: 200,
          column: 52
        }
      },
      "52": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "53": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 205,
          column: 10
        }
      },
      "54": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 212,
          column: 5
        }
      },
      "55": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 211,
          column: 10
        }
      },
      "56": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 213,
          column: 30
        }
      },
      "57": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 221,
          column: 5
        }
      },
      "58": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 26
        }
      },
      "59": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "60": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 26
        }
      },
      "61": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 227,
          column: 5
        }
      },
      "62": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 25
        }
      },
      "63": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 228,
          column: 16
        }
      },
      "64": {
        start: {
          line: 231,
          column: 41
        },
        end: {
          line: 231,
          column: 48
        }
      },
      "65": {
        start: {
          line: 233,
          column: 23
        },
        end: {
          line: 233,
          column: 52
        }
      },
      "66": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "67": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 238,
          column: 10
        }
      },
      "68": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 247,
          column: 5
        }
      },
      "69": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 246,
          column: 10
        }
      },
      "70": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 255,
          column: 5
        }
      },
      "71": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 254,
          column: 10
        }
      },
      "72": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 256,
          column: 27
        }
      },
      "73": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 263,
          column: 31
        }
      },
      "74": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 31
        }
      },
      "75": {
        start: {
          line: 264,
          column: 21
        },
        end: {
          line: 264,
          column: 38
        }
      },
      "76": {
        start: {
          line: 266,
          column: 31
        },
        end: {
          line: 270,
          column: 5
        }
      },
      "77": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 278,
          column: 5
        }
      },
      "78": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 277,
          column: 9
        }
      },
      "79": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 276,
          column: 14
        }
      },
      "80": {
        start: {
          line: 280,
          column: 32
        },
        end: {
          line: 283,
          column: 5
        }
      },
      "81": {
        start: {
          line: 284,
          column: 27
        },
        end: {
          line: 284,
          column: 66
        }
      },
      "82": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 295,
          column: 5
        }
      },
      "83": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 294,
          column: 9
        }
      },
      "84": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 293,
          column: 13
        }
      },
      "85": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 292,
          column: 18
        }
      },
      "86": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 296,
          column: 27
        }
      },
      "87": {
        start: {
          line: 302,
          column: 24
        },
        end: {
          line: 327,
          column: 5
        }
      },
      "88": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 328,
          column: 45
        }
      }
    },
    fnMap: {
      "0": {
        name: "isProtectedUsername",
        decl: {
          start: {
            line: 67,
            column: 9
          },
          end: {
            line: 67,
            column: 28
          }
        },
        loc: {
          start: {
            line: 67,
            column: 39
          },
          end: {
            line: 140,
            column: 1
          }
        },
        line: 67
      },
      "1": {
        name: "isLookalikeName",
        decl: {
          start: {
            line: 144,
            column: 9
          },
          end: {
            line: 144,
            column: 24
          }
        },
        loc: {
          start: {
            line: 144,
            column: 51
          },
          end: {
            line: 161,
            column: 1
          }
        },
        line: 144
      },
      "2": {
        name: "generateNameVariations",
        decl: {
          start: {
            line: 165,
            column: 9
          },
          end: {
            line: 165,
            column: 31
          }
        },
        loc: {
          start: {
            line: 165,
            column: 53
          },
          end: {
            line: 179,
            column: 1
          }
        },
        line: 165
      },
      "3": {
        name: "generateUsernameAlternatives",
        decl: {
          start: {
            line: 183,
            column: 9
          },
          end: {
            line: 183,
            column: 37
          }
        },
        loc: {
          start: {
            line: 183,
            column: 56
          },
          end: {
            line: 195,
            column: 1
          }
        },
        line: 183
      },
      "4": {
        name: "canClaimVerificationBadge",
        decl: {
          start: {
            line: 199,
            column: 9
          },
          end: {
            line: 199,
            column: 34
          }
        },
        loc: {
          start: {
            line: 199,
            column: 71
          },
          end: {
            line: 214,
            column: 1
          }
        },
        line: 199
      },
      "5": {
        name: "getVerificationBadgeType",
        decl: {
          start: {
            line: 218,
            column: 9
          },
          end: {
            line: 218,
            column: 33
          }
        },
        loc: {
          start: {
            line: 218,
            column: 80
          },
          end: {
            line: 229,
            column: 1
          }
        },
        line: 218
      },
      "6": {
        name: "validateVerificationRequest",
        decl: {
          start: {
            line: 230,
            column: 9
          },
          end: {
            line: 230,
            column: 36
          }
        },
        loc: {
          start: {
            line: 230,
            column: 46
          },
          end: {
            line: 257,
            column: 1
          }
        },
        line: 230
      },
      "7": {
        name: "validateBioForImpersonation",
        decl: {
          start: {
            line: 261,
            column: 9
          },
          end: {
            line: 261,
            column: 36
          }
        },
        loc: {
          start: {
            line: 261,
            column: 42
          },
          end: {
            line: 297,
            column: 1
          }
        },
        line: 261
      },
      "8": {
        name: "getVerificationBadgeDisplay",
        decl: {
          start: {
            line: 301,
            column: 9
          },
          end: {
            line: 301,
            column: 36
          }
        },
        loc: {
          start: {
            line: 301,
            column: 44
          },
          end: {
            line: 329,
            column: 1
          }
        },
        line: 301
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "1": {
        loc: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "2": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "3": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "4": {
        loc: {
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 92,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 92,
            column: 22
          }
        }, {
          start: {
            line: 92,
            column: 26
          },
          end: {
            line: 92,
            column: 122
          }
        }],
        line: 92
      },
      "5": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "6": {
        loc: {
          start: {
            line: 96,
            column: 16
          },
          end: {
            line: 96,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 16
          },
          end: {
            line: 96,
            column: 22
          }
        }, {
          start: {
            line: 96,
            column: 26
          },
          end: {
            line: 96,
            column: 59
          }
        }],
        line: 96
      },
      "7": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "8": {
        loc: {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 126,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 126,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "9": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "10": {
        loc: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 147,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 147,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "11": {
        loc: {
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "12": {
        loc: {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "13": {
        loc: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "14": {
        loc: {
          start: {
            line: 218,
            column: 53
          },
          end: {
            line: 218,
            column: 78
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 218,
            column: 73
          },
          end: {
            line: 218,
            column: 78
          }
        }],
        line: 218
      },
      "15": {
        loc: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "16": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 219,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 219,
            column: 25
          }
        }, {
          start: {
            line: 219,
            column: 29
          },
          end: {
            line: 219,
            column: 86
          }
        }],
        line: 219
      },
      "17": {
        loc: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "18": {
        loc: {
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "19": {
        loc: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "20": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 234,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 234,
            column: 30
          }
        }, {
          start: {
            line: 234,
            column: 34
          },
          end: {
            line: 234,
            column: 88
          }
        }],
        line: 234
      },
      "21": {
        loc: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "22": {
        loc: {
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 242,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 241,
            column: 58
          }
        }, {
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 242,
            column: 62
          }
        }],
        line: 241
      },
      "23": {
        loc: {
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "24": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 250,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 249,
            column: 62
          }
        }, {
          start: {
            line: 250,
            column: 9
          },
          end: {
            line: 250,
            column: 31
          }
        }, {
          start: {
            line: 250,
            column: 35
          },
          end: {
            line: 250,
            column: 69
          }
        }],
        line: 249
      },
      "25": {
        loc: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 263,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 263,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "26": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 277,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 277,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "27": {
        loc: {
          start: {
            line: 287,
            column: 12
          },
          end: {
            line: 293,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 12
          },
          end: {
            line: 293,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "28": {
        loc: {
          start: {
            line: 287,
            column: 16
          },
          end: {
            line: 288,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 287,
            column: 16
          },
          end: {
            line: 287,
            column: 58
          }
        }, {
          start: {
            line: 288,
            column: 16
          },
          end: {
            line: 288,
            column: 58
          }
        }],
        line: 287
      },
      "29": {
        loc: {
          start: {
            line: 328,
            column: 11
          },
          end: {
            line: 328,
            column: 44
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 328,
            column: 19
          },
          end: {
            line: 328,
            column: 37
          }
        }, {
          start: {
            line: 328,
            column: 40
          },
          end: {
            line: 328,
            column: 44
          }
        }],
        line: 328
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/utils/verification.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/utils/verification.ts"],
      sourcesContent: ["/**\n * Verification System for OrangeCat Platform\n * \n * Handles official account verification, celebrity account protection,\n * and verification badge management to prevent impersonation.\n */\n\nexport interface VerificationStatus {\n  isVerified: boolean;\n  verificationLevel: number;\n  verificationBadge?: 'official' | 'verified' | 'creator' | 'celebrity';\n  verifiedAt?: Date;\n  verifierUserId?: string;\n}\n\nexport interface CelebrityProtectionResult {\n  isProtected: boolean;\n  reason?: string;\n  suggestedAlternatives?: string[];\n}\n\n/**\n * Verification levels:\n * 0 - Unverified\n * 1 - Basic verification (email verified)\n * 2 - Identity verified (documents submitted)\n * 3 - Official account (manually verified by admin)\n * 4 - Celebrity/VIP (special protection status)\n */\nexport const VERIFICATION_LEVELS = {\n  UNVERIFIED: 0,\n  BASIC: 1,\n  IDENTITY: 2,\n  OFFICIAL: 3,\n  CELEBRITY: 4\n} as const;\n\n/**\n * Protected celebrity and public figure usernames\n * These require special admin approval to claim\n */\nexport const PROTECTED_USERNAMES = new Set([\n  // Bitcoin Legends\n  'satoshi', 'satoshinakamoto', 'hal', 'halfinney', 'nickszabo',\n  \n  // Bitcoin Core Developers\n  'gmaxwell', 'sipa', 'petertodd', 'jonasschnelli', 'laanwj',\n  'achow101', 'fanquake', 'meshcollider', 'promag', 'ryanofsky',\n  'adam3us',\n  \n  // Lightning Network Developers  \n  'roasbeef', 'laolu', 'bitconner', 'cfromknecht', 'halseth',\n  'joostjager', 'bhandras', 'wpaulino', 'yyforyongyu',\n  \n  // Bitcoin Companies (Official)\n  'bitcoin', 'bitcoincore', 'bitcoinfoundation', 'blockstream',\n  'lightninglabs', 'square', 'cashapp', 'strike', 'river',\n  'unchained', 'casa', 'coldcard', 'trezor', 'ledger',\n  \n  // Prominent Bitcoin Figures\n  'aantonop', 'jameson', 'lopp', 'hodlonaut', 'dergigi',\n  'saifedean', 'nic', 'carter', 'preston', 'pysh', 'stephan',\n  'livera', 'marty', 'bent', 'matt', 'odell', 'knut', 'svanholm',\n  \n  // Celebrities/Public Figures\n  'elonmusk', 'elon', 'jackdorsey', 'jack', 'saylor',\n  'michaelsaylor', 'cathie', 'wood', 'naval', 'balaji',\n  'tim', 'cook', 'jeff', 'bezos', 'bill', 'gates', 'warren', 'buffett',\n  'microsoft', 'apple', 'google', 'meta', 'facebook',\n  \n  // Government/Institutional\n  'fed', 'treasury', 'sec', 'cftc', 'biden', 'trump', 'yellen', 'powell',\n  \n  // Platform Reserved\n  'admin', 'administrator', 'moderator', 'support', 'help',\n  'official', 'verified', 'orangecat', 'staff', 'team'\n]);\n\n/**\n * Check if a username is protected and requires special verification\n */\nexport function isProtectedUsername(username: string): CelebrityProtectionResult {\n  const lowerUsername = username.toLowerCase();\n  \n  // First check exact match (case-insensitive)\n  if (PROTECTED_USERNAMES.has(lowerUsername)) {\n    return {\n      isProtected: true,\n      reason: 'Celebrity names not allowed - username is protected',\n      suggestedAlternatives: generateUsernameAlternatives(username)\n    };\n  }\n  \n  // Then check normalized version (removing separators but keeping numbers for usernames like adam3us)\n  const normalizedUsername = lowerUsername.replace(/[-_]/g, '');\n  if (PROTECTED_USERNAMES.has(normalizedUsername)) {\n    return {\n      isProtected: true,\n      reason: 'Celebrity names not allowed - username is protected',\n      suggestedAlternatives: generateUsernameAlternatives(username)\n    };\n  }\n  \n  // Check for variations with numbers/separators added to protected names\n  for (const protectedName of Array.from(PROTECTED_USERNAMES)) {\n    // Check if username starts with protected name + separator/number\n    if (lowerUsername.startsWith(protectedName)) {\n      const suffix = lowerUsername.slice(protectedName.length);\n      // Allow if suffix is clearly not impersonation (like _builder, _fan, etc.)\n      if (suffix && /^[_-]?(builder|dev|developer|fan|follower|user|community|unofficial|btc|bitcoin)$/.test(suffix)) {\n        continue; // This is a legitimate variation\n      }\n      // Block if it's just numbers or single characters (like elonmusk1, satoshi_)\n      if (suffix && /^[_-]?[0-9]*[_-]?$/.test(suffix)) {\n        return {\n          isProtected: true,\n          reason: `Username too similar to protected name \"${protectedName}\"`,\n          suggestedAlternatives: generateUsernameAlternatives(username)\n        };\n      }\n    }\n    \n    // Check if protected name can be formed by adding separators (elon_musk -> elonmusk)\n    const usernameWithoutSeparators = lowerUsername.replace(/[-_]/g, '');\n    if (usernameWithoutSeparators === protectedName) {\n      return {\n        isProtected: true,\n        reason: `Username too similar to protected name \"${protectedName}\"`,\n        suggestedAlternatives: generateUsernameAlternatives(username)\n      };\n    }\n    \n    // Special handling for compound names like \"elon_musk\" -> \"elonmusk\"\n    // Check if username with separators matches any protected compound name\n    const compoundVariations = [\n      lowerUsername.replace(/[-_]/g, ''),  // elon_musk -> elonmusk\n      lowerUsername.replace(/[-_]/g, ' '), // elon_musk -> elon musk (then check if \"elonmusk\" exists)\n    ];\n    \n    for (const variation of compoundVariations) {\n      if (PROTECTED_USERNAMES.has(variation.replace(/\\s/g, ''))) {\n        return {\n          isProtected: true,\n          reason: `Username too similar to protected name \"${variation.replace(/\\s/g, '')}\"`,\n          suggestedAlternatives: generateUsernameAlternatives(username)\n        };\n      }\n    }\n  }\n  \n  // Check for lookalike variations\n  for (const protectedName of Array.from(PROTECTED_USERNAMES)) {\n    if (isLookalikeName(lowerUsername, protectedName)) {\n      return {\n        isProtected: true,\n        reason: `Username too similar to protected name \"${protectedName}\"`,\n        suggestedAlternatives: generateUsernameAlternatives(username)\n      };\n    }\n  }\n  \n  return { isProtected: false };\n}\n\n/**\n * Check if two usernames are lookalikes (similarity-based impersonation)\n */\nfunction isLookalikeName(candidate: string, protectedName: string): boolean {\n  // Exact match\n  if (candidate === protectedName) return true;\n  \n  // Common character substitutions\n  const substitutions: Record<string, string[]> = {\n    'o': ['0', '\u03BF', '\u043E'], // Latin o, digit 0, Greek omicron, Cyrillic o\n    'a': ['@', '\u03B1', '\u0430'], // Latin a, at symbol, Greek alpha, Cyrillic a\n    'e': ['3', '\u0435'],      // Latin e, digit 3, Cyrillic e\n    'i': ['1', 'l', '\u0456'], // Latin i, digit 1, lowercase L, Cyrillic i\n    'u': ['\u03C5', '\u0438'],      // Latin u, Greek upsilon, Cyrillic n\n    's': ['$', '5'],      // Latin s, dollar sign, digit 5\n    'g': ['6', '9'],      // Latin g, digits 6 and 9\n  };\n  \n  // Generate variations of the protected name\n  const variations = generateNameVariations(protectedName, substitutions);\n  \n  return variations.includes(candidate);\n}\n\n/**\n * Generate common variations of a name for lookalike detection\n */\nfunction generateNameVariations(name: string, substitutions: Record<string, string[]>): string[] {\n  const variations = new Set([name]);\n  \n  // Add single character substitutions\n  for (let i = 0; i < name.length; i++) {\n    const char = name[i];\n    const subs = substitutions[char];\n    \n    if (subs) {\n      for (const sub of subs) {\n        const variation = name.slice(0, i) + sub + name.slice(i + 1);\n        variations.add(variation);\n      }\n    }\n  }\n  \n  return Array.from(variations);\n}\n\n/**\n * Generate alternative username suggestions\n */\nfunction generateUsernameAlternatives(originalUsername: string): string[] {\n  const base = originalUsername.toLowerCase().replace(/[^a-z0-9]/g, '');\n  \n  return [\n    `${base}_dev`,\n    `${base}_builder`,\n    `${base}_btc`,\n    `${base}_fan`,\n    `bitcoin_${base}`,\n    `${base}_unofficial`,\n    `${base}_user`,\n    `${base}_community`\n  ].slice(0, 5); // Return top 5 suggestions\n}\n\n/**\n * Check if user can claim a verification badge\n */\nexport function canClaimVerificationBadge(\n  username: string, \n  currentVerificationLevel: number\n): { canClaim: boolean; reason?: string } {\n  const protection = isProtectedUsername(username);\n  \n  if (protection.isProtected) {\n    return {\n      canClaim: false,\n      reason: 'Protected username requires admin verification'\n    };\n  }\n  \n  if (currentVerificationLevel < VERIFICATION_LEVELS.IDENTITY) {\n    return {\n      canClaim: false,\n      reason: 'Identity verification required before claiming verification badge'\n    };\n  }\n  \n  return { canClaim: true };\n}\n\n/**\n * Determine appropriate verification badge type\n */\nexport function getVerificationBadgeType(\n  verificationLevel: number,\n  isOfficialAccount: boolean = false\n): VerificationStatus['verificationBadge'] | null {\n  if (isOfficialAccount || verificationLevel >= VERIFICATION_LEVELS.OFFICIAL) {\n    return 'official';\n  }\n  \n  if (verificationLevel >= VERIFICATION_LEVELS.IDENTITY) {\n    return 'verified';\n  }\n  \n  if (verificationLevel >= VERIFICATION_LEVELS.BASIC) {\n    return 'creator';\n  }\n  \n  return null;\n}\n\n/**\n * Validate verification request\n */\nexport interface VerificationRequest {\n  username: string;\n  requestedLevel: number;\n  documentation?: string[];\n  reason?: string;\n}\n\nexport function validateVerificationRequest(\n  request: VerificationRequest\n): { valid: boolean; error?: string } {\n  const { username, requestedLevel } = request;\n  \n  // Check if username is available for verification\n  const protection = isProtectedUsername(username);\n  if (protection.isProtected && requestedLevel >= VERIFICATION_LEVELS.OFFICIAL) {\n    return {\n      valid: false,\n      error: 'Username requires special admin approval for official verification'\n    };\n  }\n  \n  // Validate requested level\n  if (requestedLevel < VERIFICATION_LEVELS.BASIC || \n      requestedLevel > VERIFICATION_LEVELS.CELEBRITY) {\n    return {\n      valid: false,\n      error: 'Invalid verification level requested'\n    };\n  }\n  \n  // High-level verifications require documentation\n  if (requestedLevel >= VERIFICATION_LEVELS.IDENTITY && \n      (!request.documentation || request.documentation.length === 0)) {\n    return {\n      valid: false,\n      error: 'Documentation required for identity verification'\n    };\n  }\n  \n  return { valid: true };\n}\n\n/**\n * Anti-impersonation bio content validation\n */\nexport function validateBioForImpersonation(bio: string): { valid: boolean; error?: string } {\n  if (!bio) return { valid: true };\n  \n  const lowerBio = bio.toLowerCase();\n  \n  // Check for verification claims\n  const verificationClaims = [\n    'verified account', 'official account', 'authentic account',\n    'real account', 'legitimate account', 'approved account',\n    'certified by', 'endorsed by', 'validated by'\n  ];\n  \n  for (const claim of verificationClaims) {\n    if (lowerBio.includes(claim)) {\n      return {\n        valid: false,\n        error: 'Verification claims not allowed in bio'\n      };\n    }\n  }\n  \n  // Check for celebrity impersonation claims\n  const impersonationClaims = [\n    'i am', 'this is', 'real', 'actual', 'genuine',\n    'not fake', 'authentic', 'original'\n  ];\n  \n  const celebrityNames = Array.from(PROTECTED_USERNAMES);\n  \n  for (const claim of impersonationClaims) {\n    for (const celebrity of celebrityNames) {\n      if (lowerBio.includes(`${claim} ${celebrity}`) || \n          lowerBio.includes(`${celebrity} ${claim}`)) {\n        return {\n          valid: false,\n          error: 'Celebrity impersonation claims not allowed'\n        };\n      }\n    }\n  }\n  \n  return { valid: true };\n}\n\n/**\n * Get verification badge display properties\n */\nexport function getVerificationBadgeDisplay(badge: VerificationStatus['verificationBadge']) {\n  const badgeConfig = {\n    official: {\n      icon: '\u2713',\n      color: '#1DA1F2', // Twitter blue\n      label: 'Official',\n      description: 'This account has been verified as an official representative'\n    },\n    verified: {\n      icon: '\u2713',\n      color: '#10B981', // Green\n      label: 'Verified',\n      description: 'This account has been verified through identity documentation'\n    },\n    creator: {\n      icon: '\u2B50',\n      color: '#F59E0B', // Amber\n      label: 'Creator',\n      description: 'This account belongs to a content creator or community member'\n    },\n    celebrity: {\n      icon: '\uD83D\uDC51',\n      color: '#8B5CF6', // Purple\n      label: 'Celebrity',\n      description: 'This account belongs to a notable public figure'\n    }\n  };\n  \n  return badge ? badgeConfig[badge] : null;\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0a114bbf6c9d271fbfeac3d2357dfc252b09e6d8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_26q8k2ch6g = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_26q8k2ch6g();
cov_26q8k2ch6g().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_26q8k2ch6g().s[1]++;
exports.PROTECTED_USERNAMES = exports.VERIFICATION_LEVELS = void 0;
/* istanbul ignore next */
cov_26q8k2ch6g().s[2]++;
exports.isProtectedUsername = isProtectedUsername;
/* istanbul ignore next */
cov_26q8k2ch6g().s[3]++;
exports.canClaimVerificationBadge = canClaimVerificationBadge;
/* istanbul ignore next */
cov_26q8k2ch6g().s[4]++;
exports.getVerificationBadgeType = getVerificationBadgeType;
/* istanbul ignore next */
cov_26q8k2ch6g().s[5]++;
exports.validateVerificationRequest = validateVerificationRequest;
/* istanbul ignore next */
cov_26q8k2ch6g().s[6]++;
exports.validateBioForImpersonation = validateBioForImpersonation;
/* istanbul ignore next */
cov_26q8k2ch6g().s[7]++;
exports.getVerificationBadgeDisplay = getVerificationBadgeDisplay;
/**
 * Verification levels:
 * 0 - Unverified
 * 1 - Basic verification (email verified)
 * 2 - Identity verified (documents submitted)
 * 3 - Official account (manually verified by admin)
 * 4 - Celebrity/VIP (special protection status)
 */
/* istanbul ignore next */
cov_26q8k2ch6g().s[8]++;
exports.VERIFICATION_LEVELS = {
  UNVERIFIED: 0,
  BASIC: 1,
  IDENTITY: 2,
  OFFICIAL: 3,
  CELEBRITY: 4
};
/**
 * Protected celebrity and public figure usernames
 * These require special admin approval to claim
 */
/* istanbul ignore next */
cov_26q8k2ch6g().s[9]++;
exports.PROTECTED_USERNAMES = new Set([
// Bitcoin Legends
'satoshi', 'satoshinakamoto', 'hal', 'halfinney', 'nickszabo',
// Bitcoin Core Developers
'gmaxwell', 'sipa', 'petertodd', 'jonasschnelli', 'laanwj', 'achow101', 'fanquake', 'meshcollider', 'promag', 'ryanofsky', 'adam3us',
// Lightning Network Developers  
'roasbeef', 'laolu', 'bitconner', 'cfromknecht', 'halseth', 'joostjager', 'bhandras', 'wpaulino', 'yyforyongyu',
// Bitcoin Companies (Official)
'bitcoin', 'bitcoincore', 'bitcoinfoundation', 'blockstream', 'lightninglabs', 'square', 'cashapp', 'strike', 'river', 'unchained', 'casa', 'coldcard', 'trezor', 'ledger',
// Prominent Bitcoin Figures
'aantonop', 'jameson', 'lopp', 'hodlonaut', 'dergigi', 'saifedean', 'nic', 'carter', 'preston', 'pysh', 'stephan', 'livera', 'marty', 'bent', 'matt', 'odell', 'knut', 'svanholm',
// Celebrities/Public Figures
'elonmusk', 'elon', 'jackdorsey', 'jack', 'saylor', 'michaelsaylor', 'cathie', 'wood', 'naval', 'balaji', 'tim', 'cook', 'jeff', 'bezos', 'bill', 'gates', 'warren', 'buffett', 'microsoft', 'apple', 'google', 'meta', 'facebook',
// Government/Institutional
'fed', 'treasury', 'sec', 'cftc', 'biden', 'trump', 'yellen', 'powell',
// Platform Reserved
'admin', 'administrator', 'moderator', 'support', 'help', 'official', 'verified', 'orangecat', 'staff', 'team']);
/**
 * Check if a username is protected and requires special verification
 */
function isProtectedUsername(username) {
  /* istanbul ignore next */
  cov_26q8k2ch6g().f[0]++;
  const lowerUsername =
  /* istanbul ignore next */
  (cov_26q8k2ch6g().s[10]++, username.toLowerCase());
  // First check exact match (case-insensitive)
  /* istanbul ignore next */
  cov_26q8k2ch6g().s[11]++;
  if (exports.PROTECTED_USERNAMES.has(lowerUsername)) {
    /* istanbul ignore next */
    cov_26q8k2ch6g().b[0][0]++;
    cov_26q8k2ch6g().s[12]++;
    return {
      isProtected: true,
      reason: 'Celebrity names not allowed - username is protected',
      suggestedAlternatives: generateUsernameAlternatives(username)
    };
  } else
  /* istanbul ignore next */
  {
    cov_26q8k2ch6g().b[0][1]++;
  }
  // Then check normalized version (removing separators but keeping numbers for usernames like adam3us)
  const normalizedUsername =
  /* istanbul ignore next */
  (cov_26q8k2ch6g().s[13]++, lowerUsername.replace(/[-_]/g, ''));
  /* istanbul ignore next */
  cov_26q8k2ch6g().s[14]++;
  if (exports.PROTECTED_USERNAMES.has(normalizedUsername)) {
    /* istanbul ignore next */
    cov_26q8k2ch6g().b[1][0]++;
    cov_26q8k2ch6g().s[15]++;
    return {
      isProtected: true,
      reason: 'Celebrity names not allowed - username is protected',
      suggestedAlternatives: generateUsernameAlternatives(username)
    };
  } else
  /* istanbul ignore next */
  {
    cov_26q8k2ch6g().b[1][1]++;
  }
  // Check for variations with numbers/separators added to protected names
  cov_26q8k2ch6g().s[16]++;
  for (const protectedName of Array.from(exports.PROTECTED_USERNAMES)) {
    /* istanbul ignore next */
    cov_26q8k2ch6g().s[17]++;
    // Check if username starts with protected name + separator/number
    if (lowerUsername.startsWith(protectedName)) {
      /* istanbul ignore next */
      cov_26q8k2ch6g().b[2][0]++;
      const suffix =
      /* istanbul ignore next */
      (cov_26q8k2ch6g().s[18]++, lowerUsername.slice(protectedName.length));
      // Allow if suffix is clearly not impersonation (like _builder, _fan, etc.)
      /* istanbul ignore next */
      cov_26q8k2ch6g().s[19]++;
      if (
      /* istanbul ignore next */
      (cov_26q8k2ch6g().b[4][0]++, suffix) &&
      /* istanbul ignore next */
      (cov_26q8k2ch6g().b[4][1]++, /^[_-]?(builder|dev|developer|fan|follower|user|community|unofficial|btc|bitcoin)$/.test(suffix))) {
        /* istanbul ignore next */
        cov_26q8k2ch6g().b[3][0]++;
        cov_26q8k2ch6g().s[20]++;
        continue; // This is a legitimate variation
      } else
      /* istanbul ignore next */
      {
        cov_26q8k2ch6g().b[3][1]++;
      }
      // Block if it's just numbers or single characters (like elonmusk1, satoshi_)
      cov_26q8k2ch6g().s[21]++;
      if (
      /* istanbul ignore next */
      (cov_26q8k2ch6g().b[6][0]++, suffix) &&
      /* istanbul ignore next */
      (cov_26q8k2ch6g().b[6][1]++, /^[_-]?[0-9]*[_-]?$/.test(suffix))) {
        /* istanbul ignore next */
        cov_26q8k2ch6g().b[5][0]++;
        cov_26q8k2ch6g().s[22]++;
        return {
          isProtected: true,
          reason: `Username too similar to protected name "${protectedName}"`,
          suggestedAlternatives: generateUsernameAlternatives(username)
        };
      } else
      /* istanbul ignore next */
      {
        cov_26q8k2ch6g().b[5][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_26q8k2ch6g().b[2][1]++;
    }
    // Check if protected name can be formed by adding separators (elon_musk -> elonmusk)
    const usernameWithoutSeparators =
    /* istanbul ignore next */
    (cov_26q8k2ch6g().s[23]++, lowerUsername.replace(/[-_]/g, ''));
    /* istanbul ignore next */
    cov_26q8k2ch6g().s[24]++;
    if (usernameWithoutSeparators === protectedName) {
      /* istanbul ignore next */
      cov_26q8k2ch6g().b[7][0]++;
      cov_26q8k2ch6g().s[25]++;
      return {
        isProtected: true,
        reason: `Username too similar to protected name "${protectedName}"`,
        suggestedAlternatives: generateUsernameAlternatives(username)
      };
    } else
    /* istanbul ignore next */
    {
      cov_26q8k2ch6g().b[7][1]++;
    }
    // Special handling for compound names like "elon_musk" -> "elonmusk"
    // Check if username with separators matches any protected compound name
    const compoundVariations =
    /* istanbul ignore next */
    (cov_26q8k2ch6g().s[26]++, [lowerUsername.replace(/[-_]/g, ''),
    // elon_musk -> elonmusk
    lowerUsername.replace(/[-_]/g, ' ') // elon_musk -> elon musk (then check if "elonmusk" exists)
    ]);
    /* istanbul ignore next */
    cov_26q8k2ch6g().s[27]++;
    for (const variation of compoundVariations) {
      /* istanbul ignore next */
      cov_26q8k2ch6g().s[28]++;
      if (exports.PROTECTED_USERNAMES.has(variation.replace(/\s/g, ''))) {
        /* istanbul ignore next */
        cov_26q8k2ch6g().b[8][0]++;
        cov_26q8k2ch6g().s[29]++;
        return {
          isProtected: true,
          reason: `Username too similar to protected name "${variation.replace(/\s/g, '')}"`,
          suggestedAlternatives: generateUsernameAlternatives(username)
        };
      } else
      /* istanbul ignore next */
      {
        cov_26q8k2ch6g().b[8][1]++;
      }
    }
  }
  // Check for lookalike variations
  /* istanbul ignore next */
  cov_26q8k2ch6g().s[30]++;
  for (const protectedName of Array.from(exports.PROTECTED_USERNAMES)) {
    /* istanbul ignore next */
    cov_26q8k2ch6g().s[31]++;
    if (isLookalikeName(lowerUsername, protectedName)) {
      /* istanbul ignore next */
      cov_26q8k2ch6g().b[9][0]++;
      cov_26q8k2ch6g().s[32]++;
      return {
        isProtected: true,
        reason: `Username too similar to protected name "${protectedName}"`,
        suggestedAlternatives: generateUsernameAlternatives(username)
      };
    } else
    /* istanbul ignore next */
    {
      cov_26q8k2ch6g().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_26q8k2ch6g().s[33]++;
  return {
    isProtected: false
  };
}
/**
 * Check if two usernames are lookalikes (similarity-based impersonation)
 */
function isLookalikeName(candidate, protectedName) {
  /* istanbul ignore next */
  cov_26q8k2ch6g().f[1]++;
  cov_26q8k2ch6g().s[34]++;
  // Exact match
  if (candidate === protectedName) {
    /* istanbul ignore next */
    cov_26q8k2ch6g().b[10][0]++;
    cov_26q8k2ch6g().s[35]++;
    return true;
  } else
  /* istanbul ignore next */
  {
    cov_26q8k2ch6g().b[10][1]++;
  }
  // Common character substitutions
  const substitutions =
  /* istanbul ignore next */
  (cov_26q8k2ch6g().s[36]++, {
    'o': ['0', 'ο', 'о'],
    // Latin o, digit 0, Greek omicron, Cyrillic o
    'a': ['@', 'α', 'а'],
    // Latin a, at symbol, Greek alpha, Cyrillic a
    'e': ['3', 'е'],
    // Latin e, digit 3, Cyrillic e
    'i': ['1', 'l', 'і'],
    // Latin i, digit 1, lowercase L, Cyrillic i
    'u': ['υ', 'и'],
    // Latin u, Greek upsilon, Cyrillic n
    's': ['$', '5'],
    // Latin s, dollar sign, digit 5
    'g': ['6', '9'] // Latin g, digits 6 and 9
  });
  // Generate variations of the protected name
  const variations =
  /* istanbul ignore next */
  (cov_26q8k2ch6g().s[37]++, generateNameVariations(protectedName, substitutions));
  /* istanbul ignore next */
  cov_26q8k2ch6g().s[38]++;
  return variations.includes(candidate);
}
/**
 * Generate common variations of a name for lookalike detection
 */
function generateNameVariations(name, substitutions) {
  /* istanbul ignore next */
  cov_26q8k2ch6g().f[2]++;
  const variations =
  /* istanbul ignore next */
  (cov_26q8k2ch6g().s[39]++, new Set([name]));
  // Add single character substitutions
  /* istanbul ignore next */
  cov_26q8k2ch6g().s[40]++;
  for (let i =
  /* istanbul ignore next */
  (cov_26q8k2ch6g().s[41]++, 0); i < name.length; i++) {
    const char =
    /* istanbul ignore next */
    (cov_26q8k2ch6g().s[42]++, name[i]);
    const subs =
    /* istanbul ignore next */
    (cov_26q8k2ch6g().s[43]++, substitutions[char]);
    /* istanbul ignore next */
    cov_26q8k2ch6g().s[44]++;
    if (subs) {
      /* istanbul ignore next */
      cov_26q8k2ch6g().b[11][0]++;
      cov_26q8k2ch6g().s[45]++;
      for (const sub of subs) {
        const variation =
        /* istanbul ignore next */
        (cov_26q8k2ch6g().s[46]++, name.slice(0, i) + sub + name.slice(i + 1));
        /* istanbul ignore next */
        cov_26q8k2ch6g().s[47]++;
        variations.add(variation);
      }
    } else
    /* istanbul ignore next */
    {
      cov_26q8k2ch6g().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_26q8k2ch6g().s[48]++;
  return Array.from(variations);
}
/**
 * Generate alternative username suggestions
 */
function generateUsernameAlternatives(originalUsername) {
  /* istanbul ignore next */
  cov_26q8k2ch6g().f[3]++;
  const base =
  /* istanbul ignore next */
  (cov_26q8k2ch6g().s[49]++, originalUsername.toLowerCase().replace(/[^a-z0-9]/g, ''));
  /* istanbul ignore next */
  cov_26q8k2ch6g().s[50]++;
  return [`${base}_dev`, `${base}_builder`, `${base}_btc`, `${base}_fan`, `bitcoin_${base}`, `${base}_unofficial`, `${base}_user`, `${base}_community`].slice(0, 5); // Return top 5 suggestions
}
/**
 * Check if user can claim a verification badge
 */
function canClaimVerificationBadge(username, currentVerificationLevel) {
  /* istanbul ignore next */
  cov_26q8k2ch6g().f[4]++;
  const protection =
  /* istanbul ignore next */
  (cov_26q8k2ch6g().s[51]++, isProtectedUsername(username));
  /* istanbul ignore next */
  cov_26q8k2ch6g().s[52]++;
  if (protection.isProtected) {
    /* istanbul ignore next */
    cov_26q8k2ch6g().b[12][0]++;
    cov_26q8k2ch6g().s[53]++;
    return {
      canClaim: false,
      reason: 'Protected username requires admin verification'
    };
  } else
  /* istanbul ignore next */
  {
    cov_26q8k2ch6g().b[12][1]++;
  }
  cov_26q8k2ch6g().s[54]++;
  if (currentVerificationLevel < exports.VERIFICATION_LEVELS.IDENTITY) {
    /* istanbul ignore next */
    cov_26q8k2ch6g().b[13][0]++;
    cov_26q8k2ch6g().s[55]++;
    return {
      canClaim: false,
      reason: 'Identity verification required before claiming verification badge'
    };
  } else
  /* istanbul ignore next */
  {
    cov_26q8k2ch6g().b[13][1]++;
  }
  cov_26q8k2ch6g().s[56]++;
  return {
    canClaim: true
  };
}
/**
 * Determine appropriate verification badge type
 */
function getVerificationBadgeType(verificationLevel, isOfficialAccount =
/* istanbul ignore next */
(cov_26q8k2ch6g().b[14][0]++, false)) {
  /* istanbul ignore next */
  cov_26q8k2ch6g().f[5]++;
  cov_26q8k2ch6g().s[57]++;
  if (
  /* istanbul ignore next */
  (cov_26q8k2ch6g().b[16][0]++, isOfficialAccount) ||
  /* istanbul ignore next */
  (cov_26q8k2ch6g().b[16][1]++, verificationLevel >= exports.VERIFICATION_LEVELS.OFFICIAL)) {
    /* istanbul ignore next */
    cov_26q8k2ch6g().b[15][0]++;
    cov_26q8k2ch6g().s[58]++;
    return 'official';
  } else
  /* istanbul ignore next */
  {
    cov_26q8k2ch6g().b[15][1]++;
  }
  cov_26q8k2ch6g().s[59]++;
  if (verificationLevel >= exports.VERIFICATION_LEVELS.IDENTITY) {
    /* istanbul ignore next */
    cov_26q8k2ch6g().b[17][0]++;
    cov_26q8k2ch6g().s[60]++;
    return 'verified';
  } else
  /* istanbul ignore next */
  {
    cov_26q8k2ch6g().b[17][1]++;
  }
  cov_26q8k2ch6g().s[61]++;
  if (verificationLevel >= exports.VERIFICATION_LEVELS.BASIC) {
    /* istanbul ignore next */
    cov_26q8k2ch6g().b[18][0]++;
    cov_26q8k2ch6g().s[62]++;
    return 'creator';
  } else
  /* istanbul ignore next */
  {
    cov_26q8k2ch6g().b[18][1]++;
  }
  cov_26q8k2ch6g().s[63]++;
  return null;
}
function validateVerificationRequest(request) {
  /* istanbul ignore next */
  cov_26q8k2ch6g().f[6]++;
  const {
    username,
    requestedLevel
  } =
  /* istanbul ignore next */
  (cov_26q8k2ch6g().s[64]++, request);
  // Check if username is available for verification
  const protection =
  /* istanbul ignore next */
  (cov_26q8k2ch6g().s[65]++, isProtectedUsername(username));
  /* istanbul ignore next */
  cov_26q8k2ch6g().s[66]++;
  if (
  /* istanbul ignore next */
  (cov_26q8k2ch6g().b[20][0]++, protection.isProtected) &&
  /* istanbul ignore next */
  (cov_26q8k2ch6g().b[20][1]++, requestedLevel >= exports.VERIFICATION_LEVELS.OFFICIAL)) {
    /* istanbul ignore next */
    cov_26q8k2ch6g().b[19][0]++;
    cov_26q8k2ch6g().s[67]++;
    return {
      valid: false,
      error: 'Username requires special admin approval for official verification'
    };
  } else
  /* istanbul ignore next */
  {
    cov_26q8k2ch6g().b[19][1]++;
  }
  // Validate requested level
  cov_26q8k2ch6g().s[68]++;
  if (
  /* istanbul ignore next */
  (cov_26q8k2ch6g().b[22][0]++, requestedLevel < exports.VERIFICATION_LEVELS.BASIC) ||
  /* istanbul ignore next */
  (cov_26q8k2ch6g().b[22][1]++, requestedLevel > exports.VERIFICATION_LEVELS.CELEBRITY)) {
    /* istanbul ignore next */
    cov_26q8k2ch6g().b[21][0]++;
    cov_26q8k2ch6g().s[69]++;
    return {
      valid: false,
      error: 'Invalid verification level requested'
    };
  } else
  /* istanbul ignore next */
  {
    cov_26q8k2ch6g().b[21][1]++;
  }
  // High-level verifications require documentation
  cov_26q8k2ch6g().s[70]++;
  if (
  /* istanbul ignore next */
  (cov_26q8k2ch6g().b[24][0]++, requestedLevel >= exports.VERIFICATION_LEVELS.IDENTITY) && (
  /* istanbul ignore next */
  (cov_26q8k2ch6g().b[24][1]++, !request.documentation) ||
  /* istanbul ignore next */
  (cov_26q8k2ch6g().b[24][2]++, request.documentation.length === 0))) {
    /* istanbul ignore next */
    cov_26q8k2ch6g().b[23][0]++;
    cov_26q8k2ch6g().s[71]++;
    return {
      valid: false,
      error: 'Documentation required for identity verification'
    };
  } else
  /* istanbul ignore next */
  {
    cov_26q8k2ch6g().b[23][1]++;
  }
  cov_26q8k2ch6g().s[72]++;
  return {
    valid: true
  };
}
/**
 * Anti-impersonation bio content validation
 */
function validateBioForImpersonation(bio) {
  /* istanbul ignore next */
  cov_26q8k2ch6g().f[7]++;
  cov_26q8k2ch6g().s[73]++;
  if (!bio) {
    /* istanbul ignore next */
    cov_26q8k2ch6g().b[25][0]++;
    cov_26q8k2ch6g().s[74]++;
    return {
      valid: true
    };
  } else
  /* istanbul ignore next */
  {
    cov_26q8k2ch6g().b[25][1]++;
  }
  const lowerBio =
  /* istanbul ignore next */
  (cov_26q8k2ch6g().s[75]++, bio.toLowerCase());
  // Check for verification claims
  const verificationClaims =
  /* istanbul ignore next */
  (cov_26q8k2ch6g().s[76]++, ['verified account', 'official account', 'authentic account', 'real account', 'legitimate account', 'approved account', 'certified by', 'endorsed by', 'validated by']);
  /* istanbul ignore next */
  cov_26q8k2ch6g().s[77]++;
  for (const claim of verificationClaims) {
    /* istanbul ignore next */
    cov_26q8k2ch6g().s[78]++;
    if (lowerBio.includes(claim)) {
      /* istanbul ignore next */
      cov_26q8k2ch6g().b[26][0]++;
      cov_26q8k2ch6g().s[79]++;
      return {
        valid: false,
        error: 'Verification claims not allowed in bio'
      };
    } else
    /* istanbul ignore next */
    {
      cov_26q8k2ch6g().b[26][1]++;
    }
  }
  // Check for celebrity impersonation claims
  const impersonationClaims =
  /* istanbul ignore next */
  (cov_26q8k2ch6g().s[80]++, ['i am', 'this is', 'real', 'actual', 'genuine', 'not fake', 'authentic', 'original']);
  const celebrityNames =
  /* istanbul ignore next */
  (cov_26q8k2ch6g().s[81]++, Array.from(exports.PROTECTED_USERNAMES));
  /* istanbul ignore next */
  cov_26q8k2ch6g().s[82]++;
  for (const claim of impersonationClaims) {
    /* istanbul ignore next */
    cov_26q8k2ch6g().s[83]++;
    for (const celebrity of celebrityNames) {
      /* istanbul ignore next */
      cov_26q8k2ch6g().s[84]++;
      if (
      /* istanbul ignore next */
      (cov_26q8k2ch6g().b[28][0]++, lowerBio.includes(`${claim} ${celebrity}`)) ||
      /* istanbul ignore next */
      (cov_26q8k2ch6g().b[28][1]++, lowerBio.includes(`${celebrity} ${claim}`))) {
        /* istanbul ignore next */
        cov_26q8k2ch6g().b[27][0]++;
        cov_26q8k2ch6g().s[85]++;
        return {
          valid: false,
          error: 'Celebrity impersonation claims not allowed'
        };
      } else
      /* istanbul ignore next */
      {
        cov_26q8k2ch6g().b[27][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_26q8k2ch6g().s[86]++;
  return {
    valid: true
  };
}
/**
 * Get verification badge display properties
 */
function getVerificationBadgeDisplay(badge) {
  /* istanbul ignore next */
  cov_26q8k2ch6g().f[8]++;
  const badgeConfig =
  /* istanbul ignore next */
  (cov_26q8k2ch6g().s[87]++, {
    official: {
      icon: '✓',
      color: '#1DA1F2',
      // Twitter blue
      label: 'Official',
      description: 'This account has been verified as an official representative'
    },
    verified: {
      icon: '✓',
      color: '#10B981',
      // Green
      label: 'Verified',
      description: 'This account has been verified through identity documentation'
    },
    creator: {
      icon: '⭐',
      color: '#F59E0B',
      // Amber
      label: 'Creator',
      description: 'This account belongs to a content creator or community member'
    },
    celebrity: {
      icon: '👑',
      color: '#8B5CF6',
      // Purple
      label: 'Celebrity',
      description: 'This account belongs to a notable public figure'
    }
  });
  /* istanbul ignore next */
  cov_26q8k2ch6g().s[88]++;
  return badge ?
  /* istanbul ignore next */
  (cov_26q8k2ch6g().b[29][0]++, badgeConfig[badge]) :
  /* istanbul ignore next */
  (cov_26q8k2ch6g().b[29][1]++, null);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,