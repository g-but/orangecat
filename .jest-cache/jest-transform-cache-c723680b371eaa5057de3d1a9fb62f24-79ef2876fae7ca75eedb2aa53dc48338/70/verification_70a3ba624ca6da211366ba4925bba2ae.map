{"version":3,"names":["cov_26q8k2ch6g","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","isProtectedUsername","canClaimVerificationBadge","getVerificationBadgeType","validateVerificationRequest","validateBioForImpersonation","getVerificationBadgeDisplay","VERIFICATION_LEVELS","UNVERIFIED","BASIC","IDENTITY","OFFICIAL","CELEBRITY","PROTECTED_USERNAMES","Set","username","lowerUsername","toLowerCase","has","isProtected","reason","suggestedAlternatives","generateUsernameAlternatives","normalizedUsername","replace","protectedName","Array","from","startsWith","suffix","slice","length","test","usernameWithoutSeparators","compoundVariations","variation","isLookalikeName","candidate","substitutions","variations","generateNameVariations","includes","i","char","subs","sub","add","originalUsername","base","currentVerificationLevel","protection","canClaim","verificationLevel","isOfficialAccount","request","requestedLevel","valid","error","documentation","bio","lowerBio","verificationClaims","claim","impersonationClaims","celebrityNames","celebrity","badge","badgeConfig","official","icon","color","label","description","verified","creator"],"sources":["/home/g/dev/orangecat/src/utils/verification.ts"],"sourcesContent":["/**\n * Verification System for OrangeCat Platform\n * \n * Handles official account verification, celebrity account protection,\n * and verification badge management to prevent impersonation.\n */\n\nexport interface VerificationStatus {\n  isVerified: boolean;\n  verificationLevel: number;\n  verificationBadge?: 'official' | 'verified' | 'creator' | 'celebrity';\n  verifiedAt?: Date;\n  verifierUserId?: string;\n}\n\nexport interface CelebrityProtectionResult {\n  isProtected: boolean;\n  reason?: string;\n  suggestedAlternatives?: string[];\n}\n\n/**\n * Verification levels:\n * 0 - Unverified\n * 1 - Basic verification (email verified)\n * 2 - Identity verified (documents submitted)\n * 3 - Official account (manually verified by admin)\n * 4 - Celebrity/VIP (special protection status)\n */\nexport const VERIFICATION_LEVELS = {\n  UNVERIFIED: 0,\n  BASIC: 1,\n  IDENTITY: 2,\n  OFFICIAL: 3,\n  CELEBRITY: 4\n} as const;\n\n/**\n * Protected celebrity and public figure usernames\n * These require special admin approval to claim\n */\nexport const PROTECTED_USERNAMES = new Set([\n  // Bitcoin Legends\n  'satoshi', 'satoshinakamoto', 'hal', 'halfinney', 'nickszabo',\n  \n  // Bitcoin Core Developers\n  'gmaxwell', 'sipa', 'petertodd', 'jonasschnelli', 'laanwj',\n  'achow101', 'fanquake', 'meshcollider', 'promag', 'ryanofsky',\n  'adam3us',\n  \n  // Lightning Network Developers  \n  'roasbeef', 'laolu', 'bitconner', 'cfromknecht', 'halseth',\n  'joostjager', 'bhandras', 'wpaulino', 'yyforyongyu',\n  \n  // Bitcoin Companies (Official)\n  'bitcoin', 'bitcoincore', 'bitcoinfoundation', 'blockstream',\n  'lightninglabs', 'square', 'cashapp', 'strike', 'river',\n  'unchained', 'casa', 'coldcard', 'trezor', 'ledger',\n  \n  // Prominent Bitcoin Figures\n  'aantonop', 'jameson', 'lopp', 'hodlonaut', 'dergigi',\n  'saifedean', 'nic', 'carter', 'preston', 'pysh', 'stephan',\n  'livera', 'marty', 'bent', 'matt', 'odell', 'knut', 'svanholm',\n  \n  // Celebrities/Public Figures\n  'elonmusk', 'elon', 'jackdorsey', 'jack', 'saylor',\n  'michaelsaylor', 'cathie', 'wood', 'naval', 'balaji',\n  'tim', 'cook', 'jeff', 'bezos', 'bill', 'gates', 'warren', 'buffett',\n  'microsoft', 'apple', 'google', 'meta', 'facebook',\n  \n  // Government/Institutional\n  'fed', 'treasury', 'sec', 'cftc', 'biden', 'trump', 'yellen', 'powell',\n  \n  // Platform Reserved\n  'admin', 'administrator', 'moderator', 'support', 'help',\n  'official', 'verified', 'orangecat', 'staff', 'team'\n]);\n\n/**\n * Check if a username is protected and requires special verification\n */\nexport function isProtectedUsername(username: string): CelebrityProtectionResult {\n  const lowerUsername = username.toLowerCase();\n  \n  // First check exact match (case-insensitive)\n  if (PROTECTED_USERNAMES.has(lowerUsername)) {\n    return {\n      isProtected: true,\n      reason: 'Celebrity names not allowed - username is protected',\n      suggestedAlternatives: generateUsernameAlternatives(username)\n    };\n  }\n  \n  // Then check normalized version (removing separators but keeping numbers for usernames like adam3us)\n  const normalizedUsername = lowerUsername.replace(/[-_]/g, '');\n  if (PROTECTED_USERNAMES.has(normalizedUsername)) {\n    return {\n      isProtected: true,\n      reason: 'Celebrity names not allowed - username is protected',\n      suggestedAlternatives: generateUsernameAlternatives(username)\n    };\n  }\n  \n  // Check for variations with numbers/separators added to protected names\n  for (const protectedName of Array.from(PROTECTED_USERNAMES)) {\n    // Check if username starts with protected name + separator/number\n    if (lowerUsername.startsWith(protectedName)) {\n      const suffix = lowerUsername.slice(protectedName.length);\n      // Allow if suffix is clearly not impersonation (like _builder, _fan, etc.)\n      if (suffix && /^[_-]?(builder|dev|developer|fan|follower|user|community|unofficial|btc|bitcoin)$/.test(suffix)) {\n        continue; // This is a legitimate variation\n      }\n      // Block if it's just numbers or single characters (like elonmusk1, satoshi_)\n      if (suffix && /^[_-]?[0-9]*[_-]?$/.test(suffix)) {\n        return {\n          isProtected: true,\n          reason: `Username too similar to protected name \"${protectedName}\"`,\n          suggestedAlternatives: generateUsernameAlternatives(username)\n        };\n      }\n    }\n    \n    // Check if protected name can be formed by adding separators (elon_musk -> elonmusk)\n    const usernameWithoutSeparators = lowerUsername.replace(/[-_]/g, '');\n    if (usernameWithoutSeparators === protectedName) {\n      return {\n        isProtected: true,\n        reason: `Username too similar to protected name \"${protectedName}\"`,\n        suggestedAlternatives: generateUsernameAlternatives(username)\n      };\n    }\n    \n    // Special handling for compound names like \"elon_musk\" -> \"elonmusk\"\n    // Check if username with separators matches any protected compound name\n    const compoundVariations = [\n      lowerUsername.replace(/[-_]/g, ''),  // elon_musk -> elonmusk\n      lowerUsername.replace(/[-_]/g, ' '), // elon_musk -> elon musk (then check if \"elonmusk\" exists)\n    ];\n    \n    for (const variation of compoundVariations) {\n      if (PROTECTED_USERNAMES.has(variation.replace(/\\s/g, ''))) {\n        return {\n          isProtected: true,\n          reason: `Username too similar to protected name \"${variation.replace(/\\s/g, '')}\"`,\n          suggestedAlternatives: generateUsernameAlternatives(username)\n        };\n      }\n    }\n  }\n  \n  // Check for lookalike variations\n  for (const protectedName of Array.from(PROTECTED_USERNAMES)) {\n    if (isLookalikeName(lowerUsername, protectedName)) {\n      return {\n        isProtected: true,\n        reason: `Username too similar to protected name \"${protectedName}\"`,\n        suggestedAlternatives: generateUsernameAlternatives(username)\n      };\n    }\n  }\n  \n  return { isProtected: false };\n}\n\n/**\n * Check if two usernames are lookalikes (similarity-based impersonation)\n */\nfunction isLookalikeName(candidate: string, protectedName: string): boolean {\n  // Exact match\n  if (candidate === protectedName) return true;\n  \n  // Common character substitutions\n  const substitutions: Record<string, string[]> = {\n    'o': ['0', 'ο', 'о'], // Latin o, digit 0, Greek omicron, Cyrillic o\n    'a': ['@', 'α', 'а'], // Latin a, at symbol, Greek alpha, Cyrillic a\n    'e': ['3', 'е'],      // Latin e, digit 3, Cyrillic e\n    'i': ['1', 'l', 'і'], // Latin i, digit 1, lowercase L, Cyrillic i\n    'u': ['υ', 'и'],      // Latin u, Greek upsilon, Cyrillic n\n    's': ['$', '5'],      // Latin s, dollar sign, digit 5\n    'g': ['6', '9'],      // Latin g, digits 6 and 9\n  };\n  \n  // Generate variations of the protected name\n  const variations = generateNameVariations(protectedName, substitutions);\n  \n  return variations.includes(candidate);\n}\n\n/**\n * Generate common variations of a name for lookalike detection\n */\nfunction generateNameVariations(name: string, substitutions: Record<string, string[]>): string[] {\n  const variations = new Set([name]);\n  \n  // Add single character substitutions\n  for (let i = 0; i < name.length; i++) {\n    const char = name[i];\n    const subs = substitutions[char];\n    \n    if (subs) {\n      for (const sub of subs) {\n        const variation = name.slice(0, i) + sub + name.slice(i + 1);\n        variations.add(variation);\n      }\n    }\n  }\n  \n  return Array.from(variations);\n}\n\n/**\n * Generate alternative username suggestions\n */\nfunction generateUsernameAlternatives(originalUsername: string): string[] {\n  const base = originalUsername.toLowerCase().replace(/[^a-z0-9]/g, '');\n  \n  return [\n    `${base}_dev`,\n    `${base}_builder`,\n    `${base}_btc`,\n    `${base}_fan`,\n    `bitcoin_${base}`,\n    `${base}_unofficial`,\n    `${base}_user`,\n    `${base}_community`\n  ].slice(0, 5); // Return top 5 suggestions\n}\n\n/**\n * Check if user can claim a verification badge\n */\nexport function canClaimVerificationBadge(\n  username: string, \n  currentVerificationLevel: number\n): { canClaim: boolean; reason?: string } {\n  const protection = isProtectedUsername(username);\n  \n  if (protection.isProtected) {\n    return {\n      canClaim: false,\n      reason: 'Protected username requires admin verification'\n    };\n  }\n  \n  if (currentVerificationLevel < VERIFICATION_LEVELS.IDENTITY) {\n    return {\n      canClaim: false,\n      reason: 'Identity verification required before claiming verification badge'\n    };\n  }\n  \n  return { canClaim: true };\n}\n\n/**\n * Determine appropriate verification badge type\n */\nexport function getVerificationBadgeType(\n  verificationLevel: number,\n  isOfficialAccount: boolean = false\n): VerificationStatus['verificationBadge'] | null {\n  if (isOfficialAccount || verificationLevel >= VERIFICATION_LEVELS.OFFICIAL) {\n    return 'official';\n  }\n  \n  if (verificationLevel >= VERIFICATION_LEVELS.IDENTITY) {\n    return 'verified';\n  }\n  \n  if (verificationLevel >= VERIFICATION_LEVELS.BASIC) {\n    return 'creator';\n  }\n  \n  return null;\n}\n\n/**\n * Validate verification request\n */\nexport interface VerificationRequest {\n  username: string;\n  requestedLevel: number;\n  documentation?: string[];\n  reason?: string;\n}\n\nexport function validateVerificationRequest(\n  request: VerificationRequest\n): { valid: boolean; error?: string } {\n  const { username, requestedLevel } = request;\n  \n  // Check if username is available for verification\n  const protection = isProtectedUsername(username);\n  if (protection.isProtected && requestedLevel >= VERIFICATION_LEVELS.OFFICIAL) {\n    return {\n      valid: false,\n      error: 'Username requires special admin approval for official verification'\n    };\n  }\n  \n  // Validate requested level\n  if (requestedLevel < VERIFICATION_LEVELS.BASIC || \n      requestedLevel > VERIFICATION_LEVELS.CELEBRITY) {\n    return {\n      valid: false,\n      error: 'Invalid verification level requested'\n    };\n  }\n  \n  // High-level verifications require documentation\n  if (requestedLevel >= VERIFICATION_LEVELS.IDENTITY && \n      (!request.documentation || request.documentation.length === 0)) {\n    return {\n      valid: false,\n      error: 'Documentation required for identity verification'\n    };\n  }\n  \n  return { valid: true };\n}\n\n/**\n * Anti-impersonation bio content validation\n */\nexport function validateBioForImpersonation(bio: string): { valid: boolean; error?: string } {\n  if (!bio) return { valid: true };\n  \n  const lowerBio = bio.toLowerCase();\n  \n  // Check for verification claims\n  const verificationClaims = [\n    'verified account', 'official account', 'authentic account',\n    'real account', 'legitimate account', 'approved account',\n    'certified by', 'endorsed by', 'validated by'\n  ];\n  \n  for (const claim of verificationClaims) {\n    if (lowerBio.includes(claim)) {\n      return {\n        valid: false,\n        error: 'Verification claims not allowed in bio'\n      };\n    }\n  }\n  \n  // Check for celebrity impersonation claims\n  const impersonationClaims = [\n    'i am', 'this is', 'real', 'actual', 'genuine',\n    'not fake', 'authentic', 'original'\n  ];\n  \n  const celebrityNames = Array.from(PROTECTED_USERNAMES);\n  \n  for (const claim of impersonationClaims) {\n    for (const celebrity of celebrityNames) {\n      if (lowerBio.includes(`${claim} ${celebrity}`) || \n          lowerBio.includes(`${celebrity} ${claim}`)) {\n        return {\n          valid: false,\n          error: 'Celebrity impersonation claims not allowed'\n        };\n      }\n    }\n  }\n  \n  return { valid: true };\n}\n\n/**\n * Get verification badge display properties\n */\nexport function getVerificationBadgeDisplay(badge: VerificationStatus['verificationBadge']) {\n  const badgeConfig = {\n    official: {\n      icon: '✓',\n      color: '#1DA1F2', // Twitter blue\n      label: 'Official',\n      description: 'This account has been verified as an official representative'\n    },\n    verified: {\n      icon: '✓',\n      color: '#10B981', // Green\n      label: 'Verified',\n      description: 'This account has been verified through identity documentation'\n    },\n    creator: {\n      icon: '⭐',\n      color: '#F59E0B', // Amber\n      label: 'Creator',\n      description: 'This account belongs to a content creator or community member'\n    },\n    celebrity: {\n      icon: '👑',\n      color: '#8B5CF6', // Purple\n      label: 'Celebrity',\n      description: 'This account belongs to a notable public figure'\n    }\n  };\n  \n  return badge ? badgeConfig[badge] : null;\n} "],"mappings":"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","ignoreList":[]}