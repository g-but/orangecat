{"file":"/home/g/dev/orangecat/src/components/ui/__tests__/Input.test.tsx","mappings":";;;;;;AAAA;;;;;GAKG;AAEH,kDAA0B;AAC1B,kDAA4E;AAC5E,6EAAoD;AACpD,qCAAmC;AACnC,+CAAiE;AACjE,qDAA6B;AAE7B,QAAQ,CAAC,4CAA4C,EAAE,GAAG,EAAE;IAC1D,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACjC,IAAI,CAAC,wCAAwC,EAAE,GAAG,EAAE;YAClD,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,WAAW,EAAC,YAAY,GAAG,CAAC,CAAC;YAC3C,MAAM,CAAC,cAAM,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACxE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wCAAwC,EAAE,GAAG,EAAE;YAClD,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,KAAK,EAAC,eAAe,EAAC,WAAW,EAAC,aAAa,GAAG,CAAC,CAAC;YAClE,MAAM,CAAC,cAAM,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;YACnE,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAChE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,+CAA+C,EAAE,GAAG,EAAE;YACzD,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,WAAW,EAAC,gBAAgB,GAAG,CAAC,CAAC;YAC/C,MAAM,CAAC,cAAM,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;YAC1E,qCAAqC;YACrC,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC;QAC9D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,+BAA+B,EAAE,GAAG,EAAE;YACzC,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,WAAW,EAAC,cAAc,EAAC,SAAS,EAAC,cAAc,GAAG,CAAC,CAAC;YACtE,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;YAC1D,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8BAA8B,EAAE,GAAG,EAAE;;YACxC,MAAM,GAAG,GAAG,eAAK,CAAC,SAAS,EAAoB,CAAC;YAChD,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,GAAG,EAAE,GAAG,EAAE,WAAW,EAAC,UAAU,GAAG,CAAC,CAAC;YACnD,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;YAClC,MAAM,CAAC,MAAA,GAAG,CAAC,OAAO,0CAAE,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;QAC3C,IAAI,CAAC,gCAAgC,EAAE,GAAG,EAAE;YAC1C,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,IAAI,EAAC,OAAO,EAAC,WAAW,EAAC,aAAa,GAAG,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;YACzD,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mCAAmC,EAAE,GAAG,EAAE;YAC7C,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,IAAI,EAAC,UAAU,EAAC,WAAW,EAAC,gBAAgB,GAAG,CAAC,CAAC;YAC/D,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;YAC5D,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qDAAqD,EAAE,GAAG,EAAE;YAC/D,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,IAAI,EAAC,QAAQ,EAAC,WAAW,EAAC,cAAc,EAAC,GAAG,EAAC,GAAG,EAAC,IAAI,EAAC,YAAY,GAAG,CAAC,CAAC;YACrF,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;YAC1D,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YAChD,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kDAAkD,EAAE,GAAG,EAAE;YAC5D,MAAM,qBAAqB,GAAG,sCAAsC,CAAC;YACrE,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,IAAI,EAAC,MAAM,EAAC,OAAO,EAAE,qBAAqB,EAAE,WAAW,EAAC,iBAAiB,GAAG,CAAC,CAAC;YAC5F,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;YAC7D,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,+BAA+B,EAAE,GAAG,EAAE;YACzC,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,QAAQ,QAAC,WAAW,EAAC,gBAAgB,GAAG,CAAC,CAAC;YACxD,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;YAC5D,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8BAA8B,EAAE,GAAG,EAAE;YACxC,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,QAAQ,QAAC,WAAW,EAAC,gBAAgB,GAAG,CAAC,CAAC;YACxD,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;YAC5D,MAAM,CAAC,KAAK,CAAC,CAAC,YAAY,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8BAA8B,EAAE,GAAG,EAAE;YACxC,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,QAAQ,QAAC,KAAK,EAAC,iBAAiB,GAAG,CAAC,CAAC;YACnD,MAAM,KAAK,GAAG,cAAM,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;YAC1D,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACnC,IAAI,CAAC,+BAA+B,EAAE,GAAG,EAAE;YACzC,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,IAAI,EAAE,mBAAI,EAAE,WAAW,EAAC,iBAAiB,GAAG,CAAC,CAAC;YAC5D,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;YAC7D,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACnC,MAAM,CAAC,cAAM,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAC7E,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,2CAA2C,EAAE,GAAG,EAAE;YACrD,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,IAAI,EAAE,mBAAI,EAAE,IAAI,EAAC,UAAU,EAAC,WAAW,EAAC,oBAAoB,GAAG,CAAC,CAAC;YAC/E,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC;YAChE,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oDAAoD,EAAE,GAAG,EAAE;YAC9D,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,IAAI,EAAE,sBAAO,EAAE,WAAW,EAAC,gBAAgB,GAAG,CAAC,CAAC;YAC9D,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;YAC5D,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iDAAiD,EAAE,GAAG,EAAE;YAC3D,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,IAAI,EAAE,mBAAI,EAAE,WAAW,EAAC,UAAU,GAAG,CAAC,CAAC;YACrD,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;YACtD,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kDAAkD,EAAE,GAAG,EAAE;YAC5D,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,IAAI,EAAE,qBAAM,EAAE,WAAW,EAAC,kBAAkB,GAAG,CAAC,CAAC;YAC/D,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAC;YAC9D,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACtD,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,IAAI,EAAE,mBAAI,EAAE,WAAW,EAAC,mBAAmB,GAAG,CAAC,CAAC;YAC9D,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAC;YAC/D,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,2CAA2C,EAAE,GAAG,EAAE;YACrD,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,WAAW,EAAC,iBAAiB,GAAG,CAAC,CAAC;YAChD,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;YAC7D,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;QACpC,IAAI,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACrD,MAAM,IAAI,GAAG,oBAAS,CAAC,KAAK,EAAE,CAAC;YAC/B,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,WAAW,EAAC,WAAW,GAAG,CAAC,CAAC;YAC1C,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;YAEvD,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;YACzC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACrD,MAAM,IAAI,GAAG,oBAAS,CAAC,KAAK,EAAE,CAAC;YAC/B,MAAM,OAAO,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;YAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;YAEzB,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAC,YAAY,GAAG,CAAC,CAAC;YAC7E,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;YAExD,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACxB,MAAM,CAAC,OAAO,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;YAEzC,MAAM,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,kBAAkB;YACpC,MAAM,CAAC,MAAM,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;YAC/C,MAAM,IAAI,GAAG,oBAAS,CAAC,KAAK,EAAE,CAAC;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;YAE3B,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAC,aAAa,GAAG,CAAC,CAAC;YAChE,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;YAEzD,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC/B,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,yBAAyB;QACtE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAChD,MAAM,IAAI,GAAG,oBAAS,CAAC,KAAK,EAAE,CAAC;YAC/B,MAAM,aAAa,GAAG,GAAG,EAAE;gBACzB,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,eAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAC7C,OAAO,CACL,uBAAC,eAAK,IACJ,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EACzC,WAAW,EAAC,kBAAkB,GAC9B,CACH,CAAC;YACJ,CAAC,CAAC;YAEF,IAAA,cAAM,EAAC,uBAAC,aAAa,KAAG,CAAC,CAAC;YAC1B,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAC;YAE9D,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;YACrC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;YAC3C,MAAM,IAAI,GAAG,oBAAS,CAAC,KAAK,EAAE,CAAC;YAC/B,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,YAAY,EAAC,eAAe,EAAC,WAAW,EAAC,YAAY,GAAG,CAAC,CAAC;YACxE,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;YAExD,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;YAC3C,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACxB,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAClD,IAAI,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACrD,MAAM,IAAI,GAAG,oBAAS,CAAC,KAAK,EAAE,CAAC;YAC/B,IAAA,cAAM,EACJ,uBAAC,eAAK,IACJ,IAAI,EAAE,sBAAO,EACb,WAAW,EAAC,uBAAuB,EACnC,OAAO,EAAC,sCAAsC,EAC9C,KAAK,EAAC,iBAAiB,GACvB,CACH,CAAC;YAEF,MAAM,KAAK,GAAG,cAAM,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;YACvD,MAAM,YAAY,GAAG,4CAA4C,CAAC;YAElE,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;YACrC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;YACpD,MAAM,IAAI,GAAG,oBAAS,CAAC,KAAK,EAAE,CAAC;YAC/B,IAAA,cAAM,EACJ,uBAAC,eAAK,IACJ,IAAI,EAAC,QAAQ,EACb,GAAG,EAAC,GAAG,EACP,GAAG,EAAC,kBAAkB,EACtB,IAAI,EAAC,GAAG,EACR,WAAW,EAAC,oBAAoB,EAChC,KAAK,EAAC,wBAAwB,GAC9B,CACH,CAAC;YAEF,MAAM,KAAK,GAAG,cAAM,CAAC,cAAc,CAAC,wBAAwB,CAAC,CAAC;YAC9D,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YACjC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;YACpD,MAAM,IAAI,GAAG,oBAAS,CAAC,KAAK,EAAE,CAAC;YAC/B,IAAA,cAAM,EACJ,uBAAC,eAAK,IACJ,SAAS,EAAE,GAAG,EACd,WAAW,EAAC,sBAAsB,EAClC,KAAK,EAAC,gBAAgB,EACtB,QAAQ,SACR,CACH,CAAC;YAEF,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,CAAC;YAClE,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,8BAA8B,CAAC,CAAC;YACvD,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,8BAA8B,CAAC,CAAC;YAC1D,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;YAClD,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;YACxD,MAAM,IAAI,GAAG,oBAAS,CAAC,KAAK,EAAE,CAAC;YAC/B,IAAA,cAAM,EACJ,uBAAC,eAAK,IACJ,IAAI,EAAC,OAAO,EACZ,IAAI,EAAE,mBAAI,EACV,WAAW,EAAC,kBAAkB,EAC9B,KAAK,EAAC,eAAe,EACrB,QAAQ,SACR,CACH,CAAC;YAEF,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAC;YAC9D,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC;YAChD,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;YACnD,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YAC/C,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gEAAgE,EAAE,KAAK,IAAI,EAAE;YAChF,MAAM,IAAI,GAAG,oBAAS,CAAC,KAAK,EAAE,CAAC;YAC/B,MAAM,aAAa,GAAG,GAAG,EAAE;gBACzB,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,eAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC9D,OAAO,CACL,4CACE,uBAAC,eAAK,IACJ,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,EACxC,IAAI,EAAE,mBAAI,EACV,WAAW,EAAC,gBAAgB,EAC5B,KAAK,EAAC,UAAU,GAChB,EACF,mCAAQ,OAAO,EAAE,GAAG,EAAE,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,YAClD,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,GACxB,IACL,CACP,CAAC;YACJ,CAAC,CAAC;YAEF,IAAA,cAAM,EAAC,uBAAC,aAAa,KAAG,CAAC,CAAC;YAC1B,MAAM,KAAK,GAAG,cAAM,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YAChD,MAAM,YAAY,GAAG,cAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAE9C,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,sBAAsB,CAAC,CAAC;YAC/C,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAElD,MAAM,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAC/B,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;QAC1C,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE;YAC3C,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,WAAW,EAAC,mBAAmB,GAAG,CAAC,CAAC;YAClD,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAC;YAC/D,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,0BAA0B,EAAE,wBAAwB,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE;YAC3C,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,WAAW,EAAC,kBAAkB,GAAG,CAAC,CAAC;YACjD,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAC;YAC9D,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,iBAAiB,EAAE,WAAW,CAAC,CAAC;QAC7F,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oDAAoD,EAAE,GAAG,EAAE;YAC9D,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,KAAK,EAAC,kBAAkB,EAAC,WAAW,EAAC,oBAAoB,GAAG,CAAC,CAAC;YAC5E,MAAM,KAAK,GAAG,cAAM,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;YACxD,MAAM,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gCAAgC,EAAE,GAAG,EAAE;YAC1C,IAAA,cAAM,EACJ,uBAAC,eAAK,IACJ,WAAW,EAAC,WAAW,sBACN,WAAW,kBACf,MAAM,GACnB,CACH,CAAC;YACF,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;YACvD,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,kBAAkB,EAAE,WAAW,CAAC,CAAC;YAC/D,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sCAAsC,EAAE,GAAG,EAAE;YAChD,MAAM,SAAS,GAAG,uEAAuE,CAAC;YAC1F,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,KAAK,EAAE,SAAS,EAAE,WAAW,EAAC,iBAAiB,GAAG,CAAC,CAAC;YAClE,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;YACxD,MAAM,CAAC,cAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,gCAAgC,EAAE,GAAG,EAAE;QAC9C,IAAI,CAAC,sCAAsC,EAAE,GAAG,EAAE;YAChD,IAAA,cAAM,EAAC,uBAAC,eAAK,KAAG,CAAC,CAAC;YAClB,MAAM,KAAK,GAAG,cAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gCAAgC,EAAE,GAAG,EAAE;YAC1C,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,KAAK,EAAE,SAAS,EAAE,WAAW,EAAC,iBAAiB,GAAG,CAAC,CAAC;YAClE,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;YAC7D,MAAM,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oCAAoC,EAAE,GAAG,EAAE;YAC9C,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,IAAI,EAAE,SAAS,EAAE,WAAW,EAAC,SAAS,GAAG,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;YACrD,MAAM,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YAC3D,MAAM,IAAI,GAAG,oBAAS,CAAC,KAAK,EAAE,CAAC;YAC/B,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,WAAW,EAAC,oBAAoB,GAAG,CAAC,CAAC;YACnD,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC;YAEhE,MAAM,WAAW,GAAG,oBAAoB,CAAC;YACzC,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;YACpC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;YACjD,MAAM,IAAI,GAAG,oBAAS,CAAC,KAAK,EAAE,CAAC;YAC/B,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,WAAW,EAAC,iBAAiB,GAAG,CAAC,CAAC;YAChD,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;YAE7D,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,+BAA+B;YACjE,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YACjC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;YAC5C,MAAM,IAAI,GAAG,oBAAS,CAAC,KAAK,EAAE,CAAC;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;YAC3B,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAC,mBAAmB,GAAG,CAAC,CAAC;YACtE,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAC;YAE/D,uCAAuC;YACvC,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACnC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qCAAqC,EAAE,GAAG,EAAE;QACnD,IAAI,CAAC,mCAAmC,EAAE,GAAG,EAAE;YAC7C,MAAM,oBAAoB,GAAG,+BAA+B,CAAC;YAC7D,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,WAAW,EAAE,oBAAoB,GAAI,CAAC,CAAC;YACrD,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC;YAChE,MAAM,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,CAAC;YAClC,sDAAsD;QACxD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE;YACvC,MAAM,cAAc,GAAG,kCAAkC,CAAC;YAC1D,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,KAAK,EAAE,cAAc,EAAE,WAAW,EAAC,UAAU,GAAG,CAAC,CAAC;YAChE,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;YAC7D,kCAAkC;QACpC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;YAC/D,MAAM,IAAI,GAAG,oBAAS,CAAC,KAAK,EAAE,CAAC;YAC/B,IAAA,cAAM,EAAC,uBAAC,eAAK,IAAC,WAAW,EAAC,YAAY,GAAG,CAAC,CAAC;YAC3C,MAAM,KAAK,GAAG,cAAM,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;YAExD,MAAM,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,+BAA+B;YACrE,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACxB,MAAM,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAC/B,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/home/g/dev/orangecat/src/components/ui/__tests__/Input.test.tsx"],"sourcesContent":["/**\n * Input Component Tests\n * \n * Testing critical form input component used throughout the Bitcoin platform\n * Essential for user authentication, donations, and campaign creation\n */\n\nimport React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport '@testing-library/jest-dom';\nimport { Mail, Lock, Bitcoin, User, Search } from 'lucide-react';\nimport Input from '../Input';\n\ndescribe('🎨 Input Component - Form Foundation Tests', () => {\n  describe('✅ Basic Rendering', () => {\n    test('should render input field successfully', () => {\n      render(<Input placeholder=\"Enter text\" />);\n      expect(screen.getByPlaceholderText('Enter text')).toBeInTheDocument();\n    });\n\n    test('should render with label when provided', () => {\n      render(<Input label=\"Email Address\" placeholder=\"Enter email\" />);\n      expect(screen.getByLabelText('Email Address')).toBeInTheDocument();\n      expect(screen.getByText('Email Address')).toBeInTheDocument();\n    });\n\n    test('should render without label when not provided', () => {\n      render(<Input placeholder=\"No label input\" />);\n      expect(screen.getByPlaceholderText('No label input')).toBeInTheDocument();\n      // Should not have any label elements\n      expect(screen.queryByText('label')).not.toBeInTheDocument();\n    });\n\n    test('should apply custom className', () => {\n      render(<Input placeholder=\"Custom class\" className=\"custom-input\" />);\n      const input = screen.getByPlaceholderText('Custom class');\n      expect(input).toHaveClass('custom-input');\n    });\n\n    test('should forward ref correctly', () => {\n      const ref = React.createRef<HTMLInputElement>();\n      render(<Input ref={ref} placeholder=\"Ref test\" />);\n      expect(ref.current).toBeDefined();\n      expect(ref.current?.tagName).toBe('INPUT');\n    });\n  });\n\n  describe('🔐 Input Types & Validation', () => {\n    test('should handle email input type', () => {\n      render(<Input type=\"email\" placeholder=\"Enter email\" />);\n      const input = screen.getByPlaceholderText('Enter email');\n      expect(input).toHaveAttribute('type', 'email');\n    });\n\n    test('should handle password input type', () => {\n      render(<Input type=\"password\" placeholder=\"Enter password\" />);\n      const input = screen.getByPlaceholderText('Enter password');\n      expect(input).toHaveAttribute('type', 'password');\n    });\n\n    test('should handle number input type for Bitcoin amounts', () => {\n      render(<Input type=\"number\" placeholder=\"Enter amount\" min=\"0\" step=\"0.00000001\" />);\n      const input = screen.getByPlaceholderText('Enter amount');\n      expect(input).toHaveAttribute('type', 'number');\n      expect(input).toHaveAttribute('min', '0');\n      expect(input).toHaveAttribute('step', '0.00000001');\n    });\n\n    test('should handle text input with pattern validation', () => {\n      const bitcoinAddressPattern = '^(bc1|[13])[a-zA-HJ-NP-Z0-9]{25,87}$';\n      render(<Input type=\"text\" pattern={bitcoinAddressPattern} placeholder=\"Bitcoin address\" />);\n      const input = screen.getByPlaceholderText('Bitcoin address');\n      expect(input).toHaveAttribute('pattern', bitcoinAddressPattern);\n    });\n\n    test('should handle required fields', () => {\n      render(<Input required placeholder=\"Required field\" />);\n      const input = screen.getByPlaceholderText('Required field');\n      expect(input).toHaveAttribute('required');\n    });\n\n    test('should handle disabled state', () => {\n      render(<Input disabled placeholder=\"Disabled input\" />);\n      const input = screen.getByPlaceholderText('Disabled input');\n      expect(input).toBeDisabled();\n    });\n\n    test('should handle readonly state', () => {\n      render(<Input readOnly value=\"Read only value\" />);\n      const input = screen.getByDisplayValue('Read only value');\n      expect(input).toHaveAttribute('readonly');\n    });\n  });\n\n  describe('🔍 Icon Integration', () => {\n    test('should render with email icon', () => {\n      render(<Input icon={Mail} placeholder=\"Email with icon\" />);\n      const input = screen.getByPlaceholderText('Email with icon');\n      expect(input).toHaveClass('pl-10');\n      expect(screen.getByPlaceholderText('Email with icon')).toBeInTheDocument();\n    });\n\n    test('should render with lock icon for password', () => {\n      render(<Input icon={Lock} type=\"password\" placeholder=\"Password with icon\" />);\n      const input = screen.getByPlaceholderText('Password with icon');\n      expect(input).toHaveClass('pl-10');\n    });\n\n    test('should render with Bitcoin icon for Bitcoin fields', () => {\n      render(<Input icon={Bitcoin} placeholder=\"Bitcoin amount\" />);\n      const input = screen.getByPlaceholderText('Bitcoin amount');\n      expect(input).not.toHaveClass('pl-10');\n    });\n\n    test('should render with user icon for profile fields', () => {\n      render(<Input icon={User} placeholder=\"Username\" />);\n      const input = screen.getByPlaceholderText('Username');\n      expect(input).toHaveClass('pl-10');\n    });\n\n    test('should render with search icon for search fields', () => {\n      render(<Input icon={Search} placeholder=\"Search campaigns\" />);\n      const input = screen.getByPlaceholderText('Search campaigns');\n      expect(input).toHaveClass('pl-10');\n    });\n\n    test('should adjust padding when icon is present', () => {\n      render(<Input icon={Mail} placeholder=\"With icon padding\" />);\n      const input = screen.getByPlaceholderText('With icon padding');\n      expect(input).toHaveClass('pl-10');\n    });\n\n    test('should not have icon padding when no icon', () => {\n      render(<Input placeholder=\"No icon padding\" />);\n      const input = screen.getByPlaceholderText('No icon padding');\n      expect(input).not.toHaveClass('pl-10');\n    });\n  });\n\n  describe('🎮 User Interactions', () => {\n    test('should handle typing in input field', async () => {\n      const user = userEvent.setup();\n      render(<Input placeholder=\"Type here\" />);\n      const input = screen.getByPlaceholderText('Type here');\n      \n      await user.type(input, 'Hello Bitcoin!');\n      expect(input).toHaveValue('Hello Bitcoin!');\n    });\n\n    test('should handle focus and blur events', async () => {\n      const user = userEvent.setup();\n      const onFocus = jest.fn();\n      const onBlur = jest.fn();\n      \n      render(<Input onFocus={onFocus} onBlur={onBlur} placeholder=\"Focus test\" />);\n      const input = screen.getByPlaceholderText('Focus test');\n      \n      await user.click(input);\n      expect(onFocus).toHaveBeenCalledTimes(1);\n      \n      await user.tab(); // Move focus away\n      expect(onBlur).toHaveBeenCalledTimes(1);\n    });\n\n    test('should handle onChange events', async () => {\n      const user = userEvent.setup();\n      const onChange = jest.fn();\n      \n      render(<Input onChange={onChange} placeholder=\"Change test\" />);\n      const input = screen.getByPlaceholderText('Change test');\n      \n      await user.type(input, 'test');\n      expect(onChange).toHaveBeenCalledTimes(4); // One call per character\n    });\n\n    test('should handle controlled input', async () => {\n      const user = userEvent.setup();\n      const TestComponent = () => {\n        const [value, setValue] = React.useState('');\n        return (\n          <Input \n            value={value} \n            onChange={(e) => setValue(e.target.value)} \n            placeholder=\"Controlled input\" \n          />\n        );\n      };\n      \n      render(<TestComponent />);\n      const input = screen.getByPlaceholderText('Controlled input');\n      \n      await user.type(input, 'controlled');\n      expect(input).toHaveValue('controlled');\n    });\n\n    test('should handle clear input', async () => {\n      const user = userEvent.setup();\n      render(<Input defaultValue=\"Initial value\" placeholder=\"Clear test\" />);\n      const input = screen.getByPlaceholderText('Clear test');\n      \n      expect(input).toHaveValue('Initial value');\n      await user.clear(input);\n      expect(input).toHaveValue('');\n    });\n  });\n\n  describe('💰 Bitcoin Platform Specific Tests', () => {\n    test('should handle Bitcoin address input', async () => {\n      const user = userEvent.setup();\n      render(\n        <Input \n          icon={Bitcoin} \n          placeholder=\"Enter Bitcoin address\" \n          pattern=\"^(bc1|[13])[a-zA-HJ-NP-Z0-9]{25,87}$\"\n          label=\"Bitcoin Address\"\n        />\n      );\n      \n      const input = screen.getByLabelText('Bitcoin Address');\n      const validAddress = 'bc1qw508d6qejxtdg4y5r3zarvary0c5xw7kv8f3t4';\n      \n      await user.type(input, validAddress);\n      expect(input).toHaveValue(validAddress);\n    });\n\n    test('should handle satoshi amount input', async () => {\n      const user = userEvent.setup();\n      render(\n        <Input \n          type=\"number\"\n          min=\"1\"\n          max=\"2100000000000000\"\n          step=\"1\"\n          placeholder=\"Amount in satoshis\"\n          label=\"Donation Amount (sats)\"\n        />\n      );\n      \n      const input = screen.getByLabelText('Donation Amount (sats)');\n      await user.type(input, '100000');\n      expect(input).toHaveValue(100000);\n    });\n\n    test('should handle campaign title input', async () => {\n      const user = userEvent.setup();\n      render(\n        <Input \n          maxLength={100}\n          placeholder=\"Enter campaign title\"\n          label=\"Campaign Title\"\n          required\n        />\n      );\n      \n      const input = screen.getByPlaceholderText('Enter campaign title');\n      await user.type(input, 'Bitcoin Education Initiative');\n      expect(input).toHaveValue('Bitcoin Education Initiative');\n      expect(input).toHaveAttribute('maxLength', '100');\n      expect(input).toHaveAttribute('required');\n    });\n\n    test('should handle email registration input', async () => {\n      const user = userEvent.setup();\n      render(\n        <Input \n          type=\"email\"\n          icon={Mail}\n          placeholder=\"Enter your email\"\n          label=\"Email Address\"\n          required\n        />\n      );\n      \n      const input = screen.getByPlaceholderText('Enter your email');\n      await user.type(input, 'bitcoiner@example.com');\n      expect(input).toHaveValue('bitcoiner@example.com');\n      expect(input).toHaveAttribute('type', 'email');\n      expect(input).toHaveAttribute('required');\n    });\n\n    test('should handle password input with visibility toggle simulation', async () => {\n      const user = userEvent.setup();\n      const TestComponent = () => {\n        const [showPassword, setShowPassword] = React.useState(false);\n        return (\n          <div>\n            <Input \n              type={showPassword ? 'text' : 'password'}\n              icon={Lock}\n              placeholder=\"Enter password\"\n              label=\"Password\"\n            />\n            <button onClick={() => setShowPassword(!showPassword)}>\n              {showPassword ? 'Hide' : 'Show'}\n            </button>\n          </div>\n        );\n      };\n      \n      render(<TestComponent />);\n      const input = screen.getByLabelText('Password');\n      const toggleButton = screen.getByText('Show');\n      \n      await user.type(input, 'mySecurePassword123!');\n      expect(input).toHaveAttribute('type', 'password');\n      \n      await user.click(toggleButton);\n      expect(input).toHaveAttribute('type', 'text');\n    });\n  });\n\n  describe('🎨 Styling & Accessibility', () => {\n    test('should have proper focus styles', () => {\n      render(<Input placeholder=\"Focus styles test\" />);\n      const input = screen.getByPlaceholderText('Focus styles test');\n      expect(input).toHaveClass('focus:border-tiffany-500', 'focus:ring-tiffany-500');\n    });\n\n    test('should have proper base styling', () => {\n      render(<Input placeholder=\"Base styles test\" />);\n      const input = screen.getByPlaceholderText('Base styles test');\n      expect(input).toHaveClass('block', 'w-full', 'rounded-md', 'border-gray-300', 'shadow-sm');\n    });\n\n    test('should be accessible with proper label association', () => {\n      render(<Input label=\"Accessible Input\" placeholder=\"Test accessibility\" />);\n      const input = screen.getByLabelText('Accessible Input');\n      expect(input).toBeInTheDocument();\n    });\n\n    test('should support aria attributes', () => {\n      render(\n        <Input \n          placeholder=\"ARIA test\"\n          aria-describedby=\"help-text\"\n          aria-invalid=\"true\"\n        />\n      );\n      const input = screen.getByPlaceholderText('ARIA test');\n      expect(input).toHaveAttribute('aria-describedby', 'help-text');\n      expect(input).toHaveAttribute('aria-invalid', 'true');\n    });\n\n    test('should handle long labels gracefully', () => {\n      const longLabel = 'This is a very long label that might wrap to multiple lines in the UI';\n      render(<Input label={longLabel} placeholder=\"Long label test\" />);\n      expect(screen.getByText(longLabel)).toBeInTheDocument();\n      expect(screen.getByLabelText(longLabel)).toBeInTheDocument();\n    });\n  });\n\n  describe('🔧 Edge Cases & Error Handling', () => {\n    test('should handle empty props gracefully', () => {\n      render(<Input />);\n      const input = screen.getByRole('textbox');\n      expect(input).toBeInTheDocument();\n    });\n\n    test('should handle undefined values', () => {\n      render(<Input value={undefined} placeholder=\"Undefined value\" />);\n      const input = screen.getByPlaceholderText('Undefined value');\n      expect(input).toBeInTheDocument();\n    });\n\n    test('should handle null icon gracefully', () => {\n      render(<Input icon={undefined} placeholder=\"No icon\" />);\n      const input = screen.getByPlaceholderText('No icon');\n      expect(input).toBeInTheDocument();\n      expect(input).not.toHaveClass('pl-10');\n    });\n\n    test('should handle special characters in input', async () => {\n      const user = userEvent.setup();\n      render(<Input placeholder=\"Special chars test\" />);\n      const input = screen.getByPlaceholderText('Special chars test');\n      \n      const specialText = '₿ 💰 🚀 !@#$%^&*()';\n      await user.type(input, specialText);\n      expect(input).toHaveValue(specialText);\n    });\n\n    test('should handle long input values', async () => {\n      const user = userEvent.setup();\n      render(<Input placeholder=\"Long input test\" />);\n      const input = screen.getByPlaceholderText('Long input test');\n      \n      const longText = 'a'.repeat(100); // Reduced size for performance\n      await user.type(input, longText);\n      expect(input).toHaveValue(longText);\n    });\n\n    test('should handle rapid typing', async () => {\n      const user = userEvent.setup();\n      const onChange = jest.fn();\n      render(<Input onChange={onChange} placeholder=\"Rapid typing test\" />);\n      const input = screen.getByPlaceholderText('Rapid typing test');\n      \n      // Simulate typing without delay option\n      await user.type(input, 'rapid');\n      expect(input).toHaveValue('rapid');\n      expect(onChange).toHaveBeenCalledTimes(5);\n    });\n  });\n\n  describe('🔒 Security & Validation Edge Cases', () => {\n    test('should prevent XSS in placeholder', () => {\n      const maliciousPlaceholder = '<script>alert(\"xss\")</script>';\n      render(<Input placeholder={maliciousPlaceholder} />);\n      const input = screen.getByPlaceholderText(maliciousPlaceholder);\n      expect(input).toBeInTheDocument();\n      // Placeholder should be treated as text, not executed\n    });\n\n    test('should prevent XSS in label', () => {\n      const maliciousLabel = '<img src=x onerror=alert(\"xss\")>';\n      render(<Input label={maliciousLabel} placeholder=\"XSS test\" />);\n      expect(screen.getByText(maliciousLabel)).toBeInTheDocument();\n      // Label should be treated as text\n    });\n\n    test('should handle paste events with large content', async () => {\n      const user = userEvent.setup();\n      render(<Input placeholder=\"Paste test\" />);\n      const input = screen.getByPlaceholderText('Paste test');\n      \n      const largeContent = 'x'.repeat(100); // Reduced size for performance\n      await user.click(input);\n      await user.paste(largeContent);\n      expect(input).toHaveValue(largeContent);\n    });\n  });\n}); "],"version":3}