{"file":"/home/g/dev/orangecat/src/components/__tests__/SocialPages.test.tsx","mappings":"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","names":[],"sources":["/home/g/dev/orangecat/src/components/__tests__/SocialPages.test.tsx"],"sourcesContent":["/**\n * SOCIAL PAGES UI TESTS\n * \n * Comprehensive test suite for People, Organizations, and Projects page components\n * including empty states, search functionality, and user interactions.\n * \n * Created: 2025-01-08\n * Last Modified: 2025-01-08\n * Last Modified Summary: Complete UI test coverage for social collaboration pages\n */\n\nimport { describe, it, expect, beforeEach, jest } from '@jest/globals'\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\nimport { BrowserRouter } from 'react-router-dom'\nimport PeoplePage from '@/app/(authenticated)/people/page'\nimport OrganizationsPage from '@/app/(authenticated)/organizations/page'\nimport ProjectsPage from '@/app/(authenticated)/projects/page'\nimport React from 'react'\nimport '@testing-library/jest-dom'\n\n// Mock the auth context\nconst mockAuthContext = {\n  user: {\n    id: 'test-user-id',\n    email: 'test@example.com'\n  },\n  profile: {\n    id: 'test-user-id',\n    username: 'testuser',\n    full_name: 'Test User'\n  },\n  loading: false,\n  hydrated: true\n}\n\njest.mock('@/contexts/AuthContext', () => ({\n  useAuth: () => mockAuthContext\n}))\n\n// Mock the social services\nconst mockPeopleService = {\n  searchPeople: jest.fn(() => Promise.resolve([])),\n  getConnections: jest.fn(() => Promise.resolve([])),\n  sendConnectionRequest: jest.fn(() => Promise.resolve({ id: 'conn-1', status: 'pending' }))\n}\n\nconst mockOrganizationService = {\n  getUserOrganizations: jest.fn(() => Promise.resolve([])),\n  searchOrganizations: jest.fn(() => Promise.resolve([])),\n  joinOrganization: jest.fn(() => Promise.resolve())\n}\n\nconst mockProjectService = {\n  getUserProjects: jest.fn(() => Promise.resolve([])),\n  searchProjects: jest.fn(() => Promise.resolve([])),\n  joinProject: jest.fn(() => Promise.resolve())\n}\n\nconst mockEmptyStateService = {\n  getEmptyStateContent: jest.fn((section: string) => ({\n    title: `No ${section.charAt(0).toUpperCase() + section.slice(1)} Yet`,\n    description: `You haven't connected with any ${section} yet.`,\n    primaryAction: {\n      label: `Search ${section.charAt(0).toUpperCase() + section.slice(1)}`,\n      action: `/${section}/search`\n    },\n    secondaryAction: {\n      label: 'Complete Profile',\n      action: '/profile/edit'\n    },\n    benefits: [\n      'Collaborate on Bitcoin projects',\n      'Join organizations and DAOs',\n      'Share knowledge and resources'\n    ],\n    examples: [\n      'Connect with Bitcoin developers',\n      'Find co-founders for startup',\n      'Join local Bitcoin meetups'\n    ]\n  }))\n}\n\njest.mock('@/services/socialService', () => ({\n  PeopleService: mockPeopleService,\n  OrganizationService: mockOrganizationService,\n  ProjectService: mockProjectService,\n  EmptyStateService: mockEmptyStateService\n}))\n\n// Mock UI components\ninterface MockButtonProps {\n  children: React.ReactNode\n  onClick?: () => void\n  className?: string\n  [key: string]: any\n}\n\njest.mock('@/components/ui/button', () => ({\n  Button: ({ children, onClick, className, ...props }: MockButtonProps) => (\n    <button onClick={onClick} className={className} {...props}>\n      {children}\n    </button>\n  )\n}))\n\njest.mock('@/components/ui/input', () => ({\n  Input: ({ value, onChange, placeholder, ...props }: any) => (\n    <input \n      value={value} \n      onChange={onChange} \n      placeholder={placeholder} \n      {...props} \n    />\n  )\n}))\n\njest.mock('@/components/ui/card', () => ({\n  Card: ({ children, className }: any) => (\n    <div className={className}>{children}</div>\n  ),\n  CardContent: ({ children, className }: any) => (\n    <div className={className}>{children}</div>\n  ),\n  CardHeader: ({ children }: any) => <div>{children}</div>,\n  CardTitle: ({ children }: any) => <h3>{children}</h3>\n}))\n\njest.mock('@/components/ui/badge', () => ({\n  Badge: ({ children, variant, className }: any) => (\n    <span className={`badge ${variant} ${className}`}>{children}</span>\n  )\n}))\n\njest.mock('@/components/ui/avatar', () => ({\n  Avatar: ({ children, className }: any) => (\n    <div className={`avatar ${className}`}>{children}</div>\n  ),\n  AvatarImage: ({ src, alt }: any) => (\n    <img src={src} alt={alt} />\n  ),\n  AvatarFallback: ({ children, className }: any) => (\n    <div className={`avatar-fallback ${className}`}>{children}</div>\n  )\n}))\n\njest.mock('@/components/ui/tabs', () => ({\n  Tabs: ({ children, value, onValueChange }: any) => (\n    <div data-testid=\"tabs\" data-value={value}>\n      {children}\n    </div>\n  ),\n  TabsList: ({ children }: any) => (\n    <div data-testid=\"tabs-list\">{children}</div>\n  ),\n  TabsTrigger: ({ children, value, onClick }: any) => (\n    <button data-testid={`tab-${value}`} onClick={onClick}>\n      {children}\n    </button>\n  ),\n  TabsContent: ({ children, value }: any) => (\n    <div data-testid={`tab-content-${value}`}>{children}</div>\n  )\n}))\n\njest.mock('@/components/ui/progress', () => ({\n  Progress: ({ value, className }: any) => (\n    <div className={`progress ${className}`} data-value={value}>\n      <div style={{ width: `${value}%` }} />\n    </div>\n  )\n}))\n\n// Mock Lucide React icons\njest.mock('lucide-react', () => ({\n  Search: () => <span data-testid=\"search-icon\">🔍</span>,\n  Users: () => <span data-testid=\"users-icon\">👥</span>,\n  UserPlus: () => <span data-testid=\"user-plus-icon\">➕👤</span>,\n  Filter: () => <span data-testid=\"filter-icon\">🔽</span>,\n  MapPin: () => <span data-testid=\"map-pin-icon\">📍</span>,\n  Star: () => <span data-testid=\"star-icon\">⭐</span>,\n  Building: () => <span data-testid=\"building-icon\">🏢</span>,\n  Plus: () => <span data-testid=\"plus-icon\">➕</span>,\n  Bitcoin: () => <span data-testid=\"bitcoin-icon\">₿</span>,\n  Wallet: () => <span data-testid=\"wallet-icon\">💰</span>,\n  Globe: () => <span data-testid=\"globe-icon\">🌍</span>,\n  Rocket: () => <span data-testid=\"rocket-icon\">🚀</span>,\n  Target: () => <span data-testid=\"target-icon\">🎯</span>,\n  Calendar: () => <span data-testid=\"calendar-icon\">📅</span>,\n  TrendingUp: () => <span data-testid=\"trending-up-icon\">📈</span>\n}))\n\n// Test wrapper component\nconst TestWrapper = ({ children }: { children: React.ReactNode }) => (\n  <BrowserRouter>\n    {children}\n  </BrowserRouter>\n)\n\ndescribe('PeoplePage', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  it('should render page header correctly', async () => {\n    render(\n      <TestWrapper>\n        <PeoplePage />\n      </TestWrapper>\n    )\n\n    expect(screen.getByText('People')).toBeInTheDocument()\n    expect(screen.getByText('Connect with Bitcoin enthusiasts, builders, and changemakers worldwide')).toBeInTheDocument()\n  })\n\n  it('should display empty state when no connections', async () => {\n    render(\n      <TestWrapper>\n        <PeoplePage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      expect(screen.getByText('No People Yet')).toBeInTheDocument()\n      expect(screen.getByText('Search People')).toBeInTheDocument()\n      expect(screen.getByText('Complete Profile')).toBeInTheDocument()\n    })\n  })\n\n  it('should display benefits and examples in empty state', async () => {\n    render(\n      <TestWrapper>\n        <PeoplePage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      expect(screen.getByText('Why Connect?')).toBeInTheDocument()\n      expect(screen.getByText('Connection Examples')).toBeInTheDocument()\n      expect(screen.getByText('Collaborate on Bitcoin projects')).toBeInTheDocument()\n      expect(screen.getByText('Connect with Bitcoin developers')).toBeInTheDocument()\n    })\n  })\n\n  it('should handle search functionality', async () => {\n    const user = userEvent.setup()\n    \n    render(\n      <TestWrapper>\n        <PeoplePage />\n      </TestWrapper>\n    )\n\n    // Wait for component to load\n    await waitFor(() => {\n      expect(screen.getByPlaceholderText(/search people/i)).toBeInTheDocument()\n    })\n\n    const searchInput = screen.getByPlaceholderText(/search people/i)\n    const searchButton = screen.getByText('Search')\n\n    await user.type(searchInput, 'bitcoin developer')\n    await user.click(searchButton)\n\n    expect(mockPeopleService.searchPeople).toHaveBeenCalledWith({\n      query: 'bitcoin developer',\n      limit: 20\n    })\n  })\n\n  it('should handle connection requests', async () => {\n    const mockPeople = [\n      {\n        id: 'user-1',\n        username: 'bitcoindev',\n        full_name: 'Bitcoin Developer',\n        display_name: 'Bitcoin Developer',\n        avatar_url: 'https://example.com/avatar.jpg',\n        bio: 'Bitcoin core contributor',\n        location: 'San Francisco',\n        connections_count: 150,\n        skills: ['Bitcoin', 'Lightning', 'JavaScript'],\n        verification_status: 'verified'\n      }\n    ]\n\n    mockPeopleService.searchPeople.mockResolvedValue(mockPeople)\n\n    render(\n      <TestWrapper>\n        <PeoplePage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      expect(screen.getByText('Bitcoin Developer')).toBeInTheDocument()\n      expect(screen.getByText('@bitcoindev')).toBeInTheDocument()\n    })\n\n    const connectButton = screen.getByText('Connect')\n    fireEvent.click(connectButton)\n\n    expect(mockPeopleService.sendConnectionRequest).toHaveBeenCalledWith({\n      recipient_id: 'user-1',\n      message: 'Hi! I would like to connect with you on OrangeCat.'\n    })\n  })\n\n  it('should display person cards with correct information', async () => {\n    const mockPeople = [\n      {\n        id: 'user-1',\n        username: 'bitcoindev',\n        full_name: 'Bitcoin Developer',\n        display_name: 'Bitcoin Developer',\n        avatar_url: 'https://example.com/avatar.jpg',\n        bio: 'Bitcoin core contributor and Lightning Network enthusiast',\n        location: 'San Francisco, CA',\n        connections_count: 150,\n        skills: ['Bitcoin', 'Lightning', 'JavaScript', 'Go', 'Rust'],\n        verification_status: 'verified'\n      }\n    ]\n\n    mockPeopleService.searchPeople.mockResolvedValue(mockPeople)\n\n    render(\n      <TestWrapper>\n        <PeoplePage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      expect(screen.getByText('Bitcoin Developer')).toBeInTheDocument()\n      expect(screen.getByText('@bitcoindev')).toBeInTheDocument()\n      expect(screen.getByText('Bitcoin core contributor and Lightning Network enthusiast')).toBeInTheDocument()\n      expect(screen.getByText('San Francisco, CA')).toBeInTheDocument()\n      expect(screen.getByText('150 connections')).toBeInTheDocument()\n      expect(screen.getByText('Bitcoin')).toBeInTheDocument()\n      expect(screen.getByText('Lightning')).toBeInTheDocument()\n      expect(screen.getByText('JavaScript')).toBeInTheDocument()\n      expect(screen.getByText('+2 more')).toBeInTheDocument() // Shows only first 3 skills\n      expect(screen.getByText('Verified')).toBeInTheDocument()\n    })\n  })\n\n  it('should handle loading states', async () => {\n    // Mock a delayed response\n    mockPeopleService.searchPeople.mockImplementation(() => \n      new Promise(resolve => setTimeout(() => resolve([]), 100))\n    )\n\n    render(\n      <TestWrapper>\n        <PeoplePage />\n      </TestWrapper>\n    )\n\n    expect(screen.getByText('Loading people...')).toBeInTheDocument()\n\n    await waitFor(() => {\n      expect(screen.queryByText('Loading people...')).not.toBeInTheDocument()\n    })\n  })\n})\n\ndescribe('OrganizationsPage', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  it('should render page header correctly', async () => {\n    render(\n      <TestWrapper>\n        <OrganizationsPage />\n      </TestWrapper>\n    )\n\n    expect(screen.getByText('Organizations')).toBeInTheDocument()\n    expect(screen.getByText('Join or create organizations with shared Bitcoin wallets and collaborative governance')).toBeInTheDocument()\n  })\n\n  it('should display empty state for organizations', async () => {\n    render(\n      <TestWrapper>\n        <OrganizationsPage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      expect(screen.getByText('No Organizations Yet')).toBeInTheDocument()\n      expect(screen.getByText('Create Organization')).toBeInTheDocument()\n      expect(screen.getByText('Browse Organizations')).toBeInTheDocument()\n    })\n  })\n\n  it('should display organization cards with Bitcoin wallet info', async () => {\n    const mockOrganizations = [\n      {\n        id: 'org-1',\n        name: 'Bitcoin Builders Collective',\n        description: 'A community of Bitcoin developers and educators',\n        type: 'community',\n        status: 'active',\n        member_count: 25,\n        total_raised: 500000000, // 5 BTC in satoshis\n        bitcoin_address: 'bc1qorg123456789abcdef',\n        location: 'Global',\n        logo_url: 'https://example.com/org-logo.jpg'\n      }\n    ]\n\n    mockOrganizationService.searchOrganizations.mockResolvedValue(mockOrganizations)\n\n    render(\n      <TestWrapper>\n        <OrganizationsPage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      expect(screen.getByText('Bitcoin Builders Collective')).toBeInTheDocument()\n      expect(screen.getByText('A community of Bitcoin developers and educators')).toBeInTheDocument()\n      expect(screen.getByText('community')).toBeInTheDocument()\n      expect(screen.getByText('25 members')).toBeInTheDocument()\n      expect(screen.getByText('5.00 BTC raised')).toBeInTheDocument()\n      expect(screen.getByText('Global')).toBeInTheDocument()\n      expect(screen.getByText('bc1qorg12...6789abcdef')).toBeInTheDocument() // Truncated address\n      expect(screen.getByText('active')).toBeInTheDocument()\n    })\n  })\n\n  it('should handle organization join requests', async () => {\n    const mockOrganizations = [\n      {\n        id: 'org-1',\n        name: 'Bitcoin Builders',\n        description: 'Bitcoin community',\n        type: 'community',\n        status: 'active',\n        member_count: 10,\n        total_raised: 100000000,\n        bitcoin_address: 'bc1qtest123',\n        location: 'Global'\n      }\n    ]\n\n    mockOrganizationService.searchOrganizations.mockResolvedValue(mockOrganizations)\n\n    render(\n      <TestWrapper>\n        <OrganizationsPage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      const joinButton = screen.getByText('Join')\n      fireEvent.click(joinButton)\n    })\n\n    expect(mockOrganizationService.joinOrganization).toHaveBeenCalledWith('org-1')\n  })\n\n  it('should switch between discover and my organizations tabs', async () => {\n    render(\n      <TestWrapper>\n        <OrganizationsPage />\n      </TestWrapper>\n    )\n\n    expect(screen.getByTestId('tab-discover')).toBeInTheDocument()\n    expect(screen.getByTestId('tab-my-orgs')).toBeInTheDocument()\n\n    const myOrgsTab = screen.getByTestId('tab-my-orgs')\n    fireEvent.click(myOrgsTab)\n\n    expect(mockOrganizationService.getUserOrganizations).toHaveBeenCalledWith('test-user-id')\n  })\n})\n\ndescribe('ProjectsPage', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  it('should render page header correctly', async () => {\n    render(\n      <TestWrapper>\n        <ProjectsPage />\n      </TestWrapper>\n    )\n\n    expect(screen.getByText('Projects')).toBeInTheDocument()\n    expect(screen.getByText('Discover and support Bitcoin-powered projects with dedicated fundraising wallets')).toBeInTheDocument()\n  })\n\n  it('should display empty state for projects', async () => {\n    render(\n      <TestWrapper>\n        <ProjectsPage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      expect(screen.getByText('No Projects Yet')).toBeInTheDocument()\n      expect(screen.getByText('Create Project')).toBeInTheDocument()\n      expect(screen.getByText('Explore Projects')).toBeInTheDocument()\n    })\n  })\n\n  it('should display project cards with funding progress', async () => {\n    const mockProjects = [\n      {\n        id: 'project-1',\n        name: 'Bitcoin Education Platform',\n        description: 'Interactive learning platform for Bitcoin newcomers',\n        category: 'education',\n        status: 'active',\n        team_size: 5,\n        funding_goal: 500000000, // 5 BTC in satoshis\n        total_raised: 150000000, // 1.5 BTC in satoshis\n        deadline: '2025-06-30T23:59:59Z',\n        tags: ['education', 'bitcoin', 'learning'],\n        logo_url: 'https://example.com/project-logo.jpg'\n      }\n    ]\n\n    mockProjectService.searchProjects.mockResolvedValue(mockProjects)\n\n    render(\n      <TestWrapper>\n        <ProjectsPage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      expect(screen.getByText('Bitcoin Education Platform')).toBeInTheDocument()\n      expect(screen.getByText('Interactive learning platform for Bitcoin newcomers')).toBeInTheDocument()\n      expect(screen.getByText('education')).toBeInTheDocument()\n      expect(screen.getByText('5 members')).toBeInTheDocument()\n      expect(screen.getByText('30.0%')).toBeInTheDocument() // Funding progress\n      expect(screen.getByText('0.1500 BTC raised')).toBeInTheDocument()\n      expect(screen.getByText('Goal: 5.0000 BTC')).toBeInTheDocument()\n      expect(screen.getByText('6/30/2025')).toBeInTheDocument() // Deadline\n      expect(screen.getByText('active')).toBeInTheDocument()\n    })\n  })\n\n  it('should display project tags correctly', async () => {\n    const mockProjects = [\n      {\n        id: 'project-1',\n        name: 'Test Project',\n        description: 'Test description',\n        category: 'development',\n        status: 'active',\n        team_size: 3,\n        tags: ['bitcoin', 'lightning', 'education', 'community', 'development'],\n        deadline: '2025-12-31T23:59:59Z'\n      }\n    ]\n\n    mockProjectService.searchProjects.mockResolvedValue(mockProjects)\n\n    render(\n      <TestWrapper>\n        <ProjectsPage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      expect(screen.getByText('bitcoin')).toBeInTheDocument()\n      expect(screen.getByText('lightning')).toBeInTheDocument()\n      expect(screen.getByText('+3')).toBeInTheDocument() // Shows only first 2 tags, then +count\n    })\n  })\n  \n  it('should handle project join requests', async () => {\n    const mockProjects = [\n      {\n        id: 'project-1',\n        name: 'Test Project',\n        description: 'Test description',\n        category: 'development',\n        status: 'active',\n        team_size: 3,\n        tags: ['bitcoin'],\n        deadline: '2025-12-31T23:59:59Z'\n      }\n    ]\n\n    mockProjectService.searchProjects.mockResolvedValue(mockProjects)\n\n    render(\n      <TestWrapper>\n        <ProjectsPage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      const joinButton = screen.getByText('Join')\n      fireEvent.click(joinButton)\n    })\n\n    expect(mockProjectService.joinProject).toHaveBeenCalledWith('project-1')\n  })\n\n  it('should display funding progress bar correctly', async () => {\n    const mockProjects = [\n      {\n        id: 'project-1',\n        name: 'Funded Project',\n        description: 'A well-funded project',\n        category: 'development',\n        status: 'active',\n        team_size: 3,\n        funding_goal: 100000000, // 1 BTC\n        total_raised: 75000000, // 0.75 BTC (75% funded)\n        tags: ['bitcoin'],\n        deadline: '2025-12-31T23:59:59Z'\n      }\n    ]\n\n    mockProjectService.searchProjects.mockResolvedValue(mockProjects)\n\n    render(\n      <TestWrapper>\n        <ProjectsPage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      const progressBar = screen.getByTestId('progress')\n      expect(progressBar).toHaveAttribute('data-value', '75')\n      expect(screen.getByText('75.0%')).toBeInTheDocument()\n    })\n  })\n\n  it('should switch between discover and my projects tabs', async () => {\n    render(\n      <TestWrapper>\n        <ProjectsPage />\n      </TestWrapper>\n    )\n\n    expect(screen.getByTestId('tab-discover')).toBeInTheDocument()\n    expect(screen.getByTestId('tab-my-projects')).toBeInTheDocument()\n\n    const myProjectsTab = screen.getByTestId('tab-my-projects')\n    fireEvent.click(myProjectsTab)\n\n    expect(mockProjectService.getUserProjects).toHaveBeenCalledWith('test-user-id')\n  })\n})\n\n// Integration Tests\ndescribe('Social Pages Integration', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  it('should handle navigation between pages', async () => {\n    // Test that empty state buttons work correctly\n    render(\n      <TestWrapper>\n        <PeoplePage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      const searchButton = screen.getByText('Search People')\n      expect(searchButton).toBeInTheDocument()\n      \n      // Simulate clicking the button (would navigate in real app)\n      fireEvent.click(searchButton)\n    })\n  })\n\n  it('should maintain consistent empty state design across pages', async () => {\n    const pages = [\n      { component: PeoplePage, title: 'No People Yet' },\n      { component: OrganizationsPage, title: 'No Organizations Yet' },\n      { component: ProjectsPage, title: 'No Projects Yet' }\n    ]\n\n    for (const { component: PageComponent, title } of pages) {\n      const { unmount } = render(\n        <TestWrapper>\n          <PageComponent />\n        </TestWrapper>\n      )\n\n      await waitFor(() => {\n        expect(screen.getByText(title)).toBeInTheDocument()\n        expect(screen.getByText('Why Connect?' || 'Organization Benefits' || 'Project Benefits')).toBeInTheDocument()\n      })\n\n      unmount()\n    }\n  })\n\n  it('should handle error states gracefully', async () => {\n    // Mock service errors\n    mockPeopleService.searchPeople.mockRejectedValue(new Error('Network error'))\n    mockOrganizationService.searchOrganizations.mockRejectedValue(new Error('Network error'))\n    mockProjectService.searchProjects.mockRejectedValue(new Error('Network error'))\n\n    const { unmount: unmountPeople } = render(\n      <TestWrapper>\n        <PeoplePage />\n      </TestWrapper>\n    )\n\n    // Should still show empty state even with errors\n    await waitFor(() => {\n      expect(screen.getByText('No People Yet')).toBeInTheDocument()\n    })\n\n    unmountPeople()\n\n    const { unmount: unmountOrgs } = render(\n      <TestWrapper>\n        <OrganizationsPage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      expect(screen.getByText('No Organizations Yet')).toBeInTheDocument()\n    })\n\n    unmountOrgs()\n\n    render(\n      <TestWrapper>\n        <ProjectsPage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      expect(screen.getByText('No Projects Yet')).toBeInTheDocument()\n    })\n  })\n})\n\n// Accessibility Tests\ndescribe('Accessibility Tests', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  it('should have proper heading structure', async () => {\n    render(\n      <TestWrapper>\n        <PeoplePage />\n      </TestWrapper>\n    )\n\n    const mainHeading = screen.getByRole('heading', { level: 1 })\n    expect(mainHeading).toHaveTextContent('People')\n\n    await waitFor(() => {\n      const subHeadings = screen.getAllByRole('heading', { level: 3 })\n      expect(subHeadings.length).toBeGreaterThan(0)\n    })\n  })\n\n  it('should have accessible form controls', async () => {\n    render(\n      <TestWrapper>\n        <PeoplePage />\n      </TestWrapper>\n    )\n\n    const searchInput = screen.getByRole('textbox')\n    expect(searchInput).toHaveAttribute('placeholder')\n\n    const searchButton = screen.getByRole('button', { name: /search/i })\n    expect(searchButton).toBeInTheDocument()\n  })\n\n  it('should have proper button labels', async () => {\n    const mockPeople = [\n      {\n        id: 'user-1',\n        username: 'testuser',\n        full_name: 'Test User',\n        display_name: 'Test User',\n        connections_count: 0,\n        skills: []\n      }\n    ]\n\n    mockPeopleService.searchPeople.mockResolvedValue(mockPeople)\n\n    render(\n      <TestWrapper>\n        <PeoplePage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      const connectButton = screen.getByRole('button', { name: /connect/i })\n      expect(connectButton).toBeInTheDocument()\n    })\n  })\n})\n\n// Performance Tests\ndescribe('Performance Tests', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  it('should render large lists efficiently', async () => {\n    // Mock large dataset\n    const largePeopleList = Array.from({ length: 100 }, (_, i) => ({\n      id: `user-${i}`,\n      username: `user${i}`,\n      full_name: `User ${i}`,\n      display_name: `User ${i}`,\n      connections_count: i * 10,\n      skills: ['Bitcoin', 'Lightning']\n    }))\n\n    mockPeopleService.searchPeople.mockResolvedValue(largePeopleList)\n\n    const startTime = performance.now()\n    \n    render(\n      <TestWrapper>\n        <PeoplePage />\n      </TestWrapper>\n    )\n\n    await waitFor(() => {\n      expect(screen.getByText('User 0')).toBeInTheDocument()\n    })\n\n    const endTime = performance.now()\n    const renderTime = endTime - startTime\n\n    // Should render within reasonable time (adjust threshold as needed)\n    expect(renderTime).toBeLessThan(2000) // 2 seconds\n  })\n\n  it('should handle rapid user interactions', async () => {\n    const user = userEvent.setup()\n    \n    render(\n      <TestWrapper>\n        <PeoplePage />\n      </TestWrapper>\n    )\n\n    const searchInput = screen.getByPlaceholderText(/search people/i)\n    \n    // Rapid typing should not cause issues\n    await user.type(searchInput, 'bitcoin developer lightning network')\n    \n    expect(searchInput).toHaveValue('bitcoin developer lightning network')\n  })\n})\n\n// Mock the auth store\njest.mock('@/stores/auth', () => ({\n  useAuthStore: () => ({\n    user: { id: '1', email: 'test@example.com' },\n    profile: null\n  })\n}))\n\ndescribe('Social Pages', () => {\n  describe('OrganizationsPage', () => {\n    it('renders organizations page', () => {\n      render(<OrganizationsPage />)\n      expect(screen.getByText('Organizations')).toBeInTheDocument()\n    })\n\n    it('shows create organization button', () => {\n      render(<OrganizationsPage />)\n      expect(screen.getByText('Create Organization')).toBeInTheDocument()\n    })\n  })\n\n  describe('PeoplePage', () => {\n    it('renders people page', () => {\n      render(<PeoplePage />)\n      expect(screen.getByText('People')).toBeInTheDocument()\n    })\n\n    it('shows search functionality', () => {\n      render(<PeoplePage />)\n      expect(screen.getByPlaceholderText('Search people...')).toBeInTheDocument()\n    })\n  })\n\n  describe('ProjectsPage', () => {\n    it('renders projects page', () => {\n      render(<ProjectsPage />)\n      expect(screen.getByText('Projects')).toBeInTheDocument()\n    })\n\n    it('shows submit project button', () => {\n      render(<ProjectsPage />)\n      expect(screen.getByText('Submit Project')).toBeInTheDocument()\n    })\n  })\n}) "],"version":3}