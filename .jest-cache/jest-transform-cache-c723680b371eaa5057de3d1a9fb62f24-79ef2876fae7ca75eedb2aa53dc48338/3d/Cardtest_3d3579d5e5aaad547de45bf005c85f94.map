{"file":"/home/g/dev/orangecat/src/components/ui/__tests__/Card.test.tsx","mappings":"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","names":[],"sources":["/home/g/dev/orangecat/src/components/ui/__tests__/Card.test.tsx"],"sourcesContent":["/**\n * Card Component Tests\n * \n * Testing critical card component used throughout the Bitcoin platform\n * Essential for displaying campaigns, transactions, and user information\n */\n\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '../Card';\n\ndescribe('🎴 Card Component Suite - UI Foundation Tests', () => {\n  describe('✅ Card Base Component', () => {\n    test('should render card with children successfully', () => {\n      render(\n        <Card>\n          <div>Test card content</div>\n        </Card>\n      );\n      expect(screen.getByText('Test card content')).toBeInTheDocument();\n    });\n\n    test('should apply default variant styles', () => {\n      render(<Card data-testid=\"card\">Default card</Card>);\n      const card = screen.getByTestId('card');\n      expect(card).toHaveClass('bg-white', 'rounded-2xl', 'border', 'border-gray-100', 'shadow-sm');\n    });\n\n    test('should apply elevated variant styles', () => {\n      render(<Card variant=\"elevated\" data-testid=\"card\">Elevated card</Card>);\n      const card = screen.getByTestId('card');\n      expect(card).toHaveClass('bg-white', 'rounded-2xl', 'border-0', 'shadow-lg');\n    });\n\n    test('should apply minimal variant styles', () => {\n      render(<Card variant=\"minimal\" data-testid=\"card\">Minimal card</Card>);\n      const card = screen.getByTestId('card');\n      expect(card).toHaveClass('bg-white', 'rounded-xl', 'border', 'border-gray-100');\n    });\n\n    test('should apply gradient variant styles', () => {\n      render(<Card variant=\"gradient\" data-testid=\"card\">Gradient card</Card>);\n      const card = screen.getByTestId('card');\n      expect(card).toHaveClass('bg-gradient-to-br', 'from-white', 'via-gray-50', 'to-gray-100');\n    });\n\n    test('should include interactive transform styles', () => {\n      render(<Card data-testid=\"card\">Interactive card</Card>);\n      const card = screen.getByTestId('card');\n      expect(card).toHaveClass('active:scale-[0.98]', 'transform');\n    });\n\n    test('should apply custom className', () => {\n      render(<Card className=\"custom-card-class\" data-testid=\"card\">Custom card</Card>);\n      const card = screen.getByTestId('card');\n      expect(card).toHaveClass('custom-card-class');\n    });\n\n    test('should spread additional props', () => {\n      render(<Card data-testid=\"card\" role=\"article\" aria-label=\"Test card\">Card with props</Card>);\n      const card = screen.getByTestId('card');\n      expect(card).toHaveAttribute('role', 'article');\n      expect(card).toHaveAttribute('aria-label', 'Test card');\n    });\n\n    test('should handle click events', () => {\n      const handleClick = jest.fn();\n      render(<Card onClick={handleClick} data-testid=\"card\">Clickable card</Card>);\n      const card = screen.getByTestId('card');\n      \n      fireEvent.click(card);\n      expect(handleClick).toHaveBeenCalledTimes(1);\n    });\n\n    test('should render as div element', () => {\n      render(<Card data-testid=\"card\">Card element test</Card>);\n      const card = screen.getByTestId('card');\n      expect(card.tagName).toBe('DIV');\n    });\n  });\n\n  describe('📋 CardHeader Component', () => {\n    test('should render header with children', () => {\n      render(\n        <CardHeader>\n          <span>Header content</span>\n        </CardHeader>\n      );\n      expect(screen.getByText('Header content')).toBeInTheDocument();\n    });\n\n    test('should apply default padding styles', () => {\n      render(<CardHeader data-testid=\"header\">Header test</CardHeader>);\n      const header = screen.getByTestId('header');\n      expect(header).toHaveClass('p-6');\n    });\n\n    test('should apply custom className', () => {\n      render(<CardHeader className=\"custom-header\" data-testid=\"header\">Custom header</CardHeader>);\n      const header = screen.getByTestId('header');\n      expect(header).toHaveClass('custom-header', 'p-6');\n    });\n\n    test('should spread additional props', () => {\n      render(<CardHeader data-testid=\"header\" role=\"banner\">Header with props</CardHeader>);\n      const header = screen.getByTestId('header');\n      expect(header).toHaveAttribute('role', 'banner');\n    });\n\n    test('should render as div element', () => {\n      render(<CardHeader data-testid=\"header\">Header element test</CardHeader>);\n      const header = screen.getByTestId('header');\n      expect(header.tagName).toBe('DIV');\n    });\n  });\n\n  describe('🏷️ CardTitle Component', () => {\n    test('should render title with children', () => {\n      render(\n        <CardTitle>Bitcoin Campaign Title</CardTitle>\n      );\n      expect(screen.getByText('Bitcoin Campaign Title')).toBeInTheDocument();\n    });\n\n    test('should apply title styles', () => {\n      render(<CardTitle data-testid=\"title\">Title test</CardTitle>);\n      const title = screen.getByTestId('title');\n      expect(title).toHaveClass('text-lg', 'font-semibold', 'leading-tight', 'text-gray-900');\n    });\n\n    test('should apply custom className', () => {\n      render(<CardTitle className=\"custom-title\" data-testid=\"title\">Custom title</CardTitle>);\n      const title = screen.getByTestId('title');\n      expect(title).toHaveClass('custom-title', 'text-lg', 'font-semibold');\n    });\n\n    test('should spread additional props', () => {\n      render(<CardTitle data-testid=\"title\" id=\"main-title\">Title with props</CardTitle>);\n      const title = screen.getByTestId('title');\n      expect(title).toHaveAttribute('id', 'main-title');\n    });\n\n    test('should render as h3 element', () => {\n      render(<CardTitle data-testid=\"title\">Title element test</CardTitle>);\n      const title = screen.getByTestId('title');\n      expect(title.tagName).toBe('H3');\n    });\n\n    test('should be accessible with proper heading level', () => {\n      render(<CardTitle>Campaign Title</CardTitle>);\n      const title = screen.getByRole('heading', { level: 3 });\n      expect(title).toBeInTheDocument();\n      expect(title).toHaveTextContent('Campaign Title');\n    });\n  });\n\n  describe('📝 CardDescription Component', () => {\n    test('should render description with children', () => {\n      render(\n        <CardDescription>This is a Bitcoin fundraising campaign description</CardDescription>\n      );\n      expect(screen.getByText('This is a Bitcoin fundraising campaign description')).toBeInTheDocument();\n    });\n\n    test('should apply description styles', () => {\n      render(<CardDescription data-testid=\"description\">Description test</CardDescription>);\n      const description = screen.getByTestId('description');\n      expect(description).toHaveClass('text-sm', 'text-gray-600', 'leading-relaxed', 'mt-1');\n    });\n\n    test('should apply custom className', () => {\n      render(<CardDescription className=\"custom-description\" data-testid=\"description\">Custom description</CardDescription>);\n      const description = screen.getByTestId('description');\n      expect(description).toHaveClass('custom-description', 'text-sm', 'text-gray-600');\n    });\n\n    test('should spread additional props', () => {\n      render(<CardDescription data-testid=\"description\" aria-label=\"Campaign description\">Description with props</CardDescription>);\n      const description = screen.getByTestId('description');\n      expect(description).toHaveAttribute('aria-label', 'Campaign description');\n    });\n\n    test('should render as p element', () => {\n      render(<CardDescription data-testid=\"description\">Description element test</CardDescription>);\n      const description = screen.getByTestId('description');\n      expect(description.tagName).toBe('P');\n    });\n  });\n\n  describe('📄 CardContent Component', () => {\n    test('should render content with children', () => {\n      render(\n        <CardContent>\n          <div>Campaign details and donation info</div>\n        </CardContent>\n      );\n      expect(screen.getByText('Campaign details and donation info')).toBeInTheDocument();\n    });\n\n    test('should apply content padding styles', () => {\n      render(<CardContent data-testid=\"content\">Content test</CardContent>);\n      const content = screen.getByTestId('content');\n      expect(content).toHaveClass('p-6', 'pt-0');\n    });\n\n    test('should apply custom className', () => {\n      render(<CardContent className=\"custom-content\" data-testid=\"content\">Custom content</CardContent>);\n      const content = screen.getByTestId('content');\n      expect(content).toHaveClass('custom-content', 'p-6', 'pt-0');\n    });\n\n    test('should spread additional props', () => {\n      render(<CardContent data-testid=\"content\" role=\"main\">Content with props</CardContent>);\n      const content = screen.getByTestId('content');\n      expect(content).toHaveAttribute('role', 'main');\n    });\n\n    test('should render as div element', () => {\n      render(<CardContent data-testid=\"content\">Content element test</CardContent>);\n      const content = screen.getByTestId('content');\n      expect(content.tagName).toBe('DIV');\n    });\n  });\n\n  describe('🚀 Bitcoin Platform Integration Tests', () => {\n    test('should create a complete campaign card structure', () => {\n      render(\n        <Card variant=\"elevated\" data-testid=\"campaign-card\">\n          <CardHeader>\n            <CardTitle>Bitcoin Education Initiative</CardTitle>\n            <CardDescription>Supporting Bitcoin education worldwide</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div>Target: 1 BTC</div>\n            <div>Raised: 0.5 BTC</div>\n          </CardContent>\n        </Card>\n      );\n\n      expect(screen.getByTestId('campaign-card')).toBeInTheDocument();\n      expect(screen.getByText('Bitcoin Education Initiative')).toBeInTheDocument();\n      expect(screen.getByText('Supporting Bitcoin education worldwide')).toBeInTheDocument();\n      expect(screen.getByText('Target: 1 BTC')).toBeInTheDocument();\n      expect(screen.getByText('Raised: 0.5 BTC')).toBeInTheDocument();\n    });\n\n    test('should create a transaction card structure', () => {\n      render(\n        <Card variant=\"minimal\" data-testid=\"transaction-card\">\n          <CardHeader>\n            <CardTitle>Transaction #1234</CardTitle>\n            <CardDescription>Bitcoin payment confirmation</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div>Amount: 0.001 BTC</div>\n            <div>Status: Confirmed</div>\n            <div>Confirmations: 6/6</div>\n          </CardContent>\n        </Card>\n      );\n\n      const card = screen.getByTestId('transaction-card');\n      expect(card).toHaveClass('bg-white', 'rounded-xl', 'border');\n      expect(screen.getByText('Transaction #1234')).toBeInTheDocument();\n      expect(screen.getByText('Amount: 0.001 BTC')).toBeInTheDocument();\n      expect(screen.getByText('Status: Confirmed')).toBeInTheDocument();\n    });\n\n    test('should create a user profile card', () => {\n      render(\n        <Card variant=\"gradient\" data-testid=\"profile-card\">\n          <CardHeader>\n            <CardTitle>Satoshi Nakamoto</CardTitle>\n            <CardDescription>Bitcoin Creator</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div>Transparency Score: 95%</div>\n            <div>Campaigns Created: 5</div>\n            <div>Total Raised: 10.5 BTC</div>\n          </CardContent>\n        </Card>\n      );\n\n      const card = screen.getByTestId('profile-card');\n      expect(card).toHaveClass('bg-gradient-to-br');\n      expect(screen.getByText('Satoshi Nakamoto')).toBeInTheDocument();\n      expect(screen.getByText('Transparency Score: 95%')).toBeInTheDocument();\n    });\n\n    test('should handle interactive card with Bitcoin amount', () => {\n      const handleCardClick = jest.fn();\n      render(\n        <Card onClick={handleCardClick} data-testid=\"interactive-card\">\n          <CardHeader>\n            <CardTitle>Donation Card</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div>Click to donate 0.01 BTC</div>\n          </CardContent>\n        </Card>\n      );\n\n      const card = screen.getByTestId('interactive-card');\n      fireEvent.click(card);\n      expect(handleCardClick).toHaveBeenCalledTimes(1);\n    });\n\n    test('should display lightning network info card', () => {\n      render(\n        <Card variant=\"elevated\" data-testid=\"lightning-card\">\n          <CardHeader>\n            <CardTitle>⚡ Lightning Payment</CardTitle>\n            <CardDescription>Instant Bitcoin transactions</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div>Fee: 1 satoshi</div>\n            <div>Speed: Instant</div>\n            <div>Network: Lightning</div>\n          </CardContent>\n        </Card>\n      );\n\n      expect(screen.getByText('⚡ Lightning Payment')).toBeInTheDocument();\n      expect(screen.getByText('Fee: 1 satoshi')).toBeInTheDocument();\n      expect(screen.getByText('Speed: Instant')).toBeInTheDocument();\n    });\n  });\n\n  describe('🎨 Styling & Accessibility Tests', () => {\n    test('should have proper hover and transition styles', () => {\n      render(<Card data-testid=\"card\">Transition test</Card>);\n      const card = screen.getByTestId('card');\n      expect(card).toHaveClass('hover:shadow-lg', 'transition-all', 'duration-300');\n    });\n\n    test('should be keyboard navigable when interactive', () => {\n      const handleClick = jest.fn();\n      const handleKeyDown = jest.fn();\n      \n      render(\n        <Card \n          onClick={handleClick} \n          onKeyDown={handleKeyDown}\n          tabIndex={0}\n          data-testid=\"keyboard-card\"\n        >\n          Keyboard accessible card\n        </Card>\n      );\n\n      const card = screen.getByTestId('keyboard-card');\n      expect(card).toHaveAttribute('tabIndex', '0');\n      \n      fireEvent.keyDown(card, { key: 'Enter' });\n      expect(handleKeyDown).toHaveBeenCalledTimes(1);\n    });\n\n    test('should maintain semantic structure', () => {\n      render(\n        <Card role=\"article\" aria-labelledby=\"card-title\" data-testid=\"semantic-card\">\n          <CardHeader>\n            <CardTitle id=\"card-title\">Semantic Card Title</CardTitle>\n            <CardDescription>This card follows semantic HTML principles</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div>Card content here</div>\n          </CardContent>\n        </Card>\n      );\n\n      const card = screen.getByTestId('semantic-card');\n      expect(card).toHaveAttribute('role', 'article');\n      expect(card).toHaveAttribute('aria-labelledby', 'card-title');\n      \n      const title = screen.getByRole('heading', { level: 3 });\n      expect(title).toHaveAttribute('id', 'card-title');\n    });\n\n    test('should handle empty content gracefully', () => {\n      render(\n        <Card data-testid=\"empty-card\">\n          <CardHeader>\n            <CardTitle></CardTitle>\n            <CardDescription></CardDescription>\n          </CardHeader>\n          <CardContent></CardContent>\n        </Card>\n      );\n\n      const card = screen.getByTestId('empty-card');\n      expect(card).toBeInTheDocument();\n    });\n\n    test('should work with complex nested content', () => {\n      render(\n        <Card data-testid=\"complex-card\">\n          <CardHeader>\n            <CardTitle>\n              Complex <strong>Bitcoin</strong> Campaign\n            </CardTitle>\n            <CardDescription>\n              With <em>formatting</em> and <span>nested elements</span>\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div>\n              <ul>\n                <li>Item 1</li>\n                <li>Item 2</li>\n              </ul>\n              <button>Action Button</button>\n            </div>\n          </CardContent>\n        </Card>\n      );\n\n      expect(screen.getByText('Bitcoin')).toBeInTheDocument();\n      expect(screen.getByText('formatting')).toBeInTheDocument();\n      expect(screen.getByText('Action Button')).toBeInTheDocument();\n      expect(screen.getByRole('button')).toBeInTheDocument();\n    });\n  });\n\n  describe('🔧 Edge Cases & Error Handling', () => {\n    test('should handle undefined variant gracefully', () => {\n      render(<Card variant={undefined as any} data-testid=\"card\">Undefined variant</Card>);\n      const card = screen.getByTestId('card');\n      expect(card).toHaveClass('bg-white', 'rounded-2xl'); // Should fallback to default\n    });\n\n    test('should handle invalid variant gracefully', () => {\n      render(<Card variant={'invalid' as any} data-testid=\"card\">Invalid variant</Card>);\n      const card = screen.getByTestId('card');\n      expect(card).toBeInTheDocument(); // Should still render\n    });\n\n    test('should handle very long content', () => {\n      const longText = 'a'.repeat(1000);\n      render(\n        <Card data-testid=\"long-content-card\">\n          <CardHeader>\n            <CardTitle>{longText}</CardTitle>\n          </CardHeader>\n        </Card>\n      );\n\n      expect(screen.getByTestId('long-content-card')).toBeInTheDocument();\n      expect(screen.getByText(longText)).toBeInTheDocument();\n    });\n\n    test('should handle special characters in content', () => {\n      const specialContent = '₿ 💰 🚀 !@#$%^&*()';\n      render(\n        <Card>\n          <CardTitle>{specialContent}</CardTitle>\n        </Card>\n      );\n\n      expect(screen.getByText(specialContent)).toBeInTheDocument();\n    });\n\n    test('should not break with null children', () => {\n      render(\n        <Card data-testid=\"null-children-card\">\n          {null}\n        </Card>\n      );\n\n      expect(screen.getByTestId('null-children-card')).toBeInTheDocument();\n    });\n  });\n}); "],"version":3}