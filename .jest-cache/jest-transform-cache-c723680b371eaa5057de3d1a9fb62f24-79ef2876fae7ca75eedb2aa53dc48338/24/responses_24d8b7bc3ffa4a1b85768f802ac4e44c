faf213ac22fa62d3b0788c84227f3fa4
"use strict";

/* istanbul ignore next */
function cov_18gzpiqqrx() {
  var path = "/home/g/dev/orangecat/src/lib/api/responses.ts";
  var hash = "dc1cc597c7a411dfd0dde4fe95a9665c6358cf45";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/g/dev/orangecat/src/lib/api/responses.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 72
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 50
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 54
        }
      },
      "4": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 39
        }
      },
      "6": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 42
        }
      },
      "7": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 29,
          column: 2
        }
      },
      "8": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 46,
          column: 2
        }
      },
      "9": {
        start: {
          line: 51,
          column: 25
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "10": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 56,
          column: 33
        }
      },
      "11": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 33
        }
      },
      "12": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 58,
          column: 39
        }
      },
      "13": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 39
        }
      },
      "14": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 64
        }
      },
      "15": {
        start: {
          line: 65,
          column: 25
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "16": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 70,
          column: 33
        }
      },
      "17": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 33
        }
      },
      "18": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 72,
          column: 39
        }
      },
      "19": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 39
        }
      },
      "20": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 74,
          column: 33
        }
      },
      "21": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 33
        }
      },
      "22": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 64
        }
      },
      "23": {
        start: {
          line: 78,
          column: 0
        },
        end: {
          line: 101,
          column: 2
        }
      },
      "24": {
        start: {
          line: 80,
          column: 34
        },
        end: {
          line: 80,
          column: 157
        }
      },
      "25": {
        start: {
          line: 81,
          column: 67
        },
        end: {
          line: 81,
          column: 166
        }
      },
      "26": {
        start: {
          line: 83,
          column: 43
        },
        end: {
          line: 83,
          column: 149
        }
      },
      "27": {
        start: {
          line: 84,
          column: 45
        },
        end: {
          line: 84,
          column: 137
        }
      },
      "28": {
        start: {
          line: 86,
          column: 41
        },
        end: {
          line: 86,
          column: 145
        }
      },
      "29": {
        start: {
          line: 87,
          column: 49
        },
        end: {
          line: 87,
          column: 135
        }
      },
      "30": {
        start: {
          line: 89,
          column: 60
        },
        end: {
          line: 89,
          column: 161
        }
      },
      "31": {
        start: {
          line: 91,
          column: 64
        },
        end: {
          line: 91,
          column: 176
        }
      },
      "32": {
        start: {
          line: 92,
          column: 73
        },
        end: {
          line: 92,
          column: 141
        }
      },
      "33": {
        start: {
          line: 94,
          column: 31
        },
        end: {
          line: 94,
          column: 187
        }
      },
      "34": {
        start: {
          line: 95,
          column: 46
        },
        end: {
          line: 95,
          column: 245
        }
      },
      "35": {
        start: {
          line: 97,
          column: 32
        },
        end: {
          line: 97,
          column: 91
        }
      },
      "36": {
        start: {
          line: 98,
          column: 32
        },
        end: {
          line: 98,
          column: 131
        }
      },
      "37": {
        start: {
          line: 99,
          column: 63
        },
        end: {
          line: 99,
          column: 133
        }
      },
      "38": {
        start: {
          line: 100,
          column: 21
        },
        end: {
          line: 100,
          column: 95
        }
      },
      "39": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "40": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 33
        }
      },
      "41": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 199
        }
      },
      "42": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "43": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 86
        }
      },
      "44": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "45": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 51
        }
      },
      "46": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "47": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 60
        }
      },
      "48": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 70
        }
      }
    },
    fnMap: {
      "0": {
        name: "createErrorResponse",
        decl: {
          start: {
            line: 50,
            column: 9
          },
          end: {
            line: 50,
            column: 28
          }
        },
        loc: {
          start: {
            line: 50,
            column: 61
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 50
      },
      "1": {
        name: "createSuccessResponse",
        decl: {
          start: {
            line: 64,
            column: 9
          },
          end: {
            line: 64,
            column: 30
          }
        },
        loc: {
          start: {
            line: 64,
            column: 84
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 64
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 80,
            column: 28
          },
          end: {
            line: 80,
            column: 29
          }
        },
        loc: {
          start: {
            line: 80,
            column: 34
          },
          end: {
            line: 80,
            column: 157
          }
        },
        line: 80
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 81,
            column: 25
          },
          end: {
            line: 81,
            column: 26
          }
        },
        loc: {
          start: {
            line: 81,
            column: 67
          },
          end: {
            line: 81,
            column: 166
          }
        },
        line: 81
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 83,
            column: 21
          },
          end: {
            line: 83,
            column: 22
          }
        },
        loc: {
          start: {
            line: 83,
            column: 43
          },
          end: {
            line: 83,
            column: 149
          }
        },
        line: 83
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 17
          }
        },
        loc: {
          start: {
            line: 84,
            column: 45
          },
          end: {
            line: 84,
            column: 137
          }
        },
        line: 84
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 86,
            column: 14
          },
          end: {
            line: 86,
            column: 15
          }
        },
        loc: {
          start: {
            line: 86,
            column: 41
          },
          end: {
            line: 86,
            column: 145
          }
        },
        line: 86
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 87,
            column: 14
          },
          end: {
            line: 87,
            column: 15
          }
        },
        loc: {
          start: {
            line: 87,
            column: 49
          },
          end: {
            line: 87,
            column: 135
          }
        },
        line: 87
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 89,
            column: 23
          },
          end: {
            line: 89,
            column: 24
          }
        },
        loc: {
          start: {
            line: 89,
            column: 60
          },
          end: {
            line: 89,
            column: 161
          }
        },
        line: 89
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 91,
            column: 25
          },
          end: {
            line: 91,
            column: 26
          }
        },
        loc: {
          start: {
            line: 91,
            column: 64
          },
          end: {
            line: 91,
            column: 176
          }
        },
        line: 91
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 92,
            column: 24
          },
          end: {
            line: 92,
            column: 25
          }
        },
        loc: {
          start: {
            line: 92,
            column: 73
          },
          end: {
            line: 92,
            column: 141
          }
        },
        line: 92
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 94,
            column: 18
          },
          end: {
            line: 94,
            column: 19
          }
        },
        loc: {
          start: {
            line: 94,
            column: 31
          },
          end: {
            line: 94,
            column: 187
          }
        },
        line: 94
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 95,
            column: 26
          },
          end: {
            line: 95,
            column: 27
          }
        },
        loc: {
          start: {
            line: 95,
            column: 46
          },
          end: {
            line: 95,
            column: 245
          }
        },
        line: 95
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 97,
            column: 13
          },
          end: {
            line: 97,
            column: 14
          }
        },
        loc: {
          start: {
            line: 97,
            column: 32
          },
          end: {
            line: 97,
            column: 91
          }
        },
        line: 97
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 98,
            column: 13
          },
          end: {
            line: 98,
            column: 14
          }
        },
        loc: {
          start: {
            line: 98,
            column: 32
          },
          end: {
            line: 98,
            column: 131
          }
        },
        line: 98
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 99,
            column: 14
          },
          end: {
            line: 99,
            column: 15
          }
        },
        loc: {
          start: {
            line: 99,
            column: 63
          },
          end: {
            line: 99,
            column: 133
          }
        },
        line: 99
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 100,
            column: 15
          },
          end: {
            line: 100,
            column: 16
          }
        },
        loc: {
          start: {
            line: 100,
            column: 21
          },
          end: {
            line: 100,
            column: 95
          }
        },
        line: 100
      },
      "17": {
        name: "withErrorHandling",
        decl: {
          start: {
            line: 105,
            column: 15
          },
          end: {
            line: 105,
            column: 32
          }
        },
        loc: {
          start: {
            line: 105,
            column: 58
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 105
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 56,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 56,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "1": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 58,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 58,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "2": {
        loc: {
          start: {
            line: 64,
            column: 37
          },
          end: {
            line: 64,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 64,
            column: 46
          },
          end: {
            line: 64,
            column: 67
          }
        }],
        line: 64
      },
      "3": {
        loc: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 70,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 70,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "4": {
        loc: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 72,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 72,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "5": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 74,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 74,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "6": {
        loc: {
          start: {
            line: 81,
            column: 26
          },
          end: {
            line: 81,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 81,
            column: 36
          },
          end: {
            line: 81,
            column: 62
          }
        }],
        line: 81
      },
      "7": {
        loc: {
          start: {
            line: 84,
            column: 17
          },
          end: {
            line: 84,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 84,
            column: 27
          },
          end: {
            line: 84,
            column: 40
          }
        }],
        line: 84
      },
      "8": {
        loc: {
          start: {
            line: 86,
            column: 15
          },
          end: {
            line: 86,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 86,
            column: 26
          },
          end: {
            line: 86,
            column: 36
          }
        }],
        line: 86
      },
      "9": {
        loc: {
          start: {
            line: 87,
            column: 15
          },
          end: {
            line: 87,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 87,
            column: 25
          },
          end: {
            line: 87,
            column: 44
          }
        }],
        line: 87
      },
      "10": {
        loc: {
          start: {
            line: 89,
            column: 24
          },
          end: {
            line: 89,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 89,
            column: 34
          },
          end: {
            line: 89,
            column: 55
          }
        }],
        line: 89
      },
      "11": {
        loc: {
          start: {
            line: 91,
            column: 26
          },
          end: {
            line: 91,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 91,
            column: 36
          },
          end: {
            line: 91,
            column: 59
          }
        }],
        line: 91
      },
      "12": {
        loc: {
          start: {
            line: 92,
            column: 25
          },
          end: {
            line: 92,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 92,
            column: 35
          },
          end: {
            line: 92,
            column: 68
          }
        }],
        line: 92
      },
      "13": {
        loc: {
          start: {
            line: 94,
            column: 68
          },
          end: {
            line: 94,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 94,
            column: 78
          },
          end: {
            line: 94,
            column: 106
          }
        }, {
          start: {
            line: 94,
            column: 109
          },
          end: {
            line: 94,
            column: 111
          }
        }],
        line: 94
      },
      "14": {
        loc: {
          start: {
            line: 95,
            column: 91
          },
          end: {
            line: 95,
            column: 156
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 108
          },
          end: {
            line: 95,
            column: 151
          }
        }, {
          start: {
            line: 95,
            column: 154
          },
          end: {
            line: 95,
            column: 156
          }
        }],
        line: 95
      },
      "15": {
        loc: {
          start: {
            line: 98,
            column: 88
          },
          end: {
            line: 98,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 88
          },
          end: {
            line: 98,
            column: 95
          }
        }, {
          start: {
            line: 98,
            column: 99
          },
          end: {
            line: 98,
            column: 130
          }
        }],
        line: 98
      },
      "16": {
        loc: {
          start: {
            line: 99,
            column: 15
          },
          end: {
            line: 99,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 99,
            column: 25
          },
          end: {
            line: 99,
            column: 58
          }
        }],
        line: 99
      },
      "17": {
        loc: {
          start: {
            line: 110,
            column: 63
          },
          end: {
            line: 110,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 100
          },
          end: {
            line: 110,
            column: 106
          }
        }, {
          start: {
            line: 110,
            column: 109
          },
          end: {
            line: 110,
            column: 122
          }
        }],
        line: 110
      },
      "18": {
        loc: {
          start: {
            line: 110,
            column: 63
          },
          end: {
            line: 110,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 63
          },
          end: {
            line: 110,
            column: 77
          }
        }, {
          start: {
            line: 110,
            column: 81
          },
          end: {
            line: 110,
            column: 97
          }
        }],
        line: 110
      },
      "19": {
        loc: {
          start: {
            line: 110,
            column: 131
          },
          end: {
            line: 110,
            column: 188
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 168
          },
          end: {
            line: 110,
            column: 174
          }
        }, {
          start: {
            line: 110,
            column: 177
          },
          end: {
            line: 110,
            column: 188
          }
        }],
        line: 110
      },
      "20": {
        loc: {
          start: {
            line: 110,
            column: 131
          },
          end: {
            line: 110,
            column: 165
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 131
          },
          end: {
            line: 110,
            column: 145
          }
        }, {
          start: {
            line: 110,
            column: 149
          },
          end: {
            line: 110,
            column: 165
          }
        }],
        line: 110
      },
      "21": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "22": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "23": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0],
      "8": [0],
      "9": [0],
      "10": [0],
      "11": [0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      file: "/home/g/dev/orangecat/src/lib/api/responses.ts",
      mappings: "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",
      names: [],
      sources: ["/home/g/dev/orangecat/src/lib/api/responses.ts"],
      sourcesContent: ["import { NextResponse } from 'next/server'\nimport { logger } from '@/utils/logger'\n\n/**\n * Standardized API Response Helpers\n * \n * Eliminates DRY violations by providing consistent error and success responses.\n * Used across all API routes for consistent response formatting.\n * \n * \u267B\uFE0F REFACTORED: Eliminates ~35 instances of similar error responses\n */\n\n// Standard error types\nexport const ErrorTypes = {\n  AUTHENTICATION_REQUIRED: 'AUTHENTICATION_REQUIRED',\n  AUTHORIZATION_FAILED: 'AUTHORIZATION_FAILED',\n  VALIDATION_ERROR: 'VALIDATION_ERROR',\n  NOT_FOUND: 'NOT_FOUND',\n  RATE_LIMIT_EXCEEDED: 'RATE_LIMIT_EXCEEDED',\n  INTERNAL_SERVER_ERROR: 'INTERNAL_SERVER_ERROR',\n  BAD_REQUEST: 'BAD_REQUEST',\n  CONFLICT: 'CONFLICT',\n  FILE_TOO_LARGE: 'FILE_TOO_LARGE',\n  UNSUPPORTED_MEDIA_TYPE: 'UNSUPPORTED_MEDIA_TYPE'\n} as const\n\n// Standard HTTP status codes\nexport const HttpStatus = {\n  OK: 200,\n  CREATED: 201,\n  ACCEPTED: 202,\n  NO_CONTENT: 204,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  CONFLICT: 409,\n  PAYLOAD_TOO_LARGE: 413,\n  UNSUPPORTED_MEDIA_TYPE: 415,\n  RATE_LIMITED: 429,\n  INTERNAL_SERVER_ERROR: 500,\n  SERVICE_UNAVAILABLE: 503\n} as const\n\ninterface ErrorResponseData {\n  error: string\n  type?: string\n  details?: any\n  timestamp?: string\n  requestId?: string\n}\n\ninterface SuccessResponseData {\n  success?: boolean\n  data?: any\n  message?: string\n  meta?: any\n  timestamp?: string\n}\n\n/**\n * Create standardized error response\n */\nexport function createErrorResponse(\n  message: string,\n  status: number,\n  type?: string,\n  details?: any\n): NextResponse {\n  const responseData: ErrorResponseData = {\n    error: message,\n    timestamp: new Date().toISOString()\n  }\n\n  if (type) responseData.type = type\n  if (details) responseData.details = details\n\n  return NextResponse.json(responseData, { status })\n}\n\n/**\n * Create standardized success response\n */\nexport function createSuccessResponse(\n  data?: any,\n  status: number = HttpStatus.OK,\n  message?: string,\n  meta?: any\n): NextResponse {\n  const responseData: SuccessResponseData = {\n    success: true,\n    timestamp: new Date().toISOString()\n  }\n\n  if (data !== undefined) responseData.data = data\n  if (message) responseData.message = message\n  if (meta) responseData.meta = meta\n\n  return NextResponse.json(responseData, { status })\n}\n\n// Pre-configured error responses for common scenarios\nexport const ApiResponses = {\n  // Authentication & Authorization\n  authenticationRequired: () => createErrorResponse(\n    'Authentication required',\n    HttpStatus.UNAUTHORIZED,\n    ErrorTypes.AUTHENTICATION_REQUIRED\n  ),\n\n  authorizationFailed: (message = 'Insufficient permissions') => createErrorResponse(\n    message,\n    HttpStatus.FORBIDDEN,\n    ErrorTypes.AUTHORIZATION_FAILED\n  ),\n\n  // Validation\n  validationError: (message: string, details?: any) => createErrorResponse(\n    message,\n    HttpStatus.BAD_REQUEST,\n    ErrorTypes.VALIDATION_ERROR,\n    details\n  ),\n\n  badRequest: (message = 'Bad request') => createErrorResponse(\n    message,\n    HttpStatus.BAD_REQUEST,\n    ErrorTypes.BAD_REQUEST\n  ),\n\n  // Resource handling\n  notFound: (resource = 'Resource') => createErrorResponse(\n    `${resource} not found`,\n    HttpStatus.NOT_FOUND,\n    ErrorTypes.NOT_FOUND\n  ),\n\n  conflict: (message = 'Resource conflict') => createErrorResponse(\n    message,\n    HttpStatus.CONFLICT,\n    ErrorTypes.CONFLICT\n  ),\n\n  // Rate limiting\n  rateLimitExceeded: (message = 'Rate limit exceeded') => createErrorResponse(\n    message,\n    HttpStatus.RATE_LIMITED,\n    ErrorTypes.RATE_LIMIT_EXCEEDED\n  ),\n\n  // Server errors\n  internalServerError: (message = 'Internal server error') => createErrorResponse(\n    message,\n    HttpStatus.INTERNAL_SERVER_ERROR,\n    ErrorTypes.INTERNAL_SERVER_ERROR\n  ),\n\n  serviceUnavailable: (message = 'Service temporarily unavailable') => createErrorResponse(\n    message,\n    HttpStatus.SERVICE_UNAVAILABLE\n  ),\n\n  // File upload errors\n  fileTooLarge: (maxSize?: string) => createErrorResponse(\n    `File too large${maxSize ? `. Maximum size: ${maxSize}` : ''}`,\n    HttpStatus.PAYLOAD_TOO_LARGE,\n    ErrorTypes.FILE_TOO_LARGE\n  ),\n\n  unsupportedMediaType: (supportedTypes?: string[]) => createErrorResponse(\n    `Unsupported media type${supportedTypes ? `. Supported: ${supportedTypes.join(', ')}` : ''}`,\n    HttpStatus.UNSUPPORTED_MEDIA_TYPE,\n    ErrorTypes.UNSUPPORTED_MEDIA_TYPE\n  ),\n\n  // Success responses\n  success: (data?: any, message?: string) => createSuccessResponse(\n    data,\n    HttpStatus.OK,\n    message\n  ),\n\n  created: (data?: any, message?: string) => createSuccessResponse(\n    data,\n    HttpStatus.CREATED,\n    message || 'Resource created successfully'\n  ),\n\n  accepted: (message = 'Request accepted for processing') => createSuccessResponse(\n    undefined,\n    HttpStatus.ACCEPTED,\n    message\n  ),\n\n  noContent: () => new NextResponse(null, { status: HttpStatus.NO_CONTENT })\n}\n\n/**\n * Utility to handle async operations with standardized error handling\n */\nexport async function withErrorHandling<T>(\n  operation: () => Promise<T>,\n  errorMessage?: string\n): Promise<T | NextResponse> {\n  try {\n    return await operation()\n  } catch (error: any) {\n    logger.error('API operation failed', { error: error?.message, stack: error?.stack }, 'API')\n    \n    // Handle specific error types\n    if (error.name === 'ValidationError') {\n      return ApiResponses.validationError(error.message, error.details)\n    }\n    \n    if (error.code === 'PGRST116') { // Supabase not found\n      return ApiResponses.notFound()\n    }\n    \n    if (error.status === 429) {\n      return ApiResponses.rateLimitExceeded()\n    }\n    \n    return ApiResponses.internalServerError(errorMessage)\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dc1cc597c7a411dfd0dde4fe95a9665c6358cf45"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18gzpiqqrx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18gzpiqqrx();
cov_18gzpiqqrx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_18gzpiqqrx().s[1]++;
exports.ApiResponses = exports.HttpStatus = exports.ErrorTypes = void 0;
/* istanbul ignore next */
cov_18gzpiqqrx().s[2]++;
exports.createErrorResponse = createErrorResponse;
/* istanbul ignore next */
cov_18gzpiqqrx().s[3]++;
exports.createSuccessResponse = createSuccessResponse;
/* istanbul ignore next */
cov_18gzpiqqrx().s[4]++;
exports.withErrorHandling = withErrorHandling;
const server_1 =
/* istanbul ignore next */
(cov_18gzpiqqrx().s[5]++, require("next/server"));
const logger_1 =
/* istanbul ignore next */
(cov_18gzpiqqrx().s[6]++, require("@/utils/logger"));
/**
 * Standardized API Response Helpers
 *
 * Eliminates DRY violations by providing consistent error and success responses.
 * Used across all API routes for consistent response formatting.
 *
 * ♻️ REFACTORED: Eliminates ~35 instances of similar error responses
 */
// Standard error types
/* istanbul ignore next */
cov_18gzpiqqrx().s[7]++;
exports.ErrorTypes = {
  AUTHENTICATION_REQUIRED: 'AUTHENTICATION_REQUIRED',
  AUTHORIZATION_FAILED: 'AUTHORIZATION_FAILED',
  VALIDATION_ERROR: 'VALIDATION_ERROR',
  NOT_FOUND: 'NOT_FOUND',
  RATE_LIMIT_EXCEEDED: 'RATE_LIMIT_EXCEEDED',
  INTERNAL_SERVER_ERROR: 'INTERNAL_SERVER_ERROR',
  BAD_REQUEST: 'BAD_REQUEST',
  CONFLICT: 'CONFLICT',
  FILE_TOO_LARGE: 'FILE_TOO_LARGE',
  UNSUPPORTED_MEDIA_TYPE: 'UNSUPPORTED_MEDIA_TYPE'
};
// Standard HTTP status codes
/* istanbul ignore next */
cov_18gzpiqqrx().s[8]++;
exports.HttpStatus = {
  OK: 200,
  CREATED: 201,
  ACCEPTED: 202,
  NO_CONTENT: 204,
  BAD_REQUEST: 400,
  UNAUTHORIZED: 401,
  FORBIDDEN: 403,
  NOT_FOUND: 404,
  CONFLICT: 409,
  PAYLOAD_TOO_LARGE: 413,
  UNSUPPORTED_MEDIA_TYPE: 415,
  RATE_LIMITED: 429,
  INTERNAL_SERVER_ERROR: 500,
  SERVICE_UNAVAILABLE: 503
};
/**
 * Create standardized error response
 */
function createErrorResponse(message, status, type, details) {
  /* istanbul ignore next */
  cov_18gzpiqqrx().f[0]++;
  const responseData =
  /* istanbul ignore next */
  (cov_18gzpiqqrx().s[9]++, {
    error: message,
    timestamp: new Date().toISOString()
  });
  /* istanbul ignore next */
  cov_18gzpiqqrx().s[10]++;
  if (type) {
    /* istanbul ignore next */
    cov_18gzpiqqrx().b[0][0]++;
    cov_18gzpiqqrx().s[11]++;
    responseData.type = type;
  } else
  /* istanbul ignore next */
  {
    cov_18gzpiqqrx().b[0][1]++;
  }
  cov_18gzpiqqrx().s[12]++;
  if (details) {
    /* istanbul ignore next */
    cov_18gzpiqqrx().b[1][0]++;
    cov_18gzpiqqrx().s[13]++;
    responseData.details = details;
  } else
  /* istanbul ignore next */
  {
    cov_18gzpiqqrx().b[1][1]++;
  }
  cov_18gzpiqqrx().s[14]++;
  return server_1.NextResponse.json(responseData, {
    status
  });
}
/**
 * Create standardized success response
 */
function createSuccessResponse(data, status =
/* istanbul ignore next */
(cov_18gzpiqqrx().b[2][0]++, exports.HttpStatus.OK), message, meta) {
  /* istanbul ignore next */
  cov_18gzpiqqrx().f[1]++;
  const responseData =
  /* istanbul ignore next */
  (cov_18gzpiqqrx().s[15]++, {
    success: true,
    timestamp: new Date().toISOString()
  });
  /* istanbul ignore next */
  cov_18gzpiqqrx().s[16]++;
  if (data !== undefined) {
    /* istanbul ignore next */
    cov_18gzpiqqrx().b[3][0]++;
    cov_18gzpiqqrx().s[17]++;
    responseData.data = data;
  } else
  /* istanbul ignore next */
  {
    cov_18gzpiqqrx().b[3][1]++;
  }
  cov_18gzpiqqrx().s[18]++;
  if (message) {
    /* istanbul ignore next */
    cov_18gzpiqqrx().b[4][0]++;
    cov_18gzpiqqrx().s[19]++;
    responseData.message = message;
  } else
  /* istanbul ignore next */
  {
    cov_18gzpiqqrx().b[4][1]++;
  }
  cov_18gzpiqqrx().s[20]++;
  if (meta) {
    /* istanbul ignore next */
    cov_18gzpiqqrx().b[5][0]++;
    cov_18gzpiqqrx().s[21]++;
    responseData.meta = meta;
  } else
  /* istanbul ignore next */
  {
    cov_18gzpiqqrx().b[5][1]++;
  }
  cov_18gzpiqqrx().s[22]++;
  return server_1.NextResponse.json(responseData, {
    status
  });
}
// Pre-configured error responses for common scenarios
/* istanbul ignore next */
cov_18gzpiqqrx().s[23]++;
exports.ApiResponses = {
  // Authentication & Authorization
  authenticationRequired: () => {
    /* istanbul ignore next */
    cov_18gzpiqqrx().f[2]++;
    cov_18gzpiqqrx().s[24]++;
    return createErrorResponse('Authentication required', exports.HttpStatus.UNAUTHORIZED, exports.ErrorTypes.AUTHENTICATION_REQUIRED);
  },
  authorizationFailed: (message =
  /* istanbul ignore next */
  (cov_18gzpiqqrx().b[6][0]++, 'Insufficient permissions')) => {
    /* istanbul ignore next */
    cov_18gzpiqqrx().f[3]++;
    cov_18gzpiqqrx().s[25]++;
    return createErrorResponse(message, exports.HttpStatus.FORBIDDEN, exports.ErrorTypes.AUTHORIZATION_FAILED);
  },
  // Validation
  validationError: (message, details) => {
    /* istanbul ignore next */
    cov_18gzpiqqrx().f[4]++;
    cov_18gzpiqqrx().s[26]++;
    return createErrorResponse(message, exports.HttpStatus.BAD_REQUEST, exports.ErrorTypes.VALIDATION_ERROR, details);
  },
  badRequest: (message =
  /* istanbul ignore next */
  (cov_18gzpiqqrx().b[7][0]++, 'Bad request')) => {
    /* istanbul ignore next */
    cov_18gzpiqqrx().f[5]++;
    cov_18gzpiqqrx().s[27]++;
    return createErrorResponse(message, exports.HttpStatus.BAD_REQUEST, exports.ErrorTypes.BAD_REQUEST);
  },
  // Resource handling
  notFound: (resource =
  /* istanbul ignore next */
  (cov_18gzpiqqrx().b[8][0]++, 'Resource')) => {
    /* istanbul ignore next */
    cov_18gzpiqqrx().f[6]++;
    cov_18gzpiqqrx().s[28]++;
    return createErrorResponse(`${resource} not found`, exports.HttpStatus.NOT_FOUND, exports.ErrorTypes.NOT_FOUND);
  },
  conflict: (message =
  /* istanbul ignore next */
  (cov_18gzpiqqrx().b[9][0]++, 'Resource conflict')) => {
    /* istanbul ignore next */
    cov_18gzpiqqrx().f[7]++;
    cov_18gzpiqqrx().s[29]++;
    return createErrorResponse(message, exports.HttpStatus.CONFLICT, exports.ErrorTypes.CONFLICT);
  },
  // Rate limiting
  rateLimitExceeded: (message =
  /* istanbul ignore next */
  (cov_18gzpiqqrx().b[10][0]++, 'Rate limit exceeded')) => {
    /* istanbul ignore next */
    cov_18gzpiqqrx().f[8]++;
    cov_18gzpiqqrx().s[30]++;
    return createErrorResponse(message, exports.HttpStatus.RATE_LIMITED, exports.ErrorTypes.RATE_LIMIT_EXCEEDED);
  },
  // Server errors
  internalServerError: (message =
  /* istanbul ignore next */
  (cov_18gzpiqqrx().b[11][0]++, 'Internal server error')) => {
    /* istanbul ignore next */
    cov_18gzpiqqrx().f[9]++;
    cov_18gzpiqqrx().s[31]++;
    return createErrorResponse(message, exports.HttpStatus.INTERNAL_SERVER_ERROR, exports.ErrorTypes.INTERNAL_SERVER_ERROR);
  },
  serviceUnavailable: (message =
  /* istanbul ignore next */
  (cov_18gzpiqqrx().b[12][0]++, 'Service temporarily unavailable')) => {
    /* istanbul ignore next */
    cov_18gzpiqqrx().f[10]++;
    cov_18gzpiqqrx().s[32]++;
    return createErrorResponse(message, exports.HttpStatus.SERVICE_UNAVAILABLE);
  },
  // File upload errors
  fileTooLarge: maxSize => {
    /* istanbul ignore next */
    cov_18gzpiqqrx().f[11]++;
    cov_18gzpiqqrx().s[33]++;
    return createErrorResponse(`File too large${maxSize ?
    /* istanbul ignore next */
    (cov_18gzpiqqrx().b[13][0]++, `. Maximum size: ${maxSize}`) :
    /* istanbul ignore next */
    (cov_18gzpiqqrx().b[13][1]++, '')}`, exports.HttpStatus.PAYLOAD_TOO_LARGE, exports.ErrorTypes.FILE_TOO_LARGE);
  },
  unsupportedMediaType: supportedTypes => {
    /* istanbul ignore next */
    cov_18gzpiqqrx().f[12]++;
    cov_18gzpiqqrx().s[34]++;
    return createErrorResponse(`Unsupported media type${supportedTypes ?
    /* istanbul ignore next */
    (cov_18gzpiqqrx().b[14][0]++, `. Supported: ${supportedTypes.join(', ')}`) :
    /* istanbul ignore next */
    (cov_18gzpiqqrx().b[14][1]++, '')}`, exports.HttpStatus.UNSUPPORTED_MEDIA_TYPE, exports.ErrorTypes.UNSUPPORTED_MEDIA_TYPE);
  },
  // Success responses
  success: (data, message) => {
    /* istanbul ignore next */
    cov_18gzpiqqrx().f[13]++;
    cov_18gzpiqqrx().s[35]++;
    return createSuccessResponse(data, exports.HttpStatus.OK, message);
  },
  created: (data, message) => {
    /* istanbul ignore next */
    cov_18gzpiqqrx().f[14]++;
    cov_18gzpiqqrx().s[36]++;
    return createSuccessResponse(data, exports.HttpStatus.CREATED,
    /* istanbul ignore next */
    (cov_18gzpiqqrx().b[15][0]++, message) ||
    /* istanbul ignore next */
    (cov_18gzpiqqrx().b[15][1]++, 'Resource created successfully'));
  },
  accepted: (message =
  /* istanbul ignore next */
  (cov_18gzpiqqrx().b[16][0]++, 'Request accepted for processing')) => {
    /* istanbul ignore next */
    cov_18gzpiqqrx().f[15]++;
    cov_18gzpiqqrx().s[37]++;
    return createSuccessResponse(undefined, exports.HttpStatus.ACCEPTED, message);
  },
  noContent: () => {
    /* istanbul ignore next */
    cov_18gzpiqqrx().f[16]++;
    cov_18gzpiqqrx().s[38]++;
    return new server_1.NextResponse(null, {
      status: exports.HttpStatus.NO_CONTENT
    });
  }
};
/**
 * Utility to handle async operations with standardized error handling
 */
async function withErrorHandling(operation, errorMessage) {
  /* istanbul ignore next */
  cov_18gzpiqqrx().f[17]++;
  cov_18gzpiqqrx().s[39]++;
  try {
    /* istanbul ignore next */
    cov_18gzpiqqrx().s[40]++;
    return await operation();
  } catch (error) {
    /* istanbul ignore next */
    cov_18gzpiqqrx().s[41]++;
    logger_1.logger.error('API operation failed', {
      error:
      /* istanbul ignore next */
      (cov_18gzpiqqrx().b[18][0]++, error === null) ||
      /* istanbul ignore next */
      (cov_18gzpiqqrx().b[18][1]++, error === void 0) ?
      /* istanbul ignore next */
      (cov_18gzpiqqrx().b[17][0]++, void 0) :
      /* istanbul ignore next */
      (cov_18gzpiqqrx().b[17][1]++, error.message),
      stack:
      /* istanbul ignore next */
      (cov_18gzpiqqrx().b[20][0]++, error === null) ||
      /* istanbul ignore next */
      (cov_18gzpiqqrx().b[20][1]++, error === void 0) ?
      /* istanbul ignore next */
      (cov_18gzpiqqrx().b[19][0]++, void 0) :
      /* istanbul ignore next */
      (cov_18gzpiqqrx().b[19][1]++, error.stack)
    }, 'API');
    // Handle specific error types
    /* istanbul ignore next */
    cov_18gzpiqqrx().s[42]++;
    if (error.name === 'ValidationError') {
      /* istanbul ignore next */
      cov_18gzpiqqrx().b[21][0]++;
      cov_18gzpiqqrx().s[43]++;
      return exports.ApiResponses.validationError(error.message, error.details);
    } else
    /* istanbul ignore next */
    {
      cov_18gzpiqqrx().b[21][1]++;
    }
    cov_18gzpiqqrx().s[44]++;
    if (error.code === 'PGRST116') {
      /* istanbul ignore next */
      cov_18gzpiqqrx().b[22][0]++;
      cov_18gzpiqqrx().s[45]++;
      // Supabase not found
      return exports.ApiResponses.notFound();
    } else
    /* istanbul ignore next */
    {
      cov_18gzpiqqrx().b[22][1]++;
    }
    cov_18gzpiqqrx().s[46]++;
    if (error.status === 429) {
      /* istanbul ignore next */
      cov_18gzpiqqrx().b[23][0]++;
      cov_18gzpiqqrx().s[47]++;
      return exports.ApiResponses.rateLimitExceeded();
    } else
    /* istanbul ignore next */
    {
      cov_18gzpiqqrx().b[23][1]++;
    }
    cov_18gzpiqqrx().s[48]++;
    return exports.ApiResponses.internalServerError(errorMessage);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMThnenBpcXFyeCIsImFjdHVhbENvdmVyYWdlIiwicyIsImV4cG9ydHMiLCJjcmVhdGVFcnJvclJlc3BvbnNlIiwiY3JlYXRlU3VjY2Vzc1Jlc3BvbnNlIiwid2l0aEVycm9ySGFuZGxpbmciLCJzZXJ2ZXJfMSIsInJlcXVpcmUiLCJsb2dnZXJfMSIsIkVycm9yVHlwZXMiLCJBVVRIRU5USUNBVElPTl9SRVFVSVJFRCIsIkFVVEhPUklaQVRJT05fRkFJTEVEIiwiVkFMSURBVElPTl9FUlJPUiIsIk5PVF9GT1VORCIsIlJBVEVfTElNSVRfRVhDRUVERUQiLCJJTlRFUk5BTF9TRVJWRVJfRVJST1IiLCJCQURfUkVRVUVTVCIsIkNPTkZMSUNUIiwiRklMRV9UT09fTEFSR0UiLCJVTlNVUFBPUlRFRF9NRURJQV9UWVBFIiwiSHR0cFN0YXR1cyIsIk9LIiwiQ1JFQVRFRCIsIkFDQ0VQVEVEIiwiTk9fQ09OVEVOVCIsIlVOQVVUSE9SSVpFRCIsIkZPUkJJRERFTiIsIlBBWUxPQURfVE9PX0xBUkdFIiwiUkFURV9MSU1JVEVEIiwiU0VSVklDRV9VTkFWQUlMQUJMRSIsIm1lc3NhZ2UiLCJzdGF0dXMiLCJ0eXBlIiwiZGV0YWlscyIsImYiLCJyZXNwb25zZURhdGEiLCJlcnJvciIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImIiLCJOZXh0UmVzcG9uc2UiLCJqc29uIiwiZGF0YSIsIm1ldGEiLCJzdWNjZXNzIiwidW5kZWZpbmVkIiwiQXBpUmVzcG9uc2VzIiwiYXV0aGVudGljYXRpb25SZXF1aXJlZCIsImF1dGhvcml6YXRpb25GYWlsZWQiLCJ2YWxpZGF0aW9uRXJyb3IiLCJiYWRSZXF1ZXN0Iiwibm90Rm91bmQiLCJyZXNvdXJjZSIsImNvbmZsaWN0IiwicmF0ZUxpbWl0RXhjZWVkZWQiLCJpbnRlcm5hbFNlcnZlckVycm9yIiwic2VydmljZVVuYXZhaWxhYmxlIiwiZmlsZVRvb0xhcmdlIiwibWF4U2l6ZSIsInVuc3VwcG9ydGVkTWVkaWFUeXBlIiwic3VwcG9ydGVkVHlwZXMiLCJqb2luIiwiY3JlYXRlZCIsImFjY2VwdGVkIiwibm9Db250ZW50Iiwib3BlcmF0aW9uIiwiZXJyb3JNZXNzYWdlIiwibG9nZ2VyIiwic3RhY2siLCJuYW1lIiwiY29kZSJdLCJzb3VyY2VzIjpbIi9ob21lL2cvZGV2L29yYW5nZWNhdC9zcmMvbGliL2FwaS9yZXNwb25zZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdAL3V0aWxzL2xvZ2dlcidcblxuLyoqXG4gKiBTdGFuZGFyZGl6ZWQgQVBJIFJlc3BvbnNlIEhlbHBlcnNcbiAqIFxuICogRWxpbWluYXRlcyBEUlkgdmlvbGF0aW9ucyBieSBwcm92aWRpbmcgY29uc2lzdGVudCBlcnJvciBhbmQgc3VjY2VzcyByZXNwb25zZXMuXG4gKiBVc2VkIGFjcm9zcyBhbGwgQVBJIHJvdXRlcyBmb3IgY29uc2lzdGVudCByZXNwb25zZSBmb3JtYXR0aW5nLlxuICogXG4gKiDimbvvuI8gUkVGQUNUT1JFRDogRWxpbWluYXRlcyB+MzUgaW5zdGFuY2VzIG9mIHNpbWlsYXIgZXJyb3IgcmVzcG9uc2VzXG4gKi9cblxuLy8gU3RhbmRhcmQgZXJyb3IgdHlwZXNcbmV4cG9ydCBjb25zdCBFcnJvclR5cGVzID0ge1xuICBBVVRIRU5USUNBVElPTl9SRVFVSVJFRDogJ0FVVEhFTlRJQ0FUSU9OX1JFUVVJUkVEJyxcbiAgQVVUSE9SSVpBVElPTl9GQUlMRUQ6ICdBVVRIT1JJWkFUSU9OX0ZBSUxFRCcsXG4gIFZBTElEQVRJT05fRVJST1I6ICdWQUxJREFUSU9OX0VSUk9SJyxcbiAgTk9UX0ZPVU5EOiAnTk9UX0ZPVU5EJyxcbiAgUkFURV9MSU1JVF9FWENFRURFRDogJ1JBVEVfTElNSVRfRVhDRUVERUQnLFxuICBJTlRFUk5BTF9TRVJWRVJfRVJST1I6ICdJTlRFUk5BTF9TRVJWRVJfRVJST1InLFxuICBCQURfUkVRVUVTVDogJ0JBRF9SRVFVRVNUJyxcbiAgQ09ORkxJQ1Q6ICdDT05GTElDVCcsXG4gIEZJTEVfVE9PX0xBUkdFOiAnRklMRV9UT09fTEFSR0UnLFxuICBVTlNVUFBPUlRFRF9NRURJQV9UWVBFOiAnVU5TVVBQT1JURURfTUVESUFfVFlQRSdcbn0gYXMgY29uc3RcblxuLy8gU3RhbmRhcmQgSFRUUCBzdGF0dXMgY29kZXNcbmV4cG9ydCBjb25zdCBIdHRwU3RhdHVzID0ge1xuICBPSzogMjAwLFxuICBDUkVBVEVEOiAyMDEsXG4gIEFDQ0VQVEVEOiAyMDIsXG4gIE5PX0NPTlRFTlQ6IDIwNCxcbiAgQkFEX1JFUVVFU1Q6IDQwMCxcbiAgVU5BVVRIT1JJWkVEOiA0MDEsXG4gIEZPUkJJRERFTjogNDAzLFxuICBOT1RfRk9VTkQ6IDQwNCxcbiAgQ09ORkxJQ1Q6IDQwOSxcbiAgUEFZTE9BRF9UT09fTEFSR0U6IDQxMyxcbiAgVU5TVVBQT1JURURfTUVESUFfVFlQRTogNDE1LFxuICBSQVRFX0xJTUlURUQ6IDQyOSxcbiAgSU5URVJOQUxfU0VSVkVSX0VSUk9SOiA1MDAsXG4gIFNFUlZJQ0VfVU5BVkFJTEFCTEU6IDUwM1xufSBhcyBjb25zdFxuXG5pbnRlcmZhY2UgRXJyb3JSZXNwb25zZURhdGEge1xuICBlcnJvcjogc3RyaW5nXG4gIHR5cGU/OiBzdHJpbmdcbiAgZGV0YWlscz86IGFueVxuICB0aW1lc3RhbXA/OiBzdHJpbmdcbiAgcmVxdWVzdElkPzogc3RyaW5nXG59XG5cbmludGVyZmFjZSBTdWNjZXNzUmVzcG9uc2VEYXRhIHtcbiAgc3VjY2Vzcz86IGJvb2xlYW5cbiAgZGF0YT86IGFueVxuICBtZXNzYWdlPzogc3RyaW5nXG4gIG1ldGE/OiBhbnlcbiAgdGltZXN0YW1wPzogc3RyaW5nXG59XG5cbi8qKlxuICogQ3JlYXRlIHN0YW5kYXJkaXplZCBlcnJvciByZXNwb25zZVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRXJyb3JSZXNwb25zZShcbiAgbWVzc2FnZTogc3RyaW5nLFxuICBzdGF0dXM6IG51bWJlcixcbiAgdHlwZT86IHN0cmluZyxcbiAgZGV0YWlscz86IGFueVxuKTogTmV4dFJlc3BvbnNlIHtcbiAgY29uc3QgcmVzcG9uc2VEYXRhOiBFcnJvclJlc3BvbnNlRGF0YSA9IHtcbiAgICBlcnJvcjogbWVzc2FnZSxcbiAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICB9XG5cbiAgaWYgKHR5cGUpIHJlc3BvbnNlRGF0YS50eXBlID0gdHlwZVxuICBpZiAoZGV0YWlscykgcmVzcG9uc2VEYXRhLmRldGFpbHMgPSBkZXRhaWxzXG5cbiAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHJlc3BvbnNlRGF0YSwgeyBzdGF0dXMgfSlcbn1cblxuLyoqXG4gKiBDcmVhdGUgc3RhbmRhcmRpemVkIHN1Y2Nlc3MgcmVzcG9uc2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN1Y2Nlc3NSZXNwb25zZShcbiAgZGF0YT86IGFueSxcbiAgc3RhdHVzOiBudW1iZXIgPSBIdHRwU3RhdHVzLk9LLFxuICBtZXNzYWdlPzogc3RyaW5nLFxuICBtZXRhPzogYW55XG4pOiBOZXh0UmVzcG9uc2Uge1xuICBjb25zdCByZXNwb25zZURhdGE6IFN1Y2Nlc3NSZXNwb25zZURhdGEgPSB7XG4gICAgc3VjY2VzczogdHJ1ZSxcbiAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICB9XG5cbiAgaWYgKGRhdGEgIT09IHVuZGVmaW5lZCkgcmVzcG9uc2VEYXRhLmRhdGEgPSBkYXRhXG4gIGlmIChtZXNzYWdlKSByZXNwb25zZURhdGEubWVzc2FnZSA9IG1lc3NhZ2VcbiAgaWYgKG1ldGEpIHJlc3BvbnNlRGF0YS5tZXRhID0gbWV0YVxuXG4gIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihyZXNwb25zZURhdGEsIHsgc3RhdHVzIH0pXG59XG5cbi8vIFByZS1jb25maWd1cmVkIGVycm9yIHJlc3BvbnNlcyBmb3IgY29tbW9uIHNjZW5hcmlvc1xuZXhwb3J0IGNvbnN0IEFwaVJlc3BvbnNlcyA9IHtcbiAgLy8gQXV0aGVudGljYXRpb24gJiBBdXRob3JpemF0aW9uXG4gIGF1dGhlbnRpY2F0aW9uUmVxdWlyZWQ6ICgpID0+IGNyZWF0ZUVycm9yUmVzcG9uc2UoXG4gICAgJ0F1dGhlbnRpY2F0aW9uIHJlcXVpcmVkJyxcbiAgICBIdHRwU3RhdHVzLlVOQVVUSE9SSVpFRCxcbiAgICBFcnJvclR5cGVzLkFVVEhFTlRJQ0FUSU9OX1JFUVVJUkVEXG4gICksXG5cbiAgYXV0aG9yaXphdGlvbkZhaWxlZDogKG1lc3NhZ2UgPSAnSW5zdWZmaWNpZW50IHBlcm1pc3Npb25zJykgPT4gY3JlYXRlRXJyb3JSZXNwb25zZShcbiAgICBtZXNzYWdlLFxuICAgIEh0dHBTdGF0dXMuRk9SQklEREVOLFxuICAgIEVycm9yVHlwZXMuQVVUSE9SSVpBVElPTl9GQUlMRURcbiAgKSxcblxuICAvLyBWYWxpZGF0aW9uXG4gIHZhbGlkYXRpb25FcnJvcjogKG1lc3NhZ2U6IHN0cmluZywgZGV0YWlscz86IGFueSkgPT4gY3JlYXRlRXJyb3JSZXNwb25zZShcbiAgICBtZXNzYWdlLFxuICAgIEh0dHBTdGF0dXMuQkFEX1JFUVVFU1QsXG4gICAgRXJyb3JUeXBlcy5WQUxJREFUSU9OX0VSUk9SLFxuICAgIGRldGFpbHNcbiAgKSxcblxuICBiYWRSZXF1ZXN0OiAobWVzc2FnZSA9ICdCYWQgcmVxdWVzdCcpID0+IGNyZWF0ZUVycm9yUmVzcG9uc2UoXG4gICAgbWVzc2FnZSxcbiAgICBIdHRwU3RhdHVzLkJBRF9SRVFVRVNULFxuICAgIEVycm9yVHlwZXMuQkFEX1JFUVVFU1RcbiAgKSxcblxuICAvLyBSZXNvdXJjZSBoYW5kbGluZ1xuICBub3RGb3VuZDogKHJlc291cmNlID0gJ1Jlc291cmNlJykgPT4gY3JlYXRlRXJyb3JSZXNwb25zZShcbiAgICBgJHtyZXNvdXJjZX0gbm90IGZvdW5kYCxcbiAgICBIdHRwU3RhdHVzLk5PVF9GT1VORCxcbiAgICBFcnJvclR5cGVzLk5PVF9GT1VORFxuICApLFxuXG4gIGNvbmZsaWN0OiAobWVzc2FnZSA9ICdSZXNvdXJjZSBjb25mbGljdCcpID0+IGNyZWF0ZUVycm9yUmVzcG9uc2UoXG4gICAgbWVzc2FnZSxcbiAgICBIdHRwU3RhdHVzLkNPTkZMSUNULFxuICAgIEVycm9yVHlwZXMuQ09ORkxJQ1RcbiAgKSxcblxuICAvLyBSYXRlIGxpbWl0aW5nXG4gIHJhdGVMaW1pdEV4Y2VlZGVkOiAobWVzc2FnZSA9ICdSYXRlIGxpbWl0IGV4Y2VlZGVkJykgPT4gY3JlYXRlRXJyb3JSZXNwb25zZShcbiAgICBtZXNzYWdlLFxuICAgIEh0dHBTdGF0dXMuUkFURV9MSU1JVEVELFxuICAgIEVycm9yVHlwZXMuUkFURV9MSU1JVF9FWENFRURFRFxuICApLFxuXG4gIC8vIFNlcnZlciBlcnJvcnNcbiAgaW50ZXJuYWxTZXJ2ZXJFcnJvcjogKG1lc3NhZ2UgPSAnSW50ZXJuYWwgc2VydmVyIGVycm9yJykgPT4gY3JlYXRlRXJyb3JSZXNwb25zZShcbiAgICBtZXNzYWdlLFxuICAgIEh0dHBTdGF0dXMuSU5URVJOQUxfU0VSVkVSX0VSUk9SLFxuICAgIEVycm9yVHlwZXMuSU5URVJOQUxfU0VSVkVSX0VSUk9SXG4gICksXG5cbiAgc2VydmljZVVuYXZhaWxhYmxlOiAobWVzc2FnZSA9ICdTZXJ2aWNlIHRlbXBvcmFyaWx5IHVuYXZhaWxhYmxlJykgPT4gY3JlYXRlRXJyb3JSZXNwb25zZShcbiAgICBtZXNzYWdlLFxuICAgIEh0dHBTdGF0dXMuU0VSVklDRV9VTkFWQUlMQUJMRVxuICApLFxuXG4gIC8vIEZpbGUgdXBsb2FkIGVycm9yc1xuICBmaWxlVG9vTGFyZ2U6IChtYXhTaXplPzogc3RyaW5nKSA9PiBjcmVhdGVFcnJvclJlc3BvbnNlKFxuICAgIGBGaWxlIHRvbyBsYXJnZSR7bWF4U2l6ZSA/IGAuIE1heGltdW0gc2l6ZTogJHttYXhTaXplfWAgOiAnJ31gLFxuICAgIEh0dHBTdGF0dXMuUEFZTE9BRF9UT09fTEFSR0UsXG4gICAgRXJyb3JUeXBlcy5GSUxFX1RPT19MQVJHRVxuICApLFxuXG4gIHVuc3VwcG9ydGVkTWVkaWFUeXBlOiAoc3VwcG9ydGVkVHlwZXM/OiBzdHJpbmdbXSkgPT4gY3JlYXRlRXJyb3JSZXNwb25zZShcbiAgICBgVW5zdXBwb3J0ZWQgbWVkaWEgdHlwZSR7c3VwcG9ydGVkVHlwZXMgPyBgLiBTdXBwb3J0ZWQ6ICR7c3VwcG9ydGVkVHlwZXMuam9pbignLCAnKX1gIDogJyd9YCxcbiAgICBIdHRwU3RhdHVzLlVOU1VQUE9SVEVEX01FRElBX1RZUEUsXG4gICAgRXJyb3JUeXBlcy5VTlNVUFBPUlRFRF9NRURJQV9UWVBFXG4gICksXG5cbiAgLy8gU3VjY2VzcyByZXNwb25zZXNcbiAgc3VjY2VzczogKGRhdGE/OiBhbnksIG1lc3NhZ2U/OiBzdHJpbmcpID0+IGNyZWF0ZVN1Y2Nlc3NSZXNwb25zZShcbiAgICBkYXRhLFxuICAgIEh0dHBTdGF0dXMuT0ssXG4gICAgbWVzc2FnZVxuICApLFxuXG4gIGNyZWF0ZWQ6IChkYXRhPzogYW55LCBtZXNzYWdlPzogc3RyaW5nKSA9PiBjcmVhdGVTdWNjZXNzUmVzcG9uc2UoXG4gICAgZGF0YSxcbiAgICBIdHRwU3RhdHVzLkNSRUFURUQsXG4gICAgbWVzc2FnZSB8fCAnUmVzb3VyY2UgY3JlYXRlZCBzdWNjZXNzZnVsbHknXG4gICksXG5cbiAgYWNjZXB0ZWQ6IChtZXNzYWdlID0gJ1JlcXVlc3QgYWNjZXB0ZWQgZm9yIHByb2Nlc3NpbmcnKSA9PiBjcmVhdGVTdWNjZXNzUmVzcG9uc2UoXG4gICAgdW5kZWZpbmVkLFxuICAgIEh0dHBTdGF0dXMuQUNDRVBURUQsXG4gICAgbWVzc2FnZVxuICApLFxuXG4gIG5vQ29udGVudDogKCkgPT4gbmV3IE5leHRSZXNwb25zZShudWxsLCB7IHN0YXR1czogSHR0cFN0YXR1cy5OT19DT05URU5UIH0pXG59XG5cbi8qKlxuICogVXRpbGl0eSB0byBoYW5kbGUgYXN5bmMgb3BlcmF0aW9ucyB3aXRoIHN0YW5kYXJkaXplZCBlcnJvciBoYW5kbGluZ1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gd2l0aEVycm9ySGFuZGxpbmc8VD4oXG4gIG9wZXJhdGlvbjogKCkgPT4gUHJvbWlzZTxUPixcbiAgZXJyb3JNZXNzYWdlPzogc3RyaW5nXG4pOiBQcm9taXNlPFQgfCBOZXh0UmVzcG9uc2U+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gYXdhaXQgb3BlcmF0aW9uKClcbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgIGxvZ2dlci5lcnJvcignQVBJIG9wZXJhdGlvbiBmYWlsZWQnLCB7IGVycm9yOiBlcnJvcj8ubWVzc2FnZSwgc3RhY2s6IGVycm9yPy5zdGFjayB9LCAnQVBJJylcbiAgICBcbiAgICAvLyBIYW5kbGUgc3BlY2lmaWMgZXJyb3IgdHlwZXNcbiAgICBpZiAoZXJyb3IubmFtZSA9PT0gJ1ZhbGlkYXRpb25FcnJvcicpIHtcbiAgICAgIHJldHVybiBBcGlSZXNwb25zZXMudmFsaWRhdGlvbkVycm9yKGVycm9yLm1lc3NhZ2UsIGVycm9yLmRldGFpbHMpXG4gICAgfVxuICAgIFxuICAgIGlmIChlcnJvci5jb2RlID09PSAnUEdSU1QxMTYnKSB7IC8vIFN1cGFiYXNlIG5vdCBmb3VuZFxuICAgICAgcmV0dXJuIEFwaVJlc3BvbnNlcy5ub3RGb3VuZCgpXG4gICAgfVxuICAgIFxuICAgIGlmIChlcnJvci5zdGF0dXMgPT09IDQyOSkge1xuICAgICAgcmV0dXJuIEFwaVJlc3BvbnNlcy5yYXRlTGltaXRFeGNlZWRlZCgpXG4gICAgfVxuICAgIFxuICAgIHJldHVybiBBcGlSZXNwb25zZXMuaW50ZXJuYWxTZXJ2ZXJFcnJvcihlcnJvck1lc3NhZ2UpXG4gIH1cbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBVUc7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQUFBQSxjQUFBLEdBQUFFLENBQUE7Ozs7Ozs7OztBQXFESEMsT0FBQSxDQUFBQyxtQkFBQSxHQUFBQSxtQkFBQTtBQWVDO0FBQUFKLGNBQUEsR0FBQUUs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