{"version":3,"names":["cov_v7dt7o7do","actualCoverage","exports","default","AssociationsPage","react_1","s","require","lucide_react_1","Card_1","Button_1","__importDefault","Input_1","Loading_1","link_1","associations_1","console_cleanup_1","security_1","f","associations","setAssociations","useState","loading","setLoading","searchTerm","setSearchTerm","error","setError","useEffect","fetchAssociations","data","getProfileAssociations","limit","sanitizedError","SecureErrorHandler","sanitizeErrorMessage","SafeConsole","security","timestamp","Date","toISOString","b","jsx_runtime_1","jsx","fullScreen","className","children","Card","jsxs","CardContent","Network","onClick","window","location","reload","Search","placeholder","value","onChange","e","target","length","href","Users","map","association","target_entity_id","status","Star","relationship_type","role","id"],"sources":["/home/g/dev/orangecat/src/app/associations/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Users, Network, Search, Star } from 'lucide-react'\nimport { Card, CardContent } from '@/components/ui/Card'\nimport Button from '@/components/ui/Button'\nimport Input from '@/components/ui/Input'\nimport Loading from '@/components/Loading'\nimport Link from 'next/link'\nimport AssociationService from '@/services/supabase/associations' \nimport type { Association } from '@/services/supabase/associations'\nimport { PROFILE_CATEGORIES } from '@/types/profile'\nimport { SafeConsole } from '@/utils/console-cleanup'\nimport { SecureErrorHandler } from '@/utils/security'\n\nexport default function AssociationsPage() {\n  const [associations, setAssociations] = useState<Association[]>([])\n  const [loading, setLoading] = useState(true)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    const fetchAssociations = async () => {\n      try {\n        setLoading(true)\n        setError(null)\n        // For demo purposes, get current user's associations\n        // In production, this would be a public endpoint for all associations\n        const data = await AssociationService.getProfileAssociations('demo-user-id', {}, { limit: 100 })\n        setAssociations(data)\n      } catch (error) {\n        const sanitizedError = SecureErrorHandler.sanitizeErrorMessage(error)\n        setError(sanitizedError)\n        SafeConsole.security('Failed to fetch associations', { \n          error: sanitizedError,\n          timestamp: new Date().toISOString()\n        })\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchAssociations()\n  }, [])\n\n  if (loading) {\n    return <Loading fullScreen />\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 via-white to-gray-100\">\n        <div className=\"max-w-7xl mx-auto px-4 py-8\">\n          <Card className=\"shadow-lg\">\n            <CardContent className=\"p-12 text-center\">\n              <Network className=\"w-16 h-16 mx-auto mb-4 text-red-300\" />\n              <h3 className=\"text-xl font-semibold text-red-700 mb-2\">Unable to Load Associations</h3>\n              <p className=\"text-gray-500 mb-6\">{error}</p>\n              <Button \n                onClick={() => window.location.reload()}\n                className=\"bg-red-600 hover:bg-red-700 text-white\"\n              >\n                Try Again\n              </Button>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 via-white to-gray-100\">\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\n        <div className=\"text-center mb-12\">\n          <div className=\"inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-purple-500 to-blue-600 rounded-full mb-6\">\n            <Network className=\"w-10 h-10 text-white\" />\n          </div>\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n            OrangeCat Associations\n          </h1>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Explore the network of connections within the Bitcoin community\n          </p>\n        </div>\n\n        <Card className=\"mb-8 shadow-lg\">\n          <CardContent className=\"p-6\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n              <Input\n                placeholder=\"Search associations...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10\"\n              />\n            </div>\n          </CardContent>\n        </Card>\n\n        {associations.length === 0 ? (\n          <Card className=\"shadow-lg\">\n            <CardContent className=\"p-12 text-center\">\n              <Network className=\"w-16 h-16 mx-auto mb-4 text-gray-300\" />\n              <h3 className=\"text-xl font-semibold text-gray-700 mb-2\">No Associations Found</h3>\n              <p className=\"text-gray-500 mb-6\">\n                Be the first to create associations in the community!\n              </p>\n              <Link href=\"/(authenticated)/profile/me\">\n                <Button className=\"bg-purple-600 hover:bg-purple-700 text-white\">\n                  <Users className=\"w-4 h-4 mr-2\" />\n                  Go to Your Profile\n                </Button>\n              </Link>\n            </CardContent>\n          </Card>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {associations.map((association) => (\n              <Card key={association.id} className=\"shadow-lg hover:shadow-xl transition-all\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <h3 className=\"font-semibold text-gray-900\">\n                      {association.target_entity_id}\n                    </h3>\n                    {association.status === 'active' && (\n                      <Star className=\"w-4 h-4 text-green-500\" />\n                    )}\n                  </div>\n                  <p className=\"text-sm text-purple-600 mb-2\">\n                    {association.relationship_type}\n                  </p>\n                  {association.role && (\n                    <p className=\"text-sm text-gray-600\">\n                      Role: {association.role}\n                    </p>\n                  )}\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n} "],"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","ignoreList":[]}