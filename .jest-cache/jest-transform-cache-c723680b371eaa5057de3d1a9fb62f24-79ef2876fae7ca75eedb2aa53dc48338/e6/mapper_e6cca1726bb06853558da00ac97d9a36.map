{"file":"/home/g/dev/orangecat/src/services/profile/mapper.ts","mappings":"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","names":[],"sources":["/home/g/dev/orangecat/src/services/profile/mapper.ts"],"sourcesContent":["/**\n * PROFILE MAPPER MODULE\n * \n * Created: 2025-01-09\n * Last Modified: 2025-01-09\n * Last Modified Summary: Extracted from profileService.ts for modular architecture - handles schema mapping\n */\n\nimport type { ScalableProfile, ScalableProfileFormData } from './types'\n\n// =====================================================================\n// ðŸ”„ SCHEMA MAPPING UTILITIES\n// =====================================================================\n\nexport class ProfileMapper {\n  /**\n   * Map database row to scalable profile interface\n   */\n  static mapDatabaseToProfile(dbRow: any): ScalableProfile {\n    if (!dbRow) return null;\n    \n    return {\n      // Core database fields\n      id: dbRow.id,\n      username: dbRow.username,\n      display_name: dbRow.display_name,\n      avatar_url: dbRow.avatar_url,\n      banner_url: dbRow.banner_url,\n      bio: dbRow.bio,\n      website: dbRow.website,\n      bitcoin_address: dbRow.bitcoin_address,\n      lightning_address: dbRow.lightning_address,\n      created_at: dbRow.created_at,\n      updated_at: dbRow.updated_at,\n      \n      // Legacy compatibility\n      full_name: dbRow.display_name || null,\n      \n      // Extended fields with defaults\n      email: null,\n      phone: null,\n      location: null,\n      timezone: 'UTC',\n      language: 'en',\n      currency: 'USD',\n      \n      // Bitcoin-native features\n      bitcoin_public_key: null,\n      lightning_node_id: null,\n      payment_preferences: {},\n      bitcoin_balance: 0,\n      lightning_balance: 0,\n      \n      // Analytics & Engagement\n      profile_views: 0,\n      follower_count: 0,\n      following_count: 0,\n      campaign_count: 0,\n      total_raised: 0,\n      total_donated: 0,\n      \n      // Verification & Security\n      verification_status: 'unverified',\n      verification_level: 0,\n      kyc_status: 'none',\n      two_factor_enabled: false,\n      last_login_at: null,\n      login_count: 0,\n      \n      // Customization & Branding\n      theme_preferences: {},\n      custom_css: null,\n      profile_color: null,\n      cover_image_url: null,\n      profile_badges: [],\n      \n      // Status & Temporal\n      status: 'active',\n      last_active_at: null,\n      profile_completed_at: null,\n      onboarding_completed: false,\n      terms_accepted_at: null,\n      privacy_policy_accepted_at: null,\n      \n      // Extensibility (JSON fields)\n      social_links: {},\n      preferences: {},\n      metadata: {},\n      verification_data: {},\n      privacy_settings: {}\n    };\n  }\n\n  /**\n   * Map profile object to database format\n   */\n  static mapProfileToDatabase(profile: Partial<ScalableProfile>): any {\n    // Core fields that go directly to database columns\n    const coreFields: any = {\n      username: profile.username || null,\n      display_name: profile.display_name || profile.full_name || null,\n      avatar_url: profile.avatar_url || null,\n      banner_url: profile.banner_url || null,\n      bio: profile.bio || null,\n      website: profile.website || null,\n      bitcoin_address: profile.bitcoin_address || null,\n      lightning_address: profile.lightning_address || null,\n      updated_at: new Date().toISOString()\n    };\n\n    // Only include fields that are not null/undefined\n    const cleanFields: any = {};\n    Object.keys(coreFields).forEach(key => {\n      if (coreFields[key] !== null && coreFields[key] !== undefined) {\n        cleanFields[key] = coreFields[key];\n      }\n    });\n    \n    return cleanFields;\n  }\n} "],"version":3}