{"version":3,"names":["cov_2hpyfvq17q","actualCoverage","s","generateSlug","title","f","toLowerCase","replace","trim","exports","estimateReadingTime","content","wordsPerMinute","wordCount","split","length","minutes","Math","ceil","createBlogPost","params","slug","readTime","b","excerpt","date","Date","toISOString","tags","featured","author","published","blogPostTemplates","howTo","titleFormat","excerptFormat","explanation","caseStudy","technical","philosophy","commonTags","guides","community","business","features","stories"],"sources":["/home/g/dev/orangecat/src/utils/blog-helper.ts"],"sourcesContent":["import { BlogPost } from '@/data/blog-posts'\n\n// Helper function to generate a slug from a title\nexport const generateSlug = (title: string): string => {\n  return title\n    .toLowerCase()\n    .replace(/[^\\w\\s-]/g, '') // Remove special characters\n    .replace(/\\s+/g, '-') // Replace spaces with hyphens\n    .replace(/-+/g, '-') // Replace multiple hyphens with single hyphen\n    .trim()\n}\n\n// Helper function to estimate reading time\nexport const estimateReadingTime = (content: string): string => {\n  const wordsPerMinute = 200\n  const wordCount = content.split(/\\s+/).length\n  const minutes = Math.ceil(wordCount / wordsPerMinute)\n  return `${minutes} min read`\n}\n\n// Template for creating new blog posts\nexport const createBlogPost = (params: {\n  title: string\n  excerpt: string\n  content?: string\n  tags: string[]\n  featured?: boolean\n  author?: string\n  date?: string\n}): Omit<BlogPost, 'id'> => {\n  const slug = generateSlug(params.title)\n  const readTime = params.content ? estimateReadingTime(params.content) : '5 min read'\n  \n  return {\n    slug,\n    title: params.title,\n    excerpt: params.excerpt,\n    content: params.content,\n    date: params.date || new Date().toISOString().split('T')[0],\n    readTime,\n    tags: params.tags,\n    featured: params.featured || false,\n    author: params.author || 'OrangeCat Team',\n    published: true,\n  }\n}\n\n// Quick blog post ideas and templates\nexport const blogPostTemplates = {\n  howTo: {\n    tags: ['Guide', 'How-to'],\n    titleFormat: 'How to [ACTION] with Bitcoin',\n    excerptFormat: 'Step-by-step guide to [ACTION] using Bitcoin and OrangeCat.'\n  },\n  explanation: {\n    tags: ['Explanation', 'Bitcoin'],\n    titleFormat: 'Understanding [CONCEPT]',\n    excerptFormat: 'A clear explanation of [CONCEPT] and why it matters for Bitcoin users.'\n  },\n  caseStudy: {\n    tags: ['Case Study', 'Success Stories'],\n    titleFormat: '[PROJECT NAME]: A Bitcoin Funding Success Story',\n    excerptFormat: 'How [PROJECT] used Bitcoin funding to achieve their goals and what we can learn from their approach.'\n  },\n  technical: {\n    tags: ['Technical', 'Bitcoin', 'Development'],\n    titleFormat: 'The Technical Side of [FEATURE]',\n    excerptFormat: 'Deep dive into how [FEATURE] works under the hood and why we built it this way.'\n  },\n  philosophy: {\n    tags: ['Philosophy', 'Community', 'Bitcoin'],\n    titleFormat: 'Why [CONCEPT] Matters for Bitcoin Communities',\n    excerptFormat: 'Exploring the broader implications of [CONCEPT] and its role in building better communities.'\n  }\n}\n\n// Common tag categories\nexport const commonTags = {\n  technical: ['Technical', 'Development', 'Bitcoin', 'Blockchain'],\n  guides: ['Guide', 'How-to', 'Getting Started', 'Tutorial'],\n  community: ['Community', 'Philosophy', 'Social Impact'],\n  business: ['Business', 'Funding', 'Entrepreneurship'],\n  features: ['Features', 'Updates', 'Product'],\n  stories: ['Success Stories', 'Case Studies', 'User Stories']\n} "],"mappings":"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","ignoreList":[]}