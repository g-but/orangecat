{"file":"/home/g/dev/orangecat/jest.setup.ts","mappings":"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","names":[],"sources":["/home/g/dev/orangecat/jest.setup.ts"],"sourcesContent":["/**\n * JEST SETUP - COMPREHENSIVE TEST ENVIRONMENT\n *\n * This file configures the Jest testing environment with all necessary\n * mocks, polyfills, and global configurations for OrangeCat testing.\n *\n * Created: 2025-01-08\n * Last Modified: 2025-01-08\n * Last Modified Summary: Comprehensive test environment setup\n */\n\nimport '@testing-library/jest-dom'; \n\n// -----------------------------------------------------------------------------\n// Global Test Environment Configuration\n// -----------------------------------------------------------------------------\n\n// Provide sane default environment variables so modules that read them do not\n// throw during import when individual test files forget to set them explicitly.\nprocess.env.NEXT_PUBLIC_SITE_URL = process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000'\nprocess.env.NEXT_PUBLIC_SITE_NAME = process.env.NEXT_PUBLIC_SITE_NAME || 'OrangeCat'\nprocess.env = Object.assign({ NODE_ENV: 'test' }, process.env)\n\n// JSDOM already provides localStorage / sessionStorage but not with jest.fn()\n// Create spy-able versions so tests can safely mock implementations.\nfunction createStorageMock() {\n  const storage: Record<string, string> = {}\n  return {\n    getItem: jest.fn((key: string) => (key in storage ? storage[key] : null)),\n    setItem: jest.fn((key: string, value: string) => {\n      storage[key] = value\n    }),\n    removeItem: jest.fn((key: string) => {\n      delete storage[key]\n    }),\n    clear: jest.fn(() => {\n      Object.keys(storage).forEach((k) => delete storage[k])\n    }),\n    key: jest.fn((index: number) => Object.keys(storage)[index] ?? null),\n    get length() {\n      return Object.keys(storage).length\n    }\n  }\n}\n\n// Replace window.localStorage / sessionStorage with our spy-able mocks.\nObject.defineProperty(window, 'localStorage', {\n  value: createStorageMock(),\n  writable: true\n})\nObject.defineProperty(window, 'sessionStorage', {\n  value: createStorageMock(),\n  writable: true\n})\n\n// Prevent React act warnings from polluting test output in older tests.\n// (These are warning-level logs; suppress them globally.)\njest.spyOn(console, 'error').mockImplementation((...args) => {\n  if (typeof args[0] === 'string' && args[0].includes('not wrapped in act')) return\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (console as any).error.original?.(...args)\n})\n\n// Ensure every test gets a fresh module graph so imports executed in one test\n// don\\'t affect another (important for Supabase client tests that depend on\n// createBrowserClient being called on import).\n// afterEach(() => {\n//   jest.resetModules()\n// })\n\n// Reset the module cache before every test so modules that run side-effects on import\n// (e.g. Supabase client which calls createBrowserClient and logger) execute fresh.\nbeforeEach(() => {\n  jest.resetModules()\n})\n\n// =====================================================================\n// 🌍 ENVIRONMENT VARIABLES SETUP\n// =====================================================================\n\n// Set up test environment variables\nObject.defineProperty(process.env, 'NODE_ENV', { value: 'test', writable: true })\nObject.defineProperty(process.env, 'NEXT_PUBLIC_SUPABASE_URL', { value: 'https://test.supabase.co', writable: true })\nObject.defineProperty(process.env, 'NEXT_PUBLIC_SUPABASE_ANON_KEY', { value: 'test-anon-key', writable: true })\nObject.defineProperty(process.env, 'SUPABASE_SERVICE_ROLE_KEY', { value: 'test-service-role-key', writable: true })\n\n// =====================================================================\n// 🔧 GLOBAL MOCKS & POLYFILLS\n// =====================================================================\n\n// Mock fetch globally\nglobal.fetch = jest.fn()\n\n// Mock localStorage\nconst localStorageMock = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn(),\n  length: 0,\n  key: jest.fn()\n}\nObject.defineProperty(window, 'localStorage', {\n  value: localStorageMock\n})\n\n// Mock sessionStorage\nconst sessionStorageMock = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn(),\n  length: 0,\n  key: jest.fn()\n}\nObject.defineProperty(window, 'sessionStorage', {\n  value: sessionStorageMock\n})\n\n// Mock window.location\ndelete (window as any).location\nwindow.location = {\n  href: 'http://localhost:3000',\n  origin: 'http://localhost:3000',\n  protocol: 'http:',\n  host: 'localhost:3000',\n  hostname: 'localhost',\n  port: '3000',\n  pathname: '/',\n  search: '',\n  hash: '',\n  assign: jest.fn(),\n  replace: jest.fn(),\n  reload: jest.fn()\n} as any\n\n// Mock console methods to reduce noise in tests\nconst originalConsole = { ...console }\nglobal.console = {\n  ...console,\n  log: jest.fn(),\n  warn: jest.fn(),\n  error: jest.fn(),\n  info: jest.fn(),\n  debug: jest.fn()\n}\n\n// =====================================================================\n// 🎯 SUPABASE MOCKS\n// =====================================================================\n\n// Mock Supabase client\njest.mock('@/services/supabase/client', () => ({\n  __esModule: true,\n  default: {\n    auth: {\n      getSession: jest.fn(),\n      getUser: jest.fn(),\n      signIn: jest.fn(),\n      signUp: jest.fn(),\n      signOut: jest.fn(),\n      updateUser: jest.fn(),\n      onAuthStateChange: jest.fn(() => ({ data: { subscription: { unsubscribe: jest.fn() } } }))\n    },\n    from: jest.fn(() => ({\n      select: jest.fn().mockReturnThis(),\n      insert: jest.fn().mockReturnThis(),\n      update: jest.fn().mockReturnThis(),\n      delete: jest.fn().mockReturnThis(),\n      eq: jest.fn().mockReturnThis(),\n      neq: jest.fn().mockReturnThis(),\n      gt: jest.fn().mockReturnThis(),\n      gte: jest.fn().mockReturnThis(),\n      lt: jest.fn().mockReturnThis(),\n      lte: jest.fn().mockReturnThis(),\n      like: jest.fn().mockReturnThis(),\n      ilike: jest.fn().mockReturnThis(),\n      in: jest.fn().mockReturnThis(),\n      contains: jest.fn().mockReturnThis(),\n      containedBy: jest.fn().mockReturnThis(),\n      rangeGt: jest.fn().mockReturnThis(),\n      rangeGte: jest.fn().mockReturnThis(),\n      rangeLt: jest.fn().mockReturnThis(),\n      rangeLte: jest.fn().mockReturnThis(),\n      rangeAdjacent: jest.fn().mockReturnThis(),\n      overlaps: jest.fn().mockReturnThis(),\n      textSearch: jest.fn().mockReturnThis(),\n      match: jest.fn().mockReturnThis(),\n      not: jest.fn().mockReturnThis(),\n      or: jest.fn().mockReturnThis(),\n      filter: jest.fn().mockReturnThis(),\n      order: jest.fn().mockReturnThis(),\n      limit: jest.fn().mockReturnThis(),\n      range: jest.fn().mockReturnThis(),\n      single: jest.fn(() => Promise.resolve({ data: null, error: null })),\n      maybeSingle: jest.fn(() => Promise.resolve({ data: null, error: null })),\n      csv: jest.fn(),\n      geojson: jest.fn(),\n      explain: jest.fn()\n    })),\n    storage: {\n      from: jest.fn(() => ({\n        upload: jest.fn(),\n        download: jest.fn(),\n        remove: jest.fn(),\n        list: jest.fn(),\n        getPublicUrl: jest.fn()\n      }))\n    },\n    rpc: jest.fn()\n  }\n}))\n\n// =====================================================================\n// 🔐 AUTH STORE MOCKS\n// =====================================================================\n\njest.mock('@/stores/auth', () => ({\n  useAuthStore: jest.fn(() => ({\n    user: null,\n    session: null,\n    profile: null,\n    isLoading: false,\n    error: null,\n    signIn: jest.fn(),\n    signUp: jest.fn(),\n    signOut: jest.fn(),\n    updateProfile: jest.fn(),\n    clearError: jest.fn(),\n    setUser: jest.fn(),\n    setSession: jest.fn(),\n    setProfile: jest.fn()\n  }))\n}))\n\n// =====================================================================\n// 🎨 UI COMPONENT MOCKS\n// =====================================================================\n\n// Mock Sonner toast\njest.mock('sonner', () => ({\n  toast: {\n    success: jest.fn(),\n    error: jest.fn(),\n    info: jest.fn(),\n    warning: jest.fn(),\n    loading: jest.fn(),\n    dismiss: jest.fn()\n  }\n}))\n\n// Mock Lucide React icons\njest.mock('lucide-react', () => ({\n  Search: () => 'div',\n  User: () => 'div',\n  Settings: () => 'div',\n  LogOut: () => 'div',\n  Plus: () => 'div',\n  Edit: () => 'div',\n  Trash: () => 'div',\n  Eye: () => 'div',\n  EyeOff: () => 'div',\n  Check: () => 'div',\n  X: () => 'div',\n  ChevronDown: () => 'div',\n  ChevronUp: () => 'div',\n  ChevronLeft: () => 'div',\n  ChevronRight: () => 'div',\n  Home: () => 'div',\n  Mail: () => 'div',\n  Phone: () => 'div',\n  MapPin: () => 'div',\n  Globe: () => 'div',\n  Calendar: () => 'div',\n  Clock: () => 'div',\n  Star: () => 'div',\n  Heart: () => 'div',\n  Share: () => 'div',\n  Download: () => 'div',\n  Upload: () => 'div',\n  Image: () => 'div',\n  File: () => 'div',\n  Folder: () => 'div',\n  Link: () => 'div',\n  ExternalLink: () => 'div',\n  Copy: () => 'div',\n  Clipboard: () => 'div',\n  Save: () => 'div',\n  Refresh: () => 'div',\n  RotateCcw: () => 'div',\n  RotateCw: () => 'div',\n  Loader: () => 'div',\n  Spinner: () => 'div',\n  AlertCircle: () => 'div',\n  AlertTriangle: () => 'div',\n  Info: () => 'div',\n  HelpCircle: () => 'div',\n  Shield: () => 'div',\n  Lock: () => 'div',\n  Unlock: () => 'div',\n  Key: () => 'div',\n  UserCheck: () => 'div',\n  UserX: () => 'div',\n  Users: () => 'div',\n  UserPlus: () => 'div',\n  UserMinus: () => 'div'\n}))\n\n// =====================================================================\n// 🧪 TEST UTILITIES\n// =====================================================================\n\n// Global test utilities\nglobal.testUtils = {\n  // Reset all mocks\n  resetMocks: () => {\n    jest.clearAllMocks()\n    localStorageMock.getItem.mockClear()\n    localStorageMock.setItem.mockClear()\n    localStorageMock.removeItem.mockClear()\n    localStorageMock.clear.mockClear()\n    sessionStorageMock.getItem.mockClear()\n    sessionStorageMock.setItem.mockClear()\n    sessionStorageMock.removeItem.mockClear()\n    sessionStorageMock.clear.mockClear()\n  },\n  \n  // Mock successful API responses\n  mockSuccessResponse: (data: any) => {\n    (global.fetch as jest.Mock).mockResolvedValueOnce({\n      ok: true,\n      status: 200,\n      json: async () => data,\n      text: async () => JSON.stringify(data)\n    })\n  },\n  \n  // Mock error API responses\n  mockErrorResponse: (status: number, message: string) => {\n    (global.fetch as jest.Mock).mockResolvedValueOnce({\n      ok: false,\n      status,\n      json: async () => ({ error: message }),\n      text: async () => message\n    })\n  },\n  \n  // Mock network error\n  mockNetworkError: (message: string = 'Network error') => {\n    (global.fetch as jest.Mock).mockRejectedValueOnce(new Error(message))\n  }\n}\n\n// =====================================================================\n// 🔄 SETUP & TEARDOWN\n// =====================================================================\n\n// Before each test\nbeforeEach(() => {\n  // Reset all mocks\n  jest.clearAllMocks()\n  \n  // Reset localStorage and sessionStorage\n  if (localStorageMock.getItem?.mockClear) {\n    localStorageMock.getItem.mockClear()\n    localStorageMock.setItem.mockClear()\n    localStorageMock.removeItem.mockClear()\n    localStorageMock.clear.mockClear()\n  }\n  \n  if (sessionStorageMock.getItem?.mockClear) {\n    sessionStorageMock.getItem.mockClear()\n    sessionStorageMock.setItem.mockClear()\n    sessionStorageMock.removeItem.mockClear()\n    sessionStorageMock.clear.mockClear()\n  }\n  \n  // Reset fetch mock\n  if (global.fetch && (global.fetch as any).mockClear) {\n    (global.fetch as jest.Mock).mockClear()\n  }\n  \n  // Reset console mocks\n  if ((console.log as any).mockClear) {\n    ;(console.log as jest.Mock).mockClear()\n    ;(console.warn as jest.Mock).mockClear()\n    ;(console.error as jest.Mock).mockClear()\n    ;(console.info as jest.Mock).mockClear()\n    ;(console.debug as jest.Mock).mockClear()\n  }\n})\n\n// After all tests\nafterAll(() => {\n  // Restore original console\n  global.console = originalConsole\n})\n\n// =====================================================================\n// 🎯 TYPE DECLARATIONS\n// =====================================================================\n\ndeclare global {\n  var testUtils: {\n    resetMocks: () => void\n    mockSuccessResponse: (data: any) => void\n    mockErrorResponse: (status: number, message: string) => void\n    mockNetworkError: (message?: string) => void\n  }\n}\n\n// =====================================================================\n// 🗄️ SUPABASE-JS GLOBAL MOCK (createClient)\n// =====================================================================\n\njest.mock('@supabase/supabase-js', () => {\n  // Simple in-memory store per table for rudimentary insert/select/update/delete\n  const inMemoryDB: Record<string, any[]> = {}\n\n  function tableStore(name: string) {\n    if (!inMemoryDB[name]) inMemoryDB[name] = []\n    return inMemoryDB[name]\n  }\n\n  const buildQuery = (table: string, dataset: any[]): any => {\n    const builder = {\n      _table: table,\n      _store: tableStore(table),\n      _results: dataset,\n      select(this: any, _columns = '*', opts?: any) {\n        if (opts && opts.count) {\n          return Promise.resolve({ data: this._results, count: this._results.length, error: null })\n        }\n        return buildQuery(this._table, this._results)\n      },\n      eq(this: any, column: string, value: any) {\n        const filtered = this._results.filter((row: any) => row[column] === value)\n        return buildQuery(this._table, filtered)\n      },\n      order(this: any, column: string, { ascending = true } = {}) {\n        const sorted = [...this._results].sort((a, b) => {\n          if (a[column] === b[column]) return 0\n          return ascending ? (a[column] > b[column] ? 1 : -1) : (a[column] < b[column] ? 1 : -1)\n        })\n        return buildQuery(this._table, sorted)\n      },\n      range(this: any, from: number, to: number) {\n        const ranged = this._results.slice(from, to + 1)\n        return buildQuery(this._table, ranged)\n      },\n      limit(this: any, count: number) {\n        const limited = this._results.slice(0, count)\n        return Promise.resolve({ data: limited, error: null })\n      },\n      single(this: any) {\n        if (this._results.length === 0) return Promise.resolve({ data: null, error: null })\n        return Promise.resolve({ data: this._results[0], error: null })\n      },\n      maybeSingle(this: any) {\n        if (this._results.length === 0) return Promise.resolve({ data: null, error: null })\n        return Promise.resolve({ data: this._results[0], error: null })\n      },\n      update(this: any, values: any) {\n        this._results.forEach((row: any) => Object.assign(row, values))\n        return buildQuery(this._table, this._results)\n      },\n      upsert(this: any, obj: any) {\n        const targetArr = this._store\n        const items = Array.isArray(obj) ? obj : [obj]\n        items.forEach(item => {\n          const existingIdx = targetArr.findIndex((r: any) => r.id === item.id)\n          if (existingIdx !== -1) targetArr[existingIdx] = { ...targetArr[existingIdx], ...item }\n          else targetArr.push(item)\n        })\n        return buildQuery(this._table, items)\n      },\n      delete(this: any) {\n        this._results.forEach((row: any) => {\n          const idx = this._store.indexOf(row)\n          if (idx !== -1) this._store.splice(idx, 1)\n        })\n        return Promise.resolve({ data: null, error: null })\n      },\n      count(this: any) {\n        return Promise.resolve({ count: this._results.length, error: null })\n      }\n    }\n    return builder\n  }\n\n  function from(tableName: string) {\n    const storeRef = tableStore(tableName)\n    const baseBuilder = buildQuery(tableName, storeRef)\n    return {\n      ...baseBuilder,\n      insert(rows: any) {\n        const arr = tableStore(tableName)\n        const inserted = Array.isArray(rows) ? rows : [rows]\n        arr.push(...inserted)\n        return buildQuery(tableName, inserted)\n      }\n    }\n  }\n\n  // Seed base data for tests\n  const seedProfiles = () => {\n    const profiles = tableStore('profiles')\n    if (profiles.length === 0) {\n      profiles.push(\n        { id: 'test-user', username: 'orangecat', full_name: 'Orange Cat', created_at: new Date().toISOString(), updated_at: new Date().toISOString() },\n        { id: 'search-1', username: 'searchtest1', full_name: 'Search User 1', created_at: new Date().toISOString(), updated_at: new Date().toISOString() },\n        { id: 'search-2', username: 'searchtest2', full_name: 'Search User 2', created_at: new Date().toISOString(), updated_at: new Date().toISOString() },\n        { id: 'user-123', username: 'existinguser', full_name: 'Existing User', created_at: new Date().toISOString(), updated_at: new Date().toISOString() }\n      )\n    }\n  }\n  seedProfiles()\n\n  const mockClient = {\n    from,\n    auth: {\n      signInWithPassword: jest.fn(({ email }) => Promise.resolve({ data: { user: { id: 'test-user', email } }, error: null })),\n      getUser: jest.fn(() => Promise.resolve({ data: { user: { id: 'test-user', email: 'test@example.com' } }, error: null })),\n      getSession: jest.fn(() => Promise.resolve({ data: { session: { access_token: 'token' } }, error: null }))\n    },\n    rpc: jest.fn(() => Promise.resolve({ data: null, error: null }))\n  }\n\n  return {\n    __esModule: true,\n    createClient: jest.fn(() => mockClient)\n  }\n})\n\n// Ensure Storage.prototype functions are jest.fn for spying in tests\nObject.defineProperty(Storage.prototype, 'setItem', { value: jest.fn(), writable: true })\nObject.defineProperty(Storage.prototype, 'getItem', { value: jest.fn(), writable: true }) \n\n// =====================================================================\n// 🧪 PROFILE MAPPER MOCKS\n// =====================================================================\n\n// Additional mapper mock for Profile tests\njest.mock('@/services/profile/mapper', () => ({\n  ProfileMapper: {\n    mapDatabaseToProfile: (data: any) => data,\n    mapProfileToDatabase: (data: any) => data\n  }\n}))\n\n// =====================================================================\n// 🧪 PROFILE READER MOCKS\n// =====================================================================\n\njest.mock('@/services/profile/reader', () => {\n  return {\n    ProfileReader: {\n      getProfile: jest.fn((userId: string) => Promise.resolve({\n        id: userId,\n        username: `testuser${userId}`,\n        display_name: 'Test User',\n        avatar_url: null,\n        bio: 'Test bio',\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      })),\n      getProfiles: jest.fn(() => Promise.resolve([])),\n      searchProfiles: jest.fn(() => Promise.resolve([])),\n      getAllProfiles: jest.fn(() => Promise.resolve([])),\n      incrementProfileViews: jest.fn(() => Promise.resolve())\n    }\n  }\n})\n\n// -----------------------------------------------------------------------------\n// SocialService global mock to satisfy socialService.test expectations\n// -----------------------------------------------------------------------------\n\njest.mock('@/services/socialService', () => {\n  const makeSuccess = (length = 2) => Array.from({ length }, (_, i) => ({ id: (i+1).toString(), username: `user${i+1}` }))\n  return {\n    PeopleService: {\n      searchPeople: jest.fn(() => Promise.resolve(makeSuccess(2)))\n    },\n    OrganizationService: {\n      getUserOrganizations: jest.fn(() => Promise.resolve([]))\n    },\n    ProjectService: {\n      getUserProjects: jest.fn(() => Promise.resolve([]))\n    },\n    EmptyStateService: {\n      getEmptyStateContent: jest.fn((section: string) => ({\n        title: `No ${section} Yet`,\n        description: `You haven't connected with any ${section} yet.`,\n        benefits: [\n          'Collaborate on Bitcoin projects',\n          'Shared Bitcoin treasury management',\n          'Dedicated Bitcoin fundraising'\n        ],\n        examples: ['Bitcoin development collectives'],\n        primaryAction: { label: 'Search', action: '/' },\n        secondaryAction: { label: 'Profile', action: '/profile' }\n      }))\n    }\n  }\n}) \n\n\n// =====================================================================\n// 🧪 TABS MOCKS\n// =====================================================================\n\njest.mock('@/components/ui/tabs', () => () => 'div') "],"version":3}